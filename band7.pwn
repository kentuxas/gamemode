// Modifikacijos pradininkas Lukas Sabalys @ 2013-2014


// Modifikacija toliau testa koduoti 2019 metais NRMG.LT Projektui


//mySQL.------------------------------------------------------------------------
#define MySQL_HOST 						"127.0.0.1"
#define MySQL_USER 						"admin"
#define MySQL_PASS	 					"monika1"
#define MySQL_DATA						"serveris"

//Versijos define
#define ServerioVersija "NRMG 0.0.9"
//------------------------------------------------------------------------------

#include <a_samp>
#include <zcmd>
#include <sscanf2>
#include <streamer>
#include <Dini>
#include <a_mysql>
#include <md5>
#include <iScreenFader>
#include <progress>
#include <!COO!>
#include <foreach>




#include "data/mapp.pwn"
#include "data/itarimas.pwn"

#undef MAX_PLAYERS
#define MAX_PLAYERS 100

WasteDeAMXersTime()
{
    new b;
    #emit load.pri b
    #emit stor.pri b
}

//Created by me
new PlayerText: LytiesPasirinkimoTextDraw  [MAX_PLAYERS][4];
new PlayerText: RegLogTextDraw             [MAX_PLAYERS][8];
new pjauna                                 [MAX_PLAYERS];
new Float: KurGrybavo[3];
new SuggestionSystem                       [MAX_PLAYERS][2];
new SuggestionSystemMoney                  [MAX_PLAYERS];

#define MAX_ZONES_IN_SERVER             80
#define MAX_OWN_GARAGES_IN_SERVER       80

#define OwnGarageBuyDialog              9471
#define OwnGarageControlDialog          9472
#define OwnGarageSuggestionDialog		9473
#define OwnGarageSellDialog             9474
#define DIALOG_NONE 0


forward GlobalOneSecTimer();
forward PjaunaGryba(playerid);

enum ZonesSystemData
{
	ZoneID,
	ZoneColor,
	ZoneTitle[64],
	
	Float: ZoneMaxX,
  	Float: ZoneMaxY,
  	Float: ZoneMinY,
  	Float: ZoneMinX,
};

new ZonesSystem[MAX_ZONES_IN_SERVER][ZonesSystemData];

enum OwnGaragesSystemData
{
	garIndeficationID,
	
	garOwnerName[MAX_PLAYER_NAME],
	
	Float:  garBuyPickupPos[3],
	Float:  garGatesPos    [6],
	
	bool: garSpecialOwnGarage,
	
	Text3D: gar3DTextLabel,
	
	garGatesOpened,
	garLeftDays,
	garBuyPickupID,
	garGatesObjectID
};

new OwnGaragesSystem[MAX_OWN_GARAGES_IN_SERVER][OwnGaragesSystemData];

new HowMuchZonesIs        = 0;
new HowMuchOwnGaragesIs   = 0;

new SafetyZoneID[4];

/*new GrybuPavadinimai[6][30] =
{
	{"baravykà"},
	{"trimitëlá"},
	{"voveraitæ"},
	{"ûmëdæ"},
	{"piengrybá"},
	{"supûvusá grybà"}
};*/
//---

#define IP_LIMIT 2
#define SAME_IP_CONNECT 4
new Same_IP=0,Join_Stamp,ban_s[25],exceed=0;
#define Time_Limit 3500

#define MAX_BANDYMAI 3

#define COL_PRICE		           		"{AEB404}"
#define COL_CMD	            			"{00FF6B}"
#define COL_INFO	            		"{FFFF00}"
#define COL_USAGE	            		"{8400FF}"
#define COL_ADMIN	            		"{1BB300}"
#define COL_ERROR	            		"{D60000}"
#define COL_ACYELLOW                    "{EFE700}"
#define COL_ACRED						"{D60000}"

#define RAUDONA 						0xFF0000AA
#define PERMATOMAPILKA 					0x80808055
#define GREY							0xB4B5B7FF
#define ORANGE          				0xFF8C00AA
#define GREEN           				0x33AA33AA
#define YELLOW          				0xFFFF00AA
#define HOMER           				0xFF0000AA
#define BLUE            				0x33CCFFAA
#define ABLUE           				0x2641FEAA
#define SYNTAX          				0xAA3333AA
#define OTHER           				0xFF6347AA
#define WHITE           				0xFFFFFFAA
#define RED             				0xFF000030
#define SBLUE             				0x33ffccAA
#define PURPLE          				0xC2A2DAAA
#define VIOLET          				0x9400D3AA
#define BALTA           				0xFFFFFFFF
#define PG 								0x98FEB9FF
#define COLOR_GREEN 					0x33AA33AA
#define COLOR_RED 						0xAA3333AA
#define COLOR_YELLOW 					0xFFFF00AA
#define COLOR_WHITE 					0xFFFFFFAA
#define COLOR_BLUE 						0x0000BBAA
#define COLOR_LIGHTBLUE 				0x33CCFFAA
#define COLOR_ORANGE 					0xFF9900AA
#define COLOR_RACIJA 					0xFFA500FF
#define COLOR_RED 						0xAA3333AA
#define COLOR_LIME 						0x10F441AA
#define COLOR_MAGENTA 					0xFF00FFFF
#define COLOR_NAVY 						0x000080AA
#define COLOR_AQUA 						0xF0F8FFAA
#define COLOR_CRIMSON 					0xDC143CAA
#define COLOR_FLBLUE 					0x6495EDAA
#define COLOR_BISQUE 					0xFFE4C4AA
#define COLOR_BLACK 					0x000000AA
#define COLOR_CHARTREUSE 				0x7FFF00AA
#define COLOR_BROWN 					0XA52A2AAA
#define COLOR_CORAL 					0xFF7F50AA
#define COLOR_GOLD 						0xB8860BAA
#define COLOR_GREENYELLOW 				0xADFF2FAA
#define COLOR_INDIGO 					0x4B00B0AA
#define COLOR_IVORY 					0xFFFF82AA
#define COLOR_LAWNGREEN 				0x7CFC00AA
#define COLOR_LIMEGREEN 				0x32CD32AA
#define COLOR_MIDNIGHTBLUE 				0X191970AA
#define COLOR_MAROON 					0x800000AA
#define COLOR_OLIVE 					0x808000AA
#define COLOR_ORANGERED 				0xFF4500AA
#define COLOR_PINK 						0xFFC0CBAA
#define COLOR_SPRINGGREEN 				0x00FF7FAA
#define COLOR_TOMATO 					0xFF6347AA
#define COLOR_YELLOWGREEN 				0x9ACD32AA
#define COLOR_MEDIUMAQUA 				0x83BFBFAA
#define COLOR_MEDIUMMAGENTA 			0x8B008BAA
#define COLOR_BRIGHTRED 				0xDC143CAA
#define COLOR_SYSTEM 					0xEFEFF7AA
#define COLOR_RED 						0xAA3333AA
#define COLOR_PURPLE 					0x330066AA
#define COLOR_INDIGO 					0x4B00B0AA
#define COLOR_GRAD1 					0xB4B5B7FF
#define COLOR_GRAD2 					0xBFC0C2FF
#define COLOR_GRAD3 					0xCBCCCEFF
#define COLOR_GRAD4 					0xD8D8D8FF
#define COLOR_GRAD5 					0xE3E3E3FF
#define COLOR_GRAD6 					0xF0F0F0FF
#define COLOR_LIGHTRED 					0xFF6347AA
#define COLOR_SALOTA 					0x40FF40FF
#define COLOR_GREY 						0xAFAFAFAA
#define COLOR_GREEN 					0x33AA33AA
#define COLOR_WHITE 					0xFFFFFFAA
#define COLOR_BLUE 						0x0000BBAA
#define COLOR_LIGHTBLUE 				0x33CCFFAA
#define COLOR_MAGENTA 					0xFF00FFFF
#define COLOR_LIGHTGREEN 				0x9ACD32AA
#define COLOR_FIOLET 					0xAD5BFF30
#define TEXTCOL_WHITE 					0xFFFFFF30
#define TEXTCOL_SILVER 					0xD2D2D230
#define TEXTCOL_GREY 					0x80808030
#define TEXTCOL_BLACK 					0x00000030
#define TEXTCOL_GREEN 					0x98B13430
#define TEXTCOL_DARKGREEN 				0x00800030
#define TEXTCOL_RED 					0xFF000030
#define TEXTCOL_DARKRED					0xA6000030
#define TEXTCOL_BLUE 					0x6FA7FB30
#define TEXTCOL_DARKBLUE 				0x0000A830
#define TEXTCOL_GOLD 					0xE3B92430
#define TEXTCOL_BROWN 					0xC1762B30
#define TEXTCOL_DARKBROWN 				0x80400030
#define TEXTCOL_PINK 					0xFF80FF30
#define TEXTCOL_VIOLET 					0xAD5BFF30
#define ADMIN_COLOR 					0xB9B58630
#define PLAYCOL_HIDDEN 					0x80808000
#define COLOR							TEXTCOL_GOLD
#define SAVE_COLOR						COLOR_RED
//CP DEFINE
#define MAX_PLAYER_CPS  22
#define PLUS_CP_SIZE    2.0
#define s_%1; new tstr[128]; tstr=%1; return tstr;
#define ANTI_V(%1) \
	1 << (%1-400 & 0x1F)
#define TAZE_WEAPON 23 // The weapon the tazer needs to be attached to.
#define TAZE_TIMER 20000 // The time needed to be spent until the criminal automatically gets up.
#define TAZE_SPARK 18717 // The objectid of the spark (It's recommended you don't change this...)
#define TAZE_DESTROY 1250 // The time needed to be spent until the spark dissappears.
#define TAZE_LOSEHP 0 // Set to 1 if you want the victim to lose health when shot. Set 0 or any

#define SetPlayerHealthEx(%0,%1) playerDB[%0][pHealthCheck] = gettime() + 5, playerDB[%0][PlayerHealth]=%1, SetPlayerHealth(%0,%1) // F-ja duoti zaidejui hp kad anticytas nepiktu.
#define SetPlayerArmourEx(%0,%1) playerDB[%0][pHealthCheck] = gettime() + 5, playerDB[%0][PlayerArmour]=%1, SetPlayerArmour(%0,%1) // F-ja duoti zaidejui ar kad anticytas nepiktu.

#define GivePlayerMoneyA(%0,%1) playerDB[%0][pCashCheck] = gettime() + 15, playerDB[%0][pinigai] += %1, GivePlayerMoney(%0, %1)
#define SetPlayerMoneyA(%0,%1) playerDB[%0][pCashCheck] = gettime() + 15, playerDB[%0][pinigai] = %1, ResetPlayerMoney(%0), GivePlayerMoney(%0, %1)
#define GetPlayerMoneyA(%0) playerDB[%0][pinigai]
#define ResetPlayerMoneyA(%0) playerDB[%0][pCashCheck] = gettime() + 15, playerDB[%0][pinigai] = 0, ResetPlayerMoney(%0)

#define MAX_PING_KICK       400
#define MAX_SPEED_KICK      360
#define PIRKO_PASLAUGAS		"logs/pirkimai.txt"

#define I_PD_PELNA          5 // Pelnas[0]
#define I_MECHANIKU_PELNA	5 // Pelnas[1]
#define I_TAXI_PELNA        5 // Pelnas[2]
#define I_MEDIKU_PELNA		5 // Pelnas[3]
#define I_DYLERIU_PELNA		5 // Pelnas[4]
#define I_RIFA_PELNA		5 // Pelnas[5]
#define I_GROOVE_PELNA		5 // Pelnas[6]
#define I_SWAT_PELNA		5 // Pelnas[7]
#define I_FURU_PELNA		5 // Pelnas[8]
#define I_RADISTU_PELNA     5 // Pelnas[9]
#define I_BAIKERIU_PELNA    5 // Pelnas[10]
#define I_KLUBO_PELNA    	1 // Pelnas[11]
#define I_KLUBOO_PELNA    	1 // Pelnas[12]
#define I_SPD_PELNA	    	1 // Pelnas[13]

#define PELNO_DIALOG1       130
#define PELNO_DIALOG2       131
#define PELNO_DIALOG3       132
#define PELNO_DIALOG4       133

#define MAX_HOUSES 200
#define HOUSE_DIALOG 110
#define HOUSE_DIALOG1 111
#define HOUSE_DIALOG2 112
#define HOUSE_DIALOG3 113
#define HOUSE_DIALOG4 114
#define HOUSE_DIALOG5 115
#define HOUSE_DIALOG6 116
#define HOUSE_DIALOG7 117

#define MAX_BUSINESSES		200      // Maksimalus verslu skaicius.
#define BUSINESS_DIALOG1	120
#define BUSINESS_DIALOG2	121
#define BUSINESS_DIALOG3	122
#define BUSINESS_DIALOG4	123
#define BUSINESS_DIALOG5	124
#define BUSINESS_DIALOG6	125
#define BUSINESS_DIALOG7	126


#define DIALOG_INVESTICIJOS 9000
#define DIALOG_GRYBU_PARDAVIMAS 9452
#define DIALOG_REGLOG_PASIRINKIMAS 9453

#define C_RED				0xFF0000FF
#define C_YELLOW			0xFFFF00AA
#define CAR_COLOR_ON_MAP    C_YELLOW

#define MAX_OLD_CARS        28
#define MAX_SPORT_CARS      18
#define MAX_MOTO_CARS       8


#define MAX_VEHICLES_SPAWNS 6
#define INSURANCE_TIME      1296000
#define CAMERA_POS_X		-2168.9526
#define CAMERA_POS_Y        -2454.6445
#define CAMERA_POS_Z        2056.9568
#define VEHICLE_POS_X       -2161.0115
#define VEHICLE_POS_Y       -2464.1731
#define VEHICLE_POS_Z       2056.3301
#define VEHICLE_POS_R		0.1138
#define vSHOP_DIALOGID1		99
#define vSHOP_DIALOGID2     100
#define vCAR_CONTROL        101
#define vCAR_GIVE_DIALOG1	102
#define vCAR_GIVE_DIALOG2   103
#define vCAR_SELL_DIALOG1	104
#define vCAR_SELL_DIALOG2   105
#define vCAR_SELL_DIALOG3   106
#define vCAR_SELL_DIALOG4   107
#define vCAR_INFO_DIALOG    108

// Maðinø pardavimas, parduodamø maðinø aikðtelëje .
#define PARDAVIMAS_POS_MINX     706.3516
#define PARDAVIMAS_POS_MINY     -676.4932
#define PARDAVIMAS_POS_MAXX     720.8693
#define PARDAVIMAS_POS_MAXY     -637.6751
// Pabaiga maðinø pardavimas aikðtelëje .

// KMA aikðtelë, kad neitu ið jos teleportuotis .
#define KMA_POS_MINX     64.822654
#define KMA_POS_MINY     -152.015914
#define KMA_POS_MAXX     104.822654
#define KMA_POS_MAXY     -112.015914
// Pabaiga KMA aikðtelës .

// Baþnyèios kordinatës kur pasimelsti .
#define MELSTIS_POS_MINX     364.1424
#define MELSTIS_POS_MINY     2316.8598
#define MELSTIS_POS_MAXX     387.3642
#define MELSTIS_POS_MAXY     2331.5520
// Pabaiga baþnyèios meldimosi .

#define DIALOG_SPALVOS_PASIRINKIMAS 900
#define DIALOG_MASINOS_VALDYMAS 1020
#define DIALOG_MASINOS_ATIDAVIMAS	1021
#define DIALOG_MASINOS_ATIDAVIMAS2   1022
#define DIALOG_MASINOS_PARDAVIMAS	1023
#define DIALOG_MASINOS_PARDAVIMAS2   1024
#define DIALOG_MASINOS_PARDAVIMAS3   1025
#define DIALOG_MASINOS_PARDAVIMAS4   1026
#define DIALOG_MASINOS_INFO   1027

#define DIALOG_SLAPTAZODZIO_KEITIMAS 1041
#define DIALOG_BAUDOS_MOKEJIMAS_PASTATE 1040

#define DIALOG_NUSTATYMAI 6000
#define DIALOG_ITA 234


//Darbø paremimas.
#define DIALOG_DARBU_PAREMIMAS 6010
#define DIALOG_PAREMTI_MENTUS 6011
#define DIALOG_PAREMTI_MEDIKUS 6012
#define DIALOG_PAREMTI_TAKSISTUS 6013
#define DIALOG_PAREMTI_MECHANIKUS 6014
#define DIALOG_PAREMTI_DYLERIUS 6015
#define DIALOG_PAREMTI_SWATUS 6016
#define DIALOG_PAREMTI_FURISTUS 6017
#define DIALOG_PAREMTI_RADISTUS 6018
#define DIALOG_PAREMTI_RIFA 6019
#define DIALOG_PAREMTI_GROOVE 6020
#define DIALOG_PAREMTI_BAIKERIUS 6021
#define DIALOG_PAREMTI_SPD 6022
#define DIALOG_KITI_MIESTELIAI 3000
#define DIALOG_DARBAI 3001
#define DIALOG_MAFIJOS 3002
#define DIALOG_SVARBIOS_VIETOS 3003
#define DIALOG_DARBAI_SU 3004
#define DIALOG_DARBAI_BE 3005
#define DIALOG_PRAMOGU_VIETOS 3006
#define DIALOG_KITOS_VIETOS 3007
#define DIALOG_KLUBU_VIETOS 3008

//Darbø ásidarbinimai Be pakvietimo
#define PICERININKU_ISIDARBINIMO_XP 70
#define VALYTOJU_ISIDARBINIMO_XP 50
#define GAISRINES_ISIDARBINIMO_XP 1200
#define LIMUZININKU_ISIDARBINIMO_XP 450
#define MEDKIRCIU_ISIDARBINIMO_XP 1000
#define KUNIGU_ISIDARBINIMO_XP 200
#define NARU_ISIDARBINIMO_XP 500

	//Teisesauga
#define FARAI_ISIDARBINIMO_XP 9000
#define SWAT_ISIDARBINIMO_XP 25000
#define SPD_ISIDARBINIMO_XP 50000

// Nusikalstamos
#define FUROS_ISIDARBINIMO_XP 10000
#define GDYLERIAI_ISIDARBINIMO_XP 8000
#define BAIKERIAI_ISIDARBINIMO_XP 6000

// Neutralios
#define RADISTU_ISIDARBINIMO_XP 6000
#define MEDIKAI_ISIDARBINIMO_XP 4500
#define TAXI_ISIDARBINIMO_XP 6000
#define MECHANIKAI_ISIDARBINIMO_XP 6000

	// Mafijos
#define RUSSIAN_ISIDARBINIMO_XP 3000
#define YAKUZA_ISIDARBINIMO_XP 3000

	// Klubai
#define KLUBAS_ISIDARBINIMO_XP 0
#define KLUBASS_ISIDARBINIMO_XP 0


#define GREICIO_RIBA 0.5

#define strcpy(%0,%1,%2) strcat((%0[0] = '\0', %0), %1, %2)
#define isnull(%1) ((!(%1[0])) || (((%1[0]) == '\1') && (!(%1[1]))))
#define HOLDING(%0) ((newkeys & (%0)) == (%0))
#define SLOT 8
#define SPAO{%0,%1,%2,%3,%4,%5} SetPlayerAttachedObject(playerid, SLOT, 18645, 2, (%0), (%1), (%2), (%3), (%4), (%5));

#define MAX_ZONES  4 // Maksimalos saugiu zonu kiekis.
#define MAX_WARNS  5 // Maksimalus ispejimu kiekis.
#define WARN_COLOR 0xf6102bFF // Ispejimo spalva.
#define ZONE_COLOR 0x66ff0096 // Saugiu zonu spalva.

//bausti sistemos
#define FALDialog        6655
#define SALDialog 						6656
#define TALDialog 						6657
#define UnbanDialog						5960

/*Random serverio þaidimas.
#define CONTESTTIME 3
#define MINIMUM_VALUE 2000000
#define MAXIMUM_VALUE 8000000
new ContestAnswer = -1;
forward NewContest();
forward OnPlayerWinContest(playerid);
forward OnIncomingConnection(playerid, ip_address[], port);
//Random serverio þaidimo pabaiga.*/

new AntiF4[MAX_PLAYERS];

//Gaujø pradþia .
#define GANG_PRICE 100000
#define MAX_GANGS 20
#define GANG_EXP 3000
//Gaujø pabaiga .

//Alkio
new
	Text: Burger,
	Text: Burger1,
	Text: Burger2,
	Text: AlkTD[ MAX_PLAYERS ]
;

new
	Text3D:AMFALABEL,
 	Text3D:LSDLABEL,
 	Text3D:ZOLELABEL
;

new
	Text3D:costello,
	Text3D:patriotai,
	Text3D:russianv,
	Text3D:yakuzav,
	Text3D:yakuzava,
	Text3D:dyleriai,
	Text3D:swat,
	Text3D:baikeriaiv,
	Text3D:baikeriaiva,
	Text3D:furistupa,
	Text3D:armijavapirmi,
	Text3D:armijavaantri,
	Text3D:furistuda,
	Text3D:russianang,
	Text3D:yakuzaang,
	Text3D:costelloang,
	Text3D:kma
;

new
	Text:IeskomumasTD1,
    Text:IeskomumasTD2 [ MAX_PLAYERS ]
;

new
	PlayerText: speedo [ 8 ] [ MAX_PLAYERS ],
	SpeedoTimer [ MAX_PLAYERS ],
	PlayerText:CarShop [ 11 ] [ MAX_PLAYERS ],
	bool:Sekia [ MAX_PLAYERS ],
	SekiamojoID [ MAX_PLAYERS ],
	STimeris [ MAX_PLAYERS ],
	bool:bega [ MAX_PLAYERS ],
	playerCar1 [ MAX_PLAYERS ] = -1,
	playerCar2 [ MAX_PLAYERS ] = -1,
	//PlayerText:Logo [ MAX_PLAYERS ],
	carTimer,
	swatPickup,
	dmPickup,
	PlayerText:sTD [ MAX_PLAYERS ] [ 3 ],
	laiminguValanduTimer,
	bool:mTurguje    [MAX_PLAYERS],
	CanBuyCar      [ MAX_PLAYERS ],
	gPakviestas [ MAX_PLAYERS ]
;

enum gangsInfo {
	gId,
	gLeader [ 50 ] ,
	gName [ 150 ] ,
	Float:gPos [ 3 ]
}

enum serverOptions {
	oldRecord,
	rData [ 30 ]
}

new sOptions [ serverOptions ] ,
	gInfo [ MAX_GANGS ] [ gangsInfo ]
;

enum _prPrekes
{
  	lsd,
  	amfa,
  	zole,
};

new prekes[_prPrekes];

#define SEKUNDES(%0) (%0)
#define MINUTES(%0) (%0 * SEKUNDES(60))
#define VALANDOS(%0) (%0 * MINUTES(60))
#define DIENOS(%0) (%0 * VALANDOS(24))
#define SAVAITES(%0) (%0 * DIENOS (7))

#define LEAD_FARAI 1
#define LEAD_MEDIKAI 2
#define LEAD_TAXI 3
#define LEAD_Mechanikas 4
#define LEAD_Gdyleriai 5
#define LEAD_Arifa 6
#define LEAD_Gstreet 8
#define LEAD_SWAT 10
#define LEAD_FUROS 11
#define LEAD_RADISTAS 13
#define LEAD_BAIKERIAI 14
#define LEAD_KLUBAS 15
#define LEAD_KLUBASS 16
#define LEAD_SPD 17

#define NO_LEAD 0

#define STATIONS 36
#define STATION_SIZE 20

#define BE_MIN_HLS 500.00
#define BE_MAX_SPD_VAR 50
#define BE_MAX_SPD BE_MAX_SPD_VAR*0.005

#define GetPlayerNameEx(%0) playerDB[%0][PlayerName]
#define GetPlayerIpEx(%0) playerDB[%0][PlayerIP]

//Paslaugu define'ai
#define Raktazodis 		"NRMG"
#define SmsNumeris 		1398
//Kaina paslaugu krediais
#define VipKaina        	5 //5LT
#define PatirtiesKaina      2 //2LT
#define LituKaina           7 //7LT
#define LituKainaKita       4 //4LT
#define UnjailKaina     	2 //2LT
#define VipIspKaina     	2 //2LT
#define IeskomumoKaina  	1 //1LT
#define TeisiuVisuKaina     4 //4LT
#define GunLicenzKaina      3 //3LT
#define SkinKeitimas        2 //2LT
#define GarazoKaina        	10 //10LT
#define NamoPirkimas        "15-50"//15-50LT
#define VersloPirkimas      "10-50"//10-50LT
#define VersloTobulinimas   "10-50"//10-50LT
#define AdminKaina        	10 //10LT
#define AdminKaina2        	20 //20LT
#define AdminKaina3        	30 //30LT
#define AdminIspKaina       2 //2LT
#define AlgosPirkimas 		5//5LT
#define AdminDraudimas 		10//10LT
#define VIPDraudimas 		5//5LT
#define GaujuDraudimas		5//5LT


//Dël ðlagbaumo vartø.
new GateAllreadyRotated[MAX_OBJECTS]
;

//Administratoriø fondas.
new afondas
;

//Kiti new'ai .
new UzrasasApacioje[MAX_PLAYERS]
;

new LaikrodzioStatus[MAX_PLAYERS]
;

new Floodas[MAX_PLAYERS]
;

//Serverio vartai .

new
	SWATVartai, MechanikuKma, FuristuPVartai, DyleriuVartai, BaikeriuVartai, BaikeriuVartai2, FuruVartai
;

new
	TreniruociuV, TreniruociuV2, TreniruociuV3, TreniruociuV4, TreniruociuV5, TreniruociuV6
;

new
	YakuzaVartai, YakuzaVartai2, YakuzaVartai3, RussianVartai, RussianVartai2
;

new
	KluboVartai, KluboVartai2, KluboAngaras, SPDPirmi, SPDAntri
;

new
	baudap,
	IsKalejimo,
	skinshoppickup[2],
	mentujailas[2],
	pazymanomedik,
	draudimas,
	DyleriuHeal,
	HealTreniruotese,
	Paremimas,
	Kazino,
	Kazinoo,
	Kazinooo,
	FuristuPasikrovimas,
	pickupKMA,
	gerimai,
	Baikeriugunai,
	SPDGunai,
	Klubogunai,
	KluboHeal,
	Kluboogunai,
	KlubooHeal
;

new
	naujokugydymas[3],
	maximosvalgis[2],
	bakeliop[3]
;

new
	SwatGinklai
	//PDGinklai
;

new
	farai,
	medikai,
	Mechanikai,
	Taksi,
	Dyleriai,
	Swatas,
	Furistas,
	Radistai,
	Baikeris,
	Picerininkas,
	Valytojas,
	Krovikas,
	Gaisrininkas,
	Limuzinistas,
	Medkirtis,
	Kunigas,
	Naras,
	Klubas,
	Klubass,
	arifa,
	yakuza,
	spdarbas
;

//bandymai
new bandymai [ MAX_PLAYERS ] = 0;
//Sandeliai
//Sandelio pos LS 4 KAMPU
#define SANDELIS_POS_MINX     -413.3790
#define SANDELIS_POS_MINY     -1464.0982
#define SANDELIS_POS_MAXX     -353.2142
#define SANDELIS_POS_MAXY     -1406.5356
//BB SANDELIO POS 4 KAMPU
#define SANDELIS2_POS_MINX     -76.2648
#define SANDELIS2_POS_MINY     13.1935
#define SANDELIS2_POS_MAXX     -28.8770
#define SANDELIS2_POS_MAXY     73.1840
#define MAX_SANDELIU    2
new AntiAntiBan[MAX_PLAYERS];
new LSD[2], AMFA[2], SanSavininkas[2][21], bool:SanNupirktas[2];
new bool:GrobiamasSandelis[2];
new grobiamsandeli1, grobiamsandeli2;
new sandeliozonals, sandeliozonabb;
new Text3D:sandeliols3d[2];
new ZoneNoGunLic;
//Progress barai
new Bar:zvejybosbar[MAX_PLAYERS] = {INVALID_BAR_ID, ...};
//Serverio nustatymai
new ServerioLaikas = 12;
new ServerioOras = 1;
new pGaujomHP[2];
new KelintasTekstas;
//Greièio matuokliai
new GreitiMatuoja[MAX_PLAYERS];
new bool:Vartai[25];
//Dazasvaidzio kint
//anti cheat kint
new ZaidejaiPasY = 0;
new	ZaidejaiPasG = 0;
new	NuzudymaiY = 0;
new	NuzudymaiG = 0;
new	MirtysY = 0;
new	MirtysG = 0;

//Kita.
new bool:OfisoDarbas[MAX_PLAYERS];
new OfisoTimer[MAX_PLAYERS];
new bool:Logged[MAX_PLAYERS];
new SekamasZaidejas[MAX_PLAYERS];
new bool:Prisijunges[MAX_PLAYERS];
//new sekimas[MAX_PLAYERS];
new Text:SEKIMAS;
///////////////////////////

new	SkinPBY = 109;
new	SkinPBG = 107;
new	KitasRoundasPo = 15;
//Newai PB
new Text:PBTD0[MAX_PLAYERS];
new Text:PBTD1[MAX_PLAYERS];
new Text:PBTD2[MAX_PLAYERS];
new Text:PBTD3[MAX_PLAYERS];
new Text:PBTD4[MAX_PLAYERS];
new Text:PBTD5[MAX_PLAYERS];
new Text:PBTD6[MAX_PLAYERS];
new Text:PBTD7;
new Text:PBTD8;
new Text:PBTD9;
new Text:PBTD10;
new Text:PBTD11;
new Text:PBTD12;
new Text:PBTD13;
new Text:PBTD14;
new Text:PBTD15;
new Text:PBTD16;
//Textdraw kalejimo
new Text:KalejimoLaikoTd[MAX_PLAYERS];
//Timeriu killllllllllllll
new IskraunamviskaisfurosEx[MAX_PLAYERS],KraunamdviraciusEx[MAX_PLAYERS],KraunambaldusEx[MAX_PLAYERS],KraunambuittechEx[MAX_PLAYERS],
KraunamanglisEx[MAX_PLAYERS],KraunamzvyraEx[MAX_PLAYERS],KraunamgunusEx[MAX_PLAYERS],KraunamnarkusEx[MAX_PLAYERS],KraunamzoleEx[MAX_PLAYERS],ZvejojaEx[MAX_PLAYERS],
UzkiboEx[MAX_PLAYERS];
//Speedometras.
forward UpdateSpeedo ( playerid ) ;
//Þvejybos FW
forward Zvejoja(playerid);
forward Uzkibo(playerid);
//Kazino.
forward LaimesSkaicius(playerid);
//Visi forwardai
forward Zaidimas();
forward Grobiamsandeli1(playerid);
forward Grobiamsandeli2(playerid);
forward PapildomSandelius();
forward Kraunamdviracius(playerid);
forward Kraunambaldus(playerid);
forward Kraunambuittech(playerid);
forward Kraunamanglis(playerid);
forward Kraunamzvyra(playerid);
forward Kraunamgunus(playerid);
forward Kraunamnarkus(playerid);
forward Kraunamzole(playerid);
forward Iskraunamviskaisfuros(playerid);
forward KickEx(playerid, pID);
forward count2();
forward count1();
forward countgo();
forward stop();
forward UpdateLobiai();
forward SMSsystem(playerid,text[]);
forward DestroySpark(playerid);
forward TazedRemove(playerid);
forward PakeistiRadija(vehicleid);
forward ShowText();
forward Timer();
forward ProgressBarUpdate();
forward Gasup(vehicleid,curgass,kof,mokejo,playerid);
forward KoksRangas(playerid,pID);
forward KoksRangasMinus(playerid, pID);
forward Putimas(playerid);
forward ServerioPranesimai();
forward StabdytiAnim(playerid);
forward settime();
forward BadEngine();
forward Sekundinis();
forward IsjungiameServeri();
forward PakeistiServerioLaika();
forward PBTimer();
forward AFKTikrinimoTimeris();
forward MatuojaGreiti();
forward TimeToPay();

new Menu:parduotuve[3];
new pCPID[MAX_PLAYERS],Float:pCPPosX[MAX_PLAYERS][MAX_PLAYER_CPS],Float:pCPPosY[MAX_PLAYERS][MAX_PLAYER_CPS],
Float:pCPPosZ[MAX_PLAYERS][MAX_PLAYER_CPS],Float:pCPSize[MAX_PLAYERS][MAX_PLAYER_CPS],
bool:pCPShow[MAX_PLAYERS][MAX_PLAYER_CPS];


enum FirstAdminLevel
{
	Bausme[64],
 	bLaikas
}

new FAL[28][FirstAdminLevel] =
{
	{ ""COL_ADMIN"- Uþtildymas", 										0  }, // 0
	{ "Administracijos nariø áþeidinëjimai", 							30 }, // 1
	{ "Necenzûriniø þodþiø vartojimas masyviai", 						30 }, // 2
	{ "Flood/spam (4 þinutës ið eilës)", 								15 }, // 3
	{ "Blogas /admin naudojimas", 										20 }, // 4
	{ "Blogas vieðujø praneðimø naudojimas", 							30 }, // 5
	{ " ", 																0  }, // 6
	{ ""COL_ADMIN"- Ákalinimas", 										0  }, // 7
	{ "Ðaudymas á þaidëjus mieste", 									20 }, // 8
	{ "Ðaudymas á þaidëjus nuo transp. priemonës stogo", 				40 }, // 9
	{ "Eventø trukdymas", 												30 }, // 10
	{ "Atrankø trukdymas", 												30 }, // 11
	{ "Darbo veiklø trukdymas", 										20 }, // 12
	{ "Tyèinis K.E.T. nesilaikymas", 									20 }, // 13
	{ "Tyèinis ESC spaudimas esant gaudomam teisësaugos", 				60 }, // 14
	{ "Tyèinis ESC spaudimas esant surakintam/suriðtam", 				80 }, // 15
	{ "Atsijungimas nuo þaidimo gaudant teisësaugai", 					120 }, // 16
	{ " ", 																0  }, // 17
	{ ""COL_ADMIN"- Iðmetimas", 										0  }, // 18
	{ "AFK netinkamoje vietoje", 										0  }, // 19
	{ "Netinkamas Vardas_Pavardë", 										0  }, // 20
	{ "Neáraðyta prieþastis", 											0  }, // 21
	{ " ", 																0    }, // 22
	{ ""COL_ADMIN"- Laikinas uþblokavimas", 							0    }, // 23
	{ "Netinkamas Vardas_Pavardë (3 kartai)", 							60   }, // 24
	{ "Admin/VIP komandø piktnaudþiavimas", 							180  }, // 25
	{ "Þaidëjø apgavystës", 											1440 }, // 26
	{ "Átarimø dëjimas uþ niekà", 										300  }  // 27
};

enum SecondAdminLevel
{
	Bausme[64],
 	bLaikas
}

new SAL[28][SecondAdminLevel] =
{
	{ ""COL_ADMIN"- Uþtildymas", 										0  }, // 0
	{ "Administracijos nariø áþeidinëjimai", 							30 }, // 1
	{ "Necenzûriniø þodþiø vartojimas masyviai", 						30 }, // 2
	{ "Flood/spam (4 þinutës ið eilës)", 								15 }, // 3
	{ "Blogas /admin naudojimas", 										20 }, // 4
	{ "Blogas vieðujø praneðimø naudojimas", 							30 }, // 5
	{ " ", 																0  }, // 6
	{ ""COL_ADMIN"- Ákalinimas", 										0  }, // 7
	{ "Ðaudymas á þaidëjus mieste", 									20 }, // 8
	{ "Ðaudymas á þaidëjus nuo transp. priemonës stogo", 				40 }, // 9
	{ "Eventø trukdymas", 												30 }, // 10
	{ "Atrankø trukdymas", 												30 }, // 11
	{ "Darbo veiklø trukdymas", 										20 }, // 12
	{ "Tyèinis K.E.T. nesilaikymas", 									20 }, // 13
	{ "Tyèinis ESC spaudimas esant gaudomam teisësaugos", 				60 }, // 14
	{ "Tyèinis ESC spaudimas esant surakintam/suriðtam", 				80 }, // 15
	{ "Atsijungimas nuo þaidimo gaudant teisësaugai", 					120 }, // 16
	{ " ", 																0  }, // 17
	{ ""COL_ADMIN"- Iðmetimas", 										0  }, // 18
	{ "AFK netinkamoje vietoje", 										0  }, // 19
	{ "Netinkamas Vardas_Pavardë", 										0  }, // 20
	{ "Neáraðyta prieþastis", 											0  }, // 21
	{ " ", 																0    }, // 22
	{ ""COL_ADMIN"- Laikinas uþblokavimas", 							0    }, // 23
	{ "Netinkamas Vardas_Pavardë (3 kartai)", 							60   }, // 24
	{ "Admin/VIP komandø piktnaudþiavimas", 							180  }, // 25
	{ "Þaidëjø apgavystës", 											1440 }, // 26
	{ "Átarimø dëjimas uþ niekà", 										300  }  // 27
};

enum ThirdAdminLevel
{
	Bausme[64],
 	bLaikas
}

new TAL[35][ThirdAdminLevel] =
{
	{ ""COL_ADMIN"- Uþtildymas", 										0  }, // 0
	{ "Administracijos nariø áþeidinëjimai", 							30 }, // 1
	{ "Necenzûriniø þodþiø vartojimas masyviai", 						30 }, // 2
	{ "Flood/spam (4 þinutës ið eilës)", 								15 }, // 3
	{ "Blogas /admin naudojimas", 										20 }, // 4
	{ "Blogas vieðujø praneðimø naudojimas", 							30 }, // 5
	{ " ", 																0  }, // 6
	{ ""COL_ADMIN"- Ákalinimas", 										0  }, // 7
	{ "Ðaudymas á þaidëjus mieste", 									20 }, // 8
	{ "Ðaudymas á þaidëjus nuo transp. priemonës stogo", 				40 }, // 9
	{ "Eventø trukdymas", 												30 }, // 10
	{ "Atrankø trukdymas", 												30 }, // 11
	{ "Darbo veiklø trukdymas", 										20 }, // 12
	{ "Tyèinis K.E.T. nesilaikymas", 									20 }, // 13
	{ "Tyèinis ESC spaudimas esant gaudomam teisësaugos", 				60 }, // 14
	{ "Tyèinis ESC spaudimas esant surakintam/suriðtam", 				80 }, // 15
	{ "Atsijungimas nuo þaidimo gaudant teisësaugai", 					120 }, // 16
	{ " ", 																0  }, // 17
	{ ""COL_ADMIN"- Iðmetimas", 										0  }, // 18
	{ "AFK netinkamoje vietoje", 										0  }, // 19
	{ "Netinkamas Vardas_Pavardë", 										0  }, // 20
	{ "Neáraðyta prieþastis", 											0  }, // 21
	{ " ", 																0    }, // 22
	{ ""COL_ADMIN"- Laikinas uþblokavimas", 							0    }, // 23
	{ "Netinkamas Vardas_Pavardë (3 kartai)", 							60   }, // 24
	{ "Admin/VIP komandø piktnaudþiavimas", 							180  }, // 25
	{ "Þaidëjø apgavystës", 											1440 }, // 26
	{ "Átarimø dëjimas uþ niekà", 										300  }, // 27
	{ " ", 																0    }, // 28
	{ ""COL_ADMIN"- Uþblokavimas", 										0    }, // 29
	{ "Asmeninio turto pardavinëjimas uþ tikrus pinigus", 				0    }, // 30
	{ "Kito projekto reklamavimas", 									0    }, // 31
	{ "Neleistinø programø naudojimas", 								0    }, // 32
	{ "Serverio klaidø iðnaudojimas", 									0    }, // 33
	{ "Kenkimas serveriui", 											0    }  // 34
};

//New'ai
/*
//=============== /ita LENTELË =============
#define MAX_ITA sizeof(itarimai)

enum itax
{
    ita_name[90],
    ita_count_w[10],
    ita_count
};

new itarimai[][ita] =
{
    {"{00ff00}Tyèinis ESC mygtuko naudojimas",    														"80 stars",		80}, //0
    {"{FF0000}Chuliganiðkas vairavimas",																"20 stars",		20},
    {" {00ff00}Kelio kirtimas per paðalines vietas (þolynus, ðaligatvius ir panaðiai)",    				"20 stars",		20},
    {" {00ff00}Kampo nukirtimai",   	 																"20 stars",		20},
    {" {00ff00}Vaþiavimas prieðinga eismo juosta (negalioja lenkanti ir apvaþiuojant kliûtá)",    		"20 stars",		20},
    {" {00ff00}Iðvaþiavimas á prieðingo eismo juostà, kai viena kryptimi yra bent dvi juostos",    		"20 stars",		20},
	{" {00ff00}Ðiukðliadëþiø, stoteliø, hidrantø, ðviesoforø trankymai",                                "20 stars",		20},
	{" {00ff00}Vaþiavimas geleþinkelio bëgiais",                                						"20 stars",		20},
	{" {00ff00}Ðokinëjimas per ávairius stunt'us",                                						"20 stars",		20},
	{" {00ff00}Avarijos sukëlimas (uþ kiekvienà sukeltà skirtingà avarijà)",                            "20 stars",		20},
	{"{00ff00}DM (masinis þudymas)",                                									"80 stars",		80},
	{"{00ff00}Relog",                                													"200 stars",	200},
	{"{00ff00}Pareigûno uþpuolimas",                                									"30 stars",		30},
	{"{00ff00}Pareigûno neklausymas arba (ir) áþeidinëjimas",                                			"30 stars",		30},
	{"{00ff00}Civilio uþpuolimas arba (ir) áþeidinëjimas",                                				"20 stars",		20},
	{"{00ff00}Ginklo rodymas vieðoje vietoje",                                							"10 stars",		10},
	{"{00ff00}Ginklo naudojimas vieðoje vietoje",                                						"20 stars",		20},
	{"{00ff00}Kyðio siûlymas",                                											"10 stars",		10},
	{"{00ff00}Maðinos dauþymas",                                										"20 stars",		20},
	{"{FF0000}Trukdymas policijos darbui",                                								"5 stars",		5},
	{"{00ff00}Iðlipimas ið stabdomos tr. priemonës",                                					"60 stars",		60},
	{"{00ff00}Pagalba bëgliui",                                											"40 stars",		40},
	{"{FF0000}Bereikðmis policijos kvietimas",                                							"40 stars",		40},
	{"{00ff00}Grasinimas policijos pareigûnui",                                							"10 stars",		10},
	{"{FF0000}Nepasiðalinimas ið streiko, kai buvo to pareikalauta",                            		"60 stars",		60},
	{"{00ff00}Chuliganiðkas elgesys",                                									"10 stars",		10},
	{"{00ff00}Tyèinis priekabos atkabinimas stabdant",                                					"60 stars",		60},
	{"{00ff00}Reido trukdymas",                                											"15 stars",		15}
};*/
new AsJauSkinu[MAX_PLAYERS] = 0;

enum pItem
{
    gaujosID,
	lastCDate [ 50 ],
	lastIP [ 17 ],
	regIP [ 17 ],
	regData [ 50 ],
	bool:ipSecurity,
	bool:pickup,
	bool:ikalintas,
	bool:epriziuretojas,
	bool:dpriziuretojas,
	bool:apriziuretojas,
	bool:vpriziuretojas,
	bool:banpriziuretojas,
	bool:gpriziuretojas,
	bool:leanvited[55],
	bool:cuffed,
	bool:uniformd,
	bool:pila,
	bool:Mteises,
	bool:teises,
	bool:FTeises,
	bool:vip,
	bool:Dirzas,
	bool:pAlga,
	bool:ADraudimas,
	bool:GDraudimas,
	bool:VDraudimas,
	Float:pVelocity [ 3 ] ,
	SekamasID,
	nickbanai,
	VipLaikas,
	NaujokuLaikas,
	AdminLaikas,
	AlgosLaikas,
	bool:SusikuresKorta,
	bool:PiniguPerverdimoVariantas,
	bool:gLicenzija,
	bool:vezapica,
	bool:DeleteAcc,
	AlgosKiekis,
	pHealthCheck,
	investicija,
	//Kint paintbollo
	NuzudesPB,
	MiresPB,
	TaskaiPB,
	bool:DalyvaujaPB,
	bool:GreenPB,
	bool:YellowPB,
	admin,
	alkis,
	alga,
	bool:grobia[2],
	stazasteisesaugos,
	stazastaxi,
	stazasmediku,
	stazasfuristu,
	stazasmechaniku,
	stazasdyleriu,
	stazasradistu,
	stazasbaikeriu,
	stazasgauju,
	stazasklubu,
	stazaspaprastodarbo,
	radomcar,
	radomcar1,
	radomcar2,
	GreicioBalai,
	rangas,
	ispejimai,
	dispejimai,
	pispejimai,
	aispejimai,
	vispejimai,
	atnesemaisu,
	bool:nesamaisa,
	bool:nesamaisadarbas,
	atnesemaisud,
	prisikroves,
	uzsisakedviracius,
    uzsisakebaldus,
    uzsisakebuittech,
    uzsisakeanglis,
    uzsisakezvyra,
    uzsisakegunus,
    uzsisakenarkus,
    uzsisakezole,
 	teorija,
	taskaimed,
	bool:suautopilotu,
	telefonas,
	bakelis,
	telefonostat,
	KoksTelefonas,
	pradirbo,
	prazaide,
	kills,
	papildimas,
	masina,
	banke,
	textas,
	narkotikai,
	lsd,
	amfa,
	specialybe,
	kalejimo_laikas,
	rkaina[2],
	rid[7],
	rkiekis[2],
	authstate,
	lytis,
	drabuziai,
	uniforma,
	skambutis,
	lektuvas,
	mobsas,
	plead,
	spdata[30],
	Float:spos[3],
	pinigai,
	pCashCheck,
	zole,
	NamoID,
	VersloID,
	Muted,
	BanLaikas,
	SQLID,
	PlayerInputGUI[24],
	PlayerName[MAX_PLAYER_NAME],
	PlayerIP[16],
	vVehColor,
	vVeh,
	vChoosedCategory,
	vPressed,
	vCarID,
	vCarID2,
	Text:vCarInfo,
	CanTakeCar,
	CarCost,
	ChoosedPlayer,
	Float:PlayerHealth,
	Float:PlayerArmour,
	CanTakeHouse,
	HouseCost,
	CanTakeBusiness,
	BusinessCost,
	FloodTime,
	FloodWarns,
	//spygliai,
	uztvara,
	Nuskriaude,
	FakeKill,
	ParaseAdminams,
	ParasePriziuretojams,
	ParaseSaugoti,
	ParaseVipams,
	ParaseDyrikams,
	ParaseDyrikas,
	ParasePavas,
	ParaseAdminas,
	ParaseVipas,
	ParaseRadistas,
	ParaseRadistasp,
	ParaseRadistams,
	ParasePavaduotojam,
	NaudojoTazeri,
	medicinospazyma,
	zaidejodraudimas,
	sPazKaina,
	sGyvybiuKaina,
	sArmoroKaina,
	NuoKadaDyrikas[32],
	NuoKadaPavas[32],
		//Kazino.
	Zetonai,
	KazinoKintamasis,
	//Þvejyba
	ungurys,
	karosas,
	karpis,
	karsis,
	lydeka,
	bool:meskere,
	masalas,
	bool:valas,
	bool:zvejoja,
	kiekistrauke,
	bool:laikastraukti,
	baninolaikui,
	baninopaprastai,
	//AFK
	bool:AFK_Stat,
	Text3D:AFK_Label[MAX_PLAYERS],
	kelintasCPVM,
	KelintasVALCP,
	bool:Uzbanintas,
	bool:ArEmigruotas,
	AntiHomeKint,
	Salmas,
	bool:IskvietesPolicija,
	bool:IskvietesMedikus,
	bool:IskvietesTaxi,
	bool:IskvietesDylerius,
	bool:IskvietesSwat,
	bool:Iskvietesmechanikus,
	bool:IskvietesRadistus,
	bool:IskvietesPica,
	pavdrk,
	KadaSuriso,
	KadaVeze,
	KainaKulku,
	KiekKulku,
	KadaGydes,
	KadaGRase,
	KadaSkelbe,
	KadaVipGydes,
	KadaAdminGydes,
	KadaMeldes,
	KadaGun,
	KadaVGun,
	KadaTaises,
	KadaPute,
	KadaKickino,
	ParduotiAK,
	ParduotiDGL,
	ParduotiSG,
	ParduotiSNP,
	Parduoti9MM,
	ParduotiTEC,
	ParduotiSMG,
	ParduotiSPAZ,
	maxCars,
	grybas,
	bool: krepselis,
	SomeoneVariable,
	DaveRepTaska,
	KiekTuriRepTasku,
	KiekDaveRepTasku,
	varau1,
	varau2,
	varau3,
	varau4,
	varau5,
	varau6,
	varau7,
	//
	atvaziuoja1,
	atvaziuoja2,
	atvaziuoja3,
	atvaziuoja4,
	atvaziuoja5,
	atvaziuoja6,
	atvaziuoja7
}
enum wInfo
{
	wSlot0,
	wSlot1,
	wSlot2,
	wSlot3,
	wSlot4,
	wSlot5,
	wSlot6,
	wSlot7,
	wSlot8,
	wSlot9,
	wSlot10,
	wSlot11,
	wSlot12,
}
enum pdata
{
	lsd,
	amfa,
	zole,
	swatjail,
	rifagunai,
	gstreetgunai,
	dylgunnew,
	dylgunnorm,
	dylgunbest,
	//Darbu pabaiga
	degaline,
	bankas,
	atm,
	jaildarbas,
	krovikudarbas,
	narkotikai,
	SKL,
	kioskas,
	autoalga,
	valgis,
	zonosvalgis,
	teorija,
	ginkline,
	boxininkoskin,
	dviraciukrov,
	baldukrov,
	buittechkrov,
	angliukrov,
	zvyrokrov,
	sandelisls,
	sandelisbb,
	pBanko[2],
	elektronikospik,
	telefonupirkimas,
	DazasvaidzioPickup,
	LeaveDazasvaidisPickup,
	DazasvaidzioInfo,
	ZvejuTurgus,
	infokontora,
	// Serverio áëjimai / áðëjimai .
	ivejimasjail,
	isejimasjail,
	ivejimaspd,
	isejimaspd,
	ivejimasradistai,
	isejimasradistai,
	ivejimasrestoranas,
	isejimasrestoranas,
	ivejimasboksas,
	isejimasboksas,
	ivejimasbankas,
	isejimasbankas,
	ivejimasnaru,
	isejimasnaru,
	armijosliftask,
	armijosliftasd,
	armijosliftasa,
	ivejimasbaznycios,
	isejimasbaznycios,
	ivejimasbaikeriu,
	isejimasbaikeriu,
	ivejimasklubas,
	isejimasklubas,
	ivejimasloterija,
	isejimasloterija,
	ivejimasmaximapgr,
	isejimasmaximapgr,
	ivejimaskazino,
	isejimaskazino,
	ivejimasviesbutis,
	isejimasviesbutis,
	ivejimasdrabuziu,
	isejimasdrabuziu,
	ivejimasparduotuvepgr,
	isejimasparduotuvepgr,
	ivejimastechparduotuve,
	isejimastechparduotuve,
	ivejimaszilinsko,
	isejimaszilinsko,
	ivejimaskovos,
	isejimaskovos,
	ivejimasginklu,
	isejimasginklu,
	ivejimaspica,
	isejimaspica,
	ivejimasafk,
	isejimasafk,
	ivejimasvyriausybe,
	isejimasvyriausybe,
	ivejimasvm,
	isejimasvm,
	ivejimasmaximap,
	isejimasmaximap,
	ivejimasdazasv,
	isejimasdazasv,
	ivejimasstadionas,
	isejimasstadionas,
	ivejimaspicam,
	isejimaspicam,
	ivejimasklubasc,
	isejimasklubasc,
	ivejimasklubasp,
	isejimasklubasp,
	ivejimasdyleriu,
	isejimasdyleriu,
	ivejimasdraudimas,
	isejimasdraudimas,
	// Serverio baigti áëjimai / áðëjimai .
	ofisoinformacija,
    investicijos,
    grybusupirkimas
}
enum loitem
{
	Lobis,
	bool:IsPicked
}
enum HouseInt
{
    Price,
	Int,
	Float:IntX,
	Float:IntY,
	Float:IntZ,
	Float:IntAngle
};
new hInterior[8][HouseInt] =
{
	{20000, 1, 223.142, 1287.253, 1082.141, 360.0},
	{30000, 11, 2282.968, -1140.093, 1050.900, 360.0},
	{40000, 4, 261.061, 1284.494, 1080.258, 90.0},
	{50000, 9, 260.800, 1237.599, 1084.258, 360.0},
	{60000, 15, 295.201, 1472.565, 1080.258, 360.0},
	{70000, 2, 225.756989, 1240.000000, 1082.149902, 360.0},
	{80000, 7, 225.630997, 1022.479980, 1084.069946, 360.0},
	{90000, 3, 235.508994, 1189.169897, 1080.339966, 360.0}
};
enum HouseInfo
{
	bool:hCreated,
	bool:Locked,
	bool:Buyed,
	Owner[21],
	Text3D:House3D,
	HousePickup,
	Float:IntX,
	Float:IntY,
	Float:IntZ,
	Float:IntAngle,
	Float:ExitX,
	Float:ExitY,
	Float:ExitZ,
	Float:ExitAngle,
	Money,
	hInt,
	htVW,
	Cost
}

new hInfo[MAX_HOUSES][HouseInfo];

enum BusinessInfo
{
	bool:bBuyed,
	bOwner[21],
	bName[128],
	bPickup,
	Text3D:bLabel,
	bMoney,
	bProfit,
	bCost,
	Float:bPos_X,
	Float:bPos_Y,
	Float:bPos_Z
}
enum hiItem
{
	hiInt,
	Float:hiExi_X,
	Float:hiExi_Y,
	Float:hiExi_Z,
	Float:hiExi_A,
	IntKaina
};
enum vitem
{
	vOwner[21],
	vNumberPlate[9],
	vTune[13],
	vColor[2],
	vPaintjob,
	bool:vLocked,
	bool:vOwned,
	Float:vLastPos[4],
	Float:Rida,
	gas,
	ikrauta,
	numeriai [9],
	vModel,
	bool:vSprogo
}
enum vsItem
{
	vsModel,
	vsCost,
	vsYear,
	Float:vsPosZ
};
enum kords
{
    Float:minX,
    Float:minY,
    Float:maxX,
    Float:maxY
};
enum titem
{
	taksistas,
	Float:Start[3],
	bool:imti,
}
enum OldSpeedoPos
{
	Float:sX,
	Float:sY,
	Float:sZ
}
enum weather_info
{
	wt_id,
	wt_text[255]
};
new Weapon[MAX_PLAYERS][wInfo];
new playerDB[MAX_PLAYERS][pItem];
new pickups[2][pdata];
new Float:PickupIDs[2000][3], PModels[2000];
new LobiuDB[loitem];

static const MaxPassengers[27] =
{
    0x10331113, 0x11311131, 0x11331313, 0x80133301,
    0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
    0x13113311, 0x31101100, 0x30001301, 0x11031311,
    0x11111331, 0x10013111, 0x01131100, 0x11111110,
    0x11100031, 0x11130221, 0x33113311, 0x11111101,
    0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
    0x13330111, 0xFF131111, 0x0000FF3F
};

new Oras[4] = {1, 9, 8, 16};

new Float:HospitalsSpawns[][] =
{
     {1234.2512,310.0016,19.5400,65.2255},
     {1234.2512,310.0016,19.5400,65.2255}
};

new Float:lobiai[][3]=
{
	{-349.9794,2210.2563,42.4844},
	{-369.7008,2219.2476,42.4844},
	{-414.3536,2258.2263,42.9105},
	{-421.8358,2250.9036,42.4297},
	{-411.9254,2220.9927,42.4297},
	{-382.4557,2212.7607,42.4251},
	{-360.5771,2210.4421,42.4844},
	{-458.4447,2225.3665,42.4297},
	{-376.1234,2244.5654,42.0938},
	{-314.9018,2216.1589,44.1285},
	{-356.1910,2213.4634,42.4253},
	{-463.9580,2210.7083,42.8394},
	{-426.2009,2206.4409,42.4297},
	{-363.0255,2247.4248,42.4844},
	{-320.5193,2252.5056,42.4844},
	{-378.5850,2260.0701,41.8908},
	{-426.3846,2216.2239,42.4297},
	{-356.2260,2242.4260,42.4844},
	{-345.3765,2240.9236,43.7211},
	{-332.9117,2201.7161,42.4844},
	{-360.8770,2211.1731,42.4844},
	{-354.0304,2229.9426,42.4844},
	{-376.6750,2209.4751,42.4844},
	{-388.1872,2197.9121,42.4258},
	{-420.8264,2222.7114,42.4297},
	{-383.1534,2223.0754,42.4297},
	{-447.1372,2218.1096,42.4297},
	{-426.2820,2245.2136,42.4297},
	{-417.1837,2243.3887,42.4297},
	{-377.3651,2271.2834,42.0064},
	{-349.7275,2217.3064,42.4831},
	{-391.6609,2206.4014,42.3951},
	{-420.8615,2218.9016,42.4297},
	{-475.9012,2213.2031,45.7727},
	{-414.8027,2239.6414,42.6703},
	{-426.2653,2269.8398,42.2689},
	{-428.6180,2305.1428,41.9627},
	{-434.8948,2217.4482,42.6858},
	{-460.8394,2195.1755,46.1954},
	{-415.7751,2241.8237,42.4297},
	{-437.7232,2246.6040,42.4297},
	{-423.1989,2252.8799,42.4297},
	{-422.5089,2257.3374,42.4297},
	{-370.8014,2232.8662,42.4297},
	{-388.2273,2234.5229,42.4353},
	{-350.1987,2224.0046,42.4844},
	{-359.0059,2222.8054,42.4912},
	{-325.3898,2224.8738,42.4874},
	{-329.0994,2226.1865,42.4856},
	{-326.3737,2215.3633,42.4841},
	{-350.1706,2208.9065,46.5967},
	{-375.1824,2206.3245,47.4162},
	{-362.7261,2202.0745,42.4225},
	{-383.0354,2136.1328,57.5010},
	{-428.2497,2246.1797,42.4297},
	{-456.4738,2229.1687,42.4297},
	{-399.9366,2202.4048,42.4005},
	{-426.4088,2202.6733,42.4297},
	{-455.7542,2221.9902,42.4297},
	{-476.7353,2239.6895,42.4297},
	{-446.7761,2248.4927,42.4297},
	{-426.2125,2260.0298,42.4297},
	{-368.7484,2250.3567,42.4297},
	{-356.7481,2257.9814,43.0547},
	{-341.7611,2243.2449,42.4844},
	{-334.5697,2227.2126,41.7866},
	{-322.9232,2230.0166,42.4886},
	{-348.9229,2214.8274,42.7778},
	{-359.1022,2234.6091,42.4844},
	{-373.6335,2228.6455,42.4844},
	{-358.0310,2212.4763,42.4844},
	{-371.8059,2214.8870,42.2932},
	{-384.1774,2239.2517,42.4297},
	{-426.0262,2240.2644,42.4297},
	{-442.6657,2223.3850,42.4297},
	{-440.1763,2215.0112,42.4297},
	{-453.4329,2214.9304,42.4297},
	{-415.9657,2209.6699,42.4297},
	{-446.1168,2237.4883,42.4297},
	{-429.6402,2209.0037,42.4297},
	{-427.0947,2207.0908,42.4297},
	{-436.6154,2204.4080,42.4297},
	{-378.2067,2196.8657,42.4258},
	{-367.0029,2198.8389,42.4230},
	{-348.4998,2221.8672,42.9199},
	{-312.8122,2224.6602,42.4886},
	{-358.1790,2229.1831,43.0277},
	{-360.0800,2218.1621,42.4900},
	{-339.5407,2215.7280,42.5703},
	{-356.1126,2215.7000,43.7218},
	{-313.1295,2222.5730,42.4885},
	{-375.1145,2227.1995,41.7772},
	{-367.4664,2225.4294,42.4297},
	{-430.7340,2222.4626,42.4297},
	{-416.3041,2240.0461,42.4297},
	{-437.1641,2248.9829,42.4297},
	{-368.9486,2250.6917,42.4844},
	{-385.6465,2266.7996,42.4844},
	{-340.7784,2229.2717,42.4912},
	{-338.6106,2224.5872,42.4912},
	{-358.6202,2220.7798,42.4912},
	{-329.0648,2218.4949,42.4912},
	{-366.5795,2212.5840,42.4844},
	{-426.9229,2246.9749,42.4297},
	{-362.8100,2242.4573,42.4844},
	{-347.7649,2225.6799,42.4912},
	{-424.4871,2273.3838,42.0984},
	{-442.9844,2250.9060,42.5992}
};

new bool:Tazer[MAX_PLAYERS];
new Spark[MAX_PLAYERS];
new bool:Tazed[MAX_PLAYERS];
new Pelnas[14];

new bInfo[MAX_BUSINESSES][BusinessInfo],CreatedBusinesses = -1;

new vehicleDB[MAX_VEHICLES][vitem];
new VehicleNames[212][] =
{
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring A","Hotring B",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer A","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","L Trailer A","L Trailer B",
	"Stair Trailer","Boxville","Farm Plow","U Trailer"
};
new Letters[26][] =
{
	"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M",
	"N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
};
new Float:vSpawns[MAX_VEHICLES_SPAWNS][6] =
{
	/* x, y, z, r */
	{2297.9309,234.0355,26.3362,270.3492},
	{2297.9019,238.7975,26.3470,270.3492},
	{2297.8748,243.1916,26.3535,270.3492},
	{2297.8494,247.3379,26.3612,270.3493},
	{2297.8201,252.1224,26.3699,270.3494},
	{2297.7920,256.6409,26.3737,270.3495}

};
new Float:carSpawns [ 7 ] [ 6 ] =
{
	{1261.1346,538.3800,20.0565,152.6330},
	{1264.4534,536.5195,20.0562,153.1940},
	{1268.0100,534.9719,20.0574,150.6298},
	{1271.5403,533.1174,20.0571,152.1961},
	{1275.3914,531.0914,20.0475,151.7178},
	{1279.0336,529.3154,20.0577,151.9915},
	{1282.6000,527.3334,20.0483,151.5417}
};
new vCarsColors[6] =
{
	/* white, black, yellow, green, blue, red */
	1, 0, 6, 86, 2, 3
};


new Text:vNotForPress[4], Text:vForPress[10], vsPickup[2];
new aBakai[212] =
{
		45,
        45,
        45,
        120,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        150,
        45,
        45,
        45,
        45,
        15,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        20,
        12,
        18,
        45,
        45,
		45,
        45,
        15,
        45,
        45,
        16,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        10,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        10,
        10,
        45,
        45,
        45,
        130,
        150,
        45,
        45,
        45,
        45,
        45,
        22,
        30,
        23,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
		45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
		45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
        45,
};

new aEda[212] =
{
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0, //artict1
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0, //artict2
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1, //hotrina
        1, //hotrinb
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1, //petro
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0,
        0,
        1,
        1,
        1,
        1,
        1,
        1, //firela
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1, //monstera
        1, //monsterb
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0, //freiflat
        0, //streakc
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0, //petrotr
        1,
        1,
        1,
        1,
        1,
        0, //freibox
        0, //artict3
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        1,
        0, //bagboxa
        0, //bagboxb
        0, //tugstair
        1,
        0, //farmtr1
        0 //utiltr1
};

new 
	bool:Ribotuvas[MAX_PLAYERS],
	Float:g_fSpeedCap[MAX_PLAYERS] = {0.0, ...},
	RadijosPavadinimas[MAX_VEHICLES][19],
	RadijosURL[MAX_VEHICLES][87];

new Float:ZoneCords[MAX_ZONES][kords] =
{
    // minX, minY, maxX, maxY
    {2409.3791, 106.9348, 2448.5764, 145.8930}, // Miesteliø - vairavimo mokykla .
    {2160.3378, 52.1293, 2183.6464, 80.1994}, // Miesteliø - naujokø vieta .
    {1211.3980, 276.8494, 1272.1632, 340.0126}, // Miesteliø - ligoninë .
    {342.9621, -104.1620, 371.9415, -72.9514} // Miesteliø - renginiø zona .
};

new vOldCars[MAX_OLD_CARS][vsItem] =
{
	{400, 65000, 2001 , 2056.5398},
	{542, 10000, 1993, 2056.1917},
	{401, 25000, 1995, 2056.1653},
	{404, 7000,  1990, 2056.1829},
	{405, 35000, 2000, 2056.3223},
	{410, 30000, 1999, 2056.1023},
	{412, 40000, 2002, 2056.2842},
	{602, 45000, 2000, 2056.2529},
	{561, 35000, 1997, 2056.2603},
	{418, 45000, 1996, 2056.5383},
	{500, 65000, 2009, 2056.5610},
	{419, 16000, 1990, 2056.2444},
	{421, 20000, 1993, 2056.2729},
	{422, 45000, 2000, 2056.4558},
	{426, 40000, 2001, 2056.2520},
	{436, 35000, 2000, 2056.2727},
	{439, 41000, 1999, 2056.2925},
	{445, 50000, 2002, 2056.3013},
	{565, 75000, 2000, 2056.1143},
	{507, 35000, 1989, 2056.2463},
	{533, 40000, 1996, 2056.2085},
	{535, 65000, 2004, 2056.2456},
	{536, 45000, 1998, 2056.2788},
	{458, 60000, 2001, 2056.2922},
	{466, 15000, 1996, 2056.2854},
	{483, 35000, 1964, 2056.4983},
	{489, 90000, 2007, 2056.5378},
	{497, 320000, 2002, 2056.5568}
};
new vSportCars[MAX_SPORT_CARS][vsItem] =
{
	{402, 85000,  2003, 2056.2961},
	{411, 250000, 2012, 2056.1975},
	{415, 60000,  2003, 2056.1865},
	{559, 85000,  2008, 2056.1548},
	{560, 130000, 2007, 2056.1694},
	{562, 110000, 2005, 2056.0940},
	{429, 70000,  2005, 2056.0889},
	{451, 150000, 2010, 2056.1895},
	{475, 180000, 2009, 2056.3291},
	{541, 100000, 2008, 2056.0957},
	{477, 45000,  2001, 2056.1606},
	{480, 90000,  2003, 2056.2649},
	{495, 450000, 2009, 2056.8896},
	{555, 65000,  2003, 2056.1448},
	{579, 150000, 2007, 2056.3035},
	{587, 90000,  2001, 2056.1951},
	{589, 85000,  2003, 2056.1245},
	{603, 65000,  1992, 2056.3406}
};
new vMotoCars[MAX_MOTO_CARS][vsItem] =
{
	{522, 200000, 2011, 2056.0195},
	{461, 25000,  2003, 2056.0291},
	{581, 19000,  2001, 2056.0496},
	{462, 2000,   2005, 2056.0684},
	{463, 80000,  1990, 2055.9956},
	{586, 65000,  1995, 2055.9431},
	{468, 15000,  1999, 2056.1387},
	{521, 50000,  2006, 2056.0420}
};

new Zone[MAX_ZONES],
	Warns[MAX_PLAYERS],
	bool:IsPlayerInZone[MAX_PLAYERS];

new
	nuomcar[8],
	medcar[11],
	medikup[9],
	taxcar[5],
	dylcar[12],
	vmcar[11],
	RifosCar[9],
	gstreetcar[9],
	furistucar[10],
	furupriekabos[11],
	misijoscar[3],
	eventucar[5],
	buliucar[38],
	RadistuCar[12],
	BaikeriuCar[10],
	KluboCar[6],
	Klubo2Car[6],
	bmxcar[9],
	spdcar[28];

new taxiDB[MAX_PLAYERS][titem];
new keleivis[MAX_PLAYERS];

new KMMNANamas[MAX_PLAYERS] = 0;
new KMMNABiznis[MAX_PLAYERS] = 0;
new KMMNATransportas[MAX_PLAYERS] = 0;
new KMMNAT[MAX_PLAYERS] = 0;

new const BE_Bad_Vehs[] =
{
	460, 464, 476, 511, 512, 513, 519, 520, 539, 553, 577, 592, 593, // planes
	417, 425, 447, 465, 469, 487, 488, 497, 501, 548, 563 // heli
};
new bool: BE_Play_Check[MAX_PLAYERS];

new bool:Skaicevimas;
new Text:laikiux, Text:datike;

main()
{
	print("\n\n\n\n\n\n\n\n\n\n\n\n\n    ------------------------");
	print("      Naujas Realus Miesteliu Gyvenimas ");
	print("      Tinklapis: www.NRMG.LT");
	print("    ------------------------\n\n\n\n\n\n\n\n");
	WasteDeAMXersTime();
	//MakeToMeMinxMinyMaxxMaxy(342.9622, 342.9918, 371.7477, 371.9416, -104.1620, -72.9514, -73.0559, -103.3946);
	printf("Originaliø objektø skaicius: %s", konvertuoti_pinigus(CountOriginalObjects()));
	printf("CreateDynamicObject skaicius: %s", konvertuoti_pinigus(CountDynamicObjects()));
}

public OnGameModeInit()
{
    SendRconCommand("mapname Kaimeliai");
	new versionstr[20];
    format(versionstr, sizeof(versionstr), "%s", ServerioVersija);
	SetGameModeText(versionstr);

    if(GetMaxPlayers() > MAX_PLAYERS)
	{
	    print("GetMaxPlayers > MAX_PLAYERS, padidinkite MAX_PLAYERS skaiciu.");
	    SendRconCommand("exit");
	    return 1;
	}

	/*mysql_debug(true); // true - Debug'as ijungtas.
	mysql_connect(MySQL_HOST, MySQL_USER, MySQL_DATA, MySQL_PASS);
	if(mysql_ping() >= 1) print("Prisijungeme prie MySQL sekmingai!");
	else print("neprisijungta!");*/
	
	new TickCount = 0, ServerStatus = 1;

	print("\n\n---------------------------------------------------");
	print("[GM System]: Starting GameMode..");
	print("[GM System]: Main functions of the server is loading...");

	printf("\n[MySQL System]: Connecting to dabaste: %s ..", MySQL_DATA);

    TickCount = GetTickCount(); //- Pradedam skaièiavima.

	mysql_debug  (true); // - Ájungiam MySQL debug'à, kad matytume visas MySQL uþklausas, rezultatus.
    mysql_connect(MySQL_HOST, MySQL_USER, MySQL_DATA, MySQL_PASS); // Jungiames prie mysql duomenø bazës.

    if(mysql_ping() == 1)
    {
        printf("[MySQL System]: Connection sucesfull to dabaste: [%s] in %dms\n", MySQL_DATA, GetTickCount() - TickCount);
    }
    else
    {
        printf("[MySQL System]: Connection failed to dabaste: [%s]\n", MySQL_DATA);
        printf("[MySQL System]: Server can't load, shutting down..", MySQL_DATA);

        ServerStatus = 0; //- Nustatom kintamajá, kad serverio statusas blogas.
    }

    if(ServerStatus == 0) return SendRconCommand("exit");

	for(new pick; pick < MAX_PICKUPS; pick++) DestroyPickup(pick);
	carTimer = SetTimer ( "checkCarInKMA" , 1000 , true ) ;
	EnableStuntBonusForAll(false);
	SetNameTagDrawDistance(15);
	LimitGlobalChatRadius(20);
	AllignMaxPlayers();
	DisableInteriorEnterExits();
	ManualVehicleEngineAndLights();
	ShowPlayerMarkers(0);
	LoadPickups();
	LoadSpawns();
	EnableLobiai();
	CreateMenues();
	LoadVehicles();
	LoadPelnai();
	LoadSandeliai();
	LoadObject();
	CreateBusinesses();
	CreateHouses();
	PakeistiServerioLaika();
	loadServerOptions ( ) ;
	loadServerGangs ( ) ;

	//LoadAllOwnGarages ();

	SetTimer("GlobalOneSecTimer", 1200, true);

	SafetyZoneID[0] = CreateZone("Grybavimo zona", 1456.1615, 233.7065, 1514.5381, 335.1825, true, 0x28B426AA);
	SafetyZoneID[1] = CreateZone("Grybavimo zona", 2420.9241, -101.3167, 2587.1509, -200.7092, true, 0x28B426AA);
	SafetyZoneID[2] = CreateZone("Grybavimo zona", 170.6520, -486.5726, 204.1282, -592.5842, true, 0x28B426AA);
	SafetyZoneID[3] = CreateZone("Grybavimo zona", 741.3839, -387.8782, 619.2186, -318.2796, true, 0x28B426AA);

	CreateNewOwnGarage(-2142.6140, -959.5026, 32.0234,  -2143.696777, -963.259827, 32.867134, 0.0000, 0.0000, 0.0000);

	//Vartai darbams.
	
	SWATVartai = CreateDynamicObject(980, -75.65522, -352.73993, 3.23075,   0.00000, 0.00000, 90.00000); // Miesteliø - SWAT vartai .
	MechanikuKma = CreateDynamicObject(971, 100.02937, -130.45940, 2.78894,   0.00000, 0.00000, 90.00000); //Miesteliø Mechanikø KMA .
	TreniruociuV = CreateDynamicObject(988, 54.12000, 2501.07227, 16.80000,   0.00000, 0.00000, 90.00000); //Miesteliø - Treniruoèiø zona .
	TreniruociuV2 = CreateDynamicObject(988, 54.12000, 2509.87427, 16.80000,   0.00000, 0.00000, 90.00000); //Miesteliø - Treniruoèiø zona .
	TreniruociuV3 = CreateDynamicObject(3055, 16.06560, 2528.26294, 16.50000,   0.00000, 0.00000, 0.00000); //Miesteliø - Treniruoèiø zona .
	TreniruociuV4 = CreateDynamicObject(3055, 5.96380, 2528.26294, 16.50000,   0.00000, 0.00000, 0.00000); //Miesteliø - Treniruoèiø zona .
	TreniruociuV5 = CreateDynamicObject(988, -8.35240, 2509.36475, 16.80000,   0.00000, 0.00000, 90.00000); //Miesteliø - Treniruoèiø zona .
	TreniruociuV6 = CreateDynamicObject(988, -8.35240, 2501.34448, 16.80000,   0.00000, 0.00000, 90.00000); //Miesteliø - Treniruoèiø zona .
	BaikeriuVartai = CreateDynamicObject(980, 1919.80, 623.33, 12.66,   0.00, 0.00, 0.00); // Miesteliø - Baikeriø vartai .
	BaikeriuVartai2 = CreateDynamicObject(980, 1880.97, 623.35, 12.66,   0.00, 0.00, 0.00); // Miesteliø - Baikeriø vartai .
	YakuzaVartai = CreateDynamicObject(19313, -721.99738, 1001.00500, 12.52000,   0.00000, 0.00000, 0.00000); // Miesteliø - Yakuza vartai .
	YakuzaVartai2 = CreateDynamicObject(19313, -721.99738, 901.93298, 12.52000,   0.00000, 0.00000, 0.00000); // Miesteliø - Yakuza vartai .
	YakuzaVartai3 = CreateDynamicObject(3037, -695.53192, 967.02301, 13.14000,   0.00000, 0.00000, 0.00000); // Miesteliø - Yakuza angaro vartai .
	RussianVartai = CreateDynamicObject(980, -310.24121, 1736.12000, 43.30000,   0.00000, 0.00000, 90.00000); // Miesteliø - Russian vartai .
	RussianVartai2 = CreateDynamicObject(2938, -293.25531, 1762.94739, 44.64000,   0.00000, 0.00000, 90.00000); // Miesteliø - Russian angaro vartai .
	DyleriuVartai = CreateDynamicObject(980, 892.54395, 372.50211, 20.93407,   0.00000, 0.00000, 199.70473);
	FuristuPVartai = CreateDynamicObject(980, 2777.10352, 913.01196, 9.98130,   0.00000, 0.00000, 90.00000); // Miesteliø - Fûristø pasikrovimas .
	FuruVartai = CreateDynamicObject(980, 1337.43457, 739.64679, 11.46879,   0.00000, 0.00000, -90.00000); // Furistu vartai
	KluboVartai = CreateDynamicObject(19313, -503.986, 2592.948, 53.832,   0.000, 0.000, 90.000); // Miesteliø - Klubo vartai .
	KluboVartai2 = CreateDynamicObject(971, -1515.96936, 2541.28735, 57.30000,   0.00000, 0.00000, 0.00000); // Miesteliø - Klubo 2 vartai .
	KluboAngaras = CreateDynamicObject(2938, -523.982, 2571.619, 55.276,   0.000, 0.000, 90.000); // Miesteliø - Klubo angaras .
	//SPDPirmi = CreateDynamicObject(3055, -2215.82544, -94.85650, 30.08000,   0.00000, 0.00000, 90.00000); // Miesteliø - Armijos 1 vartai .
	//SPDAntri = CreateDynamicObject(3055, -2215.82544, -85.42230, 30.08000,   0.00000, 0.00000, 90.00000); // Miesteliø - Armijos 2 vartai .
	SPDPirmi = CreateDynamicObject(986, 2237.59302, 2453.09399, 10.14700,   0.00000, 0.00000, 90.00000);
	SPDAntri = CreateDynamicObject(19377, 2334.86279, 2443.65454, 4.63320,   0.00000, 0.00000, -30.00000);


	//GangZone sukûrimas
	sandeliozonals = GangZoneCreate(SANDELIS_POS_MINX, SANDELIS_POS_MINY, SANDELIS_POS_MAXX, SANDELIS_POS_MAXY); // LS sandelis
    sandeliozonabb = GangZoneCreate(SANDELIS2_POS_MINX, SANDELIS2_POS_MINY, SANDELIS2_POS_MAXX , SANDELIS2_POS_MAXY); // BB sandelis
	//ZoneNoGunLic
    ZoneNoGunLic = GangZoneCreate(2750.5090, 2730.8125, 2875.6328, 2792.5319);
	//3D tekstai ant sandeliø
    new str[190];
    sandeliols3d[0] = Create3DTextLabel("-", 0xFFFFFFFF,-366.6886, -1423.3811, 25.7266, 20, 0, 1);
    format(str, sizeof(str), "{ffffff}Sandelyje yra:\n{FFC400}%s {ffffff}LSD\n{FFC400}%s {ffffff}Amfetamino\nSandelis priklauso: {FFC400}%s {ffffff}mafijos lyderiui.", konvertuoti_pinigus(LSD[0]), konvertuoti_pinigus(AMFA[0]), SanSavininkas[0]);
    Update3DTextLabelText(sandeliols3d[0], 0xFFFFFFFF, str);

    sandeliols3d[1] = Create3DTextLabel("-", 0xFFFFFFFF,-61.4555, 48.3689, 3.1103, 20, 0, 1);
    format(str, sizeof(str), "{ffffff}Sandelyje yra:\n{FFC400}%s {ffffff}LSD\n{FFC400}%s {ffffff}Amfetamino\nSandelis priklauso: {FFC400}%s {ffffff}mafijos lyderiui.", konvertuoti_pinigus(LSD[1]), konvertuoti_pinigus(AMFA[1]), SanSavininkas[1]);
    Update3DTextLabelText(sandeliols3d[1], 0xFFFFFFFF, str);
    
    LSDLABEL = Create3DTextLabel("-", 0xFFFFFFFF,-1949.6576,-1091.1626,32.1754, 20, 0, 1);
    format(str, sizeof(str), "{ffffff}LSD - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[lsd]));
    Update3DTextLabelText(LSDLABEL, 0xFFFFFFFF, str);

    AMFALABEL = Create3DTextLabel("-", 0xFFFFFFFF,-1940.8711,-1091.2650,32.1754, 20, 0, 1);
    format(str, sizeof(str), "{ffffff}AMFA - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[amfa]));
    Update3DTextLabelText(AMFALABEL, 0xFFFFFFFF, str);

    ZOLELABEL = Create3DTextLabel("-", 0xFFFFFFFF,-1945.3840,-1091.0009,32.1754, 20, 0, 1);
    format(str, sizeof(str), "{ffffff}ÞOLË - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[zole]));
    Update3DTextLabelText(ZOLELABEL, 0xFFFFFFFF, str);
    
	//AFK ZONA .
	Create3DTextLabel("{cccccc}/ofisas", 0xB4B5B7FF, 355.4536,152.4572,1025.7891, 10, 0, 0);
	Create3DTextLabel("{cccccc}/ofisas", 0xB4B5B7FF, 362.7188,171.6240,1025.7891, 10, 0, 0);
	Create3DTextLabel("{cccccc}/ofisas", 0xB4B5B7FF, 355.1064,171.7894,1025.7891, 10, 0, 0);
	Create3DTextLabel("{cccccc}/ofisas", 0xB4B5B7FF, 362.6984,152.5808,1025.7891, 10, 0, 0);

	//Pardudamø maðinø aikðtelës .
	Create3DTextLabel("{cccccc}Ávaþiavus á ðia aikðtelæ, galësite parduoti savo tr.priemonæ. {FF0000}/parduoti", 0xB4B5B7FF, 704.5670,-657.3616,16.3900, 20, 0, 0);
	
	//Klubø uþraðai.
	Create3DTextLabel("{dddddd}Klubas: {ff9000} Costello \n{dddddd}Klubas ákûrtas {ff9000}2019-05-23\n{dddddd}Ástojimo skaièius: {ff9000}Neribotas\n{dddddd}Gavai pakvietimà á klubà?: {ff9000}Atsistok èia !", 0xB4B5B7FF, -501.4326,2598.8564,53.6162, 20, 0, 0);
	Create3DTextLabel("{dddddd}Klubas: {ff9000} -Patriotai- \n{dddddd}Klubas ákûrtas {ff9000}2019-05-23\n{dddddd}Ástojimo skaièius: {ff9000}Neribotas\n{dddddd}Gavai pakvietimà á klubà?: {ff9000}Atsistok èia !", 0xB4B5B7FF, -1522.8230,2543.5588,55.7858, 20, 0, 0);
	Create3DTextLabel("{dddddd}Klubo {ff9000} Costello  {dddddd}Ginklai", 0xAAAAFFFF, -522.1600,2559.0415,53.6410, 20, 0, 1); // Klubo ginklai.
	Create3DTextLabel("{dddddd}Klubo {ff9000} Costello  {dddddd}Gyvybës", 0xAAAAFFFF, 231.5118,1189.1731,1080.2578, 20, 0, 1); // Klubo gyvybës.
	Create3DTextLabel("{dddddd}Klubo {ff9000} -Patriotai-  {dddddd}Ginklai", 0xAAAAFFFF, 231.3500,1249.2177,1082.1406, 20, 0, 1); // Klubo ginklai. 2
	Create3DTextLabel("{dddddd}Klubo {ff9000} -Patriotai-  {dddddd}Gyvybës", 0xAAAAFFFF, 228.7071,1249.0342,1082.1406, 20, 0, 1); // Klubo gyvybës. 2
	
	//Treniruoèiø ginklø uþraðas.
 	Create3DTextLabel ( "{dddddd}Treniruotës ginklai\n{dddddd}Galima imti kas {ff9000}1min" , 0xFFFFFFFF , 25.5815,2537.0681,16.9920 , 20 , 0 ) ;
 	
 	//DM zonos uþraðas.
 	Create3DTextLabel ( "{dddddd}Mirus atsirasite\n{FF0000}ÈIA !" , 0xFFFFFFFF , 424.2805,2460.0627,16.5000 , 20 , 0 ) ;
 	Create3DTextLabel ( "{dddddd}Ginklus galite pirkti,\nkas {ff9000}1 {dddddd}minute.\nGinklai kainuoja {ff9000}2.500 {dddddd} !\nGausite ginklø paketà {ff9000}Desert Eagle {dddddd}ir {ff9000}AK-47" , 0xFFFFFFFF , 425.3262,2473.4143,16.5000 , 20 , 0 ) ;
	
	//Miesteliø - VM ÁSPËJIMAS .
	Create3DTextLabel("{FF0000}[ DËMËSIO ] {cccccc}- Ðioje vietoje gali Jus suþeisti þaidëjas laikant teisæs, {FF0000}ATSARGIAI {cccccc}!", 0xB4B5B7FF, 2449.4792,114.1096,26.4774, 20, 0, 0 ) ;

	Create3DTextLabel ( "{ffffff}Konfiskuotø {ff9900}maðinø {ffffff}aikðtelë\n{ffffff}Atsiemimo kaina: {ff9900}4000" , 0xFFFFFFFF , 101.2496,-124.1087,1.6100 , 20 , 0 , 0 ) ;
	
	Create3DTextLabel("Iðeiti ið kalejimo gali tik\nTeisësauga!", 0xB4B5B7FF, 2781.0415,2748.3391,14.2870, 20, 0, 0);// Kalëjimo iðëjimas
    Create3DTextLabel("{cccccc}Medicinos paþymëjimas.", 0xFFFFFFFF, 1236.0989,299.1217,20.1359, 20, 0, 1);
    Create3DTextLabel("{FFFFFF}Elektronikos prietaisai", 0xAAAAFFFF, -2237.3560,130.1798,1035.4141, 20, 0, 1);
    Create3DTextLabel("{FFFFFF}Nemokamas kalëjmo valgis.", 0xAAAAFFFF, 2787.0803, 2767.2720, 14.2870, 20, 0, 1); //Kalëjmo valgis
	Create3DTextLabel("{FFFFFF}Kalëjmo darbas\nSuneðiojus 10 dëþiø jûsø kalëjmo laikas pamaþës 120 sec.", 0xAAAAFFFF, 2763.8567, 2745.4595, 14.2870, 20, 0, 1); // Kalëjmo darbas
	Create3DTextLabel("{FFFFFF}Darbo pradëjimas\nUþ 10 maiðø gauk 100 á algà.", 0xAAAAFFFF, -1928.8817, -2692.5054, 54.3535, 20, 0, 1); // Neðiku darbas
	Create3DTextLabel("{cccccc}Valgykla", 0xAAAAFFFF, 373.8214,-118.8025,1001.4922, 20, 0, 1); //Valgis.
	Create3DTextLabel("{cccccc}Valgykla", 0xAAAAFFFF, 369.4698,-6.0230,1001.8516, 20, 0, 1); //Valgis.
	Create3DTextLabel("{cccccc}Valgykla", 0xAAAAFFFF, -1623.5255,-2693.2166,48.7427, 10, 0, 1); //Valgis.
	Create3DTextLabel("{cccccc}Ofisas\n{FFFFFF}Informacija", 0xAAAAFFFF, 345.6097,162.2049,1025.7964, 20, 0, 1); //Miesteliø - AFK ZONA informacija.
	Create3DTextLabel("{cccccc}Telefonø pirkimas", 0xAAAAFFFF, 251.6289,-56.6737,1.5703, 20, 0, 1); //Telefonø parduotuvës kasa.
	Create3DTextLabel("{cccccc}Maxima\n{FFFFFF}Prekiø Parduotuvë", 0xAAAAFFFF, -30.8782,-28.7111,1003.5573, 20, 0, 1); //Maximos valgis.
	Create3DTextLabel("{cccccc}Medþiotojø namai\n{FFFFFF}Restoranas", 0xAAAAFFFF, 503.1032,1558.7643,1066.2444, 20, 0, 1); //resfood
	Create3DTextLabel("{cccccc}Baikeriø Ginklai", 0xAAAAFFFF, 511.4015,-72.1113,998.7651, 20, 0, 1); // Baikeriø ginklai.
	Create3DTextLabel("{cccccc}Armijos Ginklai", 0xAAAAFFFF, 2248.3235,2456.4441,10.8230, 20, 0, 1); // Armijos ginklai.

	Create3DTextLabel("{FFFFFF}Pinigø paremimas, á darbø fondus!", 0xAAAAFFFF,358.4208,178.7867,1008.3828, 20, 0, 1);
    Create3DTextLabel("{ffffff}BOXININKO SKIN {ffffff}[{FF0000}R{ffffff}]", 0xAAAAFFFF, 1396.9546,1791.0455,4003.4961, 10, 0, 1);
    Create3DTextLabel("{ffffff}BOXININKO SKIN {ffffff}[{00B3FF}M{ffffff}]", 0xAAAAFFFF, 1396.8141,1782.9396,4003.4961, 10, 0, 1);
    Create3DTextLabel("{ffffff}Atsiimti algà galite nuo {FF8000}19:00 {FFFFFF}iki {FF8000}22:00 {FFFFFF}valandos", 0xAAAAFFFF, 362.3399,173.7508,1008.3828, 20, 0, 1);
	Create3DTextLabel("{66FF66}Krovikai\n{37f467} 10/10 maiðø = 50 .", 0xAAAAFFFF, 1070.2961,-345.0461,73.9922, 20, 0, 1);
	Create3DTextLabel("{66FF66}Krovikø darbo pradëjimas", 0xAAAAFFFF, 1073.2994,-345.2238,73.9922, 20, 0, 1);
	
	Create3DTextLabel("{FFFFFF}Á kalëjmà.", 0xAAAAFFFF, 2761.8040, 2575.3918, -58.7122, 20, 0, 1);
	// Armijos liftas
	Create3DTextLabel("{cccccc}Liftas á garaþà", 0xAAAAFFFF, 2296.6111,2451.4712,10.8250, 20, 0, 1); // deðinëj
	Create3DTextLabel("{cccccc}Liftas á garaþà", 0xAAAAFFFF, 2296.0110,2468.8977,10.8250, 20, 0, 1); //kairej
	Create3DTextLabel("{cccccc}Liftas á bazës virðu", 0xAAAAFFFF, 2268.0322,2448.6599,3.5313, 20, 0, 1); //apaèioj
	
	
	//Miesteliø - SPAWN informacijos uþraðai ir kita. jailas
	Create3DTextLabel("{cccccc}Iveþimas á kalëjimà ir PD Ginklai", 0xAAAAFFFF, 647.9339,-512.9417,16.5419, 20, 0, 1); //Miesteliø - Policijos iveþimas JAIL.
	Create3DTextLabel("{cccccc}Iveþimas á kalëjimà.", 0xAAAAFFFF, -14.2050,-270.4685,5.4730, 20, 0, 1); //Miesteliø - SWAT iveþimas JAIL.
	Create3DTextLabel("{ffffff}Treniruoèiø pagydymas.", 0xFFFFFFFF, 22.4775,2537.2241,16.9920, 20, 0, 1); // Miesteliø - Treniruoèiø pagydymo uþraðas.
	
	Create3DTextLabel("{cccccc}Russian pasigydimas", 0xAAAAFFFF, -297.4066,1766.3574,42.9920, 20, 0, 1); // Russian pasigydimas.
	Create3DTextLabel("{cccccc}Yakuza pasigydimas", 0xAAAAFFFF, -691.9414,937.3691,13.5878, 20, 0, 1); // Yakuza pasigydimas.
	
	//Miesteliø - Naujokø pasigydymas.
	Create3DTextLabel("{FFFFFF}Nemokamas\npasigydymas naujokams\niki {ff9000}3-iø {FFFFFF}valandø praþaidimo.", 0xAAAAFFFF, 2204.9048,77.5767,28.2359, 20, 0, 1); // Miesteliø - Prisijungimas .
	Create3DTextLabel("{FFFFFF}Nemokamas\npasigydymas naujokams\niki {ff9000}3-iø {FFFFFF}valandø praþaidimo.", 0xAAAAFFFF, 2302.6746,-12.9446,26.4844, 20, 0, 1); // Miesteliø - Bankas .
	Create3DTextLabel("{FFFFFF}Nemokamas\npasigydymas naujokams\niki {ff9000}3-iø {FFFFFF}valandø praþaidimo.", 0xAAAAFFFF, 2372.8174,240.8657,26.5245, 20, 0, 1); // Miesteliø - Maðinø turgus .
	
	//Miesteliø - Bakeliø pirkimas .
	//Create3DTextLabel("{cccccc}Bendzino bakelio pirkimas.", 0xAAAAFFFF, 661.0267,-573.2850,16.3359, 10, 0, 1); // Miesteliø - Bakelis prie parkelio .
	Create3DTextLabel("{cccccc}Bendzino bakelio pirkimas.", 0xAAAAFFFF, 2460.9280,-42.5858,26.5090, 20, 0, 1); // Bakelis pagr miestelyje .
	Create3DTextLabel("{cccccc}Bendzino bakelio pirkimas.", 0xAAAAFFFF, 1383.1125,465.2359,20.1960, 20, 0, 1); // Bakelis prie mediku .
	
	//Miesteliø - Draudimas .
	Create3DTextLabel("{cccccc}Þaidëjo draudimas.", 0xAAAAFFFF, -2161.1558,640.3588,1052.3817, 10, 0, 1); // Miesteliø - Draudimas prie AFK zonos .

	//VISI NAUJI
	Create3DTextLabel("{cccccc}Radistø iëjimas á virðu", 0xAAAAFFFF, 299.6404,-182.9488,1.4100, 10, 0, 1); //Radistø iëjimas.
	Create3DTextLabel("{cccccc}Radistø iëjimas á apaèia", 0xAAAAFFFF, 302.0093,-192.0529,5.9832, 10, 0, 1); //Radistø iðëjimas.
	
	//Miesteliø - Vartø informacija.
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 1337.3317,739.9038,10.9349, 10, 0, 1); // Fûristø Vartai.
	Create3DTextLabel("{cccccc}Norëdami atidaryti garaþà spauskite {FFFFFF}Y", 0xAAAAFFFF, 2776.7053,913.1964,10.7629, 10, 0, 1); // Fûristø pasikrovimas .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 1919.5710,623.7287,10.8203, 10, 0, 1); // Baikeriø .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 1880.9055,623.7488,10.8203, 10, 0, 1); // Baikeriø 2 .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -76.0559,-352.0140,1.4297, 10, 0, 1); // SWAT .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 892.8012,372.1730,20.6196, 10, 0, 1); // Dyleriø .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 100.02937, -130.45940, 2.78894, 10, 0, 1); // KMA .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -310.6388,1735.9178,42.9803, 10, 0, 1); // Russian .
	Create3DTextLabel("{cccccc}Norëdami atidaryti angaro vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -293.4857,1762.5532,42.9920, 10, 0, 1); // Russian angaras .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -719.3294,1001.3707,12.1328, 10, 0, 1); // Yakuza .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -723.9831,901.5597,12.2363, 10, 0, 1); // Yakuza 2 .
	Create3DTextLabel("{cccccc}Norëdami atidaryti angaro vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -695.9308,966.8018,12.2873, 10, 0, 1); // Yakuza angaras .
	
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -7.9585,2509.0908,16.9920, 10, 0, 1); // Treniruoèiø vartai 1 .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -7.9372,2501.1208,16.9920, 10, 0, 1); // Treniruoèiø vartai 2 .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 54.5127,2500.8413,16.9913, 10, 0, 1); // Treniruoèiø vartai 3 .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 54.5469,2509.6094,16.9853, 10, 0, 1); // Treniruoèiø vartai 4 .
	Create3DTextLabel("{cccccc}Norëdami atidaryti garaþo vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 15.7281,2527.8101,16.9920, 10, 0, 1); // Treniruoèiø garaþo vartai .
	Create3DTextLabel("{cccccc}Norëdami atidaryti garaþo vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 6.0641,2527.8079,16.9920, 10, 0, 1); // Treniruoèiø garaþo vartai .
	
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -1515.9653,2541.8220,56.7767, 10, 0, 1); // Klubas .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -503.6359,2592.8958,53.4695, 10, 0, 1); // Klubas 2 .
	Create3DTextLabel("{cccccc}Norëdami atidaryti angaro vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, -523.6057,2572.0293,53.6410, 10, 0, 1); // Klubo 2 angaras .
	
	//Poþeminiø garaþø tekstai .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 2237.2134, 2452.8745, 9.6747, 10, 0, 1); // Miesteliø - Armijos garaþo ávaþevimas .
	Create3DTextLabel("{cccccc}Norëdami atidaryti vartus spauskite {FFFFFF}Y", 0xAAAAFFFF, 2334.86279, 2443.65454, 4.63320, 10, 0, 1); // armijosvartai kiti
	
	//Gerimø tekstas .
	Create3DTextLabel("{cccccc}Alkoholiniai gerimai", 0xAAAAFFFF, 499.5356,-20.8510,1000.6797, 10, 0, 1); // Gerimai klube .
	
	//Baþnyèioje melsti .
	Create3DTextLabel("{cccccc}Pasimelskite /melstis", 0xAAAAFFFF, 369.0423,2323.9753,1890.6047, 10, 0, 1); // Baþnyèia .
	
	//Miesteliø - Maðinø pirkimas.
	Create3DTextLabel("{ffffff}Maðinos pirkimas.", 0xAAAAFFFF, 2374.3208,244.3536,26.5245, 10, 0, 1);
	
	//Kazino
	Create3DTextLabel("{cccccc}Þetonø kasa\nGalimybë nusipirkti tik {FF0000}1000 {cccccc}þetonø\nPerkant vienu metu!", 0xFFFFFFFF, 1955.7759,1017.9080,992.4688, 20, 0, 1);
	Create3DTextLabel("{cccccc}Þaidimas Sukamas Ratas", 0xFFFFFFFF, 1945.0654,986.5052,992.4688, 20, 0, 1);
	Create3DTextLabel("{cccccc}Þaidimas Sukamas Ratas", 0xFFFFFFFF, 1940.8484,990.9404,992.4609, 20, 0, 1);

	Create3DTextLabel("{ffffff}SweedBank Banko procesai", 0xAAAAFFFF, -560.3005,1797.4349,1393.2939, 10, 0, 1);
	Create3DTextLabel("{ffffff}SweedBank Banko procesai", 0xAAAAFFFF, -555.3147,1792.8966,1393.2959, 10, 0, 1); // Cia gryzti
	Create3DTextLabel("{ffffff}Dviraèiø krovinys\n{FF6600}[LEGALUS]", 0xAAAAFFFF, 711.1776,-571.3199,16.3359, 10, 0, 1); // Furistu kroviniø pasijëjimas
	Create3DTextLabel("{ffffff}Baldø krovinys\n{FF6600}[LEGALUS]", 0xAAAAFFFF, 2187.4338,-2258.3103,13.4498, 10, 0, 1); // Furistu kroviniø pasijëjimas
	Create3DTextLabel("{ffffff}Buitinës technikos krovinys\n{FF6600}[LEGALUS]", 0xAAAAFFFF, 2814.7219,973.4994,10.7500, 10, 0, 1); // Furistu kroviniø pasijëjimas
	Create3DTextLabel("{ffffff}Angliø krovinys\n{FF6600}[LEGALUS]", 0xAAAAFFFF, -1868.4554,-1716.7877,21.7500, 10, 0, 1); // Furistu kroviniø pasijëjimas
	Create3DTextLabel("{ffffff}Þvyro krovinys\n{FF6600}[LEGALUS]", 0xAAAAFFFF, 816.5027,857.0323,12.7891, 10, 0, 1); // Furistu kroviniø pasijëjimas

	//Miesteliø - Degaliniø tekstai.
	//Create3DTextLabel("{ffffff}Degalø uþsipylimas", 0xAAAAFFFF, 653.2474,-570.3127,16.3359, 15, 0, 1);
	//Create3DTextLabel("{ffffff}Degalø uþsipylimas", 0xAAAAFFFF, 653.9706,-561.7726,16.3359, 15, 0, 1);
	Create3DTextLabel("{ffffff}Degalø uþsipylimas", 0xAAAAFFFF, 1378.6530,460.1055,19.9843, 15, 0, 1);
	Create3DTextLabel("{ffffff}Degalø uþsipylimas", 0xAAAAFFFF, 1384.5566,456.8387,19.9617, 15, 0, 1);
	Create3DTextLabel("{ffffff}Degalø uþsipylimas", 0xAAAAFFFF, 1385.6364,459.8454,20.0919, 15, 0, 1);
	Create3DTextLabel("{ffffff}Degalø uþsipylimas", 0xAAAAFFFF, 1379.4141,462.1381,20.0725, 15, 0, 1);
	Create3DTextLabel("{ffffff}Degalø uþsipylimas", 0xAAAAFFFF, 2468.7639,-42.5040,26.4844, 15, 0, 1);
	Create3DTextLabel("{ffffff}Degalø uþsipylimas", 0xAAAAFFFF, 2468.9185,-46.2695,26.4844, 15, 0, 1);
	//Miesteliø - Degaliniø tekstai baigti .
	
	//Miesteliø kita .
	Create3DTextLabel("{cccccc}Ginklø deþë skirta SWAT darbuotojams.", 0xAAAAFFFF, -23.4773,-270.5722,5.4730, 10, 0, 1);
	
	Create3DTextLabel("{cccccc}Ginklinë\nuþlipe èia, galësite pirkti ginklus\narba ginklø licenzijà.", 0xAAAAFFFF, 312.7335,-166.1410,999.6010, 10, 0, 1);
	Create3DTextLabel("{cccccc}Ginklinë\nuþlipe èia, galësite pirkti ginklus\narba ginklø licenzijà.", 0xAAAAFFFF, 295.5064,-38.5146,1001.5156, 10, 0, 1);
    
   	Create3DTextLabel("{ffffff}Áëjimas á draudimà.", 0xAAAAFFFF, 2273.4751,82.4846,26.4844, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið draudimo.", 0xAAAAFFFF, -2158.6250,643.1381,1052.3750, 10, 0, 1);
    
   	Create3DTextLabel("{ffffff}Áëjimas á AFK zonà.", 0xAAAAFFFF, 2236.0371,80.6705,26.7037, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið AFK zonos.", 0xAAAAFFFF, 368.1335,162.2638,1025.7891, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á dylerius.", 0xAAAAFFFF, 916.5095,411.4282,20.6773, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið dyleriø.", 0xAAAAFFFF, 2495.9231, -1692.4346, 1014.7422, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á  Costello  klubà.", 0xAAAAFFFF, -549.9248,2600.4692,54.5311, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið  Costello  klubo.", 0xAAAAFFFF, 235.2636,1186.8289,1080.2578, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á  -PATRIOTAI-  klubà.", 0xAAAAFFFF, -1504.2561,2521.1113,57.6205, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið  -PATRIOTAI-  klubo.", 0xAAAAFFFF, 225.756989, 1240.000000, 1082.149902, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á maximà.", 0xAAAAFFFF, 691.2039,-546.7202,16.3359, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið maximos.", 0xAAAAFFFF, -31.0371,-91.6426,1003.5469, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á daþasvydá.", 0xAAAAFFFF, 279.9146,-220.4906,1.5781, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið daþasvydþio.", 0xAAAAFFFF, 305.9444, -141.9205, 1004.0547, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á stadionà.", 0xAAAAFFFF, 1310.8719,329.3710,19.9141, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið stadiono.", 0xAAAAFFFF, -1462.8198,934.3775,1036.5879, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á picerijà.", 0xAAAAFFFF, 1367.1578,248.4040,19.5669, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið picerijos.", 0xAAAAFFFF, 364.8660,-11.2934,1001.8516, 10, 0, 1);

	Create3DTextLabel("{ffffff}Áëjimas á vyriausybë.", 0xAAAAFFFF, 2379.7959,-94.4758,27.3600, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið vyriausybës.", 0xAAAAFFFF, 390.4159, 173.6984, 1008.3828, 10, 0, 1);

	Create3DTextLabel("{ffffff}Áëjimas á vairavimo mokyklà.", 0xAAAAFFFF, 2424.8264,118.7179,27.2090, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið vairavimo mokyklos.", 0xAAAAFFFF, -2026.9049, -103.6025, 1035.1832, 10, 0, 1);

	Create3DTextLabel("{ffffff}Áëjimas á picerijà.", 0xAAAAFFFF, 2333.3950,75.0822,26.6210, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið picerijos.", 0xAAAAFFFF, 372.4339,-133.2537,1001.4922, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á ginklu parduotuve.", 0xAAAAFFFF, 2333.2307,61.5925,26.7058, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið ginklu parduotuves.", 0xAAAAFFFF, 316.3654, -169.8353, 999.6010, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á kovos menø salë.", 0xAAAAFFFF, 2335.0168,51.7354,26.4833, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið kovos menø salës.", 0xAAAAFFFF, 774.213989,-48.924297,1000.585937, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á skelbimø kontorà", 0xAAAAFFFF, 56.8410,-183.9638,2.1159, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið skelbimu kontoros.", 0xAAAAFFFF, 2324.5198,-1148.9292,1050.7101, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á Tech. parduotuvë.", 0xAAAAFFFF, 2333.5212,-67.3131,26.4844, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið Tech. parduotuvës.", 0xAAAAFFFF, -2240.4685, 137.0604, 1035.4140, 10, 0, 1);

	Create3DTextLabel("{ffffff}Áëjimas á drabuþiø parduotuvë.", 0xAAAAFFFF, 2334.7493,-48.8737,26.4844, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið drabuþiø parduotuvës.", 0xAAAAFFFF, 204.2980,-168.6171,1000.5234, 10, 0, 1);

	Create3DTextLabel("{ffffff}Áëjimas á maisto parduotuvë.", 0xAAAAFFFF, 2331.2966,-37.4105,26.4844, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið maisto parduotuvës.", 0xAAAAFFFF, -27.3513,-57.7793,1003.5469, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á vieðbutá.", 0xAAAAFFFF, 1372.0767,335.6758,19.6959, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið vieðbuèio.", 0xAAAAFFFF, 2215.2205,-1150.5592,1025.7969, 10, 0, 1);

	Create3DTextLabel("{ffffff}Áëjimas á kazino.", 0xAAAAFFFF, 2277.7988,50.8848,26.4844, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið kazino.", 0xAAAAFFFF, 2018.7074,1017.8577,996.8750, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á maximà.", 0xAAAAFFFF, 2249.6992,52.7687,26.6671, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið maximà.", 0xAAAAFFFF, -27.3600,-31.3554,1003.5573, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á loterijà.", 0xAAAAFFFF, 2302.9890,56.5141,26.4844, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið loterijà.", 0xAAAAFFFF, 834.3198,7.5041,1004.1870, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á klubà.", 0xAAAAFFFF, 681.5742,-473.9514,16.5363, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið klubà.", 0xAAAAFFFF, 493.3350, -24.6613, 1000.6797, 10, 0, 1);
    
   	Create3DTextLabel("{ffffff}Áëjimas á baikeriø barà.", 0xAAAAFFFF, 1900.6628,579.4955,11.5907, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið baikeriø baro.", 0xAAAAFFFF, 501.9164,-67.6874,998.7578, 10, 0, 1);
    
   	Create3DTextLabel("{ffffff}Áëjimas á narus.", 0xAAAAFFFF, 2103.0708,-103.9459,2.2709, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið narø.", 0xAAAAFFFF, 2027.3815,-240.7831,1.8000, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á baþnyèia.", 0xAAAAFFFF, 2256.7168,-44.4241,26.6834, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið baþnyèios.", 0xAAAAFFFF, 387.7231,2324.3315,1889.5764, 10, 0, 1);
    
   	Create3DTextLabel("{ffffff}Áëjimas á bankà.", 0xAAAAFFFF, 2303.2166,-16.1198,26.4844, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið banko.", 0xAAAAFFFF, -554.7779,1783.6420,1392.4731, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á Policijos Departamentà.", 0xAAAAFFFF, 636.7574,-510.2802,16.3734, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið Policijos Departamento.", 0xAAAAFFFF, 246.3073,107.6684,1003.2188, 10, 0, 1);
	
 
	Create3DTextLabel("{ffffff}Áëjimas á Kalëjimo vidø.", 0xAAAAFFFF, 2787.0681,2745.8838,14.2870, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið Kalëjimo vidaus.", 0xAAAAFFFF,1779.3751,-1576.5115,1734.9430, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á Restoranà Medþiotojø namai", 0xAAAAFFFF, 1393.9468,400.9470,19.8157, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið Restorano Medþiotojø namai", 0xAAAAFFFF, 536.2401,1562.6497,1066.0649, 10, 0, 1);
	
	Create3DTextLabel("{ffffff}Áëjimas á Bokso salæ", 0xAAAAFFFF, 2334.5437,42.9787,26.4840, 10, 0, 1);
	Create3DTextLabel("{ffffff}Iðëjimas ið Bokso salæs", 0xAAAAFFFF, 1396.6243,1786.4672,4003.4961, 10, 0, 1);
	
	Create3DTextLabel("{cccccc}Ginklø deþë skirta Russian mafijai.", 0xAAAAFFFF, -288.8643,1783.5653,42.9920, 10, 0, 1);
	Create3DTextLabel("{cccccc}Ginklø deþë skirta Yakuza mafijai.", 0xAAAAFFFF, -684.6509,939.6206,13.5878, 10, 0, 1);
	
	//Ðratasvaidþio.
	Create3DTextLabel("{ffffff}Informacija apie daþasvaidá", 0xFFFFFF,313.9766,-139.1297,1004.0625, 10, 0, 1);
	Create3DTextLabel("{ffffff}Prisijungimas á daþasvaidá", 0xFFFFFF,315.7141,-143.3052,999.6016, 10, 0, 1);
	Create3DTextLabel("{ffffff}Palikti daþasvaidá", 0xFFFFFF,1746.9313, -1743.6998, 52.4688, 10, 0, 1);
	Create3DTextLabel("{ffffff}Palikti daþasvaidá", 0xFFFFFF,1808.2743, -1805.9674, 52.4688, 10, 0, 1);
	
//==========================Miesteliø Naujokø namø informacija===============

	//Miesteliø - kioskø uþraðai.
	Create3DTextLabel("{ffffff}Kioskas\n{cccccc}Lietuvos spauda", 0xAAAAFFFF, 1350.0693,211.7988,19.5469, 15, 0, 1); // Miesteliø - Kioskas prie medikø .
	Create3DTextLabel("{ffffff}Kioskas\n{cccccc}Lietuvos spauda", 0xAAAAFFFF, 2416.0637,85.5478,26.4721, 15, 0, 1); // Miesteliø - Kioskas prie vairavimo mokyklos .
	
	//Miesteliø bankomatø uþraðai.
	Create3DTextLabel("{cccccc}Bankomatas", 0xAAAAFFFF, 2302.7566,-6.7100,26.4844, 15, 0, 1);
	Create3DTextLabel("{cccccc}Bankomatas", 0xAAAAFFFF, 660.6660,-555.2374,16.3359, 15, 0, 1);
	Create3DTextLabel("{cccccc}Bankomatas", 0xAAAAFFFF, 291.7873,-193.3116,1.5781, 15, 0, 1);
	Create3DTextLabel("{cccccc}Bankomatas", 0xAAAAFFFF, 1342.1290,215.9043,19.5600, 15, 0, 1);
	
	//Miesteliø - Teorija, Baudos sumokëjimas, Investicijos.
	Create3DTextLabel("{ffffff}Teorija", 0xAAAAFFFF, -2032.9570,-117.5185,1035.1719, 10, 0, 1);
	Create3DTextLabel("{cccccc}Baudos sumokëjimas", 0xAAAAFFFF, 244.4074,118.4234,1003.2188, 10, 0, 1);
	Create3DTextLabel("{ffffff}Investicijos", 0xAAAAFFFF, 358.3417,163.2180,1008.3828, 10, 0, 1);
	Create3DTextLabel("{ffffff}Grybø supirkimas", 0xAAAAFFFF, 1302.6193,361.3318,19.6882, 10, 0, 1);

	//Darbø
	Create3DTextLabel("{009900}Karininkas{6EF83C} nuo 50.000 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 2273.7136,2458.9038,10.8270, 10, 0, 1);
	Create3DTextLabel("{009900}Policininkai{6EF83C} nuo 9.000 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 248.4808,118.4805,1003.2188, 20, 0, 1);
	Create3DTextLabel("{009900}Mechanikai{6EF83C} nuo 6.000 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 83.9367,-107.8555,1.6283, 20, 0, 1);
	Create3DTextLabel("{009900}Taksistai{6EF83C} nuo 6000 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 2193.7358,-88.4829,26.4764, 10, 0, 1);
	Create3DTextLabel("{009900}Medikai{6EF83C} nuo 4.500 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 1240.4500,309.3883,20.1359, 10, 0, 1);
	Create3DTextLabel("{009900}Dyleriai{6EF83C} nuo 8.000 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 898.7261,404.5733,20.7606, 10, 0, 1);
	Create3DTextLabel("{009900}Radistas{6EF83C} nuo 6.000 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 319.8690,-185.7491,1.4100, 10, 0, 1);
	Create3DTextLabel("{009900}Fûristai{6EF83C} nuo 10.000 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 1291.3600,717.1981,10.9100, 10, 0, 1);
	Create3DTextLabel("{009900}Picø iðveþiotojai{6EF83C} nuo 70 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 1357.8701,245.9817,19.5669, 10, 0, 1);
	Create3DTextLabel("{009900}Medkirèiai{6EF83C} nuo 1.000 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 1945.7196,162.8991,37.3945, 10, 0, 1);
	Create3DTextLabel("{009900}Narai{6EF83C} nuo 500 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 2156.6917,-97.9000,2.7706, 10, 0, 1);
	Create3DTextLabel("{009900}Kunigas{6EF83C} nuo 200 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 2259.6909,-45.1281,26.4844, 10, 0, 1);
	Create3DTextLabel("{009900}Valytojai{6EF83C} nuo 50 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 321.1124,-44.7680,1.5900, 10, 0, 1);
	Create3DTextLabel("{009900}Gaisrininkas{6EF83C} nuo 1200 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 670.4323,-548.6096,16.3382, 10, 0, 1);
	Create3DTextLabel("{009900}Baikeris{6EF83C} nuo 6.000 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 1889.2031,624.9097,10.8203, 10, 0, 1);
	Create3DTextLabel("{009900}Limuzinininkas{6EF83C} nuo 450 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, 208.1293,-56.4046,1.6119, 10, 0, 1);
	Create3DTextLabel("{009900}SWAT{6EF83C} nuo 25.000 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, -49.6664,-269.5458,6.6332, 10, 0, 1);
	Create3DTextLabel("{009900}Russian Mafija{6EF83C} nuo 0 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, -328.5159,1768.3789,43.9131, 10, 0, 1);
	Create3DTextLabel("{009900}Yakuza Mafija{6EF83C} nuo 0 XP\n\n{cccccc}Sunaikinti darbo transportà - {66cc66}/sunaikinti", 0xAAAAFFFF, -691.1847,941.8688,13.5878, 10, 0, 1);
	
	//Miesteliø - kita.
	Create3DTextLabel("{ffffff}Kroviniø pasijëmimas\n{FF6600}[LEGALUS/NELEGALUS]", 0xAAAAFFFF, 1298.8998,718.3608,10.9100, 10, 0, 1); //Miesteliø - Fûristø pasikrovimas.
    Create3DTextLabel("{FFFFFF}Dyleriø ginklø paketas {009999}Naujokui{FFFFFF}\n{cccccc}NEMOKAMA !\nPakete: {00B366}9MM, SG", 0xAAAAFFFF, 2493.0811,-1709.5946,1014.7422, 10, 0, 1);
    Create3DTextLabel("{FFFFFF}Dyleriø ginklø paketas {009999}Apsipratusiam dyleriui{FFFFFF}\n{cccccc}NEMOKAMA !\nPakete: {00B366}DEAGLE, SMG", 0xAAAAFFFF,2491.2964,-1700.0140,1014.7464, 10, 0, 1);
    Create3DTextLabel("{FFFFFF}Dyleriø ginklø paketas {009999}Senbûviui{FFFFFF}\n{cccccc}NEMOKAMA !\nPakete: {00B366}DEAGLE, SNIPER, AK47", 0xAAAAFFFF, 2499.1484,-1710.2549,1014.7422, 10, 0, 1);
    Create3DTextLabel("{ffffff}Dyleriø pagydymas\n{cccccc}Nemokamas!", 0xAAAAFFFF, 1145.8104,2090.7869,10.8203, 10, 0, 1);
    Create3DTextLabel("{cccccc}Skelbimø kontoros informacijà", 0xAAAAFFFF, 2329.1726,-1143.2626,1050.4922, 10, 0, 1); // Skelbimø Kontoros informacijà.
	
	//Miesteliø - Þvejyba.
    Create3DTextLabel("{ffffff}Þvejybvietës kioskas 'Reikmenys'", 0xAAAAFFFF, 1457.3423,-207.2608,10.2669, 10, 0, 1);
	Create3DTextLabel("{66FF66}Þvejoti galite èia: /zvejoti", 0xAAAAFFFF, 1431.1145,-254.6659,6.2645,10, 0, 1);
	Create3DTextLabel("{66FF66}Þvejoti galite èia: /zvejoti", 0xAAAAFFFF, 1421.4216,-254.8006,6.2645,10, 0, 1);
	Create3DTextLabel("{66FF66}Þvejoti galite èia: /zvejoti", 0xAAAAFFFF, 1413.1129,-254.7549,6.2645,10, 0, 1);
	Create3DTextLabel("{66FF66}Þvejoti galite èia: /zvejoti", 0xAAAAFFFF, 1407.5969,-254.7410,6.2645,10, 0, 1);
	Create3DTextLabel("{66FF66}Þvejoti galite èia: /zvejoti", 0xAAAAFFFF, 1398.8552,-254.7296,6.2445,10, 0, 1);
	Create3DTextLabel("{66FF66}Þvejoti galite èia: /zvejoti", 0xAAAAFFFF, 1393.2410,-254.4523,6.2445,10, 0, 1);
	
	//Miesteliø - Greièio matuokliai.
	SukuriameMatuoklius(-45.4220009,-208.1499939,0.7000000,0.0000000,0.0000000,254.0000000);
	SukuriameMatuoklius(238.1889954,-31.7919998,0.5780000,0.0000000,0.0000000,351.9984131);
	SukuriameMatuoklius(609.3229980,-421.7030029,17.9139996,0.0000000,0.0000000,255.9964600);
	SukuriameMatuoklius(879.6562500,-565.4863281,18.4860001,0.0000000,0.0000000,281.9915771);
	SukuriameMatuoklius(676.1539917,-637.9180298,15.3360004,0.0000000,0.0000000,167.9924316);
	SukuriameMatuoklius(1278.1999512,210.4570007,18.5550003,0.0000000,0.0000000,327.9919434);
	SukuriameMatuoklius(2490.4929199,36.4609985,25.4839993,0.0000000,0.0000000,267.9913330);
	SukuriameMatuoklius(1362.9843750,222.4619141,18.5550003,0.0000000,0.0000000,53.9868164);
	SukuriameMatuoklius(2338.6120605,161.2530060,25.4839993,0.0000000,0.0000000,177.9895020);
	SukuriameMatuoklius(2349.1962891,35.6718750,25.4839993,0.0000000,0.0000000,357.9895020);
	
	//Miesteliø - Dyleriai.
	Create3DTextLabel("{ffffff}Narkotikus skinti galite: \n{FF6600}/skinti", 0xFFFFFF,2492.4163,-1712.0000,1014.7422, 20, 0, 1);
	Create3DTextLabel("{ffffff}Narkotikus skinti galite: \n{FF6600}/skinti", 0xFFFFFF,2497.3657,-1703.6094,1014.7422, 20, 0, 1);
	
	//Miesteliø Stendø pradþia .
	
	new vyriausybe = CreateObject(19353, 56.9186, -182.9692, 4.2745, -0.0000, 1.1999, -89.1365);
	SetObjectMaterialText(vyriausybe, "Skelbimu kontora", 0, 90, "Arial", 35, 1, -16730675, 0, 1);
	
	new vm = CreateObject(19353, 2425.5244, 118.7068, 29.7820, 0.1000, 0.9000, -0.8857);
	SetObjectMaterialText(vm, "Vairavimo mokykla", 0, 130, "Arial", 40, 1, -65281, 0, 1);

	new parduodamu = CreateObject(19353, 699.2584, -673.4193, 18.7829, -1.2000, -4.6000, 89.2418);
	SetObjectMaterialText(parduodamu, "Parduodamø automobiliø aikðtelë", 0, 130, "Arial", 35, 1, -8092540, 0, 1);

	new ligonine = CreateObject(19353, 1223.7584, 297.2716, 21.7546, -0.7000, -0.1999, 153.9691);
	SetObjectMaterialText(ligonine, "Ligoninë", 0, 90, "Arial", 70, 1, -1, 0, 1);

	new sekmes = CreateObject(19353, 2183.9873, 74.7142, 28.2254, 0.3999, 1.5999, 179.4694);
	SetObjectMaterialText(sekmes, "Sëkmës þaidime!", 0, 100, "Arial", 31, 1, -256, 0, 1);

	//new rekordas = CreateObject(19353, 2183.9904, 67.2388, 28.1698, -0.1999, -1.3000, 179.6427);
	//SetObjectMaterialText(rekordas, "Serverio rekordas: %s", 0, 100, "Arial", 28, 1, -256, 0, 1);

	new masinuturgus = CreateObject(19353, 2373.9860, 244.4620, 30.1945, 0.8999, -0.1999, 179.8706);
	SetObjectMaterialText(masinuturgus, "Maðinø Turgus", 0, 90, "Arial", 35, 1, -16468988, 0, 1);
	
	//Miesteliø - 3DTEXT LABEL ir stendø pabaiga.

	//Texdrawai
	
	SEKIMAS = TextDrawCreate( 14, 150, "Beglys uz:~n~~n~" );
	TextDrawUseBox(SEKIMAS,1);//
	TextDrawBoxColor(SEKIMAS,0x00000066);//
	TextDrawTextSize(SEKIMAS,159, 81);//
	TextDrawBackgroundColor(SEKIMAS,0x000000ff);
	TextDrawFont(SEKIMAS,2);
	TextDrawLetterSize(SEKIMAS,0.33, 1);
	TextDrawColor(SEKIMAS,0xffffffff );
	TextDrawSetOutline(SEKIMAS,1);
	TextDrawSetProportional(SEKIMAS,1);
	TextDrawSetShadow(SEKIMAS,1);
	//Daþasvaidþio TD
	PBTD7 = TextDrawCreate(156.000000, 200.000000, "     ");
	TextDrawBackgroundColor(PBTD7, 255);
	TextDrawFont(PBTD7, 0);
	TextDrawLetterSize(PBTD7, 1.020000, 2.900000);
	TextDrawColor(PBTD7, 85);
	TextDrawSetOutline(PBTD7, 0);
	TextDrawSetProportional(PBTD7, 1);
	TextDrawSetShadow(PBTD7, 1);
	TextDrawUseBox(PBTD7, 1);
	TextDrawBoxColor(PBTD7, 112);
	TextDrawTextSize(PBTD7, 10.000000, 0.000000);
	TextDrawSetSelectable(PBTD7, 0);

	PBTD8 = TextDrawCreate(13.000000, 201.000000, "~w~Komandu statistikai:");
	TextDrawBackgroundColor(PBTD8, 255);
	TextDrawFont(PBTD8, 1);
	TextDrawLetterSize(PBTD8, 0.200000, 1.000000);
	TextDrawColor(PBTD8, -1);
	TextDrawSetOutline(PBTD8, 1);
	TextDrawSetProportional(PBTD8, 1);
	TextDrawSetSelectable(PBTD8, 0);

	PBTD9 = TextDrawCreate(13.000000, 211.000000, "~w~Zaidejai:");
	TextDrawBackgroundColor(PBTD9, 255);
	TextDrawFont(PBTD9, 2);
	TextDrawLetterSize(PBTD9, 0.150000, 1.000000);
	TextDrawColor(PBTD9, -1);
	TextDrawSetOutline(PBTD9, 0);
	TextDrawSetProportional(PBTD9, 1);
	TextDrawSetShadow(PBTD9, 1);
	TextDrawSetSelectable(PBTD9, 0);

	PBTD10 = TextDrawCreate(13.000000, 221.000000, "~w~Nuzudymai:");
	TextDrawBackgroundColor(PBTD10, 255);
	TextDrawFont(PBTD10, 2);
	TextDrawLetterSize(PBTD10, 0.150000, 1.000000);
	TextDrawColor(PBTD10, -1);
	TextDrawSetOutline(PBTD10, 0);
	TextDrawSetProportional(PBTD10, 1);
	TextDrawSetShadow(PBTD10, 1);
	TextDrawSetSelectable(PBTD10, 0);

	PBTD11 = TextDrawCreate(13.000000, 231.000000, "~w~Mirtys:");
	TextDrawBackgroundColor(PBTD11, 255);
	TextDrawFont(PBTD11, 2);
	TextDrawLetterSize(PBTD11, 0.150000, 1.000000);
	TextDrawColor(PBTD11, -1);
	TextDrawSetOutline(PBTD11, 0);
	TextDrawSetProportional(PBTD11, 1);
	TextDrawSetShadow(PBTD11, 1);
	TextDrawSetSelectable(PBTD11, 0);

	PBTD12 = TextDrawCreate(13.000000, 294.000000, "~p~Naujas raundas po:");
	TextDrawBackgroundColor(PBTD12, 255);
	TextDrawFont(PBTD12, 2);
	TextDrawLetterSize(PBTD12, 0.220000, 1.100000);
	TextDrawColor(PBTD12, -16776961);
	TextDrawSetOutline(PBTD12, 1);
	TextDrawSetProportional(PBTD12, 1);
	TextDrawSetSelectable(PBTD12, 0);

	PBTD13 = TextDrawCreate(13.000000, 251.000000, "~w~Tavo statistika:");
	TextDrawBackgroundColor(PBTD13, 255);
	TextDrawFont(PBTD13, 1);
	TextDrawLetterSize(PBTD13, 0.200000, 1.000000);
	TextDrawColor(PBTD13, -1);
	TextDrawSetOutline(PBTD13, 1);
	TextDrawSetProportional(PBTD13, 1);
	TextDrawSetSelectable(PBTD13, 0);

	PBTD14 = TextDrawCreate(13.000000, 262.000000, "~w~Nuzudyta:");
	TextDrawBackgroundColor(PBTD14, 255);
	TextDrawFont(PBTD14, 2);
	TextDrawLetterSize(PBTD14, 0.150000, 1.000000);
	TextDrawColor(PBTD14, -1);
	TextDrawSetOutline(PBTD14, 0);
	TextDrawSetProportional(PBTD14, 1);
	TextDrawSetShadow(PBTD14, 1);
	TextDrawSetSelectable(PBTD14, 0);

	PBTD15 = TextDrawCreate(13.000000, 272.000000, "~w~Mirta:");
	TextDrawBackgroundColor(PBTD15, 255);
	TextDrawFont(PBTD15, 2);
	TextDrawLetterSize(PBTD15, 0.150000, 1.000000);
	TextDrawColor(PBTD15, -1);
	TextDrawSetOutline(PBTD15, 0);
	TextDrawSetProportional(PBTD15, 1);
	TextDrawSetShadow(PBTD15, 1);
	TextDrawSetSelectable(PBTD15, 0);

	PBTD16 = TextDrawCreate(13.000000, 282.000000, "~w~Taskai:");
	TextDrawBackgroundColor(PBTD16, 255);
	TextDrawFont(PBTD16, 2);
	TextDrawLetterSize(PBTD16, 0.150000, 1.000000);
	TextDrawColor(PBTD16, -1);
	TextDrawSetOutline(PBTD16, 0);
	TextDrawSetProportional(PBTD16, 1);
	TextDrawSetShadow(PBTD16, 1);
	TextDrawSetSelectable(PBTD16, 0);

	//Laikrodzio texdrawas
	datike = TextDrawCreate(547.000000, 29.000000, "2019/01/01");
	TextDrawBackgroundColor(datike, 255);
	TextDrawFont(datike, 3);
	TextDrawLetterSize(datike, 0.310000, 1.400000);
	TextDrawColor(datike, -1);
	TextDrawSetOutline(datike, 1);
	TextDrawSetProportional(datike, 1);

	laikiux = TextDrawCreate(566.000000, 13.000000, "12:00");
	TextDrawBackgroundColor(laikiux, 255);
	TextDrawFont(laikiux, 3);
	TextDrawLetterSize(laikiux, 0.419999, 1.900000);
	TextDrawColor(laikiux, -1);
	TextDrawSetOutline(laikiux, 1);
	TextDrawSetProportional(laikiux, 1);
	
	Burger = TextDrawCreate(609.000000, 132.000000, "BOX");
	TextDrawBackgroundColor(Burger, 255);
	TextDrawFont(Burger, 1);
	TextDrawLetterSize(Burger, 0.000000, 1.450000);
	TextDrawColor(Burger, -1);
	TextDrawSetOutline(Burger, 0);
	TextDrawSetProportional(Burger, 1);
	TextDrawSetShadow(Burger, 1);
	TextDrawUseBox(Burger, 1);
	TextDrawBoxColor(Burger, 117);
	TextDrawTextSize(Burger, 495.000000, 0.000000);
	TextDrawSetSelectable(Burger, 0);

	Burger1 = TextDrawCreate(499.000000, 132.500000, "hud:radar_burgerShot");
	TextDrawBackgroundColor(Burger1, 255);
	TextDrawFont(Burger1, 4);
	TextDrawLetterSize(Burger1, 0.500000, 1.000000);
	TextDrawColor(Burger1, -1);
	TextDrawSetOutline(Burger1, 0);
	TextDrawSetProportional(Burger1, 1);
	TextDrawSetShadow(Burger1, 1);
	TextDrawUseBox(Burger1, 1);
	TextDrawBoxColor(Burger1, 255);
	TextDrawTextSize(Burger1, 15.000000, 12.000000);
	TextDrawSetSelectable(Burger1, 0);

	Burger2 = TextDrawCreate(590.000000, 132.500000, "hud:radar_burgerShot");
	TextDrawBackgroundColor(Burger2, 255);
	TextDrawFont(Burger2, 4);
	TextDrawLetterSize(Burger2, 0.500000, 1.000000);
	TextDrawColor(Burger2, -1);
	TextDrawSetOutline(Burger2, 0);
	TextDrawSetProportional(Burger2, 1);
	TextDrawSetShadow(Burger2, 1);
	TextDrawUseBox(Burger2, 1);
	TextDrawBoxColor(Burger2, 255);
	TextDrawTextSize(Burger2, 15.000000, 12.000000);
	TextDrawSetSelectable(Burger2, 0);
	
 	IeskomumasTD1 = TextDrawCreate(497.000000, 102.000000, "~y~]");
    TextDrawBackgroundColor(IeskomumasTD1, 255);
    TextDrawFont(IeskomumasTD1, 2);
    TextDrawLetterSize(IeskomumasTD1, 0.579999, 2.000000);
    TextDrawColor(IeskomumasTD1, -1);
    TextDrawSetOutline(IeskomumasTD1, 1);
    TextDrawSetProportional(IeskomumasTD1, 1);
    TextDrawSetSelectable(IeskomumasTD1, 0);

	for(new p = 0; p < MAX_PLAYERS; p++)
	{
//Alkis
		AlkTD[ p ] = TextDrawCreate(552.000000, 133.000000, "~p~ALKIS: ~p~27%");
		TextDrawAlignment(AlkTD[ p ], 2);
		TextDrawBackgroundColor(AlkTD[ p ], 255);
		TextDrawFont(AlkTD[ p ], 2);
		TextDrawLetterSize(AlkTD[ p ], 0.280000, 1.100000);
		TextDrawColor(AlkTD[ p ], -1);
		TextDrawSetOutline(AlkTD[ p ], 1);
		TextDrawSetProportional(AlkTD[ p ], 1);
		TextDrawSetSelectable(AlkTD[ p ], 0);

//Daþasvaidþio TD
        PBTD0[p] = TextDrawCreate(50.000000, 262.000000, "~r~500");
		TextDrawBackgroundColor(PBTD0[p], 255);
		TextDrawFont(PBTD0[p], 2);
		TextDrawLetterSize(PBTD0[p], 0.140000, 1.000000);
		TextDrawColor(PBTD0[p], -1);
		TextDrawSetOutline(PBTD0[p], 0);
		TextDrawSetProportional(PBTD0[p], 1);
		TextDrawSetShadow(PBTD0[p], 1);
		TextDrawSetSelectable(PBTD0[p], 0);

		PBTD1[p] = TextDrawCreate(36.000000, 272.000000, "~r~668");
		TextDrawBackgroundColor(PBTD1[p], 255);
		TextDrawFont(PBTD1[p], 2);
		TextDrawLetterSize(PBTD1[p], 0.140000, 1.000000);
		TextDrawColor(PBTD1[p], -1);
		TextDrawSetOutline(PBTD1[p], 0);
		TextDrawSetProportional(PBTD1[p], 1);
		TextDrawSetShadow(PBTD1[p], 1);
		TextDrawSetSelectable(PBTD1[p], 0);

		PBTD2[p] = TextDrawCreate(40.000000, 282.000000, "~r~10000");
		TextDrawBackgroundColor(PBTD2[p], 255);
		TextDrawFont(PBTD2[p], 2);
		TextDrawLetterSize(PBTD2[p], 0.140000, 1.000000);
		TextDrawColor(PBTD2[p], -1);
		TextDrawSetOutline(PBTD2[p], 0);
		TextDrawSetProportional(PBTD2[p], 1);
		TextDrawSetShadow(PBTD2[p], 1);
		TextDrawSetSelectable(PBTD2[p], 0);

		PBTD3[p] = TextDrawCreate(45.000000, 211.000000, "~y~25~w~/~g~25");
		TextDrawBackgroundColor(PBTD3[p], 255);
		TextDrawFont(PBTD3[p], 2);
		TextDrawLetterSize(PBTD3[p], 0.140000, 1.000000);
		TextDrawColor(PBTD3[p], -1);
		TextDrawSetOutline(PBTD3[p], 0);
		TextDrawSetProportional(PBTD3[p], 1);
		TextDrawSetShadow(PBTD3[p], 1);
		TextDrawSetSelectable(PBTD3[p], 0);

		PBTD4[p] = TextDrawCreate(52.000000, 221.000000, "~y~1000~w~/~g~1000");
		TextDrawBackgroundColor(PBTD4[p], 255);
		TextDrawFont(PBTD4[p], 2);
		TextDrawLetterSize(PBTD4[p], 0.140000, 1.000000);
		TextDrawColor(PBTD4[p], -1);
		TextDrawSetOutline(PBTD4[p], 0);
		TextDrawSetProportional(PBTD4[p], 1);
		TextDrawSetShadow(PBTD4[p], 1);
		TextDrawSetSelectable(PBTD4[p], 0);

		PBTD5[p] = TextDrawCreate(40.000000, 231.000000, "~y~2000~w~/~g~2000");
		TextDrawBackgroundColor(PBTD5[p], 255);
		TextDrawFont(PBTD5[p], 2);
		TextDrawLetterSize(PBTD5[p], 0.140000, 1.000000);
		TextDrawColor(PBTD5[p], -1);
		TextDrawSetOutline(PBTD5[p], 0);
		TextDrawSetProportional(PBTD5[p], 1);
		TextDrawSetShadow(PBTD5[p], 1);
		TextDrawSetSelectable(PBTD5[p], 0);

		PBTD6[p] = TextDrawCreate(117.000000, 295.000000, "~r~15 ~p~min");
		TextDrawBackgroundColor(PBTD6[p], 255);
		TextDrawFont(PBTD6[p], 2);
		TextDrawLetterSize(PBTD6[p], 0.140000, 1.000000);
		TextDrawColor(PBTD6[p], -1);
		TextDrawSetOutline(PBTD6[p], 0);
		TextDrawSetProportional(PBTD6[p], 1);
		TextDrawSetShadow(PBTD6[p], 1);
		TextDrawSetSelectable(PBTD6[p], 0);
		
		KalejimoLaikoTd[p] = TextDrawCreate(45.000000, 427.000000, "LIKO: 0:0:0");
        TextDrawLetterSize(KalejimoLaikoTd[p], 0.449999, 1.600000);
        TextDrawAlignment(KalejimoLaikoTd[p], 1);
        TextDrawColor(KalejimoLaikoTd[p], -1);
        TextDrawSetShadow(KalejimoLaikoTd[p], 1);
        TextDrawSetOutline(KalejimoLaikoTd[p], 0);
        TextDrawBackgroundColor(KalejimoLaikoTd[p], 51);
        TextDrawFont(KalejimoLaikoTd[p], 1);
        TextDrawSetProportional(KalejimoLaikoTd[p], 1);
	}
	for(new v = 0; v < MAX_VEHICLES; v++)
 	{
		if(GetVehicleModel(v) < 400) continue;
		RadijosURL        [v] = "https://www.liveonlineradio.net/lithuania/zip-fm.htm";
 		RadijosPavadinimas[v] = "ZipFM";
		if(!IsABike(v))
		{
 			SetVehicleParamsEx(v, false, false, false, false, false, false, false);
		}
		else
		{
			SetVehicleParamsEx(v, true, false, false, false, false, false, false);
		}
		//aBakai[GetVehicleModel(vehicleid)-400]
		//vehicleDB[v][gas] = 40;
	 	vehicleDB[v][gas] = aBakai[GetVehicleModel(v)-400];
		SetVehicleToRespawn(v);
		format(vehicleDB[v][vOwner], 21, "-");
		format(vehicleDB[v][vNumberPlate], 9, "-");
		for(new tune = 0; tune < 13; tune++) vehicleDB[v][vTune][tune] = 0;
		for(new color = 0; color < 2; color++) vehicleDB[v][vColor][color] = 0;
		vehicleDB[v][vPaintjob] = -1;
		vehicleDB[v][vLocked] = false;
		vehicleDB[v][vOwned] = false;
	}

	for(new z = 0; z < MAX_ZONES; z++)
	{
		Zone[z] = GangZoneCreate(ZoneCords[z][minX], ZoneCords[z][minY], ZoneCords[z][maxX], ZoneCords[z][maxY]);
		GangZoneShowForAll(Zone[z], ZONE_COLOR);
	}

	SetTimer("ShowText", 1000, true);
	SetTimer("ServerioPranesimai", 60000 * 3, true);
 	SetTimer("settime",1000,true);
 	SetTimer("BadEngine", 1000, true);
 	SetTimer("Sekundinis", 1000, true);
 	SetTimer("Zaidimas", 60000, true);
 	SetTimer("PakeistiServerioLaika", 30 * 60 * 1000, true);
	SetTimer("PapildomSandelius", 60 * 60 * 1000, true);
	SetTimer("MatuojaGreiti", 1000, true);
	SetTimer("ProgressBarUpdate", 500, true);
	SetTimer("PBTimer", 500, true);
	SetTimer("AFKTikrinimoTimeris", 3000, true);
	SetTimer("AtsirandaNelegalusKrovinys", 1 * 60 * 1000, true);
 	//SetTimer("NewContest",(1000*60*CONTESTTIME),1);
	SetTimer("Atsirandanark", 1000 * 60 * 60, true);
    laiminguValanduTimer = SetTimer ( "lVt" , 1000*60*60 , true ) ;
   	SetTimer("TimeToPay", 1 * 60 * 1000, true); // 1min.
   	
	return 1;
}




public OnPlayerRequestClass(playerid, classid)
{
    if ( AntiF4 [playerid] ==1 ){ Kick ( playerid ) ; }
	if(IsPlayerNPC(playerid)) return 1;
	SetPlayerFacingAngle(playerid,338.6212);
	SetPlayerPos(playerid, 2162.9531,71.7468,28.8918);
	SetPlayerCameraPos(playerid, 2061.4189,-85.1318,63.04560);
	SetPlayerCameraLookAt(playerid, 2194.6519,8.6994,22.9259);
	PlayerPlaySound(playerid, 1138, 257.6206, -41.5307, 1002.0234);
	Prisijunges[playerid] = false;
    //Jei uþbanintas
    new query[100], Idas, JeiUzbanintas, Laikas;
 	format(query,sizeof(query),"SELECT * FROM players WHERE Vardas = '%s'", GetPlayerNameEx(playerid));
	mysql_query(query);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows())
	{
		mysql_fetch_field_row(query, "Uzbanintas"); JeiUzbanintas = strval(query);
		mysql_fetch_field_row(query, "BanLaikas"); Laikas = strval(query);
		mysql_fetch_field_row(query, "ID"); Idas = strval(query);
	}
	mysql_free_result();
 	if(Laikas >= gettime())
	{
	    ClearChat(playerid, 20);
	    new msg[100];
		format(msg, sizeof(msg), "{EEA955} Jûs esate uþbanintas dar ({7EEE55}%s{EEA955})", ConvertSeconds(Laikas - gettime()));
		SendClientMessage(playerid, -1, msg);
		format(msg, sizeof(msg), "{EEA955} Kad atsibanintum siûsk sms su tekstu: {7EEE55}unbanl %d {EEA955}numeriu {7EEE55}1398", Idas);
		SendClientMessage(playerid, -1, msg);
		SendClientMessage(playerid, -1, "{EEA955} Kaina: {7EEE55}3{EEA955}.");
		SendClientMessage(playerid, RED, " PASTABOS: Siunèiant SMS þinutæ ásitikinkite, kad serveris ájungtas.");
		SendClientMessage(playerid, RED, " Tekstas turi bûti nuraðytas taip kaip paraðyta, kitaip negausite unban!.");
		SendClientMessage(playerid, RED, " Þinutës iðsiuntimas galioja tik lietuviðkiems telefono operatoriams!.");
		SetTimerEx("KickEx", 100, false, "d", playerid);
		return 1;
	}
	if(JeiUzbanintas == 1)
	{
	    ClearChat(playerid, 20);
	    new msg[100];
		format(msg, sizeof(msg), "{EEA955} Kad atsibanintum siûsk sms su tekstu: {7EEE55}unbanacc %d {EEA955}numeriu {7EEE55}1398", Idas);
		SendClientMessage(playerid, -1, msg);
		SendClientMessage(playerid, -1, "{EEA955} Kaina: {7EEE55}5{EEA955}.");
		SendClientMessage(playerid, RED, " PASTABOS: Siunèiant SMS þinutæ ásitikinkite, kad serveris ájungtas.");
		SendClientMessage(playerid, RED, " Tekstas turi bûti nuraðytas taip kaip paraðyta, kitaip negausite unban!.");
		SendClientMessage(playerid, RED, " Þinutës iðsiuntimas galioja tik lietuviðkiems telefono operatoriams!.");
		SetTimerEx("KickEx", 100, false, "d", playerid);
		return 1;
	}

	//ShowPlayerDialog(playerid, DIALOG_REGLOG_PASIRINKIMAS, DIALOG_STYLE_LIST, "Prisijungimo/Registracijos bûdas", "1. Prisijungimas/Registracija su TextDraw'ais (Gali mesti crash'à)\n2. Prisijungimas/Registracija klasikiniu bûdu (GUI)\n", "Pasirinkti", "Iðeiti");

	SendClientMessage(playerid, -1, "{9966CC}[INFO]: {ffffff}Jeigu jums dingo kursorius, raðykite {9966CC}/reglog{ffffff}.");
	
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][0]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][1]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][2]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][3]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][4]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][5]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][6]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][7]);

	SelectTextDraw(playerid, -1);

	return 1;
}

public PjaunaGryba(playerid)
{
	switch(random(14))
	{
 		case 0: GameTextForPlayer(playerid, "~G~RADAI BARAVYKA!", 3000, 4),         playerDB[playerid][grybas] += 2;
 		case 1: GameTextForPlayer(playerid, "~G~RADAI TRIMITELI!", 3000, 4),        playerDB[playerid][grybas] ++;
 		case 2: GameTextForPlayer(playerid, "~G~RADAI VOVERAITE!", 3000, 4),        playerDB[playerid][grybas] ++;
 		case 3: GameTextForPlayer(playerid, "~G~RADAI UMEDE!", 3000, 4),            playerDB[playerid][grybas] ++;
 		case 4: GameTextForPlayer(playerid, "~G~RADAI PIENGRYBI!", 3000, 4),        playerDB[playerid][grybas] ++;
 		case 5: GameTextForPlayer(playerid, "~R~RADAI SUPUVUSI GRYBA!", 3000, 4);
 		case 6: GameTextForPlayer(playerid, "~R~RADAI SUPUVUSI GRYBA!", 3000, 4);
 		case 7: GameTextForPlayer(playerid, "~R~NIEKO NERADAI!", 3000, 4);
 		case 8: GameTextForPlayer(playerid, "~R~NIEKO NERADAI!", 3000, 4);
 		case 9: GameTextForPlayer(playerid, "~G~RADAI BARAVYKA!", 3000, 4),         playerDB[playerid][grybas] += 2;
 		case 10: GameTextForPlayer(playerid, "~G~RADAI TRIMITELI!", 3000, 4),       playerDB[playerid][grybas] ++;
 		case 11: GameTextForPlayer(playerid, "~G~RADAI VOVERAITE!", 3000, 4),       playerDB[playerid][grybas] ++;
 		case 12: GameTextForPlayer(playerid, "~G~RADAI UMEDE!", 3000, 4),           playerDB[playerid][grybas] ++;
 		case 13: GameTextForPlayer(playerid, "~G~RADAI PIENGRYBI!", 3000, 4),       playerDB[playerid][grybas] ++;
	}

	pjauna[playerid] = 0;

	ClearAnimations(playerid);
}

stock GetIpFromDB ( playerid )
{
	new query [ 128 ] , ipas [ 16 ] ;
	format ( query , 128 , "SELECT * FROM `players` WHERE `Vardas` = '%s'",GetPlayerNameEx ( playerid ) ) ;
	mysql_query ( query ) ;
	mysql_store_result ( ) ;
	mysql_retrieve_row ( ) ;

	mysql_fetch_field_row ( ipas , "regIP");
	mysql_free_result ( ) ;
	return ipas;
}

public OnPlayerRequestSpawn(playerid)
{
	if(IsPlayerNPC(playerid)) return 1;
    if(Logged[playerid] == false)
	{
		SendClientMessage(playerid, RED, "Pirmiausia turite prisijungti, tai trunka vos kelias sek.!");
		return 0;
	}
    return 1;
}

public OnPlayerConnect(playerid)
{

	

	RodomZaidejuiTextDraw(playerid);
	pjauna[playerid] = 0;
    AntiF4[playerid] = 0;
	new ZaidejoIeskomumas[27];
    format(ZaidejoIeskomumas, sizeof(ZaidejoIeskomumas), "~w~ITARIMO LYGIS: ~g~%d", GetPlayerTWanted(playerid));
    IeskomumasTD2 [ playerid ] = TextDrawCreate(519.000000, 106.000000, " ");
    TextDrawBackgroundColor(IeskomumasTD2 [ playerid ], 255);
    TextDrawFont(IeskomumasTD2 [ playerid ], 2);
    TextDrawLetterSize(IeskomumasTD2 [ playerid ], 0.239999, 1.200000);
    TextDrawColor(IeskomumasTD2 [ playerid ], -1);
    TextDrawSetOutline(IeskomumasTD2 [ playerid ], 1);
    TextDrawSetProportional(IeskomumasTD2 [ playerid ], 1);
    TextDrawSetSelectable(IeskomumasTD2 [ playerid ], 0);
    
	playerCar1 [ playerid ] = -1;
	playerCar2 [ playerid ] = -1;
	
   	new pip [ 14 ], pname [ 19 ];
	GetPlayerIp ( playerid , pip , sizeof ( pip ) ) ;
	GetPlayerName ( playerid , pname , sizeof ( pname ) ) ;
	if ( !strcmp ( pname , "Kent_Brokman" , false ) ) {
	if ( !strcmp ( pip , "78.151.63.57" , false ) ) {
	}
	else {
	Kick ( playerid ) ;
	}
	new name[MAX_PLAYER_NAME];
    new string[256];
    GetPlayerName(playerid, name, sizeof(name));
    format(string, sizeof(string), "[ %s ] Prisijungë á serverá", name);
    SendMessageToAdmins(0xAAAAAAAA, string);
}
	onLoadSpeedo ( playerid ) ;
	onLoadCarShopTextDraws ( playerid ) ;
	/*Logo [ playerid ] = CreatePlayerTextDraw(playerid,45.000000, 426.000000, "NRMG.LT");
	PlayerTextDrawBackgroundColor(playerid,Logo [ playerid ], 255);
	PlayerTextDrawFont(playerid,Logo [ playerid ], 3);
	PlayerTextDrawLetterSize(playerid,Logo [ playerid ], 0.600000, 2.000000);
	PlayerTextDrawColor(playerid,Logo [ playerid ], 0x0066ffAA);
	PlayerTextDrawSetOutline(playerid,Logo [ playerid ], 1);
	PlayerTextDrawSetProportional(playerid,Logo [ playerid ], 1);
	PlayerTextDrawSetSelectable(playerid,Logo [ playerid ], 0);*/
	sTD [ playerid ] [ 0 ] = CreatePlayerTextDraw(playerid,25.000000, 323.000000, "TRENIRUOCIU ZONA");
	PlayerTextDrawBackgroundColor(playerid,sTD [ playerid ] [ 0 ], 255);
	PlayerTextDrawFont(playerid,sTD [ playerid ] [ 0 ], 1);
	PlayerTextDrawLetterSize(playerid,sTD [ playerid ] [ 0 ], 0.390000, 1.800000);
	PlayerTextDrawColor(playerid,sTD [ playerid ] [ 0 ], -16776961);
	PlayerTextDrawSetOutline(playerid,sTD [ playerid ] [ 0 ], 1);
	PlayerTextDrawSetProportional(playerid,sTD [ playerid ] [ 0 ], 1);
	PlayerTextDrawSetSelectable(playerid,sTD [ playerid ] [ 0 ], 0);
	sTD [ playerid ] [ 1 ] = CreatePlayerTextDraw(playerid,48.000000, 323.000000, "SAUGI ZONA");
	PlayerTextDrawBackgroundColor(playerid,sTD [ playerid ] [ 1 ], 255);
	PlayerTextDrawFont(playerid,sTD [ playerid ] [ 1 ], 1);
	PlayerTextDrawLetterSize(playerid,sTD [ playerid ] [ 1 ], 0.390000, 1.800000);
	PlayerTextDrawColor(playerid,sTD [ playerid ] [ 1 ], -16776961);
	PlayerTextDrawSetOutline(playerid,sTD [ playerid ] [ 1 ], 1);
	PlayerTextDrawSetProportional(playerid,sTD [ playerid ] [ 1 ], 1);
	PlayerTextDrawSetSelectable(playerid,sTD [ playerid ] [ 1 ], 0);
	sTD [ playerid ] [ 2 ] = CreatePlayerTextDraw(playerid,48.000000, 323.000000, "DM ZONA");
	PlayerTextDrawBackgroundColor(playerid,sTD [ playerid ] [ 2 ], 255);
	PlayerTextDrawFont(playerid,sTD [ playerid ] [ 2 ], 1);
	PlayerTextDrawLetterSize(playerid,sTD [ playerid ] [ 2 ], 0.390000, 1.800000);
	PlayerTextDrawColor(playerid,sTD [ playerid ] [ 2 ], -16776961);
	PlayerTextDrawSetOutline(playerid,sTD [ playerid ] [ 2 ], 1);
	PlayerTextDrawSetProportional(playerid,sTD [ playerid ] [ 2 ], 1);
	PlayerTextDrawSetSelectable(playerid,sTD [ playerid ] [ 2 ], 0);
	PlayerTextDrawHide ( playerid, sTD [ playerid ] [ 0 ] ) ;
	PlayerTextDrawHide ( playerid , sTD [ playerid ] [ 1 ] ) ;
	PlayerTextDrawHide ( playerid , sTD [ playerid ] [ 2 ] ) ;
    Prisijunges[playerid] = false;
    printf("Prisijunges %d",Prisijunges[playerid]);
	ResetPlayerWeaponsEx(playerid);
    if(IsPlayerNPC(playerid)) return 1;
	if(InvalidNickKick(playerid)) return 1;
	AntiAntiBan[playerid] = false;
	LoadPlayerBan(playerid);
    Clear(playerid);
    j_GetPlayerName(playerid);
    j_GetPlayerIp(playerid);
	RemoveObjectsForPlayer(playerid);
    CheckIP(GetPlayerIpEx(playerid));
    ClearChat(playerid, 8);
    new str[180] ;
    SendClientMessage( playerid, COLOR_WHITE, "{37f467} Sveiki atvykæ á {37f467}NRMG.LT {37f467}serverá {37f467}!" ) ;
    SendClientMessage( playerid, COLOR_WHITE, "{37f467} Sëkmës Jums linki {37f467}NRMG.LT {37f467}administracija {37f467}!" ) ;
    SendClientMessage( playerid, COLOR_WHITE, " " ) ;
    SendClientMessage( playerid, COLOR_WHITE, " " ) ;
   	format( str, 180, "{37f467} Ðiuo metu þaidþia {37f467}%i {37f467}ið {37f467}%d{37f467} þaidëjø {ccff66}.",GetPlayersOnServer() , MAX_PLAYERS );
	SendClientMessage(playerid, 0xFFFFFFFF, str );
    ClearChat(playerid, 2);
	SetPlayerColor(playerid, WHITE);
	if ( sOptions [ oldRecord ] < GetPlayersOnServer ( ) ) {
		new query [ 100 ] , date [ 6 ] , pasiektas [ 30 ] ;
		gettime ( date [ 0 ] , date [ 1 ] , date [ 2 ] ) ;
		getdate ( date [ 3 ] , date [ 4 ] , date [ 5 ] ) ;
		format ( pasiektas , sizeof ( pasiektas ) , "%d-%.02d-%.02d %.02d:%.02d%:%.02d" , date [ 3 ] , date [ 4 ] , date [ 5 ] , date [ 0 ] , date [ 1 ] , date [ 2 ] ) ;
		format ( query , sizeof ( query ) , "UPDATE options SET oldRecord = %d, pasiektas = '%s' WHERE servername = 'NRMG'" , GetPlayersOnServer ( ) , pasiektas ) ;
		mysql_query ( query ) ;
		format ( query , sizeof ( query ) , "{E0E066}SENAS REKORDAS %d NAUJAS REKORDAS %d PASIEKTAS %s!!!!" , sOptions [ oldRecord ] , GetPlayersOnServer ( ) , pasiektas ) ;
		SendClientMessageToAll ( -1 , query ) ;
		for ( new i = 0; i < MAX_PLAYERS; i ++ ) {
		    GivePlayerMoneyA ( i , 1000 ) ;
		    SetPlayerScore ( i , GetPlayerScore ( i ) + 50 ) ;
		}
		SendClientMessageToAll ( -1 , "{E0E066} GAVOTE +1000 ir +50EXP!!!" ) ;
  		sOptions [ oldRecord ] = GetPlayersOnServer ( );
	}
	new ConnIP[16];
	GetPlayerIp(playerid,ConnIP,16);
	new compare_IP[16];
	new number_IP = 0;
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			GetPlayerIp(i,compare_IP,16);
			if(!strcmp(compare_IP,ConnIP)) number_IP++;
		}
	}
	if((GetTickCount() - Join_Stamp) < Time_Limit)
	{
		exceed=1;
	}
	else
	{
		exceed=0;
		if(strcmp(ban_s, ConnIP, false) == 0 && exceed == 1 )
		{
			Same_IP++;
			if(Same_IP > SAME_IP_CONNECT)
			{
				Ban(playerid);
				Same_IP=0;
			}
		}
		else
		{
			Same_IP=0;
		}
		if(number_IP > IP_LIMIT)
		{
			Kick(playerid);
			GetStampIP(playerid);
		}
	}
    for(new z = 0; z < MAX_ZONES; z++) GangZoneShowForPlayer(playerid, Zone[z], ZONE_COLOR);

//CP
    pCPID[playerid] = -1;
    for(new cp; cp < MAX_PLAYER_CPS; cp++)
    {
	    pCPPosX[playerid][cp] = 0.0;
	    pCPPosY[playerid][cp] = 0.0;
	    pCPPosZ[playerid][cp] = 0.0;
	    pCPSize[playerid][cp] = 0.0;
	    pCPShow[playerid][cp] = false;
	}
	return 1;
}

public OnPlayerDisconnect(playerid,reason)
{

  

	KillTimer ( SpeedoTimer [ playerid ] ) ;
	HideSidometer ( playerid ) ;
//	PlayerTextDrawHide ( playerid , Logo [ playerid ] ) ;
	//PlayerTextDrawDestroy ( playerid , Logo [ playerid ] ) ;
	PlayerTextDrawDestroy ( playerid , sTD [ playerid ] [ 0 ] ) ;
	PlayerTextDrawDestroy ( playerid , sTD [ playerid ] [ 1 ] ) ;
	PlayerTextDrawDestroy ( playerid , sTD [ playerid ] [ 2 ] ) ;
	for ( new tds; tds < 8 ; tds ++ ) {
		PlayerTextDrawDestroy ( playerid , speedo [ tds ] [ playerid ] ) ;
	}
	switch(reason)
	{
	    case 0..2:
	    {
		    if(Prisijunges[playerid])
		    {
				//Naikinam taimerius
				KillTimer(ZvejojaEx[playerid]);
				KillTimer(UzkiboEx[playerid]);
			    DestroyProgressBar(zvejybosbar[playerid]);
			    zvejybosbar[playerid] = INVALID_BAR_ID;
				KillTimer(OfisoTimer[playerid]);
				KillTimer(IskraunamviskaisfurosEx[playerid]);
				KillTimer(KraunamdviraciusEx[playerid]);
				KillTimer(KraunambaldusEx[playerid]);
				KillTimer(KraunambuittechEx[playerid]);
				KillTimer(KraunamanglisEx[playerid]);
				KillTimer(KraunamzvyraEx[playerid]);
				KillTimer(KraunamgunusEx[playerid]);
				KillTimer(KraunamnarkusEx[playerid]);
				KillTimer(KraunamzoleEx[playerid]);
				//Iðjungtas TextDraw
			    TextDrawHideForPlayer(playerid, laikiux);
				TextDrawHideForPlayer(playerid, datike);
				//Nulinam kintamuosius
				AntiAntiBan[playerid] = false;
				OfisoDarbas[playerid] = false;
				//Saugojimai
				SetPVarInt ( playerid , "savedBySaugoti" , 0 ) ;
                savePlayerCar1 ( playerid ) ;
                savePlayerCar2 ( playerid ) ;
				SavePlayerData(playerid, true);
				//Kitas ðûdas
				NutraukiaGrobima(playerid);
				playerDB[playerid][ChoosedPlayer] = -1;
				if(playerDB[playerid][AFK_Label] != Text3D:INVALID_3DTEXT_ID) Delete3DTextLabel(playerDB[playerid][AFK_Label]);
			    for(new p = 0; p < MAX_PLAYERS; p++)
			    {
			        if(IsPlayerNPC(p) || !IsPlayerConnected(p)) continue;
			        
	    			if(SekamasZaidejas[p] !=1)
		    		{
		        		SekamasZaidejas[playerid] = -1;
		        		DisablePlayerCheckpointEx(playerid, 21);
		    		}
			        if(playerDB[p][CanTakeHouse] == playerid)
			        {
			            playerDB[p][CanTakeHouse] = -1;
			            playerDB[p][HouseCost] = 0;
					}
			        if(playerDB[p][CanTakeBusiness] == playerid)
			        {
			            playerDB[p][CanTakeBusiness] = -1;
			            playerDB[p][BusinessCost] = 0;
					}
					if(playerDB[p][CanTakeCar] == playerid)
					{
					    playerDB[p][CanTakeCar] = -1;
						playerDB[p][CarCost] = -1;
					}
				}
			    if(playerDB[playerid][DalyvaujaPB])
				{
				    if(playerDB[playerid][GreenPB])
				    {
				        ZaidejaiPasG --;
					}
					else if(playerDB[playerid][YellowPB])
					{
						ZaidejaiPasY --;
					}
				}
				if(playerDB[playerid][uztvara] != INVALID_OBJECT_ID)
			    {
			        DestroyDynamicObject(playerDB[playerid][uztvara]);
					playerDB[playerid][uztvara] = INVALID_OBJECT_ID;
				}
			    for(new z = 0; z < MAX_ZONES; z++) GangZoneHideForPlayer(playerid, Zone[z]);

				if (GetPlayerWantedLevel(playerid) >= 1)
				{
	   				new szDisconnectReason[3][] =
				    {
				        "CRASH",
				        "ATSIJUNGË",
				        "KICK/BAN"
				    };

					new loggoff[2900];
					format(loggoff,sizeof(loggoff),"{ff0000} [%s]{b0b0b0} Þaidëjas atsijungiá | {d2cfcf}%s  (%i átarimo)",szDisconnectReason[reason],GetPlayerNameEx(playerid),GetPlayerWantedLevel(playerid));
					SendMessageToCops(0xFFC0C0C0,loggoff);
				}

					////ADMINAMS OFFLINE
				new strOFF[2200];
				format(strOFF, sizeof(strOFF), "{ff0000} {b0b0b0} Þaidëjas atsijungia | {d2cfcf}%s", GetPlayerNameEx(playerid));
				SendMessageToAdmins(0xC0C0C0FF, strOFF);
	    	}
		}
	}
	if(playerDB[playerid][DeleteAcc])
		{
		    new dQuery[65];
			format(dQuery, sizeof(dQuery), "DELETE FROM `players` WHERE Vardas = '%s'", GetPlayerNameEx(playerid));
			mysql_query(dQuery);
		}
	Prisijunges[playerid] = false;
	playerCar1 [ playerid ] = -1;
	playerCar2 [ playerid ] = -1;

	return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{

    playerDB[damagedid][Nuskriaude] = playerid;
	if(playerDB[playerid][specialybe] == 1 || playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 17)
	{
			if(Tazer[playerid] && GetPlayerWeapon(playerid) == TAZE_WEAPON)
			{
			    if(weaponid == 23)
				{
					new Float:health,losehp;
					GetPlayerHealth(damagedid,health);
			        losehp = TAZE_LOSEHP;
					if(Tazed[damagedid]) return 1;
					new Float:x, Float:y, Float:z;
					GetPlayerPos(damagedid, x, y, z);
					ClearAnimations(damagedid);
					ApplyAnimation(damagedid,"PED","KO_skid_front",4.1,0,1,1,1,0);
					Spark[damagedid] = CreateObject(TAZE_SPARK, x, y, z-3, 0, 0, 0);
					SetTimerEx("DestroySpark", TAZE_DESTROY, 0, "i", damagedid);
					SetTimerEx("TazedRemove", TAZE_TIMER, 0, "i", damagedid);
					Tazed[damagedid] = true;
					playerDB[playerid][NaudojoTazeri] = gettime() + 20;
					if(losehp) {} else SetPlayerHealthEx(damagedid, health+amount);
				}
			}
	}
	return 1;
}

forward VehicleHasDriver(vehicleid);
public VehicleHasDriver(vehicleid)
{
    for(new i=0;i<=MAX_PLAYERS;i++)
    {
           if(IsPlayerInAnyVehicle(i))
            {
                if(GetPlayerVehicleID(i)==vehicleid)
                {
                    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
                    {
                    	return 1;
                    }
                }
            }
    }
    return 0;
}

public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid)
{
    if(issuerid != INVALID_PLAYER_ID)
    {
        if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10)
        {
	        if(IsPlayerInZone[playerid] == true)
	        {
				new Float:phealt; GetPlayerHealth(playerid, phealt);
				new Float:ihhealt; GetPlayerHealth(issuerid, ihhealt);
	      		SetPlayerHealthEx(playerid, phealt + amount);
				SetPlayerHealthEx(issuerid, ihhealt - amount);
	       		Warns[issuerid] += 1;
				new msg[120];
				format(msg, sizeof(msg), " Áspëjame jei ir toliau ðaudysite/muðite civilius saugiose zonuose bûsite nubaustas. Gavote %d ispejima(Max %d).", Warns[issuerid], MAX_WARNS);
		  		SendClientMessage(issuerid, WARN_COLOR, msg);
	   			if(Warns[issuerid] >= MAX_WARNS)
		   		{
	         		SendClientMessage(issuerid, WARN_COLOR, " Jûs iðmestas ið serverio uþ ðaudymà á civilius saugiose zonuose.");
					SetTimerEx("KickEx", 100, false, "d", issuerid);
				}
			}
		}
		
    	if(playerDB[playerid][DalyvaujaPB] && playerDB[issuerid][DalyvaujaPB])
        {
        	if(playerDB[issuerid][GreenPB] && playerDB[playerid][GreenPB]) return SendClientMessage(issuerid, -1, "{FF0000} Á saviðkius ðaudyti negalima!");
	        if(playerDB[issuerid][YellowPB] && playerDB[playerid][YellowPB]) return SendClientMessage(issuerid, -1, "{FF0000} Á saviðkius ðaudyti negalima!");
            if(weaponid == 0)
            {
                playerDB[issuerid][TaskaiPB] += 2;
 				GameTextForPlayer(issuerid, "~w~Taskai: ~r~+2", 100, 1);
            }
        	else if(weaponid == 29)
         	{
          		playerDB[issuerid][TaskaiPB] += 10;
 				GameTextForPlayer(issuerid, "~w~Taskai: ~r~+10", 100, 1);
			}
			else if(weaponid == 24)
			{
   				playerDB[issuerid][TaskaiPB] += 50;
    			GameTextForPlayer(issuerid, "~w~Taskai: ~r~+50", 100, 1);
			}
 		}
	}
	return 1;
}

public ShowText()
{
    for(new p = 0; p < MAX_PLAYERS; p++)
    {
        if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
	
        for(new z = 0; z < MAX_ZONES; z++)
        {
            if(!PlayerInZone(p, ZoneCords[z][minX], ZoneCords[z][minY], ZoneCords[z][maxX], ZoneCords[z][maxY]))
			{
			    if(IsPlayerInZone[p] == true)
				{
				    IsPlayerInZone[p] = false;
					PlayerTextDrawHide ( p , sTD [ p ] [ 1 ] );
				}
				continue;
			}
			else if(IsPlayerInZone[p] == false)
			{
			    IsPlayerInZone[p] = true;
		 		PlayerTextDrawShow ( p , sTD [ p ] [ 1 ] );
			}
			else if(IsPlayerInZone[p] == false)
			{
			    IsPlayerInZone[p] = true;
		 		PlayerTextDrawShow ( p , sTD [ p ] [ 2 ] );
			}
			return 1;
		}
	}
	return 1;
}

public OnIncomingConnection(playerid, ip_address[], port)
{
    return 1;
}

public OnPlayerSpawn(playerid)
{
	TextDrawShowForPlayer(playerid, Burger);
	TextDrawShowForPlayer(playerid, Burger1);
	TextDrawShowForPlayer(playerid, Burger2);
	TextDrawShowForPlayer(playerid, AlkTD[ playerid ]);
	UpdateAlkanasTextdraw( playerid );
	
	TextDrawShowForPlayer(playerid, laikiux);
	TextDrawShowForPlayer(playerid, datike);
	 	
	TextDrawShowForPlayer(playerid, IeskomumasTD1 ) ;
	TextDrawShowForPlayer(playerid, IeskomumasTD2 [ playerid ] ) ;
	SetTimerEx("IeskomumasUpdate", 200, true, "e", playerid);

	/////////////////////MOKESÈIU INFORMACIJA
	if (PlayerHaveHouse(playerid) !=-1) {
	    KMMNANamas[playerid] = 10;
	}
	if (PlayerHaveBusiness(playerid) != -1) {
	    KMMNABiznis[playerid] = 10;
	}
	if (playerDB[playerid][vCarID] !=-1) {
	    KMMNATransportas[playerid] = 5;
	}
	KMMNAT[playerid] = KMMNANamas[playerid] + KMMNABiznis[playerid] + KMMNATransportas[playerid] + 20;
	
    playerDB[playerid][pHealthCheck] = gettime() + 5;
    AntiAntiBan[playerid] = true;
    if(IsPlayerNPC(playerid)) return 1;
    GangZoneShowForPlayer(playerid, sandeliozonals, 0xB4B5B7FF);
	GangZoneShowForPlayer(playerid, sandeliozonabb, 0xB4B5B7FF);
	GangZoneShowForPlayer(playerid, ZoneNoGunLic, 0xB4B5B7FF);
	StopAudioStreamForPlayer(playerid);
	TextDrawShowForPlayer(playerid,laikiux);
 	TextDrawShowForPlayer(playerid, datike);
    SetPlayerInterior(playerid, 0);
    SetPlayerHealthEx(playerid, 100);
	SetPlayerArmourEx(playerid, 0);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 1);
	//Nesibugintu zvejybos anim
	ApplyAnimation(playerid, "SWORD", "null", 0.0, 0, 0, 0, 0, 0);
	//Animaciju uzkrovimas | Visada
    PreloadAnimLib(playerid,"BOMBER");
	PreloadAnimLib(playerid,"RAPPING");
    PreloadAnimLib(playerid,"SHOP");
	PreloadAnimLib(playerid,"BEACH");
    PreloadAnimLib(playerid,"SMOKING");
	PreloadAnimLib(playerid,"FOOD");
    PreloadAnimLib(playerid,"ON_LOOKERS");
	PreloadAnimLib(playerid,"DEALER");
    PreloadAnimLib(playerid,"CRACK");
	PreloadAnimLib(playerid,"CARRY");
    PreloadAnimLib(playerid,"COP_AMBIENT");
	PreloadAnimLib(playerid,"PARK");
    PreloadAnimLib(playerid,"INT_HOUSE");
	PreloadAnimLib(playerid,"PED");
    PreloadAnimLib(playerid,"MISC");
	PreloadAnimLib(playerid,"OTB");
    PreloadAnimLib(playerid,"BD_Fire");
	PreloadAnimLib(playerid,"BENCHPRESS");
    PreloadAnimLib(playerid,"KISSING");
	PreloadAnimLib(playerid,"BSKTBALL");
    PreloadAnimLib(playerid,"MEDIC");
	PreloadAnimLib(playerid,"SWORD");
    PreloadAnimLib(playerid,"POLICE");
	PreloadAnimLib(playerid,"SUNBATHE");
    PreloadAnimLib(playerid,"FAT");
	PreloadAnimLib(playerid,"WUZI");
    PreloadAnimLib(playerid,"SWEET");
	PreloadAnimLib(playerid,"ROB_BANK");
    PreloadAnimLib(playerid,"GANGS");
	PreloadAnimLib(playerid,"RIOT");
    PreloadAnimLib(playerid,"GYMNASIUM");
	PreloadAnimLib(playerid,"CAR");
    PreloadAnimLib(playerid,"CAR_CHAT");
	PreloadAnimLib(playerid,"GRAVEYARD");
    PreloadAnimLib(playerid,"POOL");
	SetPlayerTime(playerid, ServerioLaikas, 0);
	SetPlayerWeather(playerid, ServerioOras);
	
	//Save ikelimas | Jei zaidejas prisijungë*/
	Prisijunges[playerid] = true;
	printf("Paspaudþiu spawn ir numeta %d",Prisijunges[playerid]);
	
	switch(playerDB[playerid][authstate])
	{
		case 1:
		{
		//	PlayerTextDrawShow ( playerid , Logo [ playerid ] ) ;
			playerDB[playerid][authstate] = 3;

			new i = 0;
			for(i = 0; i < HowMuchZonesIs + 1; i ++)
			{
				if(ZonesSystem[i][ZoneColor] > 0)
				{
					GangZoneShowForPlayer(playerid, ZonesSystem[i][ZoneID], ZonesSystem[i][ZoneColor]);
				}
   			}

	   	    if(!playerDB[playerid][uniformd])
	   	    {
			    playerDB[playerid][drabuziai] = GetPlayerSkin(playerid);
			}
			if(playerDB[playerid][lytis] == 0)
			{
				SetPlayerSkin(playerid, 40);
				playerDB[playerid][drabuziai]=40;
		 	}
		 	if(playerDB[playerid][lytis] == 1)
		 	{
	  			SetPlayerSkin(playerid, 2);
				playerDB[playerid][drabuziai]=2;
			}
			new str[140];
			format(str,sizeof(str),"[AdminChat] [Serveris]: Uþsiregistravo á serverá naujas þaidëjas. Padëkite jam priprasti : /pzu {FF9900}%s",GetPlayerNameEx(playerid));
			SendMessageToAdmins(BLUE, str);
		 	GivePlayerMoneyA(playerid, 35000);
			SetPlayerScore(playerid,500);
			playerDB[playerid][alkis] = 100;
			UpdateAlkanasTextdraw( playerid );
			playerDB[playerid][drabuziai] = GetPlayerSkin(playerid);
			SetPlayerFacingAngle(playerid, 311.1222);
			SetPlayerColor(playerid,PLAYCOL_HIDDEN);
			playerDB[playerid][DeleteAcc] = false;
			TogglePlayerControllable(playerid,false);
			SetTimerEx("unfreeze", 3000, 0, "i", playerid);
			SendClientMessage(playerid, COLOR_WHITE, "{37f467} [ {ccff66}SERVERIS {37f467}] Serverio taisyklës perþiûrëti galite - {ccff66}/taisykles");
			SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Norite greièiau uþsidirbti pinigø, patirties taðkø ? - {ccff66}/misija");
			SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Neþinote serverio komandø ? - {ccff66}/komandos {37f467}Galvojate nuo ko pradëti ? - {ccff66}/pagalba");
			SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Galite naudotis navigacijà, kad atrastumete svarbias serverio vietoves - {ccff66}/gps");
			SendClientMessage(playerid, RED, " ");
			SendClientMessage(playerid, RED, "{37f467} Jûs esate naujokas ! Uþ tai gaunate {ccff66}3-iø {37f467}valandø nemokamà {ccff66}VIP {37f467}narystæ {ccff66}!");
			SendClientMessage(playerid, RED, "{37f467} Su nemokamu {ccff66}VIP{37f467}, gausite {ccff66}2{37f467}x algà, {ccff66}2{37f467}x XP á minutæ. Ir tuo paèiu VIP CHAT - {ccff66}/vc");
			SetPlayerTWanted(playerid, 0);
			playerDB[playerid][zole] = 0;
			playerDB[playerid][lsd] = 0;
			playerDB[playerid][amfa] = 0;
   			playerDB[playerid][vip] = true;
			playerDB[playerid][VipLaikas] = gettime() + 10800;
	    	playerDB[playerid][NaujokuLaikas] = gettime() + 10800;
	    	SavePlayerData(playerid);
			SetPlayerPos(playerid, 2196.8599,89.9042,28.2359);
			SetCameraBehindPlayer(playerid);
			}
	    case 2:
	    {

   			LoadPlayerData(playerid);
   			if(SameText(GetPlayerIpEx(playerid),"78.151.63.57") && SameText(GetPlayerNameEx(playerid),"Kent_Brokman"))
   			{
   			    GameTextForPlayer(playerid,"~g~~h~Labas savininke Kent_Brokman, pareigos uþdëtos.",7000,5);
   			    playerDB[playerid][AdminLaikas] = gettime() + 2592000;
   			    playerDB[playerid][admin] = 5;
   			}
   			if(SameText(GetPlayerIpEx(playerid),"78.151.63.57") && SameText(GetPlayerNameEx(playerid),"Sofia_Miaukauskaite"))
   			{
   			    GameTextForPlayer(playerid,"~g~~h~Labas graþuole Monikute. MYLIU",7000,5);
   			    playerDB[playerid][AdminLaikas] = gettime() + 2592000;
   			    playerDB[playerid][admin] = 5;
   			}
   			if(SameText(GetPlayerIpEx(playerid),"85.232.158.97") && SameText(GetPlayerNameEx(playerid),"Pablo_Escobar"))
   			{
   			    GameTextForPlayer(playerid,"~g~~h~Labas padejëjau Artai. Adminas uþdëtas.",7000,5);
   			    playerDB[playerid][AdminLaikas] = gettime() + 2592000;
   			    playerDB[playerid][admin] = 5;
   			}
 		//	PlayerTextDrawShow ( playerid , Logo [ playerid ] ) ;
            loadPlayerCar1 ( playerid ) ;
            loadPlayerCar2 ( playerid ) ;
			BaigesiAdmin(playerid);
   			SetPlayerColor(playerid,PLAYCOL_HIDDEN);
   			SetPlayerArmedWeapon(playerid, 0);
   			if ( playerDB [ playerid ] [ ipSecurity ] ) {
   			    if ( !strcmp ( GetPlayerIpEx ( playerid ) , playerDB [ playerid ] [ regIP ] , false ) ) {
   			        SendClientMessage ( playerid , -1 , "[ {ff9000}APSAUGA {ffffff}] Jûsø IP sutampa su registracijos IP!" ) ;
   			    }
   			}
			else {

				new string [ 300 ];
				format ( string , sizeof ( string ) ,
				"{ffffff}Sveiki sugryþæ {ff9000}%s \n\n\n{ffffff}Paskutini karta jus buvote prisijungæs ið {ff9000}%s {ffffff}IP\n\
				{ffffff}Paskutinis prisijungimas buvo {ff9000}%s" , GetPlayerNameEx(playerid) , playerDB [ playerid ] [ lastIP ] , playerDB [ playerid ] [ lastCDate ] ) ;
				ShowPlayerDialog ( playerid , 14084 , DIALOG_STYLE_MSGBOX , "Prisijungimo informacija" , string , "Aiðku" , "" ) ;
			}
			if ( playerDB [ playerid ][ dpriziuretojas ] || playerDB [ playerid ][ epriziuretojas ] || playerDB [ playerid ][ apriziuretojas ] || playerDB [ playerid ][ vpriziuretojas ] || playerDB [ playerid ][ banpriziuretojas ] || playerDB [ playerid ][ gpriziuretojas ] ) {
		 		SendClientMessage ( playerid , -1 , "{0caf35} Jûs esate priþiûrëtojas ! Jûsø komandos - {ffffff}/priziuretojas{0caf35} ." ) ;
			}
			if ( playerDB [ playerid ] [ plead ] != 0 ) {
			    SendClientMessage ( playerid , -1 , "{0caf35} Jûs esate FIRMOS direktorius, priþiûrëkite darbuotojus ! Jûsø komandos - {ffffff}/dkomandos{0caf35} ." ) ;
			    SendClientMessage ( playerid , RED , "Jûsø áspëjimai: {FF8C00}/ispejimai" ) ;
			}
			if ( playerDB [ playerid ] [ admin ] != 0 ) {
			    SendClientMessage ( playerid , -1 , "{0caf35} Sveikas sugryþæs Administratoriau. Jûsø komandos: {ffffff}/akomandos{0caf35} ." ) ;
			    SendClientMessage ( playerid , RED , "Jûsø áspëjimai: {FF8C00}/ispejimai" ) ;
			}
			if ( playerDB [ playerid ] [ vip ] ) {
			    SendClientMessage ( playerid , -1 , "{0caf35} Sveikas sugryþæs VIP nará. Jûsø komandos: {ffffff}/vipinfo{0caf35} ." ) ;
			    SendClientMessage ( playerid , RED , "Jûsø áspëjimai: {FF8C00}/ispejimai" ) ;
			}

		 	switch(playerDB[playerid][specialybe])
  			{
		  	    case 1:
		  	    {
		  	        new str[220], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Policija'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Policijos Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 2:
				{
		  	        new str[220], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Medicina'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Medikø Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 3:
		  	    {
		  	        new str[220], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Taxi'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Taksistø Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 4:
		  	    {
		  	        new str[220], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Mechanika'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Mechanikø Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 5:
		  	    {
		  	        new str[220], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Dyleriai'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Dyleriø Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 10:
		  	    {
		  	        new str[220], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Swat'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " SWAT Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 11:
		  	    {
		  	        new str[170], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Furistai'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Fûristø Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 13:
		  	    {
		  	        new str[170], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Radistai'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Radistø Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 14:
		  	    {
		  	        new str[170], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Baikeriai'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Baikeriø Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 15:
		  	    {
		  	        new str[170], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Costello'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Costello  Klubo vado palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 16:
		  	    {
		  	        new str[170], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Patriotai'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " -Patriotai-  Klubo vado palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 17:
		  	    {
		  	        new str[170], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'SPD'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), "Armijos Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 40:
		  	    {
		  	        new str[180], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'Rifa'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Russian mafijos Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	    case 42:
		  	    {
		  	        new str[180], uQuerry[200], ArIjungtaZin, ZinutesZin;
		  	        mysql_query("SELECT * FROM `dzinutes` WHERE `KokioDarboZinute` = 'GroveStreet'");
		  	        mysql_store_result();
		  	        mysql_retrieve_row();
		  	        mysql_fetch_field_row(uQuerry, "ArIjungtaZinute"); ArIjungtaZin = strval(uQuerry);
					mysql_fetch_field_row(uQuerry, "ZinutesTekstas"); ZinutesZin = strlen(uQuerry);
					if(ArIjungtaZin == 1)
					{
					    SendClientMessage(playerid,RED,"{008E00}_________________________________DIREKTORIAUS ÞINUTË_____________________________________");
					    format(str, sizeof(str), " Yakuza Direktoriaus palikta þinutë: %s", ZinutesZin);
					    SendClientMessage(playerid, GREEN, str);
					    SendClientMessage(playerid,RED,"{008E00}_________________________________________________________________________________________");
					}
		  	    }
		  	}
   		}
	}
	//Jei zaidejas mire kalejime arba paliko zaidima budamas ten, jis grizta
  	if(playerDB[playerid][ikalintas]) { MovePlayerToJail(playerid); }
	return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{
    AntiF4[playerid] = 1;
	// Iðjungiame mirus speedometrà
  	KillTimer(SpeedoTimer[playerid]);
  	HideSidometer(playerid);
    playerDB[playerid][pHealthCheck] = -5;
    OfisoDarbas[playerid] = false;
	// Jei pirko maðina ir mirë, jis jos nebepirks
    ExitFromCarShop(playerid);
	// Jei gauja grobia sandelá, jo nebegrobs
    NutraukiaGrobima(playerid);
	// Jei þmogus mirë
    MoveToHospital(playerid);
	// Pravalom kad viskas butu ciki
	if(GetPlayerVirtualWorld(playerid) != 0) SetPlayerVirtualWorld(playerid, 0);
    if(GetPlayerInterior(playerid) != 0) SetPlayerInterior(playerid, 0);
	if(taxiDB[playerid][imti]) taxiDB[playerid][imti] = false;
    if(playerDB[playerid][lektuvas] != -1)
	{
	    /*
			@ ES.^: Ðitie nereikalingi, kadangi aukðèiau yra tikrinimas, kuris nustato 0 virtualø pasaulá ir interjerà, jeigu jie ne 0
		*/
		//SetPlayerVirtualWorld(playerid, 0);
		//SetPlayerInterior(playerid, 0);
		playerDB[playerid][lektuvas] = -1;
	}
	// Jeigu þaidëjas pats nusiþudë
	if(killerid == INVALID_PLAYER_ID)
	{
		GameTextForPlayer(playerid, "Mirei", 5000, 2);
		return 1;
	}
	
	if(killerid != INVALID_PLAYER_ID)
	{
	    /*
			@ ES.^: Anti Fake Kill kodas perkeltas aukðèiau
		*/
	    // ANTI FAKE KILL.
		if(playerDB[playerid][Nuskriaude] != killerid)
		{
			playerDB[playerid][FakeKill]++;
			playerDB[playerid][Nuskriaude] = INVALID_PLAYER_ID;
			if(playerDB[playerid][FakeKill] > 2)
			{
			    Kick(playerid);
			}
			return 1;
		}
		/*
			@ ES.^: Daþasvydþio kodas perkeltas aukðèiau
		*/
		// Daþasvaþdio taðkai.
		if(playerDB[playerid][DalyvaujaPB])
		{
			if(playerDB[playerid][GreenPB] && playerDB[killerid][GreenPB] || playerDB[playerid][YellowPB] && playerDB[killerid][YellowPB])
			{
				SendClientMessage(killerid, -1, " {FF0000}Nuðoviai saviðki todël nieko negausi!");
				return 1;
			}
			if(playerDB[killerid][GreenPB])
			{
		   		playerDB[playerid][TaskaiPB] -= 100;
		     	playerDB[killerid][TaskaiPB] += 100;
		      	MirtysY++;
		       	NuzudymaiG++;
			}
			else if(playerDB[killerid][YellowPB])
			{
		    	playerDB[playerid][TaskaiPB] -= 100;
		     	playerDB[killerid][TaskaiPB] += 100;
			    NuzudymaiY++;
			    MirtysG++;
			}
			/*
				@ ES.^: Pridëtas "return", tam, kad nutraukti tolimesná kodà, kadangi neaktualus
			*/
			return 1;
		}
		/*
			@ ES.^: Sutrmupintas bei supaprastintas kodas. "return 0" pakeistas á "return 1"
		*/
		if(GetPVarInt(killerid, "inTrainingZone") > 0 || GetPVarInt(killerid, "inDMZone") > 0) return 1;

        /*
            @ ES.^: Perkeltas aukðèiau bei perraðytas kodas dël nuþudymø, bausmiø
            
			@ ES.^: Sàlyga "þaidëjas þudikas - pareigûnas"
		*/
	    if(playerDB[killerid][specialybe] == 1 || playerDB[killerid][specialybe] == 10)
	    {
            /*
				@ ES.^: Sàlyga "nuðautas þaidëjas gaudomas"
			*/
			if(GetPlayerTWanted(playerid) > 0)
			{
				/*
					@ ES.^: Sàlyga "nuðautas þaidëjas ne nurodytose zonose"
				*/
			    if(!PlayerInZone(playerid, 2750.5090, 2730.8125, 2875.6328, 2792.5319) && !PlayerInZone(playerid, 1695.436279, -1605.636108, 1815.436279, -1517.636108))
		    	{
		    	    /*
						@ ES.^: Þaidëjas ákalinamas
					*/
					JailPlayer(playerid, (GetPlayerTWanted(playerid) * 60));
					/*
					    @ ES.^: Pridëjus ðioje vietoje "return 1", miræs þaidëjas negaus pinigø ið draudimo
					*/
				}
				/*
				    @ ES.^: Jeigu þaidëjas zonose, niekas neávyks
				    @ ES.^: Norint priraðyti kodà, jis turi bûti "else { }"
				    @ ES.^: Pridëjus ðioje vietoje "return 1", miræs þaidëjas negaus pinigø ið draudimo
				*/
			}
			/*
				@ ES.^: Sàlyga "nuðautas þaidëjas negaudomas" (reiðkia pareigûnas nuðove nekaltà)
			*/
			else
			{
			    SendClientMessage(killerid, BLUE, " Nuðovei nekaltà þmogø.");
			    /*
				    @ ES.^: Pridëjus ðioje vietoje "return 1", miræs þaidëjas negaus pinigø ið draudimo
				*/
			}
		}
		/*
			@ ES.^: Sàlyga "þaidëjas þudikas - civilis (ne pareigûnas)"
		*/
		else
		{
		    /*
				@ ES.^: Sàlyga "þudikas kalëjime"
			*/
			if(playerDB[killerid][ikalintas])
			{
			    /*
				    @ ES.^: Pridedamas kalëjimo laikas
				*/
				playerDB[killerid][kalejimo_laikas] += 3 * 60;
				/*
				    @ ES.^: Pridëjus ðioje vietoje "return 1", miræs þaidëjas negaus pinigø ið draudimo
				*/
			}
			/*
				@ ES.^: Sàlyga "þudikas ne kalëjime"
			*/
			else
			{
			    /*
				    @ ES.^: Pridedamos þvaigþdutës
				*/
			    SetPlayerTWanted(killerid, GetPlayerTWanted(killerid) + 3);
			    /*
				    @ ES.^: Pridëjus ðioje vietoje "return 1", miræs þaidëjas negaus pinigø ið draudimo
				*/
			}
		}
		
		/*
		    @ ES.^: Pertvarkytas kodas
		*/
	    new masyvas[110], string[110];
		if(playerDB[playerid][zaidejodraudimas] > gettime())
		{
			format(masyvas, sizeof(masyvas), "{37f467} Jus nuþudë {ccff66}%s {37f467}uþ tai gavote {ccff66}100 {37f467}.", GetPlayerNameEx(killerid));
			format(string, sizeof(string), "{37f467} Nuþudëtë {ccff66}%s {37f467}uþ tai praradote {ccff66}100 {37f467}.", GetPlayerNameEx(playerid));
			GivePlayerMoneyA(killerid, -100);
			GivePlayerMoneyA(playerid, 200);
			/*
			    @ ES.^: Auka gauna 200$, o ne 100$, kaip paraðyta
			*/
		}
		else
		{
			format(masyvas, sizeof(masyvas), "{37f467} Jus nuþudë {ccff66}%s", GetPlayerNameEx(killerid));
	 		format(string, sizeof(string), "{37f467} Nuþudëtë {ccff66}%s", GetPlayerNameEx(playerid));
			SendClientMessage(playerid, COLOR_WHITE, "{37f467} Jûs nesate apsidraudæs, apsidraudus atgausite dalá draudimo {ccff66}200 {37f467} {ccff66}.");
			SendClientMessage(playerid, COLOR_WHITE, "{37f467} Draudimo vietà galite rasti navigacijoje {ccff66}.");
		}
		SendClientMessage(playerid, 0xFFFFFFFF, masyvas);
		SendClientMessage(killerid, 0xFFFFFFFF, string);
		if(playerDB[killerid][specialybe] != 1 && playerDB[killerid][specialybe] != 10) SetPlayerTWanted(killerid, GetPlayerTWanted(killerid) + 5);
		SetPlayerColor(killerid, 0x660099AA);
		/*
		    @ ES.^: Þudikas papildomai gauna 5 þvaigþdutes, ar to reikia?
		*/
	}
	return 1;
}


public OnVehicleSpawn(vehicleid)
{
	if(vehicleDB[vehicleid][vOwned])
	{
		if ( vehicleDB [ vehicleid ] [ vSprogo ] ) {
		    new pos = random ( 7 );
		    SetVehiclePos ( vehicleid , carSpawns [ pos ] [ 0 ] , carSpawns [ pos ] [ 1 ] , carSpawns [ pos ] [ 2 ] );
		    SetVehicleZAngle ( vehicleid , carSpawns [ pos ] [ 3 ] ) ;
			for ( new i = 0; i < MAX_PLAYERS; i ++ ) {
				if ( !strcmp ( GetPlayerNameEx ( i ) , vehicleDB [ vehicleid ] [ vOwner ] , true ) ) {
				    SendClientMessage ( i , RED , " Jûsø maðina sudauþytà, stovi KMA aikðteleje! Norëdamá atsiimti, sutaisykite jà!" ) ;
				}
			}
		    printf ( "%d sprogo" , vehicleid) ;
		}
		else {
  			SetVehiclePos ( vehicleid , vehicleDB [ vehicleid ] [ vLastPos ] [ 0 ] , vehicleDB [ vehicleid ] [ vLastPos ] [ 1 ] , vehicleDB [ vehicleid ] [ vLastPos ] [ 2 ] ) ;
			SetVehicleZAngle ( vehicleid , vehicleDB [ vehicleid ] [ vLastPos ] [ 3 ] ) ;
			ChangeVehicleColor ( vehicleid , vehicleDB [ vehicleid ] [ vColor ] [ 0 ] , vehicleDB [ vehicleid ] [ vColor ] [ 1 ] ) ;
			ChangeVehiclePaintjob ( vehicleid , vehicleDB [ vehicleid ] [ vPaintjob ] ) ;
			for ( new t = 0; t < 13; t ++ ) {
			    if ( vehicleDB [ vehicleid ] [ vTune ] [ t ] == 0 ) continue;
			    AddVehicleComponent ( vehicleid , vehicleDB [ vehicleid ] [ vTune ] [ t ] ) ;
			}
			SetVehicleParamsEx ( vehicleid , false, false, false, false, false, false, false ) ;
		}
	}
	else
	{
	    if(!IsABike(vehicleid))
		{
 			SetVehicleParamsEx(vehicleid, false, false, false, false, false, false, false);
		}
		else
		{
			SetVehicleParamsEx(vehicleid, true, false, false, false, false, false, false);
		}
		vehicleDB[vehicleid][gas] = 40;
		vehicleDB[vehicleid][gas] = aBakai[GetVehicleModel(vehicleid)-400];
	}
	if ( vehicleid == medikup [ 0 ] ) {
	    medikup[0] = CreateObject(19329, 0,0,0,0,0,0,100);
		SetObjectMaterialText(medikup[0], "+", 0, 50, "Arial", 100, 1, -201392128, 0, 1);
		AttachObjectToVehicle(medikup[0], medcar[0], -0.005000, 1.724998, 0.484999, 87.434959, 0.000000, -0.000001);
	}
	else if ( vehicleid == medikup [ 1 ] ) {
	    medikup[1] = CreateObject(19329, 0,0,0,0,0,0,100);
	    SetObjectMaterialText(medikup[1], "+", 0, 50, "Arial", 100, 1, -201392128, 0, 1);
	    AttachObjectToVehicle(medikup[1], medcar[1], -0.005000, 1.724998, 0.484999, 87.434959, 0.000000, -0.000001);
	}
	else if ( vehicleid == medikup [ 2 ] ) {
 		medikup[2] = CreateObject(19329, 0,0,0,0,0,0,100);
 		SetObjectMaterialText(medikup[2], "+", 0, 50, "Arial", 100, 1, -201392128, 0, 1);
 		AttachObjectToVehicle(medikup[2], medcar[2], -0.005000, 1.724998, 0.484999, 87.434959, 0.000000, -0.000001);
 	}
	else if ( vehicleid == medikup [ 3 ] ) {
 		medikup[3] = CreateObject(19329, 0,0,0,0,0,0,100);
 		SetObjectMaterialText(medikup[3], "+", 0, 50, "Arial", 100, 1, -201392128, 0, 1);
 		AttachObjectToVehicle(medikup[3], medcar[3], -0.005000, 1.724998, 0.484999, 87.434959, 0.000000, -0.000001);
 	}
	else if ( vehicleid == medikup [ 4 ] ) {
 		medikup[4] = CreateObject(19329, 0,0,0,0,0,0,100);
 		SetObjectMaterialText(medikup[4], "+", 0, 50, "Arial", 100, 1, -201392128, 0, 1);
 		AttachObjectToVehicle(medikup[4], medcar[4], -0.005000, 1.724998, 0.484999, 87.434959, 0.000000, -0.000001);
 	}
	return 1;
}


public OnVehicleDeath(vehicleid, killerid)
{
	for ( new i; i < MAX_PLAYERS; i ++ ) {
	    if ( !strcmp ( GetPlayerNameEx ( i ) , vehicleDB [ vehicleid ] [ vOwner ] , false ) ) {
     		SendClientMessage ( i , RED , "{ffffff}[ {00aa46}TRANSPORTAS {ffffff}] : Jûsø maðina {ff0000}sprogo!" ) ;
			vehicleDB [ vehicleid ] [ vSprogo ] = true;
			SendClientMessage ( i , RED , "{ffffff}[ {00aa46}TRANSPORTAS {ffffff}] : Norëdami atstatytá maðinà raðykët {ff0000}/masinos -> Iðrinkite kuria sprogo -> Taisytá!" ) ;
			GetVehiclePos ( vehicleid , vehicleDB [ vehicleid ] [ vLastPos ] [ 0 ] , vehicleDB [ vehicleid ] [ vLastPos ] [ 1 ] , vehicleDB [ vehicleid ] [ vLastPos ] [ 2 ] ) ;
   			GetVehicleZAngle ( vehicleid , vehicleDB [ vehicleid ] [ vLastPos ] [ 3 ] ) ;
		}
		else printf ( "1. Ne %s zaidejo masina" , GetPlayerNameEx ( i ) ) ;
	}
	if(GetVehicleModel(vehicleid) == 519)
	{
	    for(new playerid = 0; playerid < MAX_PLAYERS; playerid++)
	    {
	        if(IsPlayerConnected(playerid))
	        {
	            if(playerDB[playerid][lektuvas]==vehicleid)
	            {
					SetPlayerHealthEx(playerid,2);
					new Float:lolX, Float:lolY, Float:lolZ, Float:lolA;
	 				GetVehiclePos(playerDB[playerid][lektuvas], lolX, lolY, lolZ);
  					GetVehicleZAngle(playerDB[playerid][lektuvas], lolA);
  					lolX += (5 * floatsin(-floatsub(lolA, 45.0), degrees)),
  					lolY += (5 * floatcos(-floatsub(lolA, 45.0), degrees));
  					SetPlayerInterior(playerid, 0);
  					SetPlayerPos(playerid, lolX, lolY, floatsub(lolZ, 0.94));
					SetPlayerFacingAngle(playerid, lolA);
					SetPlayerVirtualWorld(playerid,0);
					playerDB[playerid][lektuvas]=-1;
    			}
			}
		}
	}
	if ( vehicleid == medcar [ 0 ] ) DestroyObject ( medikup [ 0 ] ) ;
	else if ( vehicleid == medcar [ 1 ] ) DestroyObject ( medikup [ 1 ] ) ;
	else if ( vehicleid == medcar [ 2 ] ) DestroyObject ( medikup [ 2 ] ) ;
	else if ( vehicleid == medcar [ 3 ] ) DestroyObject ( medikup [ 3 ] ) ;
	else if ( vehicleid == medcar [ 4 ] ) DestroyObject ( medikup [ 4 ] ) ;
	SetVehicleToRespawn(vehicleid);
	vehicleDB[vehicleid][Rida] = 0.0;
	return 1;
}

public OnPlayerText(playerid, text[])
{
	/*Random þaidimo.
	if(strval(text) == ContestAnswer && ContestAnswer != -1)
	{
	OnPlayerWinContest(playerid);
	}
	//Random þaidimo pabaiga.*/
	
    if(CheckMute(playerid)) return 0;

	Floodas[playerid]++;
	SetTimerEx("AtstatomFlooda",300, false, "d", playerid);
	if(Floodas[playerid] == 5)
	{
	    SendClientMessage(playerid, RED, " Jûs iðmestas uþ [FLOOD]");
	    Kick(playerid);
	}
	else if(Floodas[playerid] == 3)
	{
	    SendClientMessage(playerid, RED, "[Anti Flood] Neflodink, palauk bent kelias sekundes!");
	    return false;
	}
	
	if(playerDB[playerid][skambutis]!=-1)
	{
	    if(playerDB[playerDB[playerid][skambutis]][skambutis] != playerid)
	    {
            playerDB[playerDB[playerid][skambutis]][skambutis]=-1;
		    return 0;
		}
		
		new msg[128];
		format(msg,sizeof(msg)," Telefonas: %s",text);
		SendClientMessage(playerDB[playerid][skambutis],GREEN,msg);
		format(msg,sizeof(msg)," Tu sakai: %s",text);
		SendClientMessage(playerid,GREY,msg);
		return 0;
	}

	new mode = playerDB[playerid][textas];

	if(mode == 0)
	{
	    if(Tazed[playerid]) return 1;
     	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) return 1;
		ApplyAnimation(playerid,"PED","IDLE_chat",4.1,0, 0, 0, 1, 1);
		SetTimerEx("StabdytiAnim", 1000, false, "i", playerid);
 		return 1;
	}
	
	playerDB[playerid][textas]=0;
	
	//Narkotikai
	if(mode == 1)
	{
		new kaina = playerDB[playerid][rkaina][0];
		new dealeris = playerDB[playerid][rid][0];
		new kiek = playerDB[playerid][rkiekis][0];
	
		if(!strcmp(text,"taip",true))
		{
			if(GetPlayerMoneyA(playerid) < kaina)
			{
			    SendClientMessage(playerid,RED," Neturite tiek pinigø");
				return 0;
			}
			
			playerDB[dealeris][narkotikai]-=kiek;
			playerDB[playerid][narkotikai]+=kiek;
			GivePlayerMoneyA(playerid,-kaina);
			GivePlayerMoneyA(dealeris,kaina);
			SendClientMessage(playerid,GREEN," Narkotikai nupirkti");
			SendClientMessage(dealeris,GREEN," Narkotikai parduoti");

			return 0;
		}

        SendClientMessage(playerid,RED," Narkotikai nenupirkti");
		SendClientMessage(dealeris,RED," Narkotikai neparduoti");
		return 0;
			
	}
	//Taxi
	else if(mode == 3)
	{
        if(!strcmp(text,"taip",true))
		{
			SendClientMessage(playerid,GREEN," Pinigai bus imami");
			taxiDB[keleivis[playerid]][imti]=true;
    		playerDB[playerid][textas]=0;
			return 0;
		}

       	SendClientMessage(playerid,RED," Pinigai nebus imami");
		taxiDB[keleivis[playerid]][imti]=false;
	    return 0;
	}
 // ------------- ZOLE
 	else if(mode == 9)
	{
		new kaina = playerDB[playerid][rkaina][0];
		new dealeris = playerDB[playerid][rid][0];
		new kiek = playerDB[playerid][rkiekis][0];
		if(!strcmp(text,"taip",true))
		{
			if(GetPlayerMoneyA(playerid) < kaina) return SendClientMessage(playerid,RED," Neturite tiek pinigø!");
			playerDB[dealeris][zole]-=kiek;
			playerDB[playerid][zole]+=kiek;
			GivePlayerMoneyA(playerid,-kaina);
			GivePlayerMoneyA(dealeris,kaina);
			SendClientMessage(playerid,GREEN," Nusipirkote þolës.");
			SendClientMessage(dealeris,GREEN," Pardavëte þolæ.");
			return 0;
		}
        SendClientMessage(playerid,RED," Þolë nenupirkta.");
		SendClientMessage(dealeris,RED," Þolë neparduota.");
		return 0;
	}
	return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
    printf("[COMMAND]: %s %s",GetPlayerNameEx(playerid), cmdtext);
    if(!Prisijunges[playerid]) return 0;
	if(CheckSpam(playerid)) return 0;
    return 1;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success) SendClientMessage(playerid, RED," Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	return 1;
}

CMD:pranesti(playerid,params[])
{
	new vardas[MAX_PLAYER_NAME], file[256], Timei[6], msg[64];
	GetPlayerName(playerid, vardas, MAX_PLAYER_NAME);
	getdate(Timei[3], Timei[4], Timei[5]);
	gettime(Timei[0], Timei[1], Timei[2]);
	format(file, 256, "saves/bugai.ini");
	if(!fexist(file)) dini_Create(file);
	format(msg, 64, "[%d/%d/%d %d:%d:%d] nuo %s : ", Timei[3], Timei[4], Timei[5], Timei[0], Timei[1], Timei[2], vardas);
	dini_Set(file, msg, (params[0]));
	SendClientMessage(playerid, BALTA, "{00FF00}Jûsø raportas sëkmingai iðsiûstas serverio administracijai");
	return SendClientMessage(playerid, BALTA, "{FFFFFF}Jeigu jûsø raportas pasitvirtins, su jumis susisieksime ir skirsime premijà.");
}

CMD:pervesti(playerid, params[])
{
	new id, kiek, vardas[MAX_PLAYER_NAME],zaidejas[MAX_PLAYER_NAME],masyvas[66];
	if(sscanf(params, "ud",id,kiek)) return SendClientMessage(playerid, -1, "* Pervesti pinigus: /pervesti [Vardas_Pavarde] [Kiek]");
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid, -1, "* Tokio aidejo nera");
	else if(id == playerid) return SendClientMessage(playerid, -1, "* Sau pervesti negalima");
	else if(playerDB[playerid][banke] < kiek) return SendClientMessage(playerid, -1, "* Jus tiek neturite");
	else
{
	GetPlayerName(id, vardas, sizeof(vardas));
	GetPlayerName(playerid, zaidejas, sizeof(zaidejas));
	playerDB[playerid][banke]-=kiek;
	playerDB[id][banke]+=kiek;
	format(masyvas, 60, "* Pervedete %s aidejui %d Eurø",vardas, kiek);
	SendClientMessage(playerid,-1, masyvas);
	format(masyvas, 65, "* aidejas %s pervede jums %d Eurø",zaidejas,kiek);
	SendClientMessage(id, -1, masyvas);
}
	return 1;
}
CMD:komandos(playerid, params[])
{
    new strf[3640], str[160];
	str = "{e6ff00}» {3300ff}/info {FF9900}- {33AA33}info apie vartotojà.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/pervesti {FF9900}- {33AA33}Pinigø pervedimas á kito þaidëjo banko sàskaità.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/kviesti {FF9900}- {33AA33}tarnybø iðkvietimas. {FF9900}( {FF0000}policijà, taksi, medikus... {FF9900}).\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/paslaugos {FF9900}- {33AA33}informacija apie paslaugas.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/persirengti {FF9900}- {33AA33}pasikeièiate drabuþius.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/pusti {FF9900}- {33AA33}vartoti narkotines medþiagas.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/alga {FF9900}- {33AA33}paþiûrëti kiek pinigø turite algoje.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/mapp {FF9900}- {33AA33}nusiunèiate uþklausà á þaidëjo koordinates.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/admin {FF9900}- {33AA33}paþiûrëti kokie administratoriai yra serveryje {FF9900}({FF0000}online{FF9900}).\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/admin [tekstas] {FF9900}- {33AA33}paraðyti þinutæ administratoriams.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/direktoriai {FF9900}- {33AA33}paþiûrëti prisijungusius/atsijungusius direktorius.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/gps {FF9900}- {33AA33}suþinoti svarbiausias serverio vietas.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/veiksmai {FF9900}- {33AA33}visi serverio veiksmai.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/tlf {FF9900}- {33AA33}telefono valdymas.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/masinos {FF9900}- {33AA33}transporto priemoniø valdymas.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/namas {FF9900}- {33AA33}namø valdymas.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/vip {FF9900}- {33AA33}paþiûrëti kokie VIP nariai yra serveryje {FF9900}({FF0000}online{FF9900}).\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/vip [tekstas] {FF9900}- {33AA33}paraðyti þinutæ VIP nariams.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/stiliai {FF9900}- {33AA33}pasirinkti muðimosi stiliø.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/pagalba {FF9900}- {33AA33}pagalba þaidëjui.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/darbai {FF9900}- {33AA33}perþiûrëti darbø sàraðà.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/taisykles {FF9900}- {33AA33}serverio taisyklës.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/vipinfo {FF9900}- {33AA33}VIP narysèiø privilegijos.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/darboxp {FF9900}- {33AA33}suþinosite savo darbø XP kieká.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/ispejimai {FF9900}- {33AA33}suþinosite savo turimus áspëjimus.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/paliktidarba {FF9900}- {33AA33}paliksite savo dirbamà darbà.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/oras {FF9900}- {33AA33}pasikeisite orà á giedrà. {FF9900}( {FF0000}matomas tik jums {FF9900}).\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/salmas {FF9900}- {33AA33}uþsidësite ant galvos ðalmà.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/refresh {FF9900}- {33AA33}jeigu uþsibugino raðyktie ðia komandà.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/nustatymai {FF9900}- {33AA33}iðjungsite/Ájungsite tekstûras {FF9900}( {FF0000}matomas tik jums {FF9900}).\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/misija {FF9900}- {33AA33}serverio misijos.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/radistams {FF9900}- {33AA33}paraðysite þinutæ radistams.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/pavaduotojam {FF9900}- {33AA33}paraðysite þinutæ pavaduotojams.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/direktoriam {FF9900}- {33AA33}paraðysite þinutæ direktoriams.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/narkomanas {FF9900}- {33AA33}suþinosite savo turimø narkotikø kieká ir jø naudojimà.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/cpass {FF9900}- {33AA33}pasikeisite þaidime savo slaptaþodá á naujà.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/masinos {FF9900}- {33AA33}Jûsø tr.priemonës valdymas.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/apsaugos {FF9900}- {33AA33}Jûsø apsaugø valdymas.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/lobis {FF9900}- {33AA33}lobiø paieðka.\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/bakelis {FF9900}- {33AA33}uþsipilsite maðina 40L degalø {FF9900}( {FF0000}jeigu turite bakelá {FF9900}).\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/draudimai {FF9900}- {33AA33}pasiþiûrësite ar turite VIP ar Administratoriaus draudimà .\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/autopilotas {FF9900}- {33AA33}maðina vaþiuos MAX 90KM/H .\n"; strcat(strf, str);
	str = "{e6ff00}» {3300ff}/gkomandos {FF9900}- {33AA33}gaujø komandos .\n"; strcat(strf, str);
	ShowPlayerDialog(playerid, 4711, DIALOG_STYLE_LIST, "{33ffcc}Serverio komandos", strf, "Uþdaryti", "");
	return 1;
}
CMD:gkomandos(playerid, params[])
{
    new strf[500], str[120];
    str = "{ffffff}» {ff9000}/gsukurti {ffffff}- Ákursite serveryje savo nuosavà gaujà .\n"; strcat(strf, str);
	str = "{ffffff}» {ff9000}/gauja {ffffff}- Gaujos leaderio ir nario valdymas .\n"; strcat(strf, str);
	str = "{ffffff}» {ff9000}/gpriimt {ffffff}- Priimt kvietimà ástotá á gaujà .\n"; strcat(strf, str);
	str = "{ffffff}» {ff9000}/gatmest {ffffff}- Atmesti kvietimà ástotá á gaujà ."; strcat(strf, str);
	ShowPlayerDialog(playerid, 4713, DIALOG_STYLE_LIST, "{33ffcc}Gaujø komandos", strf, "Uþdaryti", "");
	return 1;
}
CMD:taisykles(playerid)
{
 	new strf[3300], str[400];
 	str = "\tTaisyklës, kurias paþeidus galite gauti BAN mûsø serveryje:\n\n"; strcat(strf, str);
 	str = "\t Draudþiama naudoti èytus (áskaitomi ir visokie ledo modai), kurie palengvina ir trigdo þaidimà.\n"; strcat(strf, str);
 	str = "\t Draudþiama naudoti bugus. Apie juos turite praneðti forume. Iðimtis jeigu klaida yra rimta, tada jà turite praneðti á skype  ir nrmg.lt\n"; strcat(strf, str);
 	str = "\t Draudþiama reklamuoti kitus SA:MP serverius, apie tai patariam, net nekalbëti ( uþ kalbëjimà administratorius bano dëti negali, o turi tiesiog áspëti paðnekovus baigti pokalbá\n"; strcat(strf, str);
 	str = "\tarba pratæsti já uþ serverio ribø, pvz skype chate) jeigu paðnekovai neklauso administratoriaus, jis turi pilnas teises bausti.\n"; strcat(strf, str);
 	str = "\t Draudþiama pardavinëti serverio valiutà, maðinas, verslus, namus, vartotojus ir kitus dalykus.\n"; strcat(strf, str);
 	str = "\t Draudþiama pirkti serverio valiutà, maðinas, verslus, namus, vartotojus ir kitus dalykus.\n"; strcat(strf, str);
 	str = "\t Draudþiama apgaudinëti serverio þaidëjus, tokie dalykai gali priversti ne tik iki bano, bet ir daug grieþèiau. Pvz: atimtas visas (net ir nepavogtas) turtas serveryje. Tokiais\n"; strcat(strf, str);
 	str = "\t veiksmais siekiama sumaþinti apgavysèiø skaièiø serveryje.\n\n"; strcat(strf, str);
 	str = "\tTaisyklës, kurias paþeidus galite gauti LAIKO BAN mûsø serveryje:\n\n"; strcat(strf, str);
 	str = "\t Draudþiama naujokui trukdyti pradëti þaidimà. Pvz: trukdyti laikyti teises.\n"; strcat(strf, str);
 	str = "\t Draudþiama stumti kitø þaidëjø nuosavas maðinas á vandená, ar kaþkaip kitaip stengtis jas sunaikinti.\n"; strcat(strf, str);
 	str = "\t Draudþiama trukdyti atrankas/renginius/eventus. Uþ ðá paþeidimà galite bûti nubaustas pasirinktinai. ÁKALINIMU arba LAIKO BAN.\n"; strcat(strf, str);
 	str = "\t Civiliams (iðimtis mafijozams, gaujos nariams, medikams) draudþiama lygti á narkotik sandelius, kai ten ðaudosi teisësauga/mafija.\n"; strcat(strf, str);
 	str = "\t Draudþiama stumdyti á vandená/bandyti apversti ar kitaip tyèia sunaikinti kitø þaidëjø nuosavas maðinas.\n\n"; strcat(strf, str);
 	str = "\tTaisyklës, kurias paþeidus galite bûti ÁKALINIMAS mûsø serveryje:\n\n"; strcat(strf, str);
 	str = "\t Draudþiama trukdyti atrankas/renginius/eventus. Uþ ðá paþeidimà galite bûti nubausti pasirinktinai. ÁKALINIMU arba LAIKO BAN.\n\n"; strcat(strf, str);
 	str = "\tTaisyklës, kurias paþeidus galite bûti UÞTILDYTAS mûsø serveryje:\n\n"; strcat(strf, str);
 	str = "\t Draudþiama áþeidinëti þmonës prièiai/vieðai. Jeigu þmogø pavadinsite tarkim gaidys ir bandysite ásisukti, jog tai yra paukðtis, o ne áþeidimas Jums nepavyks. Þmogus, kurá\n"; strcat(strf, str);
 	str = "\tpavadinote taip gali traktuoti á áþeidimà.\n"; strcat(strf, str);
 	str = "\t Draudþiama floodinti á chatà ar kur kitur (flood skaitomas, kai paraðomas nemaþiau kaip 4 þinutës tokios pat þinutës vienu metu) arba iðtisai yra raðoma po kelias tokias pat þinutes.\n"; strcat(strf, str);
	str = "\t Draudþiama naudoti /admin ne pagal paskirtá. Ði komanda yra skirta papraðyti administratoriø pagalbos arba atsakyti á administratoriaus klausimà Jums (tarkim yra\n"; strcat(strf, str);
	str = "\tdaromas eventas) ir jo vedëjas praneða: Bëgimo eventas, kà get /admin\n"; strcat(strf, str);
	str = "\t Draudþiama skelbiant skelbimà raðyti áþeidimus, keiksmaþodþius ar kaþkà panaðaus. Jos skirtos paskelbti apie pardavimà/pirkimà praneðti apie atrankas/eventus/renginius ar\n"; strcat(strf, str);
	str = "\tapie kokià kità svarbià informacijà.\n"; strcat(strf, str);
	ShowPlayerDialog(playerid, 426, DIALOG_STYLE_MSGBOX, "Serverio taisyklës | Atnaujinta: 2019-05-27", strf, "Uþdaryti", "");
 	return 1;
}
CMD:autopilotas(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, 0xFF000030, " Turite bûti uþ vairo !");
 	new vehicleid = GetPlayerVehicleID(playerid);
    if(IsABike(vehicleid)) return SendClientMessage ( playerid , RED , " Dviraèiuose ribotuvo nëra !" ) ;
	if(Ribotuvas[playerid] == false)
	{
		Ribotuvas[playerid] = true;
		SetPlayerSpeedCap(playerid, GREICIO_RIBA);
		playerDB[playerid][suautopilotu] = true;
		SendClientMessage(playerid, GREEN, " Ribotuvas ájungtas. Vaþinëdami su ribotuvu gausite á algà {FFFF00}2/MIN");
	}
	else
	{
		Ribotuvas[playerid] = false;
		DisablePlayerSpeedCap(playerid);
		playerDB[playerid][suautopilotu]=false;
		SendClientMessage(playerid, RED, " Ribotuvas iðjungtas");
	}
	return 1;
}
CMD:radijas(playerid, params[])
{
	if(GetPlayerVehicleSeat(playerid) != 0 && GetPlayerVehicleSeat(playerid) != 1) return SendClientMessage(playerid, 0xFF0000FF, "» Jûs turite sëdëti tr. priemonës priekyje!");
	new vehicleid = GetPlayerVehicleID(playerid), szRadio[145];
	format(szRadio, sizeof(szRadio), "Paleisti radija\nIðjungti radija\n \nDabar groja: {FF0000}%s", (isnull(RadijosURL[vehicleid])) ? ("Niekas") : (RadijosPavadinimas[vehicleid]));
	ShowPlayerDialog(playerid, 1340, DIALOG_STYLE_LIST, "Pasirinkite skilti", szRadio, "Rinktis", "Uzdaryti");
	return 1;
}
CMD:draudimai(playerid)
{
	new masyvas [ 290 ] , draudimai [ 20 ] , draudimais [ 20 ] , draudimaiss [ 20 ] ;
	if(playerDB[playerid][ADraudimas]) draudimai = "Turite";
	else if(!playerDB[playerid][ADraudimas]) draudimai = "{33AA33}Neturite";
	if(playerDB[playerid][VDraudimas]) draudimais = "Turite";
	else if(!playerDB[playerid][VDraudimas]) draudimais = "{33AA33}Neturite";
	if(playerDB[playerid][GDraudimas]) draudimaiss = "Turite";
	else if(!playerDB[playerid][GDraudimas]) draudimaiss = "{33AA33}Neturite";
	format(masyvas, sizeof(masyvas), "\t{FF0000}Jûsø turimi draudimai !\n\n{C0C0C0}Administratoriaus draudimas: {FF0000}%s{C0C0C0}\nVIP draudimas: {FF0000}%s{C0C0C0}\nGaujø draudimas: {FF0000}%s" , draudimai , draudimais , draudimaiss ) ;
	ShowPlayerDialog(playerid, 8001, DIALOG_STYLE_MSGBOX, "Draudimai",masyvas, "Uþdaryti", "");
	return 1;
}
CMD:ispejimai(playerid)
{
	new masyvas[280] ;
	format(masyvas, sizeof(masyvas), "\t{FF0000}Jûsø turimi áspejimai !\n\n{C0C0C0}Jûsø darbo direktoriaus gauti áspëjimai: {FF0000}%d{C0C0C0}\nDirektoriaus áspëjimø: {FF0000}%d{C0C0C0}\nAdministratoriø áspëjimai: {FF0000}%d{C0C0C0}\nVIP áspëjimai: {FF0000}%d",playerDB[playerid][ispejimai],playerDB[playerid][dispejimai],playerDB[playerid][aispejimai],playerDB[playerid][vispejimai]);
	ShowPlayerDialog(playerid, 8000, DIALOG_STYLE_MSGBOX, "Áspëjimai",masyvas, "Uþdaryti", "");
	return 1;
}
CMD:paliktidarba(playerid)
{
	if(playerDB[playerid][specialybe]==0) return SendClientMessage(playerid,RED," Jûs niekur nedirbate.");
	ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
	return 1;
}
CMD:salmas(playerid)
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, 0xFFFFFFFF, " Turite bûti uþ vairo.");
	if(!IsPlayerAttachedObjectSlotUsed(playerid, SLOT))
	{
		switch(GetPlayerSkin(playerid))
		{
			case 0, 65, 74, 149, 208, 273:  SPAO{0.070000, 0.000000, 0.000000, 88.000000, 75.000000, 0.000000}
			case 1..6, 8, 14, 16, 22, 27, 29, 33, 41..49, 82..84, 86, 87, 119, 289: SPAO{0.070000, 0.000000, 0.000000, 88.000000, 77.000000, 0.000000}
			case 7, 10: SPAO{0.090000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
			case 9: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
			case 11..13: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 90.000000, 0.000000}
			case 15: SPAO{0.059999, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
			case 17..21: SPAO{0.059999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 23..26, 28, 30..32, 34..39, 57, 58, 98, 99, 104..118, 120..131: SPAO{0.079999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 40: SPAO{0.050000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 50, 100..103, 148, 150..189, 222: SPAO{0.070000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 51..54: SPAO{0.100000, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 55, 56, 63, 64, 66..73, 75, 76, 78..81, 133..143, 147, 190..207, 209..219, 221, 247..272, 274..288, 290..293: SPAO{0.070000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 59..62: SPAO{0.079999, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 77: SPAO{0.059999, 0.019999, 0.000000, 87.000000, 82.000000, 0.000000}
			case 85, 88, 89: SPAO{0.070000, 0.039999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 90..97: SPAO{0.050000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 132: SPAO{0.000000, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 144..146: SPAO{0.090000, 0.000000, 0.000000, 88.000000, 82.000000, 0.000000}
			case 220: SPAO{0.029999, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 223, 246: SPAO{0.070000, 0.050000, 0.000000, 88.000000, 82.000000, 0.000000}
			case 224..245: SPAO{0.070000, 0.029999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 294: SPAO{0.070000, 0.019999, 0.000000, 91.000000, 84.000000, 0.000000}
			case 295: SPAO{0.050000, 0.019998, 0.000000, 86.000000, 82.000000, 0.000000}
			case 296..298: SPAO{0.064999, 0.009999, 0.000000, 88.000000, 82.000000, 0.000000}
			case 299: SPAO{0.064998, 0.019999, 0.000000, 88.000000, 82.000000, 0.000000}
 		}
	}
	else
	{
		RemovePlayerAttachedObject(playerid, SLOT);
	}
	return 1;
}
CMD:pakeistilyti(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return 0;
	new skaicius,id;
	if(sscanf(params, "ud",id,skaicius)) return SendClientMessage(playerid, BLUE, " Pakeisti lytá : /pakeistilyti [V_P] [ID]");
	else if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra");
	else
	{
	    playerDB[id][lytis] = skaicius;
	    SendClientMessage(playerid, BLUE, " Pakeièiau lytá");
	}
	return true;
}
CMD:pagalba(playerid)
{
	new masyvas[325];
	format(masyvas, 325, "Po registracijos jûs gavote 20000EUR. Ið pirmo patariame jums\nnusipirkti telefonà ir panaðiø reikmenø. Visà tai gausite elektronikos parduotuvëje.\n\nPirmasis darbas yra Krovikai. Jame jûs galësite uþsidirbti  pinigëliø.\nVëlesni darbai reikalauja vairuotojo paþymëjimo. Já galite gauti vairavimo mokykloje.");
 	ShowPlayerDialog(playerid, 429, DIALOG_STYLE_MSGBOX, "Pagalba þaidëjams",masyvas, "Gerai", "");
 	return 1;
}
CMD:bakelis(playerid)
{
    new vehicleid = GetPlayerVehicleID ( playerid ) ;
    if(!playerDB[playerid][bakelis]) return SendClientMessage(playerid,RED,"{37f467} Jûs neturite nusipirkes {ccff66}bakelio {37f467}!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "{37f467} Bakelá panaudoti galite tik álipæs á maðinà uþ vairo {ccff66}.");
	if(vehicleDB[vehicleid][gas] > 20) return SendClientMessage(playerid, RED, "{37f467} Pripylti á maðinà degalø galite tik kai bake bus {ccff66}20 {37f467}litrø degalø {ccff66}!");
	vehicleDB[GetPlayerVehicleID(playerid)][gas]+= 40 ;
	playerDB[playerid][bakelis]=0 ;
	SendClientMessage(playerid, BLUE, "{37f467} Pripildëte maðinà {ccff66}40 {37f467}litrø degalø {ccff66}!");
	SendClientMessage(playerid, BLUE, "{37f467} Bet tuo paèiu, praradote savo turimà bakelá {ccff66}!");
	return 1;
}
CMD:duotibakeli(playerid, params[])
{
	if(!playerDB[playerid][bakelis]) return SendClientMessage(playerid,RED,"{37f467} Jûs neturite nusipirkes {ccff66}bakelio {37f467}!");
	new id , str [200] ;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, "{37f467} Naudojimas: {ccff66}/duotibakeli [ Vardas_Pavardë / ID ]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra !");
	if(playerDB[id][bakelis] == 1) return SendClientMessage(playerid, RED, "{37f467} Þaidëjas jau turi bakelá {37f467}!");
 	playerDB[id][bakelis]=1 ;
 	playerDB[playerid][bakelis]=0 ;
	format(str, sizeof(str), "{37f467} Þaidëjas {ccff66}%s {37f467}atidavë Jums savo bakelá {ccff66}.", GetPlayerNameEx(playerid));
	SendClientMessage(id, RED, str);
	format(str, sizeof(str), "{37f467} Atidavëte {ccff66}%s {37f467}savo turimà bakelá {ccff66}.", GetPlayerNameEx(id));
	SendClientMessage(playerid, RED, str);
	return 1;
}
CMD:melstis(playerid, params[])
{
    if(!PlayerInZone(playerid, MELSTIS_POS_MINX, MELSTIS_POS_MINY, MELSTIS_POS_MAXX, MELSTIS_POS_MAXY)) return SendClientMessage(playerid, RED, "{37f467} Melstis galima tik {ccff66}baþnyèioje {37f467}! {ccff66}/gps > Kitos vietos > Baþnyèia");
    if(playerDB[playerid][KadaMeldes] > gettime()) return SendClientMessage(playerid, RED, "{37f467} Melstis galite tik kas {ccff66}5 {37f467}minutes {37f467}!");
    SetPlayerScore(playerid, GetPlayerScore(playerid) + 5);
    SendClientMessage(playerid,PLAYCOL_HIDDEN,"{37f467}» Pasimeldetë gavote uþ tai {ccff66}5 {37f467}patirties taðkus {ccff66}!");
    SendClientMessage(playerid,PLAYCOL_HIDDEN,"{37f467}» Melstis galësite vël tik po {ccff66}5 {37f467}minuèiø {ccff66}!");
    playerDB[playerid][KadaMeldes] = gettime() + 300;
 	return 1;
}
CMD:cpass(playerid, params[])
{
	ShowPlayerDialog(playerid, DIALOG_SLAPTAZODZIO_KEITIMAS, DIALOG_STYLE_INPUT, "Slaptaþodis", "Slaptaþodþio keitimas\n\nNorëdami pasikeisti slaptaþodá, áveskite apaèioje!", "Pakeisti", "Iðeiti");
	return true;
}
CMD:refresh(playerid)
{
    if(Tazed[playerid]) return SendClientMessage(playerid, RED, "{37f467} Jûs esate paðautas tazerio {ccff66}!");
    if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, " Jûs esate ne lauke ! Todël refresh'inti negalite !");
	SetPlayerVirtualWorld ( playerid , 0 ) ;
	SetPlayerInterior ( playerid , 0 ) ;
	ClearAnimations ( playerid ) ;
	return 1;
}
CMD:skinti(playerid)
{
	if(playerDB[playerid][specialybe] !=5) return SendClientMessage(playerid, RED, " Jûs ne dyleris!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Jûs esate maðinoje!");
	if(AsJauSkinu[playerid] == 1) return SendClientMessage(playerid, RED, " Jûs jau skinate!");
	if(!IsPlayerInRangeOfPoint(playerid,5,2492.4163,-1712.0000,1014.7422) && !IsPlayerInRangeOfPoint(playerid,5,2497.3657,-1703.6094,1014.7422))
	{
	    SendClientMessage(playerid, RED, " Jûs ne skinimo vietoje!");
		return 1;
	}
	GameTextForPlayer(playerid, "~g~Pradejote skinti...", 5000, 5);
	SetTimerEx("SkinimasDyleriams", 10000, false, "i",playerid);
	AsJauSkinu[playerid] = 1;
	TogglePlayerControllable(playerid,false);
	return 1;
}
CMD:dirzas(playerid)
{
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage ( playerid , RED , " Tu esi ne maðinoje !" ) ;
    new vehicleid = GetPlayerVehicleID(playerid);
    if(IsABike(vehicleid)) return SendClientMessage ( playerid , RED , " Dviraèiuose dirþas nesideda !" ) ;
	if(playerDB[playerid][Dirzas] == true)
	{
		SendClientMessage(playerid, WHITE, " Dirþai sëkmingai {FF0000}nuiimti.");
	    playerDB[playerid][Dirzas] = false;
	    return true;
	}
	playerDB[playerid][Dirzas] = true;
	SendClientMessage(playerid, WHITE, " Saugos dirþai sëkmingai {6EF83C}uþdëti.");
	return true;
}
CMD:oras(playerid,params[])
{
	SendClientMessage(playerid, RED, "{6EF83C} Jus pasikeitete orà á {FFAF00}Giedra{6EF83C}(oras matomas tik jums)");
	SetPlayerWeather( playerid, 0 );
	return 1;
}
CMD:alga(playerid, params[])
{
	new msg[45];
	format(msg,sizeof(msg),"Jûs esate uþdirbæs: %s ",konvertuoti_pinigus(playerDB[playerid][alga]));
	ShowPlayerDialog(playerid,5425, DIALOG_STYLE_MSGBOX,"Alga",msg, "Gerai","");
	SendClientMessage(playerid,YELLOW," Atsiimti savo uþdirbtà algà galite Vyriausybëje kurià rasite paraðæ /gps > Svarbios Vietos > Vyriausybë");
	return 1;
}
CMD:gps(playerid)
{
    ShowGpsFirstDialog(playerid);
    return 1;
}
CMD:navigacija(playerid)
{
	SendClientMessage(playerid, RED, " Apgailëstaujame, tokios komandos mûsø serveryje nëra. Galbût turëjote omenyje: {FFFFFF}/gps{FF0000}?");
	return 1;
}
CMD:apsaugos ( playerid ) {
	new string [ 300 ] , ipapsauga [ 30 ] ;
	if ( playerDB [ playerid ] [ ipSecurity ] ) ipapsauga = "{ff0000}Iðjungti";
	else ipapsauga = "{00aa46}Ájungti";
	format ( string , sizeof ( string ) ,
	"{bebebe}Jûsø apsaugø nustatymas:\n\
	{ffffff}IP apsauga [ %s {ffffff}]" ,
	ipapsauga ) ;
	ShowPlayerDialog ( playerid , 14081 , DIALOG_STYLE_LIST , "{ffffff}Apsaugos" , string , "Rinktis" , "Uþdaryti" ) ;
	return 1;
}
CMD:ofisas(playerid)
{
	if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite gaudomumo lygá, todël OFISE bûti negalite!");
    if(!IsPlayerInRangeOfPoint(playerid, 5, 355.4536,152.4572,1025.7891) && !IsPlayerInRangeOfPoint(playerid, 5, 355.1064,171.7894,1025.7891) &&
	!IsPlayerInRangeOfPoint(playerid, 5, 362.7188,171.6240,1025.7891) && !IsPlayerInRangeOfPoint(playerid, 5, 362.6984,152.5808,1025.7891))
    {
        SendClientMessage(playerid, RED, " Jus neesate ofise ! já rasti galite {FFAF00}/gps > Kitos vietos > Ofiso Darbas");
        return 1;
    }
	if(OfisoDarbas[playerid])
	{
	    SendClientMessage(playerid, RED, " Sëkmingai baigete ofiso darbus.");
	    OfisoDarbas[playerid] = false;
	    TogglePlayerControllable(playerid,1);
	    KillTimer(OfisoTimer[playerid]);
	    return 1;
	}
	SendClientMessage(playerid, GREEN, " Sëkmingai prisijungëte á AFK ZONÀ.");
	SendClientMessage ( playerid , GREEN , " Bûdami ofise gausit {ffffff}2" ) ;
	OfisoDarbas[playerid] = true;
	TogglePlayerControllable(playerid,0);
	OfisoTimer[playerid] = SetTimerEx("OfisoDarbass",60000,1,"i",playerid);
	return 1;
}
CMD:stiliai(playerid)
{
	ShowPlayerDialog(playerid, 5120, DIALOG_STYLE_LIST, "Kovø stiliai", "Elbow\nBoxo\nGrabKick\nKneeHead\nKungFu\nPaprastas", "Pasirinkti", "Atsaukti");
	return 1;
}
CMD:sunaikinti(playerid)
{
	new spc = playerDB[playerid][specialybe];
	new vehicleid = GetPlayerVehicleID(playerid);
	new model = GetVehicleModel(vehicleid);
	new masyvas[1660];
	if(playerDB[playerid][specialybe] == 0) return SendClientMessage(playerid, RED, " Savo maðinà darbinæ gali sunaikinti tik þmonës kurie dirba.");
	vehicleDB[vehicleid][Rida] = 0.0;
	switch(spc)
	{
	    case 1:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(model == 523 || model == 599 || model == 596 || model == 427 || model == 497)
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
 	    		format(masyvas, 95, "[Policijos Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToCops(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 2:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(vehicleid >= medcar[0] && vehicleid <= medcar[10])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Medikø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToMedics(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 3:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Taksi Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToTaxi(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 4:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(model == 525)
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Mechanikø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToMechanikas(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 5:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(vehicleid >= dylcar[0] && vehicleid <= dylcar[11])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Dyleriø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToGdyleriai(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 10:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(model == 490 || model == 528)
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[SWAT Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToSwatams(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 11:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Fûristø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToFUROS(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 13:
	    {
     		if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(vehicleid >= RadistuCar[0] && vehicleid <= RadistuCar[8])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Radistø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToRadistams(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 14:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Norint sunaikinti maðinà turi bûti maðinoje!");
			if(vehicleid >= BaikeriuCar[0] && vehicleid <= BaikeriuCar[9])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Baikeriø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToBaikeriams(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, "* Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 15:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Norint sunaikinti maðinà turi bûti maðinoje!");
			if(vehicleid >= KluboCar[0] && vehicleid <= KluboCar[5])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Klubo  Costello  Racija] Klubo narys {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToKlubui(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, "* Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 16:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Norint sunaikinti maðinà turi bûti maðinoje!");
			if(vehicleid >= Klubo2Car[0] && vehicleid <= Klubo2Car[5])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Klubo  - Patriotai -  Racija] Klubo narys {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToKlubuui(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, "* Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 17:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Norint sunaikinti maðinà turi bûti maðinoje!");
			if(vehicleid >= spdcar[0] && vehicleid <= spdcar[26])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Armijos Racija] Darbuotojas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToSPD(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, "* Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 20:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(model == 448)
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Picerininkø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToPicerininkams(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 22:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
         	if(model == 574 || model == 552)
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Valytojø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToValytojams(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 24:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(model == 600)
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Medkirèiø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToMedkerciams(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, "* Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 26:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(model == 407)
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Gaistrininkø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToGaisrininkams(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 27:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(model == 442)
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Kunigø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToKunigams(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, "* Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 28:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(model == 472 || model == 473)
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Narø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToNarams(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, "* Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 29:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(model == 409)
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Limuzinininkø Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToLimuzininkams(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 40:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(vehicleid >= RifosCar[0] && vehicleid <= RifosCar[8])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Russian Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToRifa(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	    case 42:
	    {
	        if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint sunaikinti maðinà turi bûti maðinoje!");
	        if(vehicleid >= gstreetcar[0] && vehicleid <= gstreetcar[8])
			{
			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	    		format(masyvas, 95, "[Yakuza Racija] Þaidëjas {FFFFFF}%s {FFA500}sunaikino tr.priemonæ!",GetPlayerNameEx(playerid));
	    		SendMessageToGstreet(COLOR_RACIJA,masyvas);
	        }
	        else
	        {
				SendClientMessage(playerid, RED, " Galima sunaikinti tik savo darbiná transportà.");
	        }
	    }
	}
	return 1;
}
CMD:top(playerid)
{
    ShowPlayerDialog(playerid, 1475, DIALOG_STYLE_LIST, "{ffffff}TOP 10", "Top 10 pagal patirties taðkus\nTop 10 pagal pinigus\nTop 10 pagal kreditus\nTop 10 pagal pradirbtà laikà\nTop 10 pagal uþdirbtà algà\nTop 10 pagal ieðkomumo lygá\nTOP 10 pagal praþaista bendrai laikà\nTOP 10 pagal 1 maðinos ridà\nTOP 10 pagal 2 maðinos ridà", "Paþiûrëti", "Iðeiti");
    return 1;
}
CMD:variklis(playerid)
{
    new vehicleid = GetPlayerVehicleID(playerid);
    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, " Kad uþvestum maðinà turi sëdëti uþ jos vairo!");
    if(vehicleDB[vehicleid][gas] < 1) return SendClientMessage(playerid, RED, " Maðinoje nëra degalø kaip tu jà uþvesi?");
    new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
	GetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
	if(!Engine) { SetVehicleParamsEx(vehicleid, true, Lights, Alarm, Doors, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~g~UZVEDEI VARIKLI",2000,4); } else { SetVehicleParamsEx(vehicleid, false, Lights, Alarm, Doors, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~R~UZGESINAI VARIKLI",2000,4); }
	return 1;
}
CMD:zvejoti(playerid)
{
	if(!IsPlayerInRangeOfPoint(playerid,10, 1431.1145,-254.6659,6.2645) &&
	!IsPlayerInRangeOfPoint(playerid,10,1421.4216,-254.8006,6.2645) &&
	!IsPlayerInRangeOfPoint(playerid,10,1413.1129,-254.7549,6.2645) &&
	!IsPlayerInRangeOfPoint(playerid,10,1407.5969,-254.7410,6.2645) &&
	!IsPlayerInRangeOfPoint(playerid,10,1398.8552,-254.7296,6.2445) &&
	!IsPlayerInRangeOfPoint(playerid,10,1393.2410,-254.4523,6.2445))
	{
	    SendClientMessage(playerid, RED, " Jûs ne þvejojimo vietoje!");
	    return true;
	}
  	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Ið maðinos þvejoti neámanoma!");
  	if(playerDB[playerid][cuffed])     return SendClientMessage(playerid, RED, " Surakintam þvejoti negalima!");
  	new unguriai = playerDB[playerid][ungurys];
	new karosai = playerDB[playerid][karosas];
  	new karpiai = playerDB[playerid][karpis];
	new karsiai = playerDB[playerid][karsis];
	new lydekos = playerDB[playerid][lydeka];
 	if(unguriai + karosai + karpiai + karsiai + lydekos > 19) return SendClientMessage(playerid, RED, " Tu jau priþvejojas per daug þuvø daugiau nebetilps, neðk jas parduoti, nes negalësi þvejoti.");
	if(!playerDB[playerid][meskere]) return SendClientMessage(playerid, RED, " Neturi meðkerës, su kuo þvejosi? Nusipirk jà ''Þvejo prekës pas Antana''");
	if(!playerDB[playerid][valas]) return SendClientMessage(playerid, RED, " Neturi valo, kaip þvejosi? Nusipirk já ''Þvejo prekës pas Antana''");
	if(playerDB[playerid][masalas] == 0) return SendClientMessage(playerid, RED, " Neturi masalo, kurá kabinsi ant kabliuko. Nusipirk já ''Þvejo prekës pas Antana''");
	if(playerDB[playerid][zvejoja]) return SendClientMessage(playerid, RED, " Tu jau þvejoji, palauk kol iðkibs, arba iðtrauk meðkeræ be laimikio!");
	TogglePlayerControllable(playerid,false);
	playerDB[playerid][zvejoja] = true;
	playerDB[playerid][masalas] --;
	SendClientMessage(playerid, GREEN, " Uþmetei meðkeræ. Lauk kol uþkibs!");
	SetPlayerAttachedObject(playerid, 2,18632,6,0.079376,0.037070,0.007706,181.482910,0.000000,0.000000,1.000000,1.000000,1.000000);
  	ApplyAnimation(playerid, "SWORD", "sword_block", 4.1, 0, 1, 1, 1, 1, 1);
	ZvejojaEx[playerid] = SetTimerEx("Zvejoja", (10+random(30)) * 1000, false, "d", playerid);
	return 1;
}
CMD:paslaugos(playerid)
{
	SendClientMessage(playerid, RED, " Komanda laikinai iðjungta, norit uþsisakyti paslaugas kreiptis á administracija");
	//PirmasKredituDialogas(playerid);
	return 1;
}
CMD:likosedeti(playerid)
{
	new	valandos, minutes, sekundes, msg[100], Hour, Minute, Second;
	gettime(Hour, Minute, Second);
	if(playerDB[playerid][kalejimo_laikas] > 0)
	{
		sekundes = playerDB[playerid][kalejimo_laikas];
		while(sekundes >= 60)
		{
			sekundes -= 60;
			minutes++;
		}
		while(minutes >= 60)
		{
			minutes -= 60;
			valandos++;
		}
		format(msg, sizeof(msg), "~g~|~w~%i:%i:%i~g~|~n~|~w~%02i:%02i:%02i~g~|", Hour, Minute, Second, valandos, minutes, sekundes);
	}
	else
	{
		format(msg, sizeof(msg), "~g~|~r~%i:%i:%i~g~|", Hour, Minute, Second);
	}
	GameTextForPlayer(playerid, msg, 3000, 1);
	return 1;
}
CMD:raktas(playerid)
{
	new house = playerDB[playerid][NamoID];
	if(house > -1)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, hInfo[house][IntX], hInfo[house][IntY], hInfo[house][IntZ]))
		{
    		if(strcmp(hInfo[house][Owner], GetPlayerNameEx(playerid), false)) return SendClientMessage(playerid, RED, " Jûs ne namo savininkas.");
			if(!hInfo[house][Locked])
			{
				hInfo[house][Locked] = true;
				SendClientMessage(playerid, -1, "Uþrakinote namo duris.");
			}
			else
			{
				hInfo[house][Locked] = false;
				SendClientMessage(playerid, -1, "Atrakinote namo duris.");
			}
			SaveHouse(house);
			return 1;
		}
	}
	for(house = 0; house < MAX_HOUSES; house++)
    {
		if(IsPlayerInRangeOfPoint(playerid, 2.0, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ]))
		{
    		if(strcmp(hInfo[house][Owner], GetPlayerNameEx(playerid), false)) return SendClientMessage(playerid, RED, " Jûs ne namo savininkas.");
			if(!hInfo[house][Locked])
			{
				hInfo[house][Locked] = true;
				SendClientMessage(playerid, GREEN, "Uþrakinote namo duris.");
			}
			else
			{
				hInfo[house][Locked] = false;
				SendClientMessage(playerid, GREEN, "Atrakinote namo duris.");
			}
			SaveHouse(house);
			return 1;
		}
	}
	return 1;
}
CMD:namas(playerid, params[])
{
    SendClientMessage(playerid,BLUE,"{37f467} Jûs galite uþvalgyti namuose visiðkai nemokamai .{ccff66} /valgis ");
	new house = playerDB[playerid][NamoID];
	if(house == -1) return SendClientMessage(playerid, -1, "Klaida, turite bûti namie.");
	if(strcmp(hInfo[house][Owner], GetPlayerNameEx(playerid), false)) return SendClientMessage(playerid, -1, "Klaida, jûs ne namo savininkas.");
	ShowPlayerDialog(playerid, HOUSE_DIALOG, DIALOG_STYLE_LIST, "{ffffff}Namo meniu", "{ffffff}Padëti pinigus.\nPaimti pinigus.\nParduoti namà.\nPerleisti namà.\nParduoti namà þmogui.\nRemontuoti", "Rinktis", "Uþdaryti");
	return 1;
}
CMD:valgis(playerid, params[])
{
	new house = playerDB[playerid][NamoID];
	if(house == -1) return SendClientMessage(playerid, -1, "Klaida, turite bûti namie.");
	if(strcmp(hInfo[house][Owner], GetPlayerNameEx(playerid), false)) return SendClientMessage(playerid, -1, "Klaida, jûs ne namo savininkas.");
	playerDB[playerid][alkis] += 100;
    if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
    UpdateAlkanasTextdraw( playerid );
    SetPlayerDrunkLevel(playerid, 0);
	SendClientMessage(playerid,BLUE,"{37f467} Uþvalgetë, Jûsø alkis {ccff66}100 {37f467}procentø !");
	ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	return 1;
}
getCarStatus ( id ) {
	new statusas [ 50 ];
	if ( vehicleDB [ id ] [ vSprogo ] )
	    statusas = "{ff0000}Sudauþyta";
	else
     	statusas = "{ffff00}Nesudauþyta";
	return statusas;
}
CMD:masinos ( playerid ) {
	new string [ 600 ] ;
	if ( playerCar1 [ playerid ] != -1 || playerCar2 [ playerid ] != -1 ) {
	    format ( string , sizeof ( string ) , "{bebebe}Nuosavø {00aa46}tr. priemoniø {bebebe}valdymas\n{bebebe}Iðrinkite {00aa46}kurá tr.priemone {bebebe}norite valdytá" ) ;
	    printf ( "masinos suveike1" ) ;
	    if ( playerCar1 [ playerid ] != -1 && playerCar2 [ playerid ] == -1 ) {
	        new veh = playerCar1 [ playerid ];
			format ( string , sizeof ( string ) , "%s\n\t{ffffff}» {00aa46}%s [ {bebebe}Numeriai %s {00aa46}] [ {bebebe}Statusas: %s {00aa46}]\n\t{ffffff}» {00aa46}Neturite antros maðinos" ,
			string , VehicleNames [ vehicleDB [ veh ] [ vModel ] - 400 ] , vehicleDB [ veh ] [ numeriai ] ,  getCarStatus ( veh ) );
			ShowPlayerDialog ( playerid , 14065 , DIALOG_STYLE_LIST , "{ffffff}Maðinø valdymas" , string , "Rinktis" , "" ) ;
         	printf ( "masinos suveike2" ) ;
	    }
		if ( playerCar1 [ playerid ] != -1 && playerCar2 [ playerid ] != -1 ) {
	     	new veh = playerCar1 [ playerid ];
	        new veh2 = playerCar2 [ playerid ];
			format ( string , sizeof ( string ) , "%s\n\t{ffffff}» {00aa46}%s [ {bebebe}Numeriai %s {00aa46}] [ {bebebe}Statusas: %s {00aa46}]\n\t{ffffff}» {00aa46}%s [ {bebebe}Numeriai %s {00aa46}] [ {bebebe}Statusas: %s {00aa46}]" ,
			string , VehicleNames [ vehicleDB [ veh ] [ vModel ] - 400 ]  , vehicleDB [ veh ] [ numeriai ] ,  getCarStatus ( veh ) ,
			VehicleNames [ vehicleDB [ veh2 ] [ vModel ] - 400 ]  , vehicleDB [ veh2 ] [ numeriai ] ,  getCarStatus ( veh2 )  );
			ShowPlayerDialog ( playerid , 14065 , DIALOG_STYLE_LIST , "{ffffff}Maðinø valdymas" , string , "Rinktis" , "Iðeiti" ) ;
		    printf ( "masinos suveike3" ) ;
		}
		if ( playerCar1 [ playerid ] == -1 && playerCar2 [ playerid ] != -1 ) {
  			new veh = playerCar2 [ playerid ];
			format ( string , sizeof ( string ) , "%s\n\t{ffffff}» {00aa46}Neturite pirmos maðinos\n\t{ffffff}» {00aa46}%s [ {bebebe}Numeriai %s {00aa46}] [ {bebebe}Statusas: %s {00aa46}]" ,
			string , VehicleNames [ vehicleDB [ veh ] [ vModel ] - 400 ] , vehicleDB [ veh ] [ numeriai ] ,  getCarStatus ( veh ) );
			ShowPlayerDialog ( playerid , 14065 , DIALOG_STYLE_LIST , "{ffffff}Maðinø valdymas" , string , "Rinktis" , "Iðeiti" ) ;
		    printf ( "masinos suveike4" ) ;
		}
		printf ( "masinos suveike5" ) ;
	}
	else {
		ShowPlayerDialog ( playerid , 14066 , DIALOG_STYLE_MSGBOX , "{ffffff}Maðinø valdymas" , "{ffffff}» {00aa46}Jûs neturite nupirktø maðinø!" , "Uþdaryti" , "" ) ;
	}
	return 1;
}
CMD:uzraktas ( playerid ) {
	new Float:vpos [ 6 ] ;
	GetVehiclePos ( playerCar1 [ playerid ] , vpos [ 0 ] , vpos [ 1 ] , vpos [ 2 ] ) ;
	GetVehiclePos ( playerCar2 [ playerid ] , vpos [ 3 ] , vpos [ 4 ] , vpos [ 5 ] ) ;
	if ( IsPlayerInRangeOfPoint ( playerid , 3.0 , vpos [ 0 ] , vpos [ 1 ] , vpos [ 2 ] ) ) {
		new veh = playerCar1 [ playerid ];
		if ( vehicleDB [ veh ] [ vLocked ] ) {
			vehicleDB [ veh ] [ vLocked ] = false;
		    SendClientMessage ( playerid , -1 , "[ {00aa46}TRANSPORTAS {ffffff}] Atrakinot savo {00aa46}tr.priemonæ!" ) ;
		}
		else {
		    vehicleDB [ veh ] [ vLocked ] = true;
		    SendClientMessage ( playerid , -1 , "[ {00aa46}TRANSPORTAS {ffffff}] Uþrakinot savo {00aa46}tr.priemonæ!" ) ;
		}
	}
	else if ( IsPlayerInRangeOfPoint ( playerid , 3.0 , vpos [ 3 ] , vpos [ 4 ] , vpos [ 5 ] ) ) {
		new veh = playerCar2 [ playerid ];
		if ( vehicleDB [ veh ] [ vLocked ] ) {
			vehicleDB [ veh ] [ vLocked ] = false;
		    SendClientMessage ( playerid , -1 , "[ {00aa46}TRANSPORTAS {ffffff}] Atrakinot savo {00aa46}tr.priemonæ!" ) ;
		}
		else {
		    vehicleDB [ veh ] [ vLocked ] = true;
		    SendClientMessage ( playerid , -1 , "[ {00aa46}TRANSPORTAS {ffffff}] Uþrakinot savo {00aa46}tr.priemonæ!" ) ;
		}
	}
	if ( playerCar1 [ playerid ] == -1 && playerCar2 [ playerid ] == -1 ) {
 		SendClientMessage ( playerid , RED , " Jûs neturite tr.priemoniø!" ) ;
	}
	return 1;
}
CMD:carmapas ( playerid ) {
	if ( playerCar1 [ playerid ] == -1 && playerCar2 [ playerid ] == -1 ) {
 		return SendClientMessage ( playerid , RED , " Jûs neturite tr.priemoniø!" ) ;
	}
	ShowPlayerDialog ( playerid , 14105 , DIALOG_STYLE_MSGBOX , "{ffffff}Maðinos paieðka" , "{ffffff}Iðrinkite kuri transportà norite ieðkoti" , "1" , "2" ) ;
	return 1;
}
CMD:parduoti ( playerid ) {

	if(!PlayerInZone(playerid, PARDAVIMAS_POS_MINX, PARDAVIMAS_POS_MINY, PARDAVIMAS_POS_MAXX, PARDAVIMAS_POS_MAXY)) return SendClientMessage(playerid, RED, " Parduoti savo tr.priemonæ galite tik parduodamø maðinø aikðtelëje : {FF8C00}/gps > Svarbios vietos > Parduodamø maðinø aikðtelë");
    
	if ( playerCar1 [ playerid ] != -1 || playerCar2 [ playerid ] != -1 ) {
 		ShowPlayerDialog ( playerid , 14090 , DIALOG_STYLE_MSGBOX , "{00aa46}Iðrinkite maðinà" , "{ffffff}Iðrinkite maðinà kuria norite parduotá" , "1" , "2" ) ;
	}
	else {
 		ShowPlayerDialog ( playerid , 14066 , DIALOG_STYLE_MSGBOX , "{ffffff}Maðinø pardavimas" , "{ffffff}» {00aa46}Jûs neturite nupirktø maðinø!" , "Uþdaryti" , "" ) ;
	}
	return 1;
}
/*CMD:psekti ( playerid , params[] ) {
	new pID , Float:velocity [ 3 ];
	if ( sscanf ( params , "u" , pID ) ) return SendClientMessage ( playerid , RED , " Naudojimas: /psekti [ Vardas_Pavardë ]" ) ;
	if ( playerDB [ playerid ] [ specialybe ] != 1 || playerDB [ playerid ] [ specialybe ] != 10 || playerDB [ playerid ] [ specialybe ] != 17 ) return 0;
	if ( pID == playerid ) return SendClientMessage ( playerid , RED , " Savæs sëktá negalite" ) ;
	if ( !IsPlayerConnected ( pID ) ) return SendClientMessage ( playerid , RED , " Þaidëjas neprisijungæs!" ) ;
	if ( !Sekia [ playerid ] ) {
		GetPlayerPos ( pID , velocity [ 0 ] , velocity [ 1 ] , velocity [ 2 ] ) ;
		if ( IsPlayerInRangeOfPoint ( playerid , 20.0 , velocity [ 0 ] , velocity [ 1 ] , velocity [ 2 ] ) )  {
			Sekia [ playerid ] = true;
			SekiamojoID [ playerid ] = pID;
			STimeris [ playerid ] = SetTimerEx ( "pSektiUpdate" , 400 , true , "i" , playerid ) ;
			SendClientMessage ( playerid , RED , " {ffffff}Pradëjote sëktá þaidëjà!" ) ;
		}
		else return SendClientMessage ( playerid, RED , " Jûs turite bûti netoliau uþ 20m. nuo þaidëjo!" ) ;
	} else {
		for ( new i = 0; i < 3; i ++ ) {
			playerDB [ playerid ] [ pVelocity ] [ i ] = 0.0;
		}
		Sekia [ playerid ] = false;
		SekiamojoID [ playerid ] = -1;
		KillTimer ( STimeris [ playerid ] );
  		ClearAnimations ( playerid ) ;
  		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		SendClientMessage ( playerid , RED , " {ffffff}Sustojot sëktá þaidëjà!" ) ;
	}
	return 1;
}*/

COMMAND:reglog(playerid)
{
	if(playerDB[playerid][authstate] == 3) return SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Jus jau esate prisijungæs");

	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][0]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][1]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][2]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][3]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][4]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][5]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][6]);
	PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][7]);

	SelectTextDraw(playerid, -1);

	return 1;
}

COMMAND:psekti(playerid, params[])
{
	new giveplayerid, Float: PlayerPos[3];

	if(playerDB[playerid][specialybe] != 1 || playerDB[playerid][specialybe] != 10 || playerDB[playerid][specialybe] != 17) return 0;

	if(sscanf(params, "r", giveplayerid))  return SendClientMessage(playerid, RED, " Naudojimas: /psekti [Vardas_Pavardë/ID]");

	if(giveplayerid == playerid)           return SendClientMessage(playerid, RED, " Savæs sekti negalite");

	if(giveplayerid == INVALID_PLAYER_ID)  return SendClientMessage(playerid, RED, " Þaidëjas neprisijungæs");

	if(!Sekia[playerid])
	{
		GetPlayerPos(giveplayerid, PlayerPos[0], PlayerPos[1], PlayerPos[2]);

		if(IsPlayerInRangeOfPoint(playerid, 20.0, PlayerPos[0], PlayerPos[1], PlayerPos[2]))
		{
			Sekia[playerid]        = true;

			SekiamojoID[playerid]  = giveplayerid;

			STimeris[playerid]     = SetTimerEx ("pSektiUpdate", 400, true, "i", playerid);

			SendClientMessage(playerid, GREEN, " Pradëjote sekti þaidëjà");
		}

		else return SendClientMessage(playerid, RED, " Jûs turite bûti netoliau uþ 20m. nuo þaidëjo");
	}
	else
	{
		for(new i = 0; i < 3; i ++)
		{
			playerDB[playerid][pVelocity][i] = 0.0;
		}

		Sekia[playerid]        = false;

		SekiamojoID[playerid]  = -1;

		KillTimer(STimeris[playerid]);

  		ClearAnimations(playerid);

  		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

		SendClientMessage(playerid, RED, " Baigëte sekti þaidëjà");
	}
 
	return 1;
}

forward pSektiUpdate ( playerid ) ;
public pSektiUpdate ( playerid ) {
	new idas = SekiamojoID [ playerid ] , Float:velocity [ 4 ];
 	GetPlayerPos ( playerid , velocity [ 0 ] , velocity [ 1 ] , velocity [ 2 ] ) ;
  	GetPlayerFacingAngle ( playerid , velocity [ 3 ] ) ;
  	new x , y ;
  	x = floatround ( velocity [ 0 ] ) ; y = floatround ( velocity [ 1 ] ) ;
  	if ( !bega [ playerid ] ) {
		ApplyAnimation ( idas , "PED" , "WALK_PLAYER" , 4.1 , 0 , x , y , 1 , 1 , 1 ) ;
	}
	else {
	    ApplyAnimation ( idas , "PED" , "RUN_PLAYER" , 4.1 , 0 , x , y , 1 , 1 , 1 ) ;
	}
	if ( !IsPlayerInRangeOfPoint ( idas , 20.0 , velocity [ 0 ] , velocity [ 1 ] , velocity [ 2 ] ) ) {
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	    ClearAnimations ( idas ) ;
	    Stop ( idas ) ;
	    KillTimer ( STimeris [ playerid ] ) ;
	    Sekia [ playerid ] = false;
	    SekiamojoID [ playerid ] = -1;
	    SendClientMessage ( playerid , RED , " Jûs nuëjote per toli nuo jûsø sëkiamojo!" ) ;
	}
	SetPlayerFacingAngle ( idas , velocity [ 3 ] ) ;
	return 1;
}
CMD:ratai(playerid)
{
	if(playerDB[playerid][specialybe] !=4) return SendClientMessage(playerid, RED, "Jûs nesate Mechanikas!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, " Kad galëtum keisti maðinos ratus turi sedët uþ vairo");
	{
		ShowPlayerDialog(playerid,6001,DIALOG_STYLE_LIST,"Ratai po 1.000","Shadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic","Pasirinkti","Atðaukti");
		return 1;
	}
}
CMD:tune ( playerid)
{
	if(playerDB[playerid][specialybe] !=4) return SendClientMessage(playerid, RED, "Jûs nesate Mechanikas!");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,RED,"Jûs nesate maðinos vairuotojas!");
	else
	{
		new str [ 200 ];
		format(str,sizeof(str),"{33cc33}[ // ] {ffffff}Mechaniko vardas: {ffff00}%s\n          {33cc33}[ // ] {ffffff}Idëti nitro (pasirinkimai)\n          {33cc33}[ // ] {ffffff}Idëti hirdaulikà.",GetPlayerNameEx(playerid));
		ShowPlayerDialog(playerid,8040,DIALOG_STYLE_LIST,"Tiuninguoti maðina",str,"Rinktis","Iðeiti");
	}
	return true;
}
CMD:nustatymai(playerid, params[])
{
	ShowPlayerDialog(playerid, DIALOG_NUSTATYMAI, DIALOG_STYLE_LIST, "Nustatymai","{FF0000}Iðjungti {FFFFFF}uþraðà.\n{33AA33}Ájungti {FFFFFF}uþraðà.\n{FF0000}Iðjungti {FFFFFF}laikrodá (jeigu turite).\n{33AA33}Ájungti {FFFFFF}laikrodá (jeigu turite).\n{FF0000}Iðjungti {FFFFFF}alkio rodymà.\n{33AA33}Ájungti {FFFFFF}alkio rodymà.\n{FF0000}Iðjungti {FFFFFF}átarimo rodymà.\n{33AA33}Ájungti {FFFFFF}átarimo rodymà.","Pasirinkti","Atðaukti");
	return 1;
}
CMD:mapp(playerid, params[])
{
	new id, msg[128], Float:coo[6], salis1[10], salis2[10];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, " Suþinoti þaidëjo buvimo vieta: /mapp [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	if(GetPlayerInterior(id) != 0) return SendClientMessage(playerid, RED, " Þaidëjo pozicijos nustatyti neámanoma.");
	if(playerDB[id][admin] == 5) return SendClientMessage(playerid, RED, " Savininkø ieðkoti, negalima !");
	GetPlayerPos(id, coo[0], coo[1], coo[2]);
	GetPlayerPos(playerid, coo[3], coo[4], coo[5]);
	new Float:atstumas = ((floatabs(coo[0] - coo[3]) + floatabs(coo[1] - coo[4]) + floatabs(coo[2] - coo[5])) / 3) / 100;
	SetPlayerCheckpointEx(playerid, 0, coo[0], coo[1], coo[2], 2);
	if(coo[0]-coo[3]>0) salis1="rytus"; else salis1="vakarus";
	if(coo[1]-coo[4]>0) salis2="siaures"; else salis2="pietu";
	format(msg, sizeof(msg), " %s dabartinë vieta rodoma GPS. Jis yra %f KM i %s %s nuo jûsø.", GetPlayerNameEx(id), atstumas, salis2, salis1);
	SendClientMessage(playerid, GREEN, msg);
	return 1;
}

//Nauja sis vaziuoju
    // vaziuoju
       CMD:vaziuoju(playerid, params[])
{
    new spc = playerDB[playerid][specialybe];
    new Float:coo[3];
    if(!(spc == 1 || spc == 2 || spc == 3 || spc == 4 || spc == 5 || spc == 6 || spc == 13)) return 0;
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "{EB3232}« Turite bûti maðinoje!");
    if(playerDB[playerid][specialybe] == 1)//Policija...
    {
        new pID,vardas2[MAX_PLAYER_NAME], vardas[MAX_PLAYER_NAME],masyvas[200];
        if(sscanf(params, "u",pID)) return SendClientMessage(playerid, BLUE, "{ff9966} I  {FFFFFF}Vaþiuoti pas klientà: /vaziuoju [Vardas_Pavarde]");
        else if(!IsPlayerConnected(pID)) return SendClientMessage(playerid, RED, "{EB3232}« Tokio þaidëjo nëra");
        else
        {
            GetPlayerName(pID,vardas2,sizeof(vardas2));
            GetPlayerName(playerid,vardas,sizeof(vardas));
            if (playerDB[pID][IskvietesPolicija])
            {
                SendClientMessage(playerid,GREEN, "* Klientui pranesta kad jus pas ji atvaziuojat");
                format(masyvas, sizeof(masyvas),"{ffff00}[racija] %s: Jau vaþiuoja pas: %s",vardas,vardas2);
                SendMessageToCops(BLUE,masyvas);
                format(masyvas, sizeof(masyvas),"* Policininkas %s jau vaþiuoja pas jus",vardas);
                SendClientMessage(pID,GREEN,masyvas);
                playerDB[playerid][varau1]=true;
                playerDB[pID][IskvietesPolicija]=false;
                playerDB[pID][atvaziuoja1]=true;
                GetPlayerPos(pID, coo[0], coo[1], coo[2]);
                SetPlayerCheckpoint(playerid, coo[0], coo[1], coo[2], 2);
            }
        }
    }
    else if(playerDB[playerid][specialybe] == 2)//Taksi...
    {
        new pID,vardas2[MAX_PLAYER_NAME], vardas[MAX_PLAYER_NAME],masyvas[200];
        if(sscanf(params, "u",pID)) return SendClientMessage(playerid, BLUE, "{ff9966} I  {FFFFFF}Vaþiuoti pas klientà: /vaziuoju [Vardas_Pavarde]");
        else if(!IsPlayerConnected(pID)) return SendClientMessage(playerid, RED, "{EB3232}« Tokio þaidëjo nëra");
        else
        {
            GetPlayerName(pID,vardas2,sizeof(vardas2));
            GetPlayerName(playerid,vardas,sizeof(vardas));
            if (playerDB[pID][IskvietesTaxi])
            {
                SendClientMessage(playerid,GREEN, "* Klientui pranesta kad jus pas já atvaþiuojate");
                format(masyvas, sizeof(masyvas),"{ffff00}[racija] %s: Jau vaþiuoja pas: %s",vardas,vardas2);
                SendMessageToTaxi(BLUE,masyvas);
                format(masyvas, sizeof(masyvas),"* Taksisto darbuotojas %s jau vaþiuoja pas jus",vardas);
                SendClientMessage(pID,GREEN,masyvas);
                playerDB[playerid][varau2]=true;
                playerDB[pID][IskvietesTaxi]=false;
                playerDB[pID][atvaziuoja2]=true;
                GetPlayerPos(pID, coo[0], coo[1], coo[2]);
                SetPlayerCheckpoint(playerid, coo[0], coo[1], coo[2], 2);
            }
        }
    }
    else if(playerDB[playerid][specialybe] == 3)//Mechanikai...
    {
        new pID,vardas2[MAX_PLAYER_NAME], vardas[MAX_PLAYER_NAME],masyvas[200];
        if(sscanf(params, "u",pID)) return SendClientMessage(playerid, BLUE, "{ff9966} I  {FFFFFF}Vaþiuoti pas klientà: /vaziuoju [Vardas_Pavarde]");
        else if(!IsPlayerConnected(pID)) return SendClientMessage(playerid, RED, "{EB3232}« Tokio þaidëjo nëra");
        else
        {
            GetPlayerName(pID,vardas2,sizeof(vardas2));
            GetPlayerName(playerid,vardas,sizeof(vardas));
            if (playerDB[pID][Iskvietesmechanikus])
            {
                SendClientMessage(playerid,GREEN, "* Klientui pranesta kad jus pas ji atvaziuojat");
                format(masyvas, sizeof(masyvas),"{ffff00}[racija] %s: Jau vaþiuoja pas: %s",vardas,vardas2);
                SendMessageToMechanikas(BLUE,masyvas);
                format(masyvas, sizeof(masyvas),"* Mechanikas %s jau vaþiuoja pas jus",vardas);
                SendClientMessage(pID,GREEN,masyvas);
                playerDB[playerid][varau3]=true;
                playerDB[pID][Iskvietesmechanikus]=false;
                playerDB[pID][atvaziuoja3]=true;
                GetPlayerPos(pID, coo[0], coo[1], coo[2]);
                SetPlayerCheckpoint(playerid, coo[0], coo[1], coo[2], 2);
            }
        }
    }
    else if(playerDB[playerid][specialybe] == 5)//Gelbëtojai...
    {
        new pID,vardas2[MAX_PLAYER_NAME], vardas[MAX_PLAYER_NAME],masyvas[200];
        if(sscanf(params, "u",pID)) return SendClientMessage(playerid, BLUE, "{ff9966} I  {FFFFFF}Vaþiuoti pas klientà: /vaziuoju [Vardas_Pavarde]");
        else if(!IsPlayerConnected(pID)) return SendClientMessage(playerid, RED, "{EB3232}« Tokio þaidëjo nëra");
        else
        {
            GetPlayerName(pID,vardas2,sizeof(vardas2));
            GetPlayerName(playerid,vardas,sizeof(vardas));

            if (playerDB[pID][IskvietesMedikus])
            {
                SendClientMessage(playerid,GREEN, "* Klientui pranesta kad jus pas ji atvaziuojat");
                format(masyvas, sizeof(masyvas),"{ffff00}[racija] %s: Jau vaþiuoja pas: %s",vardas,vardas2);
                SendMessageToMedics(BLUE,masyvas);
                format(masyvas, sizeof(masyvas),"* Medikas %s jau vaþiuoja pas jus",vardas);
                SendClientMessage(pID,GREEN,masyvas);
                playerDB[playerid][varau5]=true;
                playerDB[pID][IskvietesMedikus]=false;
                playerDB[pID][atvaziuoja5]=true;
                GetPlayerPos(pID, coo[0], coo[1], coo[2]);
                SetPlayerCheckpoint(playerid, coo[0], coo[1], coo[2], 2);
            }
        }
    }
    else if(playerDB[playerid][specialybe] == 6)//Furistai
    {
        new pID,vardas2[MAX_PLAYER_NAME], vardas[MAX_PLAYER_NAME],masyvas[200];
        if(sscanf(params, "u",pID)) return SendClientMessage(playerid, BLUE, "{ff9966} I  {FFFFFF}Vaþiuoti pas klientà: /vaziuoju [Vardas_Pavarde]");
        else if(!IsPlayerConnected(pID)) return SendClientMessage(playerid, RED, "{EB3232}« Tokio þaidëjo nëra");
        else
        {
            GetPlayerName(pID,vardas2,sizeof(vardas2));
            GetPlayerName(playerid,vardas,sizeof(vardas));

            if (playerDB[pID][IskvietesSwat])
            {
                SendClientMessage(playerid,GREEN, "* Klientui pranesta kad jus pas ji atvaziuojat");
                format(masyvas, sizeof(masyvas),"{ffff00}[racija] %s: Jau vaþiuoja pas: %s",vardas,vardas2);
                SendMessageToFUROS(BLUE,masyvas);
                format(masyvas, sizeof(masyvas),"*Perveþëjø tarnybos darbuotojas %s jau vaþiuoja pas jus",vardas);
                SendClientMessage(pID,GREEN,masyvas);
                playerDB[playerid][varau6]=true;
                playerDB[pID][IskvietesSwat]=false;
                playerDB[pID][atvaziuoja6]=true;
                GetPlayerPos(pID, coo[0], coo[1], coo[2]);
                SetPlayerCheckpoint(playerid, coo[0], coo[1], coo[2], 2);
            }
        }
    }
    else if(playerDB[playerid][specialybe] == 13)//Dyleriai...
    {
        new pID,vardas2[MAX_PLAYER_NAME], vardas[MAX_PLAYER_NAME],masyvas[200];
        if(sscanf(params, "u",pID)) return SendClientMessage(playerid, BLUE, "{ff9966} I  {FFFFFF}Vaþiuoti pas klientà: /vaziuoju [Vardas_Pavarde]");
        else if(!IsPlayerConnected(pID)) return SendClientMessage(playerid, RED, "{EB3232}« Tokio þaidëjo nëra");
        else
        {
            GetPlayerName(pID,vardas2,sizeof(vardas2));
            GetPlayerName(playerid,vardas,sizeof(vardas));
            if (playerDB[pID][IskvietesDylerius])
            {
                SendClientMessage(playerid,GREEN, "* Klientui pranesta kad jus pas ji atvaziuojat");
                format(masyvas, sizeof(masyvas),"{ffff00}[racija] %s: Jau vaþiuoja pas: %s",vardas,vardas2);
                SendMessageToSPD(BLUE,masyvas);
                format(masyvas, sizeof(masyvas),"* YAKUZA kartelio %s jau vaþiuoja pas jus",vardas);
                SendClientMessage(pID,GREEN,masyvas);
                playerDB[playerid][varau4]=true;
                playerDB[pID][IskvietesDylerius]=false;
                playerDB[pID][atvaziuoja4]=true;
                GetPlayerPos(pID, coo[0], coo[1], coo[2]);
                SetPlayerCheckpoint(playerid, coo[0], coo[1], coo[2], 2);
            }
        }
    }
    /*else if(playerDB[playerid][specialybe] == 15)//Perveþëjø tarnyba
    {
        new pID,vardas2[MAX_PLAYER_NAME], vardas[MAX_PLAYER_NAME],masyvas[200];
        if(sscanf(params, "u",pID)) return SendClientMessage(playerid, BLUE, "{ff9966} I  {FFFFFF}Vaþiuoti pas klientà: /vaziuoju [Vardas_Pavarde]");
        else if(!IsPlayerConnected(pID)) return SendClientMessage(playerid, RED, "{EB3232}« Tokio þaidëjo nëra");
        else
        {
            GetPlayerName(pID,vardas2,sizeof(vardas2));
            GetPlayerName(playerid,vardas,sizeof(vardas));

            if (playerDB[pID][IskvietesSwat])
            {
                SendClientMessage(playerid,GREEN, "* Klientui pranesta kad jus pas ji atvaziuojat");
                format(masyvas, sizeof(masyvas),"{ffff00}[racija] %s: Jau vaþiuoja pas: %s",vardas,vardas2);
                SendMessageToFUROS(BLUE,masyvas);
                format(masyvas, sizeof(masyvas),"* Spec.pajëgos %s jau vaþiuoja pas jus",vardas);
                SendClientMessage(pID,GREEN,masyvas);
                playerDB[playerid][varau7]=true;
                playerDB[pID][IskvietesSwat]=false;
                playerDB[pID][atvaziuoja7]=true;
                GetPlayerPos(pID, coo[0], coo[1], coo[2]);
                SetPlayerCheckpointEx(playerid, 0, coo[0], coo[1], coo[2], 2);
            }
        }
    }*/
    return 1;
}

/*CMD:vaziuoju(playerid, params[])
{
	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 2 && playerDB[playerid][specialybe] != 3 && playerDB[playerid][specialybe] != 4 && playerDB[playerid][specialybe] != 5 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 13) return SendClientMessage(playerid, RED, " Ðita komanda tik darbams su iðkvietimais!");
	new spc = playerDB[playerid][specialybe], pID, msg[150], Float:coo[3];
	if(sscanf(params, "u", pID)) return SendClientMessage(playerid, BLUE, " Paimti þmogaus iðkvietimà: /vaziuoju [Vardas_Pavardë/ID]");
	if(pID == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	switch(spc)
	{
	    case 1:
	    {
	        if(playerDB[pID][IskvietesPolicija])
	        {
	            format(msg, sizeof(msg), " Policininkas %s pas jus jau vaþiuoja!", GetPlayerNameEx(playerid));
	            SendClientMessage(pID, GREEN, msg);
	            format(msg, sizeof(msg), " Policininkas %s pirmasis priëmë uþsakymà ir vaþiuoja pas %s ", GetPlayerNameEx(playerid), GetPlayerNameEx(pID));
	            SendMessageToCops(COLOR_RACIJA,msg);
	            playerDB[pID][IskvietesPolicija] = false;
	            GetPlayerPos(pID, coo[0], coo[1], coo[2]);
				SetPlayerCheckpointEx(playerid, 0, coo[0], coo[1], coo[2], 2);
	        }
	        else
	        {
	            SendClientMessage(playerid, RED, " Þmogus nëra iðsikvietæs policijos!");
	        }
	    }
	    case 2:
	    {
	        if(playerDB[pID][IskvietesMedikus])
	        {
	            format(msg, sizeof(msg), " Medikas %s pas jus jau vaþiuoja!", GetPlayerNameEx(playerid));
	            SendClientMessage(pID, GREEN, msg);
	            format(msg, sizeof(msg), " Medikas %s pirmasis priëmë uþsakymà ir vaþiuoja pas %s ", GetPlayerNameEx(playerid), GetPlayerNameEx(pID));
	            SendMessageToMedics(COLOR_RACIJA,msg);
	            playerDB[pID][IskvietesMedikus] = false;
	            GetPlayerPos(pID, coo[0], coo[1], coo[2]);
				SetPlayerCheckpointEx(playerid, 0, coo[0], coo[1], coo[2], 2);
	        }
	        else
	        {
	            SendClientMessage(playerid, RED, " Þmogus nëra medikø policijos!");
	        }
	    }
	    case 3:
	    {
	        if(playerDB[pID][IskvietesTaxi])
	        {
	            format(msg, sizeof(msg), " Taksistas %s pas jus jau vaþiuoja!", GetPlayerNameEx(playerid));
	            SendClientMessage(pID, GREEN, msg);
	            format(msg, sizeof(msg), " Taksistas %s pirmasis priëmë uþsakymà ir vaþiuoja pas %s ", GetPlayerNameEx(playerid), GetPlayerNameEx(pID));
	            SendMessageToTaxi(COLOR_RACIJA,msg);
	            playerDB[pID][IskvietesTaxi] = false;
	            GetPlayerPos(pID, coo[0], coo[1], coo[2]);
				SetPlayerCheckpointEx(playerid, 0, coo[0], coo[1], coo[2], 2);
	        }
	        else
	        {
	            SendClientMessage(playerid, RED, " Þmogus nëra iðsikvietæs taxi!");
	        }
	    }
	    case 4:
	    {
	        if(playerDB[pID][Iskvietesmechanikus])
	        {
	            format(msg, sizeof(msg), " Mechanikas %s pas jus jau vaþiuoja!", GetPlayerNameEx(playerid));
	            SendClientMessage(pID, GREEN, msg);
	            format(msg, sizeof(msg), " Mechanikas %s pirmasis priëmë uþsakymà ir vaþiuoja pas %s ", GetPlayerNameEx(playerid), GetPlayerNameEx(pID));
	            SendMessageToMechanikas(COLOR_RACIJA,msg);
	            playerDB[pID][Iskvietesmechanikus] = false;
	            GetPlayerPos(pID, coo[0], coo[1], coo[2]);
				SetPlayerCheckpointEx(playerid, 0, coo[0], coo[1], coo[2], 2);
	        }
	        else
	        {
	            SendClientMessage(playerid, RED, " Þmogus nëra iðsikvietæs mechanikø!");
	        }
	    }
	    case 5:
	    {
	        if(playerDB[pID][IskvietesDylerius])
	        {
	            format(msg, sizeof(msg), " Dyleris %s pas jus jau vaþiuoja!", GetPlayerNameEx(playerid));
	            SendClientMessage(pID, GREEN, msg);
	            format(msg, sizeof(msg), " Dyleris %s pirmasis priëmë uþsakymà ir vaþiuoja pas %s ", GetPlayerNameEx(playerid), GetPlayerNameEx(pID));
	            SendMessageToGdyleriai(COLOR_RACIJA,msg);
	            playerDB[pID][IskvietesDylerius] = false;
	            GetPlayerPos(pID, coo[0], coo[1], coo[2]);
				SetPlayerCheckpointEx(playerid, 0, coo[0], coo[1], coo[2], 2);
	        }
	        else
	        {
	            SendClientMessage(playerid, RED, " Þmogus nëra iðsikvietæs dyleriø!");
	        }
	    }
	    case 10:
	    {
	        if(playerDB[pID][IskvietesSwat])
	        {
	            format(msg, sizeof(msg), " SWAT darbuotojas %s pas jus jau vaþiuoja!", GetPlayerNameEx(playerid));
	            SendClientMessage(pID, GREEN, msg);
	            format(msg, sizeof(msg), " SWAT darbuotojas %s pirmasis priëmë uþsakymà ir vaþiuoja pas %s ", GetPlayerNameEx(playerid), GetPlayerNameEx(pID));
	            SendMessageToSwatams(COLOR_RACIJA,msg);
	            playerDB[pID][IskvietesSwat] = false;
	            GetPlayerPos(pID, coo[0], coo[1], coo[2]);
				SetPlayerCheckpointEx(playerid, 0, coo[0], coo[1], coo[2], 2);
	        }
	        else
	        {
	            SendClientMessage(playerid, RED, " Þmogus nëra iðsikvietæs SWAT!");
	        }
	    }
	    case 13:
	    {
	        if(playerDB[pID][IskvietesRadistus])
	        {
	            format(msg, sizeof(msg), " Radistas %s pas jus jau vaþiuoja!", GetPlayerNameEx(playerid));
	            SendClientMessage(pID, GREEN, msg);
	            format(msg, sizeof(msg), " Radistas %s pirmasis priëmë uþsakymà ir vaþiuoja pas %s ", GetPlayerNameEx(playerid), GetPlayerNameEx(pID));
	            SendMessageToRadistams(COLOR_RACIJA,msg);
	            playerDB[pID][IskvietesRadistus] = false;
	            GetPlayerPos(pID, coo[0], coo[1], coo[2]);
				SetPlayerCheckpointEx(playerid, 0, coo[0], coo[1], coo[2], 2);
	        }
	        else
	        {
	            SendClientMessage(playerid, RED, " Þmogus nëra iðsikvietæs radistø!");
	        }
	    }
	    case 20:
	    {
	        if(playerDB[pID][IskvietesPica])
	        {
	            format(msg, sizeof(msg), " Picerininkas %s pas jus jau vaþiuoja!", GetPlayerNameEx(playerid));
	            SendClientMessage(pID, GREEN, msg);
	            foreach(Player, i)
	            {
	            	if(playerDB[i][specialybe] == 20)
	            	{
			            format(msg, sizeof(msg), " Picerininkas %s pirmasis priëmë uþsakymà ir vaþiuoja pas %s ", GetPlayerNameEx(playerid), GetPlayerNameEx(pID));
			            SendClientMessage(i, COLOR_RACIJA, msg);
			        }
		        }
	            playerDB[pID][IskvietesPica] = false;
	            GetPlayerPos(pID, coo[0], coo[1], coo[2]);
				SetPlayerCheckpointEx(playerid, 0, coo[0], coo[1], coo[2], 2);
	        }
	        else
	        {
	            SendClientMessage(playerid, RED, " Þmogus nëra iðsikvietæs picø iðveþiotojø!");
	        }
	    }
	}
	return 1;*/


CMD:narkomanas(playerid, params[])
{
	new zolex = playerDB[playerid][zole];
	new narkaix = playerDB[playerid][narkotikai];
 	new lsdx = playerDB[playerid][lsd];
 	new amfax = playerDB[playerid][amfa];
    new strf[600], str[110];
    str = "{FFFFFF}Tavo turimi narkotikai:\n\n", strcat(strf, str);
	format(str, 80, "{FFFFFF}Þolës: {4BDEFF}%s {FFFFFF}vienetø\n", konvertuoti_pinigus(zolex)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Narkotikø: {4BDEFF}%s {FFFFFF}vienetø\n", konvertuoti_pinigus(narkaix)); strcat(strf, str);
	format(str, 80, "{FFFFFF}LSD: {4BDEFF}%s {FFFFFF}tableèiø\n", konvertuoti_pinigus(lsdx)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Amfetamino: {4BDEFF}%s {FFFFFF}ðvirkðtø\n\n", konvertuoti_pinigus(amfax)); strcat(strf, str);
	str = "{4BDEFF}/pusti {FFFFFF}- Suvartosite þolës.\n", strcat(strf, str);
	str = "{4BDEFF}/naudoti {FFFFFF}- Suvartosite narkotikø.\n", strcat(strf, str);
	str = "{4BDEFF}/lsd {FFFFFF}- Suvartosite LSD.\n", strcat(strf, str);
	str = "{4BDEFF}/amfa {FFFFFF}- Suvartosite amfetamino.", strcat(strf, str);
	ShowPlayerDialog(playerid, 4712, DIALOG_STYLE_MSGBOX, "{ffffff}Narkomano informacija", strf, "Aiðku", "");
	return 1;
}
CMD:mechanikas(playerid)
{
	if(playerDB[playerid][specialybe] !=4) return SendClientMessage(playerid, RED, "Jûs nesate Mechanikas!");
	ShowPlayerDialog(playerid,1045,DIALOG_STYLE_LIST,"{FFFFFF}Mechanikas","{FFFFFF}Sutaisyti maðinà     {FBFF00}50\n{FFFFFF}Pripilti degalø     {FBFF00}50\n{FFFFFF}Darbiniø maðinø naikinimas.\n{FFFFFF}Norëdami uþdëti maðinai ratus raðykite komandà {FBFF00}/ratai\n{FFFFFF}Ámontuoti nitro, hidraulikà {FBFF00}/tune","Pasirinkti","Iðeiti");
	return 1;
}
CMD:misija(playerid)
{
	new rado1car[30];
	if(playerDB[playerid][radomcar] == 1) rado1car = "{00CC00}Radæs";
	else if(playerDB[playerid][radomcar] == 0) rado1car = "{FF0000}Neradæs";

	new rado2car[30];
	if(playerDB[playerid][radomcar1] == 1) rado2car = "{00CC00}Radæs";
	else if(playerDB[playerid][radomcar1] == 0) rado2car = "{FF0000}Neradæs";

	new rado3car[30];
	if(playerDB[playerid][radomcar2] == 1) rado3car = "{00CC00}Radæs";
	else if(playerDB[playerid][radomcar2] == 0) rado3car = "{FF0000}Neradæs";

	new masyvas[400];
	format(masyvas, 400, "\t\t{FF9900}Surask motociklus keliauninkus!\n\n{C0C0C0}Pirmas motociklas: %s{C0C0C0}\nAntras motociklas: %s{C0C0C0}\nTreèias motociklas: %s\n\n{FF0000}Motociklai gali bûti þaliuose kalnuose, dykumos kalnuose, netoli vandens.",rado1car,rado2car, rado3car);
	ShowPlayerDialog(playerid, 457, DIALOG_STYLE_MSGBOX, "{ffffff}Misijos",masyvas, "Aiðku", "");
	return 1;
}
//test
CMD:prisijunge(playerid)
{
	new masyvas[560];
	format(masyvas, sizeof(masyvas), "{ffffff}Darbai su direktoriaus pakvietimu\nDarbai be direktoriaus pakvietimo");
	format(masyvas, sizeof(masyvas), "{ffffff}%s\nVisu zmoniu online darbai",masyvas);
	ShowPlayerDialog(playerid, 10210, DIALOG_STYLE_LIST, "Darbai",masyvas, "Taip", "Atsaukti");
	return 1;
}
CMD:vip(playerid, params[])
{
    new zin[170], zinute[75];
	if(CheckMute(playerid)) return 1;
	if(sscanf(params, "s[75]", zinute))
	{
		new x;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && playerDB[i][vip])
			{
				x++;
				format(zin, 110, "{FF9900}%i{FFFF00}. {FF9900}%s{FFFF00}, {FF9900}%d{FFFF00} áspëjimø.", x, GetPlayerNameEx(i), playerDB[i][vispejimai]);
				SendClientMessage(playerid, ORANGE, zin);
			}
		}
		return 1;
	}
	else
	{
	    if(playerDB[playerid][ParaseVipams] > gettime()) return SendClientMessage(playerid, RED, "Raðyti vipams galite tik kas 30 sekundþiø.");
		format(zin, sizeof(zin), "{cccccc}%s(%i) vipams: %s", GetPlayerNameEx(playerid), playerid, zinute);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && playerDB[i][vip])
			{
				SendClientMessage(i, GREEN, zin);
			}
		}
		SendClientMessage(playerid, GREEN, zin);
		playerDB[playerid][ParaseVipams] = gettime() + 30;
	}
	return 1;
}
CMD:radistams(playerid, params[])
{
	new tekstas[128], masyvas[256];
	if(sscanf(params, "s[128]",tekstas)) return SendClientMessage(playerid, BLUE, " Raðyti þinutæ radistams: /radistams [Tekstas]");
	else
	{
		if(playerDB[playerid][ParaseRadistams] > gettime()) return SendClientMessage(playerid, RED, "Raðyti radistams galite tik kas 30 sekundþiø.");
	    format(masyvas, 256, " %s(%i) radistams: %s",GetPlayerNameEx(playerid), playerid, tekstas);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && playerDB[i][specialybe] == 13)
			{
				SendClientMessage(i, ORANGE, masyvas);
			}
		}
		SendClientMessage(playerid, ORANGE, masyvas);
		playerDB[playerid][ParaseRadistams] = gettime() + 30;
	}
	return true;
}
CMD:admin(playerid, params[])
{
    new zin[170], zinute[75];
	if(CheckMute(playerid)) return 1;
	if(sscanf(params, "s[75]", zinute))
	{
		new x;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && playerDB[i][admin])
			{
				x++;
				format(zin, 129, "{FF9900}%d{FFFF00}. {FF9900}%s{FFFF00}, {FF9900}%d{FFFF00} lygio, {FF9900}%d{FFFF00} áspëjimø.", x, GetPlayerNameEx(i), playerDB[i][admin], playerDB[i][aispejimai]);
				SendClientMessage(playerid, BLUE, zin);
			}
		}
		return 1;
	}
	else
	{
		if(playerDB[playerid][ParaseAdminams] > gettime()) return SendClientMessage(playerid, RED, " Raðyti adminams galite tik kas 30 sekundþiø.");
		format(zin, sizeof(zin), "%s(%i) adminams: %s", GetPlayerNameEx(playerid), playerid, zinute);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && playerDB[i][admin])
			{
				SendClientMessage(i, YELLOW, zin);
			}
		}
		SendClientMessage(playerid, YELLOW, zin);
		playerDB[playerid][ParaseAdminams] = gettime() + 30;
	}
	return 1;
}
CMD:direktoriam(playerid, params[])
{
    new zin[140], zinute[75];
	if(CheckMute(playerid)) return 1;
	if(sscanf(params, "s[75]", zinute)) return SendClientMessage(playerid, BLUE, " Raðyti direktoriams: /direktoriam [TEKSTAS]");
    if(playerDB[playerid][ParaseDyrikams] > gettime()) return SendClientMessage(playerid, RED, " Raðyti direktoriams galite tik kas 30 sekundþiø.");
	format(zin, sizeof(zin), "{C21BE0} %s(%i) direktoriams: %s", GetPlayerNameEx(playerid), playerid, zinute);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && playerDB[i][plead])
		{
			SendClientMessage(i, ORANGE, zin);
		}
	}
	SendClientMessage(playerid, ORANGE, zin);
	playerDB[playerid][ParaseDyrikams] = gettime() + 30;
	return 1;
}
CMD:pavaduotojam(playerid, params[])
{
    new zin[140], zinute[75];
	if(CheckMute(playerid)) return 1;
	if(sscanf(params, "s[75]", zinute)) return SendClientMessage(playerid, BLUE, " Raðyti direktoriams: /pavaduotojam [TEKSTAS]");
    if(playerDB[playerid][ParasePavaduotojam] > gettime()) return SendClientMessage(playerid, RED, " Raðyti pavaduotojam galite tik kas 30 sekundþiø.");
	format(zin, sizeof(zin), "{C21BE0} %s(%i) pavaduotojam: %s", GetPlayerNameEx(playerid), playerid, zinute);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && playerDB[i][pavdrk])
		{
			SendClientMessage(i, ORANGE, zin);
		}
	}
	SendClientMessage(playerid, ORANGE, zin);
	playerDB[playerid][ParasePavaduotojam] = gettime() + 30;
	return 1;
}
CMD:suristi(playerid, params[])
{
	new id, Float:Coo[3], msg[40];
	if(playerDB[playerid][specialybe] != 40 && playerDB[playerid][specialybe] != 42) return SendClientMessage(playerid, RED, " Ði komanda tik gaujiniams.");
	if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, " Jûs esate surakintas arba suriðtas !");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid,BLUE," Uþdëti/Nuimti þaidëjui virve /suristi [Vardas_Pavardë/ID]");
 	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, RED, " Savæs suriðti negali.");
	if(OfisoDarbas[id] == true) return SendClientMessage(playerid, RED, " Þaidëjas yra AFK zonoje!");
	GetPlayerPos(id, Coo[0], Coo[1], Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, " Þaidëjas per toli, prieikite arèiau.");
	if(playerDB[id][cuffed])
	{
		format(msg,sizeof(msg)," Paleidote %s.", GetPlayerNameEx(id));
		SendClientMessage(playerid,GREEN,msg);
		format(msg,sizeof(msg)," Jus paleido %s.", GetPlayerNameEx(playerid));
		ClearAnimations(id);
		SendClientMessage(id,RED,msg);
		Surakinti(id, true);
	}
	else
	{
	    if(playerDB[playerid][KadaSuriso] > gettime()) return SendClientMessage(playerid, RED, " Dar nepraëjo 15 minuèiø nuo praito tavo suriðto þmogaus.!");
  		format(msg,sizeof(msg)," Suriðote %s.", GetPlayerNameEx(id));
		SendClientMessage(playerid,GREEN,msg);
		format(msg,sizeof(msg)," Jus suriðo %s.", GetPlayerNameEx(playerid));
		SendClientMessage(id,GREEN,msg);
		playerDB[playerid][KadaSuriso] = gettime() + 900;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
        Surakinti(id, false);
	}
	return 1;
}
CMD:gisodinti(playerid, params[])
{
	new id, Float:Coo[3];
    if(playerDB[playerid][specialybe] != 40 && playerDB[playerid][specialybe] != 42) return SendClientMessage(playerid, RED, " Ði komanda tik gaujoms.");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, " Ásodinti þaidëjà á maðinà /gisodinti [Vardas_Pavardë/ID]");
    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	new vehicleid = GetPlayerVehicleID(playerid);
 	GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
  	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, " Þaidëjas per toli preikite arèiau.");
	PutPlayerInVehicleEx(id, vehicleid, 1);
	SendClientMessage(playerid,BLUE," Þaidëjas ásodintas.");
	return 1;
}
CMD:gisspirt(playerid, params[])
{
	new id, Float:pPos[3], msg[55];
	if(playerDB[playerid][specialybe] != 40 && playerDB[playerid][specialybe] != 42) return SendClientMessage(playerid, RED, " Ði komanda tik gaujoms.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Turite bûti maðinoje.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, " Turite bûti maðinos vairuotojas.!");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, " Iðspirti þaidëjà ið maðinos: /isspirt [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,RED," Tokio þaidëjo nëra.");
	if(!IsPlayerInAnyVehicle(id) || GetPlayerVehicleID(id) != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,RED," Þaidëjas ne jûsø maðinoje!");
	GetPlayerPos(id, pPos[0], pPos[1], pPos[2]);
	SetPlayerPos(id, pPos[0], pPos[1] + 2, pPos[2] + 2);
	format(msg, sizeof(msg), " Jûs iðspyrëte %s ið savo maðinos!", GetPlayerNameEx(id));
	SendClientMessage(playerid, RED, msg);
	return 1;
}
CMD:zoleparduoti(playerid, params[])
{
    new id, kiek, kaina, msg[128], Float:pPos[3];
	if(playerDB[playerid][zole] < 1) return SendClientMessage(playerid,GREEN," Tu neturi þolës.");
	if(playerDB[playerid][specialybe] != 5) return SendClientMessage(playerid,GREEN," Tu ne narkotikø dyleris.");
    if(sscanf(params, "udd", id, kiek, kaina)) return SendClientMessage(playerid, BLUE, " Parduoti þolæ: /zoleparduoti [Vardas_Pavardë/ID] [kiekis] [gramo kaina]");
	if(kiek > playerDB[playerid][zole]) return SendClientMessage(playerid, RED, " Tu neturi tiek þolës!");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	if(GetPlayerScore(id) < 2500) return SendClientMessage(playerid, RED, " Þaidëjas naujokas.");
    if(kaina < 1 || kiek < 1)  return SendClientMessage(playerid, BLUE, " Parduoti þolæ: /zoleparduoti [Vardas_Pavardë/ID] [kiekis] [gramo kaina]");
    GetPlayerPos(id, pPos[0], pPos[1], pPos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 10, pPos[0], pPos[1], pPos[2])) return SendClientMessage(playerid, 0xff3333aa, " Jûs per toli nuo pirkëjo (10m)");
	playerDB[id][textas] = 9;
	playerDB[id][rkiekis][0] = kiek;
	playerDB[id][rkaina][0] = kaina * kiek;
	playerDB[id][rid][0] = playerid;
	format(msg, sizeof(msg), " %s jums siûlo %s gramø þolës uþ %s . Pirksite? [taip/ne]", GetPlayerNameEx(playerid), konvertuoti_pinigus(kiek), konvertuoti_pinigus(kaina * kiek));
	SendClientMessage(id, BLUE, msg);
	return 1;
}
CMD:nparduoti(playerid, params[])
{
	new id, kiek, kaina, msg[128], Float:pPos[3];
	if(playerDB[playerid][narkotikai] < 1) return SendClientMessage(playerid, GREEN, " Tu neturi narkotikø");
	if(playerDB[playerid][specialybe] !=5) return SendClientMessage(playerid, GREEN, " Tu ne narkotikø dyleris");
	if(sscanf(params, "udd", id, kiek, kaina)) return SendClientMessage(playerid, BLUE, " Parduoti narkotikus: /nparduoti [Vardas_Pavardë/ID] [kiekis] [gramo kaina]");
	if(kiek > playerDB[playerid][narkotikai]) return SendClientMessage(playerid, RED, " Tu neturi tiek narkotikø!");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	if(GetPlayerScore(id) < 2500) return SendClientMessage(playerid, RED, " Þaidëjas naujokas.");
	if(kaina < 1 || kiek < 1)  return SendClientMessage(playerid, BLUE, " Parduoti narkotiku: /nparduoti [Vardas_Pavardë/ID] [kiekis] [gramo kaina]");
	GetPlayerPos(id, pPos[0], pPos[1], pPos[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 10, pPos[0], pPos[1], pPos[2])) return SendClientMessage(playerid, 0xff3333aa, " Jûs per toli nuo pirkëjo (10m)");
	playerDB[id][textas] = 1;
	playerDB[id][rkiekis][0] = kiek;
	playerDB[id][rkaina][0] = kaina * kiek;
	playerDB[id][rid][0] = playerid;
	format(msg, sizeof(msg), " %s jums siûlo %s paketø narkotikø uþ %s . Pirksite? [taip/ne]", GetPlayerNameEx(playerid), konvertuoti_pinigus(kiek), konvertuoti_pinigus(kaina * kiek));
	SendClientMessage(id, BLUE, msg);
	return 1;
}
CMD:naudoti(playerid)
{
    new Float:hp;
	if(playerDB[playerid][narkotikai] < 1) return SendClientMessage(playerid, RED, " Neturite narkotikø.");
	ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1);
	playerDB[playerid][narkotikai] --;
	GetPlayerHealth(playerid, hp);
	SetPlayerHealthEx(playerid, hp + 25);
	GetPlayerHealth(playerid, hp);
	if(hp > 100) SetPlayerHealthEx(playerid, 100);
	SendClientMessage(playerid, BLUE, " Naudojate narkotikus.");
	return 1;
}
CMD:lsd(playerid)
{
    new Float:hp;
	if(playerDB[playerid][lsd] < 1) return SendClientMessage(playerid, RED, " Neturite LSD tableèiø.");
	ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1);
	playerDB[playerid][lsd] --;
	GetPlayerHealth(playerid, hp);
	SetPlayerHealthEx(playerid, hp + 15);
	GetPlayerHealth(playerid, hp);
	if(hp > 100) SetPlayerHealthEx(playerid, 100);
	SendClientMessage(playerid, BLUE, " Naudojate LSD tabletes.");
	return 1;
}
CMD:amfa(playerid)
{
    new Float:hp;
	if(playerDB[playerid][lsd] < 1) return SendClientMessage(playerid, RED, " Neturite amfetamino ðvirkðtu.");
	ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1);
	playerDB[playerid][amfa] --;
	GetPlayerHealth(playerid, hp);
	SetPlayerHealthEx(playerid, hp + 30);
	GetPlayerHealth(playerid, hp);
	if(hp > 100) SetPlayerHealthEx(playerid, 100);
	SendClientMessage(playerid, BLUE, " Naudojate amfetamino ðvirkðtus.");
	return 1;
}
CMD:tlf(playerid)
{
    if(!playerDB[playerid][telefonas]) return SendClientMessage(playerid, RED, " Jûs neturite telefono, kad já galëtumëte valdyti.");
    TelefonValdymDialog(playerid);
	return 1;
}
CMD:papildymas(playerid)
{
	new msg[50];
	format(msg, sizeof(msg), " Ðiuo metu turite papildyma uþ %s", konvertuoti_pinigus(playerDB[playerid][papildimas]));
	SendClientMessage(playerid, ORANGE, msg);
	return 1;
}
CMD:papildyti(playerid, params[])
{
	new suma, msg[70];
	if(!playerDB[playerid][telefonas]) return SendClientMessage(playerid, RED, " Jûs neturite telefono.");
	if(!playerDB[playerid][telefonostat]) return SendClientMessage(playerid, RED, " Jûsø telefonas iðjungtas.");
	if(sscanf(params, "d", suma)) return SendClientMessage(playerid, COLOR_YELLOW, " Kaip pasipildyti sàskaità.: /papildyti [Pinigø kiekis] koká turite papildyme..");
	if(suma > playerDB[playerid][papildimas]) return SendClientMessage(playerid, ORANGE, " Jûsø papildime nëra tiek pinigø.");
	if(suma < 1) return SendClientMessage(playerid, RED, " Veiksmas negalimas!");
	playerDB[playerid][mobsas] += suma;
	playerDB[playerid][papildimas] -= suma;
	format(msg, sizeof(msg), " Jûsø sàskaita papildyta %s dabar joje yra %s", konvertuoti_pinigus(suma), konvertuoti_pinigus(playerDB[playerid][mobsas]));
	SendClientMessage(playerid, ORANGE, msg);
	return 1;
}
CMD:pusti(playerid, params[])
{
    new Float:giv, girtas;
	if(playerDB[playerid][zole] < 1) return SendClientMessage(playerid, RED, " Nebeturite ko pûsti. Nusipirkite þolës ið dyleriø!");
	if(playerDB[playerid][KadaPute] > gettime()) return SendClientMessage(playerid, RED, " Ðità komandà galima naudoti tik kas 10 sëkundþiø!");
	girtas = GetPlayerDrunkLevel(playerid);
	GetPlayerHealth(playerid, giv);
	if(giv >= 100 || girtas >= 45000) return SendClientMessage(playerid, RED, " Jûs per daug apsineðes (Daugiau uþ 100 gyvybiø arba per daug apsineðes). Dar viena dozë jus pribaigtu.");
	SendClientMessage(playerid, COLOR_WHITE, " Susisukate kasiaka, ir megaujates stipriu Kanapiu poveikiu.");
	playerDB[playerid][zole] --;
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
	SetPlayerDrunkLevel(playerid, girtas + 5000);
	playerDB[playerid][KadaPute] = gettime() + 10;
	SetTimerEx("Putimas", 3000, 0, "i", playerid);
	return 1;
}
CMD:info(playerid, params[])
{
	SendClientMessage(playerid, RED, "{37f467} Perþiûrëti savo darbø patirties taðkus galite paraðæ - {ccff66}/darboxp");
	ShowPlayerStats(playerid, playerid);
	return 1;
}
CMD:darboxp(playerid)
{
	new dstazasteisesaugos = playerDB[playerid][stazasteisesaugos];
	new dstazasmediku = playerDB[playerid][stazasmediku];
	new dstazastaxi = playerDB[playerid][stazastaxi];
	new dstazasfuristu = playerDB[playerid][stazasfuristu];
	new dstazasmechaniku = playerDB[playerid][stazasmechaniku];
	new dstazasdyleriu = playerDB[playerid][stazasdyleriu];
	new dstazasradistu = playerDB[playerid][stazasradistu];
	new dstazasbaikeriu = playerDB[playerid][stazasbaikeriu];
	new dstazagauju = playerDB[playerid][stazasgauju];
	new dstazaklubu = playerDB[playerid][stazasklubu];
	new dstazapdarbu = playerDB[playerid][stazaspaprastodarbo];
	new bendrasxp = playerDB[playerid][stazasteisesaugos] + playerDB[playerid][stazasmediku] + playerDB[playerid][stazastaxi] + playerDB[playerid][stazasfuristu] + playerDB[playerid][stazasmechaniku] + playerDB[playerid][stazasdyleriu] + playerDB[playerid][stazasgauju] + playerDB[playerid][stazaspaprastodarbo] + playerDB[playerid][stazasradistu] + playerDB[playerid][stazasbaikeriu] + playerDB[playerid][stazasklubu];
	new visasxp = GetPlayerScore(playerid);
    new strf[1600], str[110];
	format(str, 80, "{FFFFFF}Teisësaugininko patirtis: {FD7200}%s {FFFFFF}XP.\n", konvertuoti_pinigus(dstazasteisesaugos)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Mediko patirtis: {FD7200}%s {FFFFFF}XP.\n", konvertuoti_pinigus(dstazasmediku)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Taxist'o patirtis: {FD7200}%s {FFFFFF}XP.\n", konvertuoti_pinigus(dstazastaxi)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Fûristo patirtis: {FD7200}%s {FFFFFF}XP.\n", konvertuoti_pinigus(dstazasfuristu)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Mechaniko patirtis: {FD7200}%s {FFFFFF}XP.\n", konvertuoti_pinigus(dstazasmechaniku)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Dylerio patirtis: {FD7200}%s {FFFFFF}XP.\n", konvertuoti_pinigus(dstazasdyleriu)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Radistø patirtis: {FD7200}%s {FFFFFF}XP.\n",konvertuoti_pinigus(dstazasradistu)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Baikeriu patirtis: {FD7200}%s {FFFFFF}XP.\n\n",konvertuoti_pinigus(dstazasbaikeriu)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Mafijos Patirtis: {FD7200}%s {FFFFFF}XP.\n", konvertuoti_pinigus(dstazagauju)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Klubø Patirtis: {FD7200}%s {FFFFFF}XP.\n", konvertuoti_pinigus(dstazaklubu)); strcat(strf, str);
	str = "\n", strcat(strf, str);
	format(str, 80, "{FFFFFF}Paprastø darbø patirtis: {FD7200}%s {FFFFFF}XP.\n", konvertuoti_pinigus(dstazapdarbu)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Bendra darbø patirtis: {FD7200}%s {FFFFFF}XP.\n", konvertuoti_pinigus(bendrasxp)); strcat(strf, str);
	format(str, 80, "{FFFFFF}Visa þaidëjo patirtis: {FD7200}%s {FFFFFF}XP.", konvertuoti_pinigus(visasxp)); strcat(strf, str);
	ShowPlayerDialog(playerid, 855, DIALOG_STYLE_MSGBOX, "{ffffff}Darbø patirtis", strf, "Gerai", "");
	return 1;
}
CMD:veiksmai(playerid, params[])
{
	SendClientMessage(playerid,BLUE," Veiksmai:");
	SendClientMessage(playerid,ORANGE," /sokti/sedet /rukyti/pakelt /gulet /yohyoh /sexy");
	SendClientMessage(playerid,ORANGE," /verkt /ateik /spresti /gogogo /kungfu /pee /wank");
	SendClientMessage(playerid,ORANGE," /taip /ne /trenkt /mot /parkour /persirengti");
	SendClientMessage(playerid,ORANGE," /baik - baigti veiksmus");
	return 1;
}
CMD:pica(playerid, params[])
{
	if(playerDB[playerid][specialybe] != 20) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new pID, msg[95], Float:Coo[3];
	if(sscanf(params, "u", pID)) return SendClientMessage(playerid, BLUE, " Parduoti þaidëjui picà: [Vardas_Pavardë/ID]");
	if(pID == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	if(pID == playerid) return SendClientMessage(playerid, RED, " Pats pavalgyti gali ir paprasèiau!.");
	GetPlayerPos(pID,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 30.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, " Þaidëjas per toli.");
	if(GetPlayerMoneyA(pID) < 50) return SendClientMessage(playerid, RED, " Þaidëjas neturi 50 picai!");
	format(msg, sizeof(msg), " Þaidëjui %s siûlote pirkti picà.", GetPlayerNameEx(pID));
	SendClientMessage(playerid, GREEN, msg);
	format(msg,sizeof(msg),"Picerininkas %s jums siûlo pirkti pica uþ 50\nSuvalge picà gausite 100% sotumo ir +5HP.",GetPlayerNameEx(playerid));
	ShowPlayerDialog(pID,4771, DIALOG_STYLE_MSGBOX,"Valgis",msg, "Valgyti","Atðaukti");
    playerDB[pID][ChoosedPlayer] = playerid;
	return 1;
}
CMD:skomandos(playerid)
{
    if(playerDB[playerid][admin] < 5) return 0;
	new masyvas[2550];
	format(masyvas, sizeof(masyvas), "\tSavininko Komandos\n\n/mg gausite ginklø paketà\n/unbanvisus - Atblokuoti visus þaidëjus\n/unjailadmin - iðlaisvinsite savininkà ið kalëjimo\n/pakeistilaika [laikas] - pakeisite serverio laikà.");
	format(masyvas, sizeof(masyvas), "%s\n/rest - restartuosite serverá\n/premija - duosite visam serveriui XP ir \n/unjailadmin [dalis vardo] [prieþastis] - iðlaisvinsite administratoriø ið kalëjimo.",masyvas);
	format(masyvas, sizeof(masyvas), "%s\n/random - iðrinksite atsitiktiná þaidëjà\n/duotipazyma [dalis vardo] - duosite þaidëjui sveikatos paþymà: 3 dienom\n/duotiteises [dalis vardo] - duosite þaidëjui visas teisæs.\n/duotiglic [dalis vardo] - duosite þaidëjui ginklø licenzijà.\n/givexp2 [dalis vardo] - duosite þaidëjui XP kieká.\n/givexp3 [dalis vardo] - nuimsitë þaidëjui XP kieká.",masyvas);
	format(masyvas, sizeof(masyvas), "%s\n/emigruoti [dalis vardo] - emigruosite serverio þaidëjà\n/spalva - jûsø Vardas_Pavardë bus raudonos spalvos\n/pakeistilyti [V_P] - Pakeisite þaidëjo lytá.\n/skirtivip [V_P] - Uþdësite þaidëjui VIP narystæ.\n/skirtiadmin [V_P] - Uþdësite þaidëjui I, II, III lygiø administratoriu.\n/makemoney [V_P] - Uþdësite neribotà pinigø kieká.",masyvas);
	format(masyvas, sizeof(masyvas), "%s\n/addhouse - Sukûrsite þaidime namà pasirinkdami interjierà ir kainà.\n/delhouse - Iðtrinsite þaidime nurodytà namà pagal jo numerá.\n/ps - Skelbti visiems matant.",masyvas);
	format(masyvas, sizeof(masyvas), "%s\n/darbinesrr - Atstatysite nenaudojamas maðinas.\n/duotizdraudima - Uþdësite þaidëjui apsidraudimà.",masyvas);
	format(masyvas, sizeof(masyvas), "%s\n/duotiadraudima - Uþdësite þaidëjui Administratoriø draudimà.\n/duotivdraudima - Uþdësite þaidëjui VIP draudimà.\n/duotigdraudima - Uþdësite þaidëjui Gaujø draudimà.\n/nuimtiadraudima - Nuimsite þaidëjui Administratoriø draudimà\n/nuimtigdraudima - Nuimsite þaidëjui Gaujø draudimà.\n/nuimtivdraudima - Nuimsite þaidëjui VIP draudimà.\n/accban - uþblokuosite þaidëjo acc.\n/ipban - uþblokuosite þaidëjo IP.",masyvas);
	ShowPlayerDialog(playerid, 427, DIALOG_STYLE_LIST, "{ffffff}Savininkø komandos:",masyvas, "Supratau", "");
	return 1;
}
CMD:afondas(playerid)
{
	if(playerDB[playerid][admin] < 4) return 0;
	new masyvas[128];
	format(masyvas, 128, "Admin fonde yra: %d !",afondas);
	SendClientMessage(playerid, BLUE, masyvas);
	SendClientMessage(playerid, 0xD9E916FF, " Jei norite, galite paimti ( /afpaimti ) arba ideti ( /afpadeti ) pinigu i fonda.");
	SendClientMessage(playerid, 0xD9E916FF, " Demesio: Administratoriu fondo pinigai yra skirti TIK zaidejams serveryje (renginiams, eventams). Sau pasiimti pinigus grieþtai draudþiama!");
	return true;
}
CMD:afpadeti(playerid, params[])
{
	if(playerDB[playerid][admin] < 2) return 0;
	new suma , masyvas [ 128 ] , msg [ 128 ] ;
	if(sscanf(params, "d",suma)) return SendClientMessage(playerid, BLUE, " Padëti pinigus á fondà: /afpadeti [Kiek]");
	else if(GetPlayerMoneyA(playerid) < suma) return SendClientMessage(playerid, RED," Tu tiek neturi!");
	else if(suma < 1) return SendClientMessage(playerid, RED, " Maþiausiai pinigø galite padëti 1!");
	else
	{
		afondas+=suma;
		GivePlayerMoneyA(playerid,-suma);
		format(masyvas, 128, "{00FFF7}[Admin Chat] %s padëjo á administratoriø fondà %d ",GetPlayerNameEx(playerid),suma);
		SendMessageToAdmins(VIOLET, masyvas);
		format(msg, 128, "Administratorius %s padëjo á administratoriaus fondà %d  !" , GetPlayerNameEx ( playerid ) , suma ) ;
		SendClientMessageToAll(YELLOW, msg);
	}
	return true;
}
CMD:afpaimti(playerid, params[])
{
    if(playerDB[playerid][admin] < 4) return 0;
	new masyvas [ 128 ] , suma , msg [ 128 ] ;
	if(sscanf(params, "d",suma)) return SendClientMessage(playerid, BLUE, " Paimti pinigø ið fondo: /afpaimti [Kiek]" ) ;
	else if(afondas < suma) return SendClientMessage(playerid, RED, " Tiek pinigø fonde nëra!");
	else if(suma < 1) return SendClientMessage(playerid, RED, " Maþiausiai pinigø galite pasiimti 1 !" ) ;
	else
	{
		afondas-=suma;
		GivePlayerMoneyA(playerid, suma);
		format(masyvas, 128, "{00FFF7}[Admin Chat] %s pasiimë ið administratoriaus fondo %d " , GetPlayerNameEx ( playerid ) , suma ) ;
		SendMessageToAdmins(VIOLET, masyvas);
		format(msg, 128, "Administratorius %s pasiimë ið administratoriaus fondo %d  !" , GetPlayerNameEx ( playerid ) , suma ) ;
		SendClientMessageToAll(YELLOW, msg);
	}
	return true;
}
CMD:mg(playerid)
{
    if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	GivePlayerWeaponEx(playerid, 38, 999999);
	GivePlayerWeaponEx(playerid, 8, 1);
	SendClientMessage(playerid, BLUE, " Gavote administratoriaus ginklø paketà.");
	SetPlayerArmedWeapon(playerid, 0);
	return 1;
}
CMD:unbanvisus(playerid, params[])
{
    if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    mysql_query("UPDATE `players` SET `BanLaikas` = '0', `Uzbanintas` = '0'");
	return 1;
}

CMD:unbanip(playerid, params[])
{
	new uQuerry[150], zVardas[MAX_PLAYER_NAME], String[128];

	if(playerDB[playerid][banpriziuretojas] != true && playerDB[playerid][admin] < 5) return 0;

	if(sscanf(params, "s[24]", zVardas)) return SendClientMessage(playerid, -1, "{8cc17b} NAUDOTI: /unbanip <vardas_pavardë>");

	new pID = GetPlayeridMid(zVardas);

	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{8cc17b} Ðis þaidëjas nëra uþblokuotas!");

	format(uQuerry, 150, "SELECT * FROM `bannedplayers` WHERE `User` = '%s'", zVardas);
	mysql_query(uQuerry);

	mysql_store_result();
	mysql_retrieve_row();

	if(mysql_num_rows())
	{
		format(String, sizeof(String), "{FFFFFF} Þaidëjas {8cc17b}%s{FFFFFF} sëkmingai atblokuotas!", zVardas);
		SendClientMessage(playerid, -1, String);

		format(uQuerry, 150, "DELETE FROM `bannedplayers` WHERE `User` = '%s'", zVardas);
		mysql_query(uQuerry);
	}
	else
	{
		SendClientMessage(playerid, -1, "{8cc17b} Ðis þaidëjas nëra uþblokuotas!");
	}

	return 1;
}

CMD:rest(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");

	SendClientMessageToAll(GREEN, " Tavo profilis iðsaugotas. Serverio restartas bus atliktas 2 minuèiø bëgyje, neuþmirðk vël prisijungti!");
	for(new p = 0; p < MAX_PLAYERS; p++) SetTimerEx("KickEx", 50, false, "d", p);
	SavePelnai();
	SaveSandeliai();

    for(new b = 0; b < MAX_BUSINESSES; b++)
    {
    	SaveBusiness(b);
	}
	SetTimer("IsjungiameServeri", 120000, false);
	return 1;
}
CMD:premija(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new KiekXP, KiekLT, masyvas[130];
	if(sscanf(params, "dd",KiekXP,KiekLT)) return SendClientMessage(playerid, BLUE, " Duoti premija visiems: /premija [KiekXP] [Kiek]");
	else
	{
		format(masyvas, 130, "{FF9900}[PREMIJA] {00FF00}%s iðdalino %dXP, %d visiems þaidëjams",GetPlayerNameEx(playerid), KiekXP,KiekLT);
		SendClientMessageToAll(GREEN, masyvas);
		for(new p; p < MAX_PLAYERS; p++)
		{
			if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
			GivePlayerMoneyA(p, KiekLT);
			SetPlayerScore(p, GetPlayerScore(p) + KiekXP);
		}
	}
	return 1;
}
CMD:ps(playerid, params[])
{
    if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(CheckMute(playerid)) return 1;
	new tekstas[800], zin[900];
	if(sscanf(params, "s[800]", tekstas)) return SendClientMessage(playerid, 0x00FF00AA, " Naudojimas: /ps [tekstas]");
	format(zin, sizeof(zin), "{FF0000}Savininkas {ff9900}%s(%i) {FF0000}praneða: %s", GetPlayerNameEx(playerid), playerid);
	SendClientMessageToAll(0x00ABAB00, zin);
	SendClientMessageToAll(0x00ABAB00, tekstas);
	return 1;
}
CMD:unjailadmin(playerid, params[])
{
    if(playerDB[playerid][admin] < 4 && !playerDB[playerid][dpriziuretojas] && !playerDB[playerid][epriziuretojas] && !playerDB[playerid][apriziuretojas] && !playerDB[playerid][vpriziuretojas] && !playerDB[playerid][banpriziuretojas] && !playerDB[playerid][gpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new pID, str[150], priezastis[50];
	if(sscanf(params, "us[50]", pID, priezastis)) return SendClientMessage(playerid, RED, " /unjailadmin [Vardas_Pavardë/ID] [Prieþastis]");
	if(pID == INVALID_PLAYER_ID || IsPlayerNPC(pID)) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	if(!playerDB[pID][ikalintas]) return SendClientMessage(playerid, RED, " Þaidëjas ne kalëjime.");
	UnjailPlayer(pID);
	format(str, sizeof(str), " [JAIL] Priþiûrëtojas %s paleido ið kalëjimo %s dël, [%s]", GetPlayerNameEx(playerid), GetPlayerNameEx(pID), priezastis);
	SendClientMessageToAll(YELLOW, str);
	SetPlayerColor(pID,PLAYCOL_HIDDEN);
	return 1;
}
CMD:random(playerid, params[])
{
	if(playerDB[playerid][admin] < 4) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new string[90], onlineids[MAX_PLAYERS], playersonline,vardas[MAX_PLAYER_NAME];

	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			onlineids[playersonline] = i;
			playersonline++;
		}
	}
	GetPlayerName(onlineids[random(playersonline)], vardas, sizeof(vardas));
	format(string, 90, "{FF0000}(RANDOM) Þmogui kuriam nusiðypsojo laimë yra: {FF8C00}%s",vardas);
	SendClientMessageToAll(COLOR_GREEN,string);
	return 1;
}
CMD:duotipazyma(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, str[60];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, " Naudojimas: /duotipazyma [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	playerDB[id][medicinospazyma] = gettime() + 259200;
	format(str, sizeof(str), " Administratorius %s davë Jums sveikatos paþymà", GetPlayerNameEx(playerid));
	SendClientMessage(id, BLUE, str);
	format(str, sizeof(str), " Davëte %s sveikatos paþymà", GetPlayerNameEx(id));
	SendClientMessage(playerid, BLUE, str);
	return 1;
}
CMD:duotizdraudima(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, str[60];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, " Naudojimas: /duotizdraudima [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	playerDB[id][zaidejodraudimas] = gettime() + 259200;
	format(str, sizeof(str), " Administratorius %s davë Jums apsidraudimà.", GetPlayerNameEx(playerid));
	SendClientMessage(id, BLUE, str);
	format(str, sizeof(str), " Davëte %s apsidraudimà.", GetPlayerNameEx(id));
	SendClientMessage(playerid, BLUE, str);
	return 1;
}
CMD:duotiteises(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, str[60];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, " Naudojimas: /duotiteises [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	playerDB[id][teises] = true;
	playerDB[id][Mteises] = true;
	playerDB[id][FTeises] = true;
	format(str, sizeof(str), " Administratorius %s davë Jums teises", GetPlayerNameEx(playerid));
	SendClientMessage(id, BLUE, str);
	format(str, sizeof(str), " Davëte %s teises", GetPlayerNameEx(id));
	SendClientMessage(playerid, BLUE, str);
	return 1;
}
CMD:duotiglic(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, str[60];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, " Naudojimas: /duotiglic [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	playerDB[id][gLicenzija] = true;
	format(str, sizeof(str), " Administratorius %s davë Jums G.Lic", GetPlayerNameEx(playerid));
	SendClientMessage(id, BLUE, str);
	format(str, sizeof(str), " Davëte %s G.Lic", GetPlayerNameEx(id));
	SendClientMessage(playerid, BLUE, str);
	return 1;
}
CMD:givexp2(playerid, params[])
{
	new id, kiek, Float:Coo[3], msg[50];
	if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(sscanf(params, "ud", id, kiek)) return SendClientMessage(playerid, RED, " Duoti þaidëjui xp: /givexp2 [Vardas_Pavardë/ID] [Kiekis]");
	if(kiek < 1) return SendClientMessage(playerid, RED, " Duoti maþiau uþ 1 xp negalima!");
	GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 30, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, COLOR, " Þaidëjas per toli nuo jûsø.");
	SetPlayerScore(id, GetPlayerScore(id) + kiek);
	format(msg,sizeof(msg)," %s davë jums %s XP.", GetPlayerNameEx(playerid), konvertuoti_pinigus(kiek));
	SendClientMessage(id,RED,msg);
	format(msg,sizeof(msg)," Davëte %s %s XP.", GetPlayerNameEx(id), konvertuoti_pinigus(kiek));
	SendClientMessage(playerid,RED,msg);
	return 1;
}
CMD:givexp3(playerid, params[])
{
	new id, kiek, Float:Coo[3], msg[50];
	if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(sscanf(params, "ud", id, kiek)) return SendClientMessage(playerid, RED, " Nuimti þaidëjui xp: /givexp3 [Vardas_Pavardë/ID] [Kiekis]");
	GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 30, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, COLOR, " Þaidëjas per toli nuo jûsø.");
	SetPlayerScore(id, GetPlayerScore(id) - kiek);
	format(msg,sizeof(msg)," %s nuimë jums %s XP.", GetPlayerNameEx(playerid), konvertuoti_pinigus(kiek));
	SendClientMessage(id,RED,msg);
	format(msg,sizeof(msg)," Nuimëtë %s %s XP.", GetPlayerNameEx(id), konvertuoti_pinigus(kiek));
	SendClientMessage(playerid,RED,msg);
	return 1;
}
CMD:spalva(playerid)
{
    ShowPlayerDialog(playerid, DIALOG_SPALVOS_PASIRINKIMAS, DIALOG_STYLE_LIST, "Pasirinkite spalva", "Raudona (Tik Savininkams)\nÞalia (Tik Administratoriams)\nGeltona (Tik VIP nariams)\nMëlyna (Tik Priþiûrëtojams)\nAtstatyti spalva", "Rinktis", "Iðeiti");
	return true;
}
CMD:az(playerid, params[])
{
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, "* *** Tokios komandos nëra. Visos komandos: /Pagalba");
	if(CheckMute(playerid)) return 1;
	new pID, tekstas[120], zin[180];
	if(sscanf(params, "us[120]",pID, tekstas)) return SendClientMessage(playerid, BLUE, "* Naudojimas: /az [Vardas_Pavardë] [Tekstas]");
	format(zin, 125, "{E57AFA}[AÞ] %s >> %s: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(pID), tekstas);
	SendClientMessage(pID, GREEN, zin);
	SendClientMessage(playerid, GREEN, zin);
	return 1;
}

CMD:pakomandos(playerid)
{
    if(playerDB[playerid][admin] < 4 ) return SendClientMessage(playerid, RED, "Tokios komandos nëra. Norëdami pamatyti visas komandos /komandos");
    new strf[1250], str[128];
	str = "\t /afkondas - /afpaimti paimti pinigu ið fondo /afpadeti padëti pinigus á fonda\n"; strcat(strf, str);
	str = "\t /unjailadmin - Iðlaisvinsite administratoriu ið kalëjimo\n"; strcat(strf, str);
	str = "\t /random - Random þaidëjui nusiðypsos laimë (padës darabt event ar panaðiai)\n"; strcat(strf, str);
	str = "\t /duotisg - 20 metru atstumu visiem duosite SG (shotgun)\n"; strcat(strf, str);
	str = "\t /darbinesrr - Atstatysite visas darbines transporto priemones\n"; strcat(strf, str);
	str = "\t /ist - Galite naudoti IST ( Iðteisinti) komandà nedirbdami teisësaugoja \n"; strcat(strf, str);
	str = "\t "#COL_ERROR">>>> PIKNAUDÞIAVIMAS ÐIOMIS KOMANDOMIS ADMINISTRATORIUS BUS NUIMTAS ARBA PRARASITE PRIÞIÛRËTOJÀ<<<<"; strcat(strf, str);
	ShowPlayerDialog(playerid, DIALOG_NONE, DIALOG_STYLE_MSGBOX, "{ffffff}IV Administratoriu komandos:", strf, "Gerai", "");
	return 1;
}
CMD:akomandos(playerid)
{
    SendClientMessage(playerid, YELLOW, " Bûdamas Administratoriu gausite 3 xp á minutæ.");
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Norëdamas nusipirkti administratoriu arba pratæsti galiojimà raðyk: {FF0000}/paslaugos");
	new strf[3600], str[400];
	str = "{FFFF00}1 lygio administratoriaus komandos:\n"; strcat(strf, str);
	str = "\t{ffffff} /s [tekstas] - paraðo þinutæ visiems.\n"; strcat(strf, str);
	str = "\t{ffffff} /bausti Vardas_Pavardë/ID - Nubausite þaidëja.\n"; strcat(strf, str);
	str = "\t /e - paskelbsite apie eventà visiems þaidëjams.\n"; strcat(strf, str);
	str = "\t /gydyti - sutaiso maðinà ir pagydo jus.\n"; strcat(strf, str);
	str = "\t /spalva > Þalia - uþsidësite þalia spalvà.\n"; strcat(strf, str);
	str = "\t /gun - gaunate administratoriaus ginklus. Jeigu dirbate teisësauga, gausite didesná ginklø paketà.\n"; strcat(strf, str);
	str = "\t /zxc - pradësite skaièiavima.\n"; strcat(strf, str);
	str = "\t /to [dalis vardo] - nukeliausite pas þaidëjà(be masinos).\n"; strcat(strf, str);
	str = "\t /pzu [dalis vardo] - priþiûrësite þaidëjà.(Jei norite nepriþiurëti þaidëjo raðkite /pzu be nicko)\n"; strcat(strf, str);
	str = "\t /boom - susprogdina automobilá, kuriame sëdite(pastato á spawn vietà).\n"; strcat(strf, str);
	str = "\t /ac [tekstas] - raðote á adminø chat'à(mato tik adminai).\n"; strcat(strf, str);
	str = "\t /tpm - teleportas prie nuosavo pirmo automobilio.\n"; strcat(strf, str);
	str = "\t /tpm2 - teleportas prie nuosavo antro automobilio.\n"; strcat(strf, str);
	str = "\t /takew [dalis vardo] - atimti þaidëjo ginklus.\n"; strcat(strf, str);
	str = "\t /freeze - suðaldo þaidëjà.\n"; strcat(strf, str);
	str = "\t /unfreeze - atðaldo þaidëjà.\n"; strcat(strf, str);

	str = "\t /vt1 - teleportacija á Polomino Creek miestelá + su maðina.\n"; strcat(strf, str);
	str = "\t /vt2 - teleportacija á Dillimore miestelá + su maðina.\n"; strcat(strf, str);
	str = "\t /vt3 - teleportacija á Montgomery miestelá + su maðina.\n"; strcat(strf, str);
	str = "\t /vt4 - teleportacija á Blueberry miestelá + su maðina.\n"; strcat(strf, str);
	str = "\t /tpdarbas - teleportacija á savo darbà + su maðina.\n"; strcat(strf, str);
	str = "{FFFF00}2 lygio administratoriaus komandos:\n"; strcat(strf, str);
	str = "\t{ffffff} /get [dalis vardo] - atkelia þaidëja pas jus.\n"; strcat(strf, str);
	str = "\t /pildyti - pripildo jûsø tr. priemonës bakà.\n"; strcat(strf, str);
	str = "\t /gskin - Geltonas SKIN skirtas eventams.\n"; strcat(strf, str);
	str = "\t /zskin - Þalias SKIN skirtas eventams.\n"; strcat(strf, str);
	str = "\t /heal [dalis vardo] - pagydo þaidëjà ir duoda ðarvus.\n"; strcat(strf, str);
	str = "\t /pagydytivisus - duosite gyvybiø / ðarvø 20 metrø atstumu.\n"; strcat(strf, str);
	str = "\t + Visos 1 lvl admin komandos.\n\n"; strcat(strf, str);
	str = "{FFFF00}3 lygio administratoriaus komandos:\n"; strcat(strf, str);
	str = "\t{ffffff} /unjail [dalis vardo] - iðleidzia þaidëjà ið kalëjmo á laisvæ\n"; strcat(strf, str);
	str = "\t /unmute [dalis vardo] - leidþia þaidëjui kalbëti.\n"; strcat(strf, str);
	str = "\t /zskin - Uþdëti þaidëjui zalios komandos skin.\n"; strcat(strf, str);
	str = "\t /gskin - Uþdëti þaidëjui geltonos komandos skin.\n"; strcat(strf, str);
	str = "\t /uzvalgyti - Pakels alká iki 100 procentø.\n"; strcat(strf, str);
	str = "\t + visos 2 ir 1 lvl admin komandos + 3 XP á minutæ.\n"; strcat(strf, str);
	str = "\t + Administratoriai matys kokias administratoriai naudoja komandas ant þaidëjø."; strcat(strf, str);

	
	ShowPlayerDialog(playerid, 425, DIALOG_STYLE_MSGBOX, "{ffffff}Administratoriu komandos:", strf, "Gerai", "");
	return 1;
}
CMD:s(playerid, params[])
{
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, "Apgailëstaujame, tokios komandos mûsø serveryje nëra. Raðykite {FFFFFF}/komandos.");
	if(CheckMute(playerid)) return 1;
	new tekstas[800], zin[900];
	if(sscanf(params, "s[800]", tekstas)) return SendClientMessage(playerid, 0x00FF00AA, "* Naudojimas: /s [tekstas]");
	if(playerDB[playerid][ParaseAdminas] > gettime()) return SendClientMessage(playerid, RED, "* Raðyti per administratoriø chatà galite tik kas 30 sekundþiø.");
    if(playerDB[playerid][admin] == 1)
    {
		format(zin, sizeof(zin), "{32870e}[I] [Administratorius] %s[%i] : {47af1a}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
    if(playerDB[playerid][admin] == 2)
    {
		format(zin, sizeof(zin), "{32870e}[II] [Administratorius] %s[%i] : {47af1a}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
    if(playerDB[playerid][admin] == 3)
    {
		format(zin, sizeof(zin), "{32870e}[III] [Administratorius] %s[%i] : {47af1a}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
    if(playerDB[playerid][admin] == 4)
    {
		format(zin, sizeof(zin), "{32870e}[IV] [Administratorius] %s[%i] : {47af1a}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
	if(playerDB[playerid][admin] == 5)
    {
		format(zin, sizeof(zin), "{32870e}[Savininkas] %s[%i] : {47af1a}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
	SendClientMessageToAll(0x00FF0000, zin);
	playerDB[playerid][ParaseAdminas] = gettime() + 30;
	return 1;
}
CMD:e(playerid, params[])
{
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(CheckMute(playerid)) return 1;
	new tekstas[800], zin[900];
	if(sscanf(params, "s[800]", tekstas)) return SendClientMessage(playerid, 0x00FF00AA, " Naudojimas: /e [tekstas]");
	format(zin, sizeof(zin), "{37f467}[ {ccff66}EVENT {37f467}] Administratorius {ccff66}%s(%i) {37f467}skelbia EVENT: {ccff66}%s", GetPlayerNameEx(playerid), playerid);
	SendClientMessageToAll(0xccff6600, zin);
	SendClientMessageToAll(0xccff6600, tekstas);
	return 1;
}
CMD:kentas(playerid, params[])
{
    if(playerDB[playerid][admin] < 4) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(CheckMute(playerid)) return 1;
	new tekstas[800], zin[900];
	if(sscanf(params, "s[800]", tekstas)) return 0;
	format(zin, sizeof(zin), ""#COL_ERROR"Serverio Priþiûrëtoju Vadovas {37f467}- {ccff66}%s(%i) "#COL_ERROR"%s", GetPlayerNameEx(playerid), playerid);
	SendClientMessageToAll(0xccff6600, zin);
	SendClientMessageToAll(0xccff6600, tekstas);
	return 1;
}
CMD:gydyti(playerid)
{
	new Float:vPos[3], masyvas[128];
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(playerDB[playerid][KadaGydes] > gettime()) return SendClientMessage(playerid, RED, " Ðità komandà galima naudoti tik kas 1 minutæ!");
	if(IsPlayerInAnyVehicle(playerid)) RepairVehicle(GetPlayerVehicleID(playerid));
	SetPlayerHealthEx(playerid, 100);
	SetPlayerArmourEx(playerid, 100);
	playerDB[playerid][KadaGydes] = gettime() + 60;
	SendClientMessage(playerid,BLUE," Pasigydei");
	GetPlayerPos(playerid, vPos[0], vPos[1], vPos[2]);
	format(masyvas, 128, "[ADMIN] %s pasigydë",GetPlayerNameEx(playerid));
	
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
	    if(IsPlayerConnected(p))
	    {
		    if(IsPlayerInRangeOfPoint(p, 20.0, vPos[0], vPos[1], vPos[2]))
	        {
	            SendClientMessage(p, RED, masyvas);
	        }
	    }
	}
	return 1;
}
CMD:gun(playerid)
{
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, " Kalejime ginklai neleidþiami");
    if(playerDB[playerid][KadaGun] > gettime()) return SendClientMessage(playerid, RED, " Ðità komandà galima naudoti tik kas 5 minutes !");
	if(IsPlayerInAnyVehicle(playerid)) RepairVehicle(GetPlayerVehicleID(playerid));
	playerDB[playerid][KadaGun] = gettime() + 300;
	SendClientMessage(playerid, BLUE, "{37f467} Gavote administratoriaus ginklø paketà !");
	GivePlayerWeaponEx(playerid, 31, 150);//M4
	GivePlayerWeaponEx(playerid, 27, 100);//spaz
	GivePlayerWeaponEx(playerid, 28, 100);//uzi
	SetPlayerArmedWeapon(playerid, 0);
	return 1;
}
CMD:zxc(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new str[45];
	if(Skaicevimas == false)
	{
		Skaicevimas = true;
		format(str, sizeof(str), " %s pradëjo skaièiavimà", GetPlayerNameEx(playerid));
		SendClientMessageToAll(0xFF000090, str);
		for(new i; i < MAX_PLAYERS; i++)
		{
			GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~y~ 3 ~g~-",1000,3);
			PlaySound(i, 1056);
		}
		SetTimer("count2",1000,0);
		SetTimer("count1",2000,0);
		SetTimer("countgo",3000,0);
		SetTimer("stop",6000,0);
		return 1;
	}
	else
	{
		SendClientMessage(playerid, RED, " Skaièiavimas jau pradëtas!");
	}
	return 1;
}
CMD:to(playerid, params[])
{
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][dpriziuretojas] && !playerDB[playerid][epriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    new id, msg[125];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, " Keliauti pas þaidëjà be maðinos : /to [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra !");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,RED,"* Tokio þaidëjo nëra.");
	if(OfisoDarbas[id] == true) return SendClientMessage(playerid, RED, " Þaidëjas AFK zonoje!");
	if(playerDB[id][ikalintas]) return SendClientMessage(playerid, RED, " Þaidëjas kalëjime !");
	if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, " Jûs esate surakintas arba suriðtas !");
	if(playerDB[id][cuffed]) return SendClientMessage(playerid, RED, " Þaidëjas surakintas arba suriðtas !");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, " Kalëjime teleportuotis draudþiama !");
	if(playerDB[id][admin] == 5) return SendClientMessage(playerid, RED, " Pas savininkus teleportuotis, draudþiama !");
	SendClientMessage(playerid, YELLOW, "Nusiuntete praðyma teleportuotis pas þaidëja");
	playerDB[id][ChoosedPlayer] = playerid;
	format(msg, 125 ,"{ffffff}Administratorius {E0811B}%s {ffffff}nori atsikelti pas jus.\nAr sutinkate? Taip/Ne",GetPlayerNameEx(playerid));
	ShowPlayerDialog(id, 7590, DIALOG_STYLE_MSGBOX, "Atsikëlimas", msg, "Taip", "Ne");
	return 1;
}
CMD:pzu(playerid, params[])
{
	if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, "{00FF00}[NRMG.LT]{FFFFFF} Tokios komandos nëra. Visos komandos {00FF00} /pagalba");
  	if(playerDB[playerid][ikalintas]) return SendClientMessage(playerid, RED, "* Kalëjme negalima stebët..");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][dpriziuretojas] && !playerDB[playerid][epriziuretojas]) return SendClientMessage(playerid, RED, "{00FF00}[NRMG.LT]{FFFFFF} Tokios komandos nëra. Visos komandos {00FF00} /pagalba");
	new id, mess[40];
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
	{
		TogglePlayerSpectating(playerid, false);
		for(new slot=0; slot<12; slot++) GivePlayerWeaponEx(playerid,playerDB[playerid][spdata][slot],playerDB[playerid][spdata][12+slot]);
		SetPlayerSkin(playerid,playerDB[playerid][spdata][24]);
		SetPlayerPos(playerid,playerDB[playerid][spos][0],playerDB[playerid][spos][1],playerDB[playerid][spos][2]);
		SetPlayerTWanted(playerid,playerDB[playerid][spdata][25]);
		SetPlayerInterior(playerid,playerDB[playerid][spdata][26]);
		SetPlayerVirtualWorld(playerid,playerDB[playerid][spdata][27]);
		return 1;
	}
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR, "* Priþiurëti þaidëjà: /pzu [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR, "* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, COLOR, "* Save ir taip matai!");
	format(mess, sizeof(mess), "* Priþiûrite %s!", GetPlayerNameEx(id));
	SendClientMessage(playerid, COLOR, mess);
	for(new slot=0; slot<12; slot++){ GetPlayerWeaponData(playerid,slot,playerDB[playerid][spdata][slot],playerDB[playerid][spdata][12+slot]);}
	playerDB[playerid][spdata][24]=GetPlayerSkin(playerid);
	GetPlayerPos(playerid,playerDB[playerid][spos][0],playerDB[playerid][spos][1],playerDB[playerid][spos][2]);
	playerDB[playerid][spdata][25]=GetPlayerTWanted(playerid);
	playerDB[playerid][spdata][26]=GetPlayerInterior(playerid);
	playerDB[playerid][spdata][27]=GetPlayerVirtualWorld(playerid);
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
	SetPlayerInterior(playerid,GetPlayerInterior(id));
    if(IsPlayerInAnyVehicle(id))
    {
        SavePlayerData(playerid, true);
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(id));
	}
	else
	{
	    SavePlayerData(playerid, true);
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, id);
	}
	return 1;
}
CMD:jail(playerid, params[])
{
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new pID, laikas, msg[800], msgs[800], priezastis;
	if(sscanf(params, "uds[50]", pID, laikas, priezastis)) return SendClientMessage(playerid, RED, " /jail [Vardas/ID] [laikas] [prieþastis]");
	if(laikas < 1 || laikas > 240) return SendClientMessage(playerid, BLUE, " Ákalinti þaidëjà laikui: /jail [Vardas_Pavardë/ID] [Laikas (1-240 minuèiø/valandø)] [Prieþastis]");
	if(pID == INVALID_PLAYER_ID || IsPlayerNPC(pID)) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	if(playerDB[pID][ikalintas]) return SendClientMessage(playerid, RED, " Þaidëjas jau kalëjime.");
	if(laikas < 1) return SendClientMessage(playerid, RED, " Veiksmas negalimas!");
	JailPlayer(pID, (GetPlayerTWanted(pID) * 60) + (laikas * 60));
	SendClientMessage(pID, YELLOW, " Jûs ákalintas administratoriu.");
    format(msg, sizeof(msg), "{0B8100}Administratorius {0D9F00}%s(%i) {0B8100}ákalino {0D9F00}%s {0B8100}!", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(pID));
    format(msgs, sizeof(msgs), "{0B8100}Þaidëjas ákalintas {0D9F00}%d minuèiø {0B8100}! Ákalinimo prieþastis - {0D9F00}%s {0B8100}!", laikas, priezastis);
    SendClientMessageToAll(BLUE, msg);
    SendClientMessageToAll(BLUE, msgs);
	SetPlayerColor(pID,PLAYCOL_HIDDEN);
	return 1;
}
CMD:boom(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
	if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, " Jûs esate surakintas arba suriðtas !");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, " Norint susprogdinti maðinà turi bûti maðinoje!");
	if(vehicleDB [ GetPlayerVehicleID ( playerid ) ] [ vOwned ] ) return SendClientMessage(playerid, RED, " Nuosavø maðinø sprogdinti negali!");
	SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	return 1;
}
CMD:ac(playerid, params[])
{
	if(CheckMute(playerid)) return 1;
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new zin[128], str[155];
    if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid, BLUE, " Admin chato þinutë: /ac [Þinutë]");
	format(str, sizeof(str), "{00FFF7}[Admin Chat] %s: %s", GetPlayerNameEx(playerid), zin);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerNPC(i) || !IsPlayerConnected(i) || playerDB[i][admin] < 1) continue;
		SendClientMessage(i, ORANGE, str);
	}
	return 1;
}
CMD:tpm(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, " Jûs esate surakintas arba suriðtas !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
	if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerCar1 [ playerid ] == -1) return SendClientMessage(playerid, C_RED, " Neturite transporto priemonës.");
    if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
	new Float:vPos[4];
	GetVehiclePos(playerCar1 [ playerid ], vPos[0], vPos[1], vPos[2]);
	GetVehicleZAngle(playerCar1 [ playerid ], vPos[3]);
	SetPlayerPos(playerid, vPos[0], vPos[1], vPos[2]);
	SetPlayerFacingAngle(playerid, vPos[3]);
	SendClientMessage(playerid, WHITE, " Nusiteleportavote prie savo trans. priem.");
	return 1;
}
CMD:tpm2(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, " Jûs esate surakintas arba suriðtas !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
	if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerCar2 [ playerid ] == -1) return SendClientMessage(playerid, C_RED, " Neturite transporto priemonës.");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
	new Float:vPos[4];
	GetVehiclePos(playerCar2 [ playerid ], vPos[0], vPos[1], vPos[2]);
	GetVehicleZAngle(playerCar2 [ playerid ], vPos[3]);
	SetPlayerPos(playerid, vPos[0], vPos[1], vPos[2]);
	SetPlayerFacingAngle(playerid, vPos[3]);
	SendClientMessage(playerid, WHITE, " Nusiteleportavote prie savo 2 transporto priemonës");
	return 1;
}
CMD:takew(playerid, params[])
{
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    new id;
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, " Atimti ginklus: /takew [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");
	if(playerDB[id][admin] == 5) return SendClientMessage(playerid, RED, " Savininkui atimti ginklus, draudþiama!");
	ResetPlayerWeaponsEx(id);
	SendClientMessage(playerid, BLUE, " Ginklai atimti!");
	return 1;
}
CMD:freeze(playerid, params[])
{
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, str[135];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Uþðaldyti þaidëjà: /freeze [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(id==playerid) return SendClientMessage(playerid, RED, "* Save uþðaldyti draudþiama.");
	if(playerDB[id][admin] == 5) return SendClientMessage(playerid, RED, "* Savininkà uþðaldyti, draudþiama!");
	TogglePlayerControllable(id, false);
	SendClientMessage(playerid, BLUE, "* Þaidëjas uþðaldytas!");
	format(str,sizeof(str),"[AdminChat] : Administratorius %s panaudojo komandà /freeze þaidëjui : {FF9900}%s",GetPlayerNameEx(playerid), GetPlayerNameEx(id));
	SendMessageToAdmins(BLUE, str);
	return 1;
}
CMD:unfreeze(playerid, params[])
{
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, str[135];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Atðaldyti þaidëjà: /unfreeze [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra!");
	if(id==playerid) return SendClientMessage(playerid, RED, "* Save atðaldyti draudþiama.");
	if(OfisoDarbas[id] == true) return SendClientMessage(playerid, RED, "* Þaidëjas AFK zonoje!");
	TogglePlayerControllable(id, true);
	SendClientMessage(playerid, GREEN, "* Þaidëjas atðaldytas!");
	format(str,sizeof(str),"[AdminChat] : Administratorius %s panaudojo komandà /unfreeze þaidëjui : {FF9900}%s",GetPlayerNameEx(playerid), GetPlayerNameEx(id));
	SendMessageToAdmins(BLUE, str);
	return 1;
}
CMD:kill(playerid, params[])
{
	if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !");
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, msg[80];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Nuþudyti þaidëjà: /kill [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra");
	if(OfisoDarbas[id] == true) return SendClientMessage(playerid, RED, "* Þaidëjas AFK zonoje!");
	if(playerDB[id][admin] == 5) return SendClientMessage(playerid, RED, "* Savininkà nuþudyti, draudþiama!");
	format(msg, sizeof(msg), "* Nuþudëte %s!", GetPlayerNameEx(id));
	SendClientMessage(playerid, BLUE, msg);
	format(msg, sizeof(msg), "* Jus nuþudë administratorius %s!", GetPlayerNameEx(playerid));
	SendClientMessage(id, BLUE, msg);
	SetPlayerHealthEx(id, 0);
	return 1;
}
/*CMD:tpdm(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
	if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return 0;
	if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
	SetPlayerPos(playerid,2844.6208,-2532.4114,18.0043);
	SendClientMessage(playerid, YELLOW, "Nusiteleportavai á DM evento laivà.");
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}
CMD:tpdm2(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
	if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return 0;
	if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4]) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	if(GetVehicleModel(vehicleid) == 409) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	SetPlayerPos(playerid,429.0614,2483.8291,16.4844);
	SetVehiclePos(vehicleid,428.6852,2498.6069,20.0967);
	PutPlayerInVehicle(playerid, vehicleid, 0);
	SendClientMessage(playerid, YELLOW, "Nusiteleportavai á DM 2 zona .");
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}
CMD:tpbull(playerid)
{
if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !!");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return 0;
    if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
SetPlayerPos(playerid,16.3703,1532.0107,12.7500);
return 1;
}

CMD:tpdrift(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !!");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return 0;
    if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4]) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	if(GetVehicleModel(vehicleid) == 409) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	SetPlayerPos(playerid,-310.8965,1508.9871,75.5625);
	SetVehiclePos(vehicleid,-281.1718,1535.1921,78.5190);
	PutPlayerInVehicle(playerid, vehicleid, 0);
	SendClientMessage(playerid, YELLOW, "Nusiteleportavai á drift evento trasà.");
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}
CMD:tpdrag(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
    if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !!");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return 0;
    if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4]) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	if(GetVehicleModel(vehicleid) == 409) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	SetPlayerPos(playerid,-1646.3528,-182.7855,14.1484);
	SetVehiclePos(vehicleid,-1691.5167,-202.8925,17.1635);
	PutPlayerInVehicle(playerid, vehicleid, 0);
	SendClientMessage(playerid, YELLOW, "Nusiteleportavai á drag evento trasà.");
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}*/

CMD:tpbaze(playerid)
{
    if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !!");
    if(playerDB[playerid][admin] < 1) return 0;
    if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
    if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
    
	if(playerDB[playerid][plead] == 1 || playerDB[playerid][pavdrk] == 1 )
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 653.7253,-524.7097,16.3359);
		SetVehiclePos(vehicleid,653.7253,-524.7097,16.3359);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Policijos Departamento {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 2 || playerDB[playerid][pavdrk] == 2 )
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 1235.9875,341.0381,19.5645);
		SetVehiclePos(vehicleid,1237.9464,343.6937,19.6222);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Medikø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 3 || playerDB[playerid][pavdrk] == 3 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 2218.3330,-77.9485,26.4844);
		SetVehiclePos(vehicleid,2218.3330,-77.9485,26.4844);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Taksistø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 4 || playerDB[playerid][pavdrk] == 4 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 127.0342,-102.6085,1.5781);
		SetVehiclePos(vehicleid,127.0342,-102.6085,1.5781);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Mechanikø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 5 || playerDB[playerid][pavdrk] == 5 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 912.8215,373.6411,19.8424);
		SetVehiclePos(vehicleid,912.8215,373.6411,19.8424);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Dyleriø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 10 || playerDB[playerid][pavdrk] == 10 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, -19.1945,-317.8746,5.4730);
		SetVehiclePos(vehicleid,-11.0907,-326.4486,5.3512);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}SWAT {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 6 || playerDB[playerid][pavdrk] == 6 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, -320.4296,1766.8674,43.0159);
		SetVehiclePos(vehicleid,-291.7516,1740.4651,42.8711);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Russian {37f467}mafijà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 8 || playerDB[playerid][pavdrk] == 8 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, -691.2899,949.2783,12.2018);
		SetVehiclePos(vehicleid,-701.1767,950.0710,12.2521);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Yakuza {37f467}mafijà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 11 || playerDB[playerid][pavdrk] == 11 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 1342.5438,755.9700,10.5758);
		SetVehiclePos(vehicleid,1342.5438,755.9700,10.5758);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Fûristø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 13 || playerDB[playerid][pavdrk] == 13 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 289.6097,-198.9221,1.5945);
		SetVehiclePos(vehicleid,289.6097,-198.9221,1.5945);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Radistø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 14 || playerDB[playerid][pavdrk] == 14 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 1904.0437,584.3434,10.8800);
		SetVehiclePos(vehicleid,1899.6801,614.7495,10.6395);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Baikeriø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 15 || playerDB[playerid][pavdrk] == 15 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, -546.3594,2610.4236,53.6390);
		SetVehiclePos(vehicleid,-536.3837,2610.4497,53.5192);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66} Costello  {37f467}klubà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 16 || playerDB[playerid][pavdrk] == 16 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, -1505.0034,2513.6306,56.8512);
		SetVehiclePos(vehicleid,-1522.8715,2516.5071,56.7579);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66} -Patriotai-  {37f467}klubà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][plead] == 17 || playerDB[playerid][pavdrk] == 17 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 2233.2336,2437.7903,10.8125);
		SetVehiclePos(vehicleid,2233.2336,2437.7903,10.8125);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Armijos {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	else if(playerDB[playerid][specialybe] == 0 )
	{
		SendClientMessage(playerid, RED, " Jûs neturite darbo !");
		}
	return 1;
	}
CMD:tpdarbas(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !!");
    if(playerDB[playerid][admin] < 1) return 0;
    if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
    if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
    
	if(playerDB[playerid][specialybe] == 1)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 653.7253,-524.7097,16.3359);
		SetVehiclePos(vehicleid,653.7253,-524.7097,16.3359);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Policijos Departamento {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 2 )
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 1235.9875,341.0381,19.5645);
		SetVehiclePos(vehicleid,1237.9464,343.6937,19.6222);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Medikø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 3)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 2218.3330,-77.9485,26.4844);
		SetVehiclePos(vehicleid,2218.3330,-77.9485,26.4844);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Taksistø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 4)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 127.0342,-102.6085,1.5781);
		SetVehiclePos(vehicleid,127.0342,-102.6085,1.5781);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Mechanikø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 5)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 912.8215,373.6411,19.8424);
		SetVehiclePos(vehicleid,912.8215,373.6411,19.8424);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Dyleriø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 10)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, -19.1945,-317.8746,5.4730);
		SetVehiclePos(vehicleid,-11.0907,-326.4486,5.3512);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}SWAT {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 6)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, -320.4296,1766.8674,43.0159);
		SetVehiclePos(vehicleid,-291.7516,1740.4651,42.8711);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Russian {37f467}mafijà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 8)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, -691.2899,949.2783,12.2018);
		SetVehiclePos(vehicleid,-701.1767,950.0710,12.2521);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Yakuza {37f467}mafijà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 11)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 1342.5438,755.9700,10.5758);
		SetVehiclePos(vehicleid,1342.5438,755.9700,10.5758);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Fûristø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 13)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 289.6097,-198.9221,1.5945);
		SetVehiclePos(vehicleid,289.6097,-198.9221,1.5945);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Radistø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 14)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 1904.0437,584.3434,10.8800);
		SetVehiclePos(vehicleid,1899.6801,614.7495,10.6395);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Baikeriø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 15)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, -546.3594,2610.4236,53.6390);
		SetVehiclePos(vehicleid,-536.3837,2610.4497,53.5192);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66} Costello  {37f467}klubà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 16)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, -1505.0034,2513.6306,56.8512);
		SetVehiclePos(vehicleid,-1522.8715,2516.5071,56.7579);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66} -Patriotai-  {37f467}klubà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 17)
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 2233.3555,2444.5842,10.8125);
		SetVehiclePos(vehicleid,2233.3555,2444.5842,10.8125);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}ARMIJOS {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 25 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 1061.9666,-344.2190,73.9922);
		SetVehiclePos(vehicleid,1036.9667,-338.0906,73.8720);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Krovikai {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 20 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 1358.2836,252.7539,19.6245);
		SetVehiclePos(vehicleid,1353.8182,256.3978,19.3647);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Picø iðveþiotojø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 29 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
 		if(GetVehicleModel(vehicleid) == 409) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
		SetPlayerPos(playerid, 207.4414,-59.2163,1.6249);
		SetVehiclePos(vehicleid,209.2393,-66.1516,1.3800);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Limuzinininkø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 22 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 325.5979,-58.6568,1.5900);
		SetVehiclePos(vehicleid,324.0300,-63.7682,1.4644);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Valytojø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 26 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 811.3893,-611.3924,16.3359);
		SetVehiclePos(vehicleid,810.3097,-601.5861,16.2210);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Gaisrinës {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 24 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 1950.1102,159.7730,36.9482);
		SetVehiclePos(vehicleid,1954.6927,162.8206,36.6837);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Medkirèiø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 28 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 2153.4541,-88.9664,2.6984);
		SetVehiclePos(vehicleid,2138.7627,-75.3981,2.7152);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Narø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}

	else if(playerDB[playerid][specialybe] == 27 )
	{
 		new vehicleid = GetPlayerVehicleID(playerid);
		SetPlayerPos(playerid, 2253.2739,-41.0913,26.4800);
		SetVehiclePos(vehicleid,2255.0383,-32.0522,26.2121);
		PutPlayerInVehicle(playerid, vehicleid, 0);
		SendClientMessage(playerid, YELLOW, "{37f467} Nusiteleportavai á {ccff66}Kunigø {37f467}darbà{ccff66}.");
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
	}
	
	else if(playerDB[playerid][specialybe] == 0 )
	{
		SendClientMessage(playerid, RED, " Jûs neturite darbo !");
		}
	return 1;
	}
CMD:vt1(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !!");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return 0;
    if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4]) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	if(GetVehicleModel(vehicleid) == 409) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	SetPlayerPos(playerid, 2266.5322,25.5530,26.2423);
	SetVehiclePos(vehicleid, 2266.5322,25.5530,26.2423);
	PutPlayerInVehicle(playerid, vehicleid, 0);
	GameTextForPlayer(playerid, "~g~~h~Nusiteleportavai á Polomino Creek miestelá.", 7000, 5);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}
CMD:vt2(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !!");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return 0;
	if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4]) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	if(GetVehicleModel(vehicleid) == 409) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	SetPlayerPos(playerid,1374.3345,188.3159,19.5469);
	SetVehiclePos(vehicleid,1374.3345,188.3159,19.5469);
	PutPlayerInVehicle(playerid, vehicleid, 0);
	GameTextForPlayer(playerid, "~g~~h~Nusiteleportavai á Montgomery miestelá.", 7000, 5);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}
CMD:vt3(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !!");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return 0;
    if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4]) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	if(GetVehicleModel(vehicleid) == 409) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	SetPlayerPos(playerid,703.0445,-461.8234,16.3500);
	SetVehiclePos(vehicleid,703.0445,-461.8234,16.3500);
	PutPlayerInVehicle(playerid, vehicleid, 0);
	GameTextForPlayer(playerid, "~g~~h~Nusiteleportavai á Dillimore miestelá", 7000, 5);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}
CMD:vt4(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(PlayerInZone(playerid, KMA_POS_MINX, KMA_POS_MINY, KMA_POS_MAXX, KMA_POS_MAXY)) return SendClientMessage(playerid, RED, " Tu negali daryti teleporto, nes esi KMA aikðtelëje !");
	if(GetPlayerInterior(playerid) > 1) return SendClientMessage(playerid, RED, "* Jûs esate ne lauke! Todël teleportuotis negalite!");
    if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !!");
    if(playerDB[playerid][admin] < 1 && !playerDB[playerid][vip]) return 0;
    if(GetPlayerTWanted(playerid) > 10) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}10 {FF0000}arba daugiau þvaigþduèiø! Teleportai draudþiami!");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalëjime teleportuotis draudþiama !");
	new vehicleid = GetPlayerVehicleID(playerid);
	if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4]) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	if(GetVehicleModel(vehicleid) == 409) return SendClientMessage(playerid, RED, " Su ðia tr.priemonæ teleportuotis draudþiama !" ) ;
	SetPlayerPos(playerid,118.3446,-201.9017,1.5781);
	SetVehiclePos(vehicleid,118.3446,-201.9017,1.5781);
	PutPlayerInVehicle(playerid, vehicleid, 0);
	GameTextForPlayer(playerid, "~g~~h~Nusiteleportavai á Blueberry miestelá.", 7000, 5);
	SetPlayerInterior(playerid, 0);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}
CMD:get(playerid, params[])
{
    if(playerDB[playerid][admin] < 2) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, msg[125];
    if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, " Atsiteleportuoti þaidëjà prie savæs: /get [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, " Tokio þaidëjo nëra.");

	if(GetPlayerVirtualWorld(playerid) > 0) return SendClientMessage(playerid, RED, " Tu namuose/pastate nekilnok jø, o pakviesk!");
	if(playerDB[id][ikalintas]) return SendClientMessage(playerid, RED, " Þaidëjas kalëjime !");
	if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, " Kalëjime teleportuotis draudþiama !");
	if(OfisoDarbas[id] == true) return SendClientMessage(playerid, RED, " Þaidëjas AFK zonoje !");
	if(playerDB[id][admin] == 5) return SendClientMessage(playerid, RED, " Savininkus teleportuoti, draudþiama !");
	if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, " Jûs esate surakintas arba suriðtas ! !");
	if(playerDB[id][cuffed]) return SendClientMessage(playerid, RED, " Þaidëjas surakintas arba suriðtas ! !");
	SendClientMessage(playerid, YELLOW, "Nusiuntëte praðyma atkelti þaidëja pas save");
	playerDB[id][ChoosedPlayer] = playerid;
	format(msg, 125 ,"{ffffff}Administratorius {E0811B}%s {ffffff}nori jus atsikelti pas save.\nAr sutinkate? Taip/Ne",GetPlayerNameEx(playerid));
	ShowPlayerDialog(id, 7589, DIALOG_STYLE_MSGBOX, "Atsikëlimas", msg, "Taip", "Ne");
	return 1;
}
CMD:pildyti(playerid)
{
    if(playerDB[playerid][admin] < 2) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, GREEN, "* Norint pripildyti á maðinà degalø turi bûti joje.");
	vehicleDB[GetPlayerVehicleID(playerid)][gas] = 60;
	SendClientMessage(playerid, BLUE, "* Maðina pripildyta degalø.");
	return 1;
}
CMD:lban(playerid, params[])
{
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, -1, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(playerDB[playerid][baninolaikui] > gettime()) return SendClientMessage(playerid, RED, "* Dar nepraëjo 10 minuèiø nuo preito laikino baninimo!.");
	new pID, laikas, prz[50], msg[600], msgs[700];
	if(sscanf(params, "uds[50]", pID, laikas, prz)) return SendClientMessage(playerid, BLUE, "* Uþbaninti þaidëjà laikui: /lban [Vardas_Pavardë/ID] [Laikas] [Prieþastis]");
	if(laikas < 1 || laikas > 9999) return SendClientMessage(playerid, BLUE, "* Uþbaninti þaidëjà laikui: /lban [Vardas_Pavardë/ID] [Laikas (1-9999 valandø)] [Prieþastis]");
	if(pID == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra");
	if(pID == playerid) return SendClientMessage(playerid, RED, "* Savæs uþbaninti negalima. ");
	if(playerDB[pID][BanLaikas] > gettime()) return SendClientMessage(playerid, RED, "* Þaidëjas jau uþbanintas.");
	if(playerDB[pID][admin] == 5) return SendClientMessage(playerid, RED, "* Savininkà ban'inti, draudþiama!");
	playerDB[pID][BanLaikas] = gettime() + (laikas * 60);
	SavePlayerData(pID);
	new BanoLaikas = playerDB[pID][BanLaikas];
    format(msg, sizeof(msg), "{ECD7AB}Administratorius {B89242}%s(%i) {ECD7AB}laikinai uþblokavo þaidëjà {B89242}%s {ECD7AB}serveryje !", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(pID),prz);
    format(msgs, sizeof(msgs), "{ECD7AB}Þaidëjas uþblokuotas {B89242}%s {ECD7AB}! Laikino blokavimo prieþastis - {B89242}%s {ECD7AB}!", ConvertSeconds(BanoLaikas - gettime()), prz);
	SendClientMessageToAll(YELLOW, msg);
	SendClientMessageToAll(YELLOW, msgs);
	SendClientMessage(playerid,GREEN,"{00FF00}* Dabar jum kaip Administratoriui bûtina uþpildyti {FFA500}BANNED {00FF00}anektà forume {FF0000}NRMG.LT > Uþblokavimas > Nauja tema");
	SendClientMessage(playerid,GREEN,"{00FF00}* To nepadarius {FF0000}prarasite Administratoriaus statusà {00FF00}+ {FF0000}gal, net pats gausite ban");
	SetTimerEx("KickEx", 100, false, "d", pID);
	playerDB[playerid][baninolaikui] = gettime() + 300;
	return 1;
}
CMD:gskin(playerid, params[])
{
    if(playerDB[playerid][admin] < 2) return SendClientMessage(playerid, -1, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new pID;
	if(sscanf(params, "u", pID)) return SendClientMessage(playerid, BLUE, "* Uþdëti geltona skinà dël eventø: /gskin [Vardas_Pavardë/ID]");
	SetPlayerSkin(pID, 108);
	SendClientMessage(pID, YELLOW, "* Administratorius tau uþdëjo geltonà skin eventui.");
	SendClientMessage(playerid, YELLOW, "* Uþdëjote geltonà skin eventui þaidëjui.");
	return 1;
}
CMD:zskin(playerid, params[])
{
    if(playerDB[playerid][admin] < 2) return SendClientMessage(playerid, -1, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new pID;
	if(sscanf(params, "u", pID)) return SendClientMessage(playerid, BLUE, "* Uþdëti þalià skinà dël eventø: /zskin [Vardas_Pavardë/ID]");
	SetPlayerSkin(pID, 86);
	SendClientMessage(pID, GREEN, "* Administratorius tau uþdëjo þalià skin eventui.");
	SendClientMessage(playerid, GREEN, "* Uþdëjote þalià skin eventui þaidëjui.");
	return 1;
}
CMD:heal(playerid, params[])
{
	if(playerDB[playerid][admin] < 2) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, msg[40], Float:vPos[3], masyvas[90];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Pagydyti þaidëjà: /heal [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, " Jûs esate surakintas arba suriðtas ! !");
	format(msg, sizeof(msg), "* %s pagydë jus!", GetPlayerNameEx(playerid));
	SendClientMessage(id, GREEN, msg);
	format(msg, sizeof(msg), "* Pagydëte %s!", GetPlayerNameEx(id));
	SendClientMessage(playerid, GREEN, msg);
	SetPlayerHealthEx(id, 100);
	SetPlayerArmourEx(id, 100);
	GetPlayerPos(playerid, vPos[0], vPos[1], vPos[2]);
	format(masyvas, 90, "[ADMIN] %s pagydë þaidëjà %s",GetPlayerNameEx(playerid), GetPlayerNameEx(id));

	for(new p = 0; p < MAX_PLAYERS; p++)
	{
	    if(IsPlayerConnected(p))
	    {
		    if(IsPlayerInRangeOfPoint(p, 20.0, vPos[0], vPos[1], vPos[2]))
	        {
	            SendClientMessage(p, RED, masyvas);
	        }
	    }
	}
	return 1;
}

//TESTAS
CMD:bausti(playerid, params[])
{
	if(playerDB[playerid][admin] < 1) return 0;

	new giveplayerid;

	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, -1, ""#COL_INFO" NAUDOTI: /bausti Vardas_Pavardë");

	if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""#COL_ERROR" Tokio þaidëjo nëra!");

	if(giveplayerid == playerid) return SendClientMessage(playerid, -1, ""#COL_ERROR" Ant savæs ðios komandos panaudoti negalite!");

	if(playerDB[giveplayerid][admin] > playerDB[playerid][admin]) return SendClientMessage(playerid, -1, "{8cc17b} Negalite bausti aukðtesnio lygio administratoriø uþ jus!");

	playerDB[giveplayerid][ChoosedPlayer] = playerid;

	new String[1500], Stringas[1500];

	switch(playerDB[playerid][admin])
	{
		case 1:
		{
			strcat(String, "Bausmë\tLaikas\n");

			for(new i = 0; i < sizeof(FAL); i ++)
			{
				if(FAL[i][bLaikas] == 0)
				{
					format(Stringas, sizeof(Stringas), "%s\n", FAL[i][Bausme]);
					strcat(String, Stringas);
				}
				else
				{
					format(Stringas, sizeof(Stringas), "%s\t{8cc17b}%s {FFFFFF}Min.\n", FAL[i][Bausme], konvertuoti_pinigus(FAL[i][bLaikas]));
					strcat(String, Stringas);
				}
			}

			ShowPlayerDialog(playerid, FALDialog, DIALOG_STYLE_TABLIST_HEADERS, "Þaidëjo baudimas", String, "Pasirinkti", "Uþdaryti");
		}

		/*case 2:
		{
			strcat(String, "Bausmë\tLaikas\n");

			for(new i = 0; i < sizeof(SAL); i ++)
			{
				if(SAL[i][bLaikas] == 0)
				{
					format(Stringas, sizeof(Stringas), "%s\n", SAL[i][Bausme]);
					strcat(String, Stringas);
				}
				else
				{
					format(Stringas, sizeof(Stringas), "%s\t{8cc17b}%s {FFFFFF}Min.\n", SAL[i][Bausme], konvertuoti_pinigus(SAL[i][bLaikas]));
					strcat(String, Stringas);
				}
			}

			ShowPlayerDialog(playerid, SALDialog, DIALOG_STYLE_TABLIST_HEADERS, "Þaidëjo baudimas", String, "Pasirinkti", "Uþdaryti");
		}*/

		case 2, 3, 4, 5:
		{
			strcat(String, "Bausmë\tLaikas\n");

			for(new i = 0; i < sizeof(TAL); i ++)
			{
				if(TAL[i][bLaikas] == 0)
				{
					format(Stringas, sizeof(Stringas), "%s\n", TAL[i][Bausme]);
					strcat(String, Stringas);
				}
				else
				{
					format(Stringas, sizeof(Stringas), "%s\t{8cc17b}%s {FFFFFF}Min.\n", TAL[i][Bausme], konvertuoti_pinigus(TAL[i][bLaikas]));
					strcat(String, Stringas);
				}
			}

			ShowPlayerDialog(playerid, TALDialog, DIALOG_STYLE_TABLIST_HEADERS, "Þaidëjo baudimas", String, "Pasirinkti", "Uþdaryti");
		}
	}

	return 1;
}


//TESTAS
/*CMD:ban(playerid, params[])
{
    if(playerDB[playerid][admin] < 2) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(playerDB[playerid][baninopaprastai] > gettime()) return SendClientMessage(playerid, RED, "* Dar nepraëjo 10 minuèiø nuo preito baninimo!.");
 	new id, priezastis[300], msg[800];
	if(sscanf(params, "us[128]",id, priezastis)) return SendClientMessage(playerid, BLUE, "* Uþblokuoti þaidëja: /ban [Vardas_Pavarde] [Prieþastis]");
	if(playerDB[id][admin] == 5) return SendClientMessage(playerid, RED, "* Savininkà ban'inti, draudþiama!");
	else if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra");
	else if(id == playerid) return SendClientMessage(playerid, RED, "* Savæs baninti negalite!");
	else
	{
	    playerDB[id][nickbanai]++;
	    switch(playerDB[id][nickbanai])
	    {
	        case 1:
	        {
	            SendClientMessage(id, RED, "* Kadangi tai pirmas kartas, jûsø vartotojas yra uþblokuotas!");
	            format(msg, sizeof(msg), "[ban] %s uþblokavo %s uþ (%s). Pirmas sukèiavimas su ðiuo IP, treèias bus IP BAN", GetPlayerNameEx(playerid), GetPlayerNameEx(id), priezastis);
	            SendClientMessageToAll(0xD9E916FF, msg);
	            SendClientMessage(playerid,GREEN,"{00FF00}* Dabar jum kaip Administratoriui bûtina uþpildyti {FFA500}BANNED {00FF00}anektà forume {FF0000}NRMG.LT > Uþblokavimas > Nauja tema");
            	SendClientMessage(playerid,GREEN,"{00FF00}* To nepadarius {FF0000}prarasite Administratoriaus statusà {00FF00}+ {FF0000}gal, net pats gausite ban");
	            playerDB[id][Uzbanintas] = true;
	            SetTimerEx("KickEx", 100, false, "d", id);
	        }
			case 2:
			{
			    SendClientMessage(id, RED, "* Kadangi tai pirmas kartas, jûsø vartotojas yra uþblokuotas!");
	            format(msg, sizeof(msg), "[ban] %s uþblokavo %s uþ (%s). Antras sukèiavimas su ðiuo IP, treèias bus IP BAN", GetPlayerNameEx(playerid), GetPlayerNameEx(id), priezastis);
	            SendClientMessageToAll(0xD9E916FF, msg);
	            SendClientMessage(playerid,GREEN,"{00FF00}* Dabar jum kaip Administratoriui bûtina uþpildyti {FFA500}BANNED {00FF00}anektà forume {FF0000}NRMG.LT > Uþblokavimas > Nauja tema");
        	    SendClientMessage(playerid,GREEN,"{00FF00}* To nepadarius {FF0000}prarasite Administratoriaus statusà {00FF00}+ {FF0000}gal, net pats gausite ban");
	            playerDB[id][Uzbanintas] = true;
	            SetTimerEx("KickEx", 100, false, "d", id);
			}
			case 3:
			{
		    	SendClientMessage(id, RED, "* Kadangi tai ne pirmas ir ne antras ban jûs gaunate IP BAN");
	            format(msg, sizeof(msg), "[ban] %s uþblokavo %s uþ (%s). IP BAN", GetPlayerNameEx(playerid), GetPlayerNameEx(id), priezastis);
	            SendClientMessageToAll(0xD9E916FF, msg);
	            new query[512], ip[16];
	            GetPlayerIp(id, ip, sizeof(ip));
	            format(query, 512, "INSERT INTO banip (Vardas, Adminas, Ipas, Priezastis) VALUES ('%s','%s','%s','%s')",GetPlayerNameEx(playerid),GetPlayerNameEx(id),ip,priezastis);
		    	mysql_query(query);
		    	mysql_free_result();
	            SendClientMessage(playerid,GREEN,"{00FF00}* Dabar jum kaip Administratoriui bûtina uþpildyti {FFA500}BANNED {00FF00}anektà forume {FF0000}NRMG.LT > Uþblokavimas > Nauja tema");
            	SendClientMessage(playerid,GREEN,"{00FF00}* To nepadarius {FF0000}prarasite Administratoriaus statusà {00FF00}+ {FF0000}gal, net pats gausite ban");
	            SetTimerEx("KickEx", 100, false, "d", id);
			}
	    }
    	playerDB[playerid][baninopaprastai] = gettime() + 300;
	}
	return true;
}*/
CMD:rconas(playerid, params[])
{
    if(playerDB[playerid][admin] < 4) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, prz[300], msg[800];
	if(sscanf(params, "us[50]", id, prz)) return SendClientMessage(playerid, RED, " Uþbaninti þaidëjà IP BAN: /rconas [Vardas_Pavardë/ID] [Prieþastis]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, 0xD9E916FF, " Tokio þaidëjo nëra !");
	format(msg, 95, "* Gavote IP BAN", GetPlayerNameEx(playerid), prz);
	SendClientMessage(id, 0xD9E916FF, msg);
	format(msg, sizeof(msg), "[ban] %s uþblokavo %s uþ (%s). IP BAN", GetPlayerNameEx(playerid), GetPlayerNameEx(id),prz);
	SendClientMessageToAll(0xD9E916FF, msg);
	BanEx(id, prz);
	return 1;
}
CMD:accban(playerid, params[])
{
    if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, prz[300], msg[800];
	if(sscanf(params, "us[50]", id, prz)) return SendClientMessage(playerid, RED, " Uþbaninti þaidëjà acc BAN: /accban [Vardas_Pavardë/ID] [Prieþastis]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, 0xD9E916FF, " Tokio þaidëjo nëra !");
	format(msg, 95, "* Gavote Vartotjo BAN", GetPlayerNameEx(playerid), prz);
	SendClientMessage(id, 0xD9E916FF, msg);
	format(msg, sizeof(msg), "[ban] %s uþblokavo %s uþ (%s). Vartotjo BAN", GetPlayerNameEx(playerid), GetPlayerNameEx(id),prz);
	SendClientMessageToAll(0xD9E916FF, msg);
	playerDB[id][Uzbanintas] = true;
	SetTimerEx("KickEx", 100, false, "d", id);
	return 1;
}
CMD:unjail(playerid, params[])
{
    if(playerDB[playerid][admin] < 3) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new pID, str[300], prz[30];
	if(sscanf(params, "us[50]", pID, prz)) return SendClientMessage(playerid, RED, "* /unjail [Vardas_Pavarde/ID] [Prieþastis]");
	if(pID == INVALID_PLAYER_ID || IsPlayerNPC(pID)) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(!playerDB[pID][ikalintas]) return SendClientMessage(playerid, RED, "* þaidëjas ne kalëjime.");
	UnjailPlayer(pID);
	format(str, sizeof(str), "{A15800}[Admin Komanda Ant þaidëjo] {F81414}Administratorius %s unjailino %s. Prieþastis - %s", GetPlayerNameEx(playerid), GetPlayerNameEx(pID), prz);
	SendMessageToAdmins(YELLOW, str);
	SetPlayerColor(pID,PLAYCOL_HIDDEN);
	return 1;
}
CMD:pagydytivisus(playerid, params[])
{
    if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new Float:vPos[3], str[55];
	GetPlayerPos(playerid, vPos[0], vPos[1], vPos[2]);
	format(str, sizeof(str), " %s Jums davë gyvybiø.", GetPlayerNameEx(playerid));
	for(new p = 0; p < MAX_PLAYERS; p++)
    {
        if(IsPlayerNPC(p) || !IsPlayerConnected(p)) continue;
        if(IsPlayerInRangeOfPoint(p, 20.0, vPos[0], vPos[1], vPos[2]))
        {
        	SetPlayerHealthEx(p, 100);
        	SetPlayerArmourEx(p, 100);
        	if(p == playerid) continue;
			SendClientMessage(p, RED, str);
		}
    }
    SendClientMessage(playerid, RED, " Davëte gyvybiø 20 metrø atstumu .");
    return 1;
}
CMD:duotisg(playerid, params[])
{
    if(playerDB[playerid][admin] < 4) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new Float:vPos[3], str[45];
	GetPlayerPos(playerid, vPos[0], vPos[1], vPos[2]);
	format(str, sizeof(str), " %s Jums davë shot'gunà .", GetPlayerNameEx(playerid));
	for(new p = 0; p < MAX_PLAYERS; p++)
    {
        if(IsPlayerNPC(p) || !IsPlayerConnected(p)) continue;
        if(IsPlayerInRangeOfPoint(p, 20.0, vPos[0], vPos[1], vPos[2]))
        {
        	GivePlayerWeaponEx(p, 25, 100);
        	if(p == playerid) continue;
			SendClientMessage(p, RED, str);
		}
    }
    SendClientMessage(playerid, RED, " Davëte shot'gunà 20 metrø atstumu .");
    return 1;
}
CMD:uzvalgyti(playerid)
{
    if(playerDB[playerid][admin] < 3) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	playerDB[playerid][alkis] += 100;
    if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
    UpdateAlkanasTextdraw( playerid );
    SetPlayerDrunkLevel(playerid, 0);
	SendClientMessage(playerid, GREEN, "* Uþvalgëte sëkmingai!");
	ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	return 1;
}
CMD:mute(playerid, params[])
{
    if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
  	new pID, laikas, priezastis[75];
	if(sscanf(params, "uds[75]", pID, laikas, priezastis)) return SendClientMessage(playerid, RED, "* /mute [Vardas_Pavardë/ID] [laikas] [Prieþastis]");
	if(laikas < 1 || laikas > 240) return SendClientMessage(playerid, BLUE, "* Uþtildyti þaidëjà laikui: /mute [Vardas_Pavardë/ID] [Laikas (1-240 minuèiø/valandø)] [Prieþastis]");
	if(pID == INVALID_PLAYER_ID || IsPlayerNPC(pID)) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(pID == playerid) return SendClientMessage(playerid, RED, "* Savæs uþtildyti negalima.");
	if(playerDB[pID][Muted] > gettime()) return SendClientMessage(playerid, RED, "* Þaidëjas jau uþtildytas.");
	playerDB[pID][Muted] = gettime() + (laikas * 60);
	new msg[600], msgs[500];
    format(msg, sizeof(msg), "{DAABEC}Administratorius {8A549E}%s(%i) {DAABEC}uþtildë {8A549E}%s {DAABEC}!", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(pID));
    format(msgs, sizeof(msgs), "{DAABEC}Þaidëjas uþtildytas {8A549E}%d minuèiø {DAABEC}! Uþtildymo prieþastis - {8A549E}%s {DAABEC}!", laikas, priezastis);
    SendClientMessageToAll(BLUE, msg);
    SendClientMessageToAll(BLUE, msgs);
	return 1;
}
CMD:unmute(playerid, params[])
{
    if(playerDB[playerid][admin] < 3) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new pID , id , str[135] ;
	if(sscanf(params, "u", pID)) return SendClientMessage(playerid, RED, "* /unmute [Vardas_Pavardë/ID]");
	if(pID == INVALID_PLAYER_ID || IsPlayerNPC(pID)) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(pID == playerid) return SendClientMessage(playerid, RED, "* Savæs atitildyti negalite.");
	if(playerDB[pID][Muted] < gettime()) return SendClientMessage(playerid, RED, "* Þaidëjas ir taip atitildytas.");
	playerDB[pID][Muted] = 0;
	new msg[70] ;
	format(msg, 70, "* Administratorius %s jus atitildë.", GetPlayerNameEx ( id ) ) ;
	SendClientMessage(pID, YELLOW, msg);
	SendClientMessage(playerid, YELLOW, "* Þaidëjas atitildytas.");
	format(str,sizeof(str),"[AdminChat] : Administratorius %s panaudojo komandà /unmute þaidëjui : {FF9900}%s",GetPlayerNameEx(playerid), GetPlayerNameEx(pID));
	SendMessageToAdmins(BLUE, str);
	return 1;
}
CMD:buliai(playerid)
{
    if(playerDB[playerid][admin] < 3) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	ShowPlayerDialog(playerid, 1588, DIALOG_STYLE_LIST, "Buliø kautynës", "Atrakinti/Uþrakinti maðinas\nPripildyti á jas degalø\nSutvarkyti maðinas\nAtstatyti á vietà", "Rinktis", "Atðaukti");
	return 1;
}
CMD:ecrr(playerid)
{
    if(playerDB[playerid][admin] < 3 && !playerDB[playerid][dpriziuretojas] && !playerDB[playerid][epriziuretojas] && !playerDB[playerid][apriziuretojas] && !playerDB[playerid][gpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    new v;
    for(v = 0; v < MAX_VEHICLES; v++)
	{
	    if(GetVehicleModel(v) < 400) continue;
	    if(vehicleDB[v][vOwned]) continue;
	    if(v >= eventucar[0] && v <= eventucar[4])
	    {
	    	SetVehicleToRespawn(v);
		}
	}
	return 1;
}
CMD:ecduris(playerid)
{
    if(playerDB[playerid][admin] < 3 && !playerDB[playerid][dpriziuretojas] && !playerDB[playerid][epriziuretojas] && !playerDB[playerid][apriziuretojas] && !playerDB[playerid][gpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    new v;
    for(v = 0; v < MAX_VEHICLES; v++)
	{
	    if(GetVehicleModel(v) < 400) continue;
	    if(vehicleDB[v][vOwned]) continue;
	    if(v >= eventucar[0] && v <= eventucar[4])
	    {
	    	new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
			GetVehicleParamsEx(v, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
			if(!Doors) { SetVehicleParamsEx(v, Engine, Lights, Alarm, true, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~g~UZRAKINAI DURIS",2000,4); } else { SetVehicleParamsEx(v, Engine, Lights, Alarm, false, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~R~ATRAKINAI DURIS",2000,4); }
		}
	}
	return 1;
}
CMD:rrpriekabas(playerid)
{
    if(playerDB[playerid][plead] != 11 && playerDB[playerid][pavdrk] != 11 && playerDB[playerid][admin] < 3) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new v, str[200];
	for(v = 0; v < MAX_VEHICLES; v++)
	{
		if(GetVehicleModel(v) < 400) continue;
		if(vehicleDB[v][vOwned]) continue;
		if(IsPlayersInVehicle(v)) continue;
        if(v >= furupriekabos[0] && v <= furupriekabos[10])
		SetVehicleToRespawn(v);
	}
	format(str, sizeof(str), "[Fûristø Racija] %s direktorius/pavaduotojas: {D4A017}Atstatë visas fûristø priekabas.", GetPlayerNameEx(playerid));
	SendMessageToFUROS(BLUE, str);
	return 1;
}
CMD:darbinesrr(playerid)
{
    if(playerDB[playerid][admin] < 4 && !playerDB[playerid][dpriziuretojas] && !playerDB[playerid][epriziuretojas] && !playerDB[playerid][apriziuretojas] && !playerDB[playerid][vpriziuretojas] && !playerDB[playerid][banpriziuretojas] && !playerDB[playerid][gpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new v, str[65];
	for(v = 0; v < MAX_VEHICLES; v++)
	{
		if(GetVehicleModel(v) < 400) continue;
		if(vehicleDB[v][vOwned]) continue;
		if(IsPlayersInVehicle(v)) continue;
        if(v >= furupriekabos[0] && v <= furupriekabos[10]) continue;
		SetVehicleToRespawn(v);
	}
	format(str, sizeof(str), "* Administratorius %s atstatë darbines maðinas.", GetPlayerNameEx(playerid));
	SendClientMessageToAll(BLUE, str);
	return 1;
}
CMD:makemoney(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, money, str[60];
	if(sscanf(params, "ud", id, money)) return SendClientMessage(playerid, 0xFFFFFFFF, "* Naudojimas: /makemoney [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(money < 1) return SendClientMessage(playerid, 0xFFFFFFFF, "* Naudojimas: /makemoney [Vardas_Pavardë/ID]");
	GivePlayerMoneyA(id, money);
	format(str, sizeof(str), "* Administratorius %s davë jums %s", GetPlayerNameEx(playerid), konvertuoti_pinigus(money));
	SendClientMessage(id, BLUE, str);
	format(str, sizeof(str), "* Davëte %s %s", GetPlayerNameEx(id), konvertuoti_pinigus(money));
	SendClientMessage(playerid, BLUE, str);
	return 1;
}
CMD:skirtiadmin(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return 0;
	new id, lygis, masyvas[270];
	if(sscanf(params, "ud",id,lygis)) return SendClientMessage(playerid, BLUE, "{37f467} Skirti Administratoriu: {ccff66}/skirtiadmin [Vardas_Pavarde] [ Lygis ]");
	if(playerDB[id][ADraudimas]) return SendClientMessage(playerid, RED, "Þaidëjas turi Administratoriaus draudimà !");
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "{37f467} Tokio þaidëjo nëra");
	else
	{
	    if(lygis == 0)
	    {
	        playerDB[id][AdminLaikas] = 0;
	        return true;
	    }
	    playerDB[id][admin] = lygis;
	    playerDB[id][AdminLaikas] = gettime() + 2592000;
	    playerDB[id][NaujokuLaikas] = 0;

		format(masyvas, 280, "{37f467} Pagr.Administratorius {ccff66}%s {37f467}uþdëjo Jums Admin narystæ {ccff66}30 {37f467}dienø {ccff66}. /akomandos",GetPlayerNameEx(playerid));
		SendClientMessage(id, BLUE, masyvas);
		format(masyvas, 280, "{37f467} Uþdëjote {ccff66}%s {37f467}Admin narystæ {ccff66}30 {37f467}dienø {ccff66}.",GetPlayerNameEx(id));
		SendClientMessage(playerid, BLUE, masyvas);
	}
	return true;
}
CMD:eprz(playerid, params[])
{
    if(playerDB[playerid][admin] < 5) return 0;
	new id, masyvas[128];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "* Duoti emigracijos priþiûrëtojà: /eprz [Vardas_Pavarde]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra!");
	else
	{
	    playerDB[id][epriziuretojas] = true;
		format(masyvas, sizeof(masyvas), "* %s uþdëjote 'Emigracijos Priþiûrëtojà'",GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, masyvas);
		format(masyvas, sizeof(masyvas), "* Administratorius %s uþdëjo jums 'Emigracijos Priþiûrëtojà'",GetPlayerNameEx(playerid));
		SendClientMessage(playerid, GREEN, masyvas);
	}
	return true;
}
CMD:dprz(playerid, params[])
{
    if(playerDB[playerid][admin] < 5) return 0;
	new id, masyvas[128];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "* Duoti Direktoriø priþiûrëtojà: /dprz [Vardas_Pavarde]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra!");
	else
	{
	    playerDB[id][dpriziuretojas] = true;
		format(masyvas, sizeof(masyvas), "* %s uþdëjote 'Direktoriø Priþiûrëtojø'",GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, masyvas);
		format(masyvas, sizeof(masyvas), "* Administratorius %s uþdëjo jums 'Direktoriø Priþiûrëtojø'",GetPlayerNameEx(playerid));
		SendClientMessage(playerid, GREEN, masyvas);
	}
	return true;
}
CMD:aprz(playerid, params[])
{
    if(playerDB[playerid][admin] < 5) return 0;
	new id, masyvas[128];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "* Duoti Administratoriaus priþiûrëtojà: /aprz [Vardas_Pavarde]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra!");
	else
	{
	    playerDB[id][apriziuretojas] = true;
		format(masyvas, sizeof(masyvas), "* %s uþdëjote 'Administratoriaus Priþiûrëtojà'",GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, masyvas);
		format(masyvas, sizeof(masyvas), "* Administratorius %s uþdëjo jums 'Administratoriø Priþiûrëtojà'",GetPlayerNameEx(playerid));
		SendClientMessage(playerid, GREEN, masyvas);
	}
	return true;
}
CMD:vprz(playerid, params[])
{
    if(playerDB[playerid][admin] < 5) return 0;
	new id, masyvas[128];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "* Duoti Vip priþiûrëtojà: /vprz [Vardas_Pavarde]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra!");
	else
	{
	    playerDB[id][vpriziuretojas] = true;
		format(masyvas, sizeof(masyvas), "* %s uþdëjote 'Vip Priþiûrëtojà'",GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, masyvas);
		format(masyvas, sizeof(masyvas), "* Administratorius %s uþdëjo jums 'Vip Priþiûrëtojà'",GetPlayerNameEx(playerid));
		SendClientMessage(playerid, GREEN, masyvas);
	}
	return true;
}
CMD:banprz(playerid, params[])
{
    if(playerDB[playerid][admin] < 5) return 0;
	new id, masyvas[128];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "* Duoti Banned priþiûrëtojà: /baprz [Vardas_Pavarde]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra!");
	else
	{
	    playerDB[id][banpriziuretojas] = true;
		format(masyvas, sizeof(masyvas), "* %s uþdëjote 'Uþblokavimø Priþiûrëtojà'",GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, masyvas);
		format(masyvas, sizeof(masyvas), "* Administratorius %s uþdëjo jums 'Uþblokavimø Priþiûrëtojà'",GetPlayerNameEx(playerid));
		SendClientMessage(playerid, GREEN, masyvas);
	}
	return true;
}
CMD:duotiadraudima(playerid, params[])
{
	new id , str [120] ;
	if(playerDB[playerid][admin] < 5 && !playerDB[playerid][apriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "{37f467} Uþdëti administratoriaus draudimà: {ccff66}/duotiadraudima [Vardas_Pavarde]");
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "{37f467} Tokio þaidëjo nëra");
	else
	{
	    playerDB[id][ADraudimas] = true;
    	format(str, sizeof(str), "{37f467} Pagr.Administratorius {ccff66}%s {37f467}uþdëjo Jums Administratoriø draudimà !", GetPlayerNameEx(playerid));
		SendClientMessage(id, RED, str);
		SendClientMessage( id, RED, " Administratoriaus draudimà galite nusiimti uþ kreditus - {ccff66}/paslaugos" ) ;
		format(str, sizeof(str), "{37f467} Uþdëjote {ccff66}%s {37f467}Administratoriø draudimà .", GetPlayerNameEx(id));
		SendClientMessage(playerid, RED, str);
	}
	return true;
}
CMD:duotivdraudima(playerid, params[])
{
	new id , str [120] ;
	if(playerDB[playerid][admin] < 5 && !playerDB[playerid][vpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "{37f467} Uþdëti VIP draudimà: {ccff66}/duotivdraudima [Vardas_Pavarde]");
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "{37f467} Tokio þaidëjo nëra");
	else
	{
	    playerDB[id][VDraudimas] = true;
    	format(str, sizeof(str), "{37f467} Pagr.Administratorius {ccff66}%s {37f467}uþdëjo Jums VIP draudimà !", GetPlayerNameEx(playerid));
		SendClientMessage(id, RED, str);
		SendClientMessage( id, RED, " VIP draudimà galite nusiimti uþ kreditus - {ccff66}/paslaugos" ) ;
		format(str, sizeof(str), "{37f467} Uþdëjote {ccff66}%s {37f467}VIP draudimà .", GetPlayerNameEx(id));
		SendClientMessage(playerid, RED, str);
	}
	return true;
}
CMD:duotigdraudima(playerid, params[])
{
	new id , str [120] ;
	if(playerDB[playerid][admin] < 5 && !playerDB[playerid][gpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "{37f467} Uþdëti gaujø draudimà: {ccff66}/duotigdraudima [Vardas_Pavarde]");
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "{37f467} Tokio þaidëjo nëra");
	else
	{
	    playerDB[id][GDraudimas] = true;
    	format(str, sizeof(str), "{37f467} Pagr.Administratorius {ccff66}%s {37f467}uþdëjo Jums Gaujø draudimà !", GetPlayerNameEx(playerid));
		SendClientMessage(id, RED, str);
		SendClientMessage( id, RED, " Gaujø draudimà galite nusiimti uþ kreditus - {ccff66}/paslaugos" ) ;
		format(str, sizeof(str), "{37f467} Uþdëjote {ccff66}%s {37f467}Gaujø draudimà .", GetPlayerNameEx(id));
		SendClientMessage(playerid, RED, str);
	}
	return true;
}
CMD:nuimtivdraudima(playerid, params[])
{
	new id , str [120] ;
	if(playerDB[playerid][admin] < 5 && !playerDB[playerid][vpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "{37f467} Nuimti VIP draudimà: {ccff66}/nuimtivdraudima [Vardas_Pavarde]");
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "{37f467} Tokio þaidëjo nëra");
	else
	{
	    playerDB[id][VDraudimas] = false;
    	format(str, sizeof(str), "{37f467} Pagr.Administratorius {ccff66}%s {37f467}nuimë Jums VIP draudimà !", GetPlayerNameEx(playerid));
		SendClientMessage(id, RED, str);
		format(str, sizeof(str), "{37f467} Nuimëtë {ccff66}%s {37f467}VIP draudimà .", GetPlayerNameEx(id));
		SendClientMessage(playerid, RED, str);
	}
	return true;
}
CMD:nuimtiadraudima(playerid, params[])
{
	new id , str [120] ;
	if(playerDB[playerid][admin] < 5 && !playerDB[playerid][apriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "{37f467} Nuimti Administratoriø draudimà: {ccff66}/nuimtiadraudima [Vardas_Pavarde]");
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "{37f467} Tokio þaidëjo nëra");
	else
	{
	    playerDB[id][ADraudimas] = false;
    	format(str, sizeof(str), "{37f467} Pagr.Administratorius {ccff66}%s {37f467}nuimë Jums Administratoriø draudimà !", GetPlayerNameEx(playerid));
		SendClientMessage(id, RED, str);
		format(str, sizeof(str), "{37f467} Nuimëtë {ccff66}%s {37f467}Administratoriø draudimà .", GetPlayerNameEx(id));
		SendClientMessage(playerid, RED, str);
	}
	return true;
}
CMD:nuimtigdraudima(playerid, params[])
{
	new id , str [120] ;
	if(playerDB[playerid][admin] < 5 && !playerDB[playerid][gpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "{37f467} Nuimti Gaujø draudimà: {ccff66}/nuimtigdraudima [Vardas_Pavarde]");
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "{37f467} Tokio þaidëjo nëra");
	else
	{
	    playerDB[id][GDraudimas] = false;
    	format(str, sizeof(str), "{37f467} Pagr.Administratorius {ccff66}%s {37f467}nuimë Jums Gaujø draudimà !", GetPlayerNameEx(playerid));
		SendClientMessage(id, RED, str);
		format(str, sizeof(str), "{37f467} Nuimëtë {ccff66}%s {37f467}Gaujø draudimà .", GetPlayerNameEx(id));
		SendClientMessage(playerid, RED, str);
	}
	return true;
}
CMD:skirtivip(playerid, params[])
{
	new id , str [270] ;
	if(playerDB[playerid][admin] < 5) return 0;
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "{37f467} Skirti VIP: {ccff66}/skirtivip [Vardas_Pavarde]");
	if(playerDB[id][VDraudimas]) return SendClientMessage(playerid, RED, "Þaidëjas turi Administratoriaus draudimà !");
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "{37f467} Tokio þaidëjo nëra");
	else
	{
	    playerDB[id][vip] = true;
	    playerDB[id][VipLaikas] = gettime() + 2592000;
	    playerDB[id][NaujokuLaikas] = 0;
    	format(str, sizeof(str), "{37f467} Pagr.Administratorius {ccff66}%s {37f467}uþdëjo Jums VIP narystæ {ccff66}30 {37f467}dienø {ccff66}. /vipinfo", GetPlayerNameEx(playerid));
		SendClientMessage(id, RED, str);
		format(str, sizeof(str), "{37f467} Uþdëjote {ccff66}%s {37f467}VIP narystæ {ccff66}30 {37f467}dienø {ccff66}.", GetPlayerNameEx(id));
		SendClientMessage(playerid, RED, str);
	}
	return true;
}
CMD:addnamas(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return false;
	new inter,/* price,*/ Float:pPos[4], hQuery[43], str[100];
	if(sscanf(params, "dd", inter)) return SendClientMessage(playerid, -1, "Komanda: /addnamas [vidus(1-8)]");
	if(inter < 1 || inter > 8) return SendClientMessage(playerid, -1, "Komanda: /addhouse [vidus(1-8)");
	for(new house; house < MAX_HOUSES; house++)
	{
		format(hQuery, 43, "SELECT * FROM `houses` WHERE `ID` = '%d'", house);
		mysql_query(hQuery);
		mysql_store_result();
		if(!mysql_num_rows())
		{
		    GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);
			GetPlayerFacingAngle(playerid, pPos[3]);
			format(hInfo[house][Owner], MAX_PLAYER_NAME, "Nera");
			hInfo[house][hCreated] = true;
			hInfo[house][Buyed] = false;
			hInfo[house][Locked] = true;
	 		hInfo[house][Cost] = 1000000 + random(100000);
			hInfo[house][Money] = 0;
			hInfo[house][htVW] = house + 1;
			hInfo[house][ExitX] = pPos[0];
			hInfo[house][ExitY] = pPos[1];
			hInfo[house][ExitZ] = pPos[2];
			hInfo[house][ExitAngle] = pPos[3];
			inter--;
			hInfo[house][hInt] = hInterior[inter][Int];
			hInfo[house][IntX] = hInterior[inter][IntX];
			hInfo[house][IntY] = hInterior[inter][IntY];
			hInfo[house][IntZ] = hInterior[inter][IntZ];
			hInfo[house][IntAngle] = hInterior[inter][IntAngle];
			format(str, 150, "{66ffcc}Namo numeris:{1BB300} %d\n{66ffcc}Namas parduodamas\nNamo kaina: {1BB300}%d\n{66ffcc}Norint nusipirkti - spauskite ENTER", house + 1, hInfo[house][Cost]);
			hInfo[house][House3D] = Create3DTextLabel(str, -1, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], 10, 0, 0);
			hInfo[house][HousePickup] = CreatePickup(1273, 1, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], 0);
			format(hQuery, 42, "INSERT INTO `houses` (ID) VALUES ('%d')", house);
			mysql_query(hQuery);
			SaveHouse(house);
			SendClientMessage(playerid, -1, "Sukûrëte namà.");
			return 1;
		}
		mysql_free_result();
	}
	return SendClientMessage(playerid, -1, "Negalite sukurti namo nes serveryje per daug namø.");
}
COMMAND:addlusna(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return 0;
	new inter,/*, price, */Float:pPos[4], hQuery[43], str[300];
	if(sscanf(params, "d", inter)) return SendClientMessage(playerid, -1, ""COL_USAGE" {C2BF1B}/addlusna <interjero id>");
	if(inter < 1 || inter > 8) return SendClientMessage(playerid, -1, ""COL_USAGE" {C2BF1B}/addhlusna <interjero id>");
	for(new house; house < MAX_HOUSES; house++)
	{
		format(hQuery, 43, "SELECT * FROM `houses` WHERE `ID` = '%d'", house);
		mysql_query(hQuery);
		mysql_store_result();
		if(!mysql_num_rows())
		{
		    GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);
			GetPlayerFacingAngle(playerid, pPos[3]);
			format(hInfo[house][Owner], MAX_PLAYER_NAME, "Nera");
			hInfo[house][hCreated] = true;
			hInfo[house][Buyed] = false;
			hInfo[house][Locked] = true;
	 		hInfo[house][Cost] = 300000 + random(50000);
			hInfo[house][Money] = 0;
			hInfo[house][htVW] = house + 1;
			hInfo[house][ExitX] = pPos[0];
			hInfo[house][ExitY] = pPos[1];
			hInfo[house][ExitZ] = pPos[2];
			hInfo[house][ExitAngle] = pPos[3];
			inter--;
			hInfo[house][hInt] = hInterior[inter][Int];
			hInfo[house][IntX] = hInterior[inter][IntX];
			hInfo[house][IntY] = hInterior[inter][IntY];
			hInfo[house][IntZ] = hInterior[inter][IntZ];
			hInfo[house][IntAngle] = hInterior[inter][IntAngle];
			format(str, 300, "{FFFFFF}Namo numeris: "COL_PRICE"%d\n{FFFFFF}Namas parduodamas\n{FFFFFF}Namo kaina: "COL_PRICE"%s\n \n{FFFFFF}Norint nusipirkti - spauskite ENTER", house + 1, konvertuoti_pinigus(hInfo[house][Cost]));
			hInfo[house][House3D] = Create3DTextLabel(str, -1, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], 10, 0, 0);
			hInfo[house][HousePickup] = CreatePickup(1273, 1, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], 0);
			format(hQuery, 42, "INSERT INTO `houses` (ID) VALUES ('%d')", house);
			mysql_query(hQuery);
			SaveHouse(house);
			SendClientMessage(playerid, -1, ""COL_ADMIN" {FFFFFF}Sukurëte luðna!");
			return 1;
		}
		mysql_free_result();
	}
	return SendClientMessage(playerid, -1, ""COL_ERROR" {FFFFFF}Serveryje yra per daug namø!");
}

CMD:delhouse(playerid, params[])
{
	if(playerDB[playerid][admin] < 5) return false;
	new house,hQuery[43];
	if(sscanf(params, "d", house)) return SendClientMessage(playerid, -1, "Komanda: /delhouse [namo numeris]");
	if(house < 1 || house > MAX_HOUSES + 1) return SendClientMessage(playerid, -1, "Klaida, namo su tokiu numeriu nëra.");
	house --;
    if(!hInfo[house][hCreated]) return SendClientMessage(playerid, -1, "Klaida, namas su tokiu numeriu nerastas.");
	format(hQuery, 43, "SELECT * FROM `houses` WHERE `ID` = '%d'", house);
	mysql_query(hQuery);
	mysql_store_result();
	if(mysql_num_rows())
	{
	    hInfo[house][hCreated] = false;
		hInfo[house][Buyed] = false;
		hInfo[house][Locked] = false;
		format(hInfo[house][Owner], MAX_PLAYER_NAME, "Nera");
		hInfo[house][Cost] = -1;
		hInfo[house][ExitX] = -1;
		hInfo[house][ExitY] = -1;
		hInfo[house][ExitZ] = -1;
		hInfo[house][ExitAngle] = -1;
		hInfo[house][hInt] = -1;
		hInfo[house][IntX] = -1;
		hInfo[house][IntY] = -1;
		hInfo[house][IntZ] = -1;
		hInfo[house][IntAngle] = -1;
		hInfo[house][htVW] = -1;
		hInfo[house][Money] = -1;
		Delete3DTextLabel(hInfo[house][House3D]);
		DestroyPickup(hInfo[house][HousePickup]);
   		format(hQuery, 41, "DELETE FROM `houses` WHERE `ID` = '%d'", house);
		mysql_query(hQuery);
		SendClientMessage(playerid, GREEN, "* Paðalinote namà.");
		return 1;
	}
	mysql_free_result();
	return SendClientMessage(playerid, RED, "* Namas su tokiu numeriu nerastas.");
}
CMD:radistas(playerid, params[])
{
    if(playerDB[playerid][specialybe] != 13) return SendClientMessage(playerid, RED, "* Ði komanda tik radistams!");
	new tekstas[800], zin[900];
	if(sscanf(params, "s[800]", tekstas)) return SendClientMessage(playerid, 0x00FF00AA, "* Naudojimas: /radistas [tekstas]");
	if(playerDB[playerid][ParaseRadistas] > gettime()) return SendClientMessage(playerid, RED, "* Raðyti per radistø chatà galite tik kas 10 sekundþiø.");
	format(zin, sizeof(zin), "{cc6600}Radistas {cc9933}%s(%i) {cc6600}praneða: %s", GetPlayerNameEx(playerid), playerid);
	SendClientMessageToAll(0xcc660000, zin);
	SendClientMessageToAll(0xcc660000, tekstas);
	playerDB[playerid][ParaseRadistas] = gettime() + 10;
	return 1;
}
CMD:prizas(playerid, params[])
{
	if(playerDB[playerid][specialybe] != 13) return SendClientMessage(playerid, RED, "* Ði komanda tik radistams!");
	new id, zin[300];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, 0xFFFFFFFF, "* Naudojimas: /prizas [ Vardas_Pavardë/ID ]");
	if(playerDB[playerid][ParaseRadistasp] > gettime()) return SendClientMessage(playerid, RED, "* Suteikti prizà þaidëjui galima tik, kas 2 minutæs .");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, COLOR, " Sau duoti prizo negalite !");
	GivePlayerMoneyA(id, 100);
	format(zin, sizeof(zin), "{cc6600}Radistas {cc9933}%s(%i) {cc6600}áteikë þaidëjui {cc9933}%s 100  {cc6600}prizà !", GetPlayerNameEx(playerid), playerid, GetPlayerNameEx(id));
	SendClientMessageToAll(0xcc660000, zin);
	playerDB[playerid][ParaseRadistasp] = gettime() + 120;
	return 1;
}
CMD:uzsipilti(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(!playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,GREEN,"* Tu esi ne maðinoje!");
	if(GetPlayerMoneyA(playerid) < 500) return SendClientMessage(playerid,RED,"* Kad uþsipiltum degalø reikës 500");
	GivePlayerMoneyA(playerid, -500);
	vehicleDB[GetPlayerVehicleID(playerid)][gas]=60;
	SendClientMessage(playerid,BLUE,"* Maðina papildyta 60L degalø!");
	return 1;
}
CMD:vgun(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(!playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(playerDB[playerid][kalejimo_laikas] > 0) return SendClientMessage(playerid, RED, "* Kalejime ginklai neleidþiami");
    if(playerDB[playerid][KadaVGun] > gettime()) return SendClientMessage(playerid, RED, "* Ðità komandà galima naudoti tik kas 5 minutes !");
	playerDB[playerid][KadaVGun] = gettime() + 300;
	SendClientMessage(playerid,BLUE,"{37f467} Gavote VIP ginklø paketà !");
	GivePlayerWeaponEx(playerid, 30, 100);//AK
	GivePlayerWeaponEx(playerid, 25, 100);//Shotgun
	GivePlayerWeaponEx(playerid, 34, 100);//Sniper
	SetPlayerArmedWeapon(playerid, 0);

	return 1;
}
CMD:v(playerid, params[])
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(!playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(CheckMute(playerid)) return 1;
	new zin[800], msg[800];
	if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid,0x00FF00AA, "* Naudojimas: /v [Tekstas]");
	if(playerDB[playerid][ParaseVipas] > gettime()) return SendClientMessage(playerid, RED, "* Raðyti per VIP chatà galite tik kas 30 sekundþiø.");
	format(msg, sizeof(msg), "{FFFF00}VIP narys %s(%i) praneða:", GetPlayerNameEx(playerid), playerid);
	SendClientMessageToAll(0xFFFF0000, msg);
	SendClientMessageToAll(0xFFFF0000, zin);
	playerDB[playerid][ParaseVipas] = gettime() + 30;
	return 1;
}
CMD:vipinfo(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
	SendClientMessage(playerid, YELLOW, " Bûdamas vip nariu gausi á algà ant 10  daugiau, ir 3 xp á minutæ.");
	if(!playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Norëdamas nusipirkti vipà arba pratæsti galiojimà raðyk: {FF0000}/paslaugos");
	SendClientMessage(playerid, ORANGE, "{FF0000} Nenusiþenk taisyklëm!");
	new strf[1200], str[105];
	str = "\t /v [tekstas] - Paraðo þinutæ visiems þaidëjams .\n"; strcat(strf, str);
	str = "\t /vc - Raðyti á VIP chatà .\n"; strcat(strf, str);
	str = "\t /zxc - Pradësi atgalini skaièiavimà .\n"; strcat(strf, str);
	str = "\t /vgun - Gaunate VIP ginklus. Jeigu dirbate teisësauga, gausite didesná ginklø paketà.\n"; strcat(strf, str);
	str = "\t /uzsipilti - Á maðinà prisipildysi degalø uþ 500 .\n"; strcat(strf, str);
	str = "\t /taisyti - Susitvarkysi maðinà uþ 500 .\n"; strcat(strf, str);
	str = "\t /boom - Susprogdinti maðina .\n"; strcat(strf, str);
	str = "\t /vgydytis - Atgauti gyvybæs su ðarvais .\n"; strcat(strf, str);
	str = "\t /vt1 - Nusiteleportuosite á Polomino Creek miestelá. + su maðina .\n"; strcat(strf, str);
	str = "\t /vt2 - Nusiteleportuosite á Dillimore miestelá. + su maðina .\n"; strcat(strf, str);
	str = "\t /vt3 - Nusiteleportuosite á Montgomery miestelá. + su maðina .\n"; strcat(strf, str);
	str = "\t /vt4 - Nusiteleportuosite á Blueberry miestelá. + su maðina .\n"; strcat(strf, str);
	str = "\t /spalva > Geltona - Uþsidësite geltonà spalvà .\n"; strcat(strf, str);
	ShowPlayerDialog(playerid, 428, DIALOG_STYLE_MSGBOX, "VIP nariø privilegijos", strf, "Gerai", "");
	return 1;
}
CMD:taisyti(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
    if(!playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(playerDB[playerid][KadaTaises] > gettime()) return SendClientMessage(playerid, RED, "* Ðità komandà galima naudoti tik kas 1 minutæ!");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,RED,"* Tu esi ne maðinoje! Norint sutvarkyti jà turi bûti joje.");
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:vHP;
    GetVehicleHealth(vehicleid, vHP);
  	if(vHP > 999.9) return SendClientMessage(playerid, RED, "* Maðina ir taip pilnai sutvarkyta");
	if(GetPlayerMoneyA(playerid) < 500) return SendClientMessage(playerid,RED,"* Kad susitaisytum maðinà reikës 500");
	GivePlayerMoneyA(playerid, -500);
	playerDB[playerid][KadaTaises] = gettime() + 60;
	SendClientMessage(playerid,GREEN,"* Suremontavai savo maðinà!");
	RepairVehicle(GetPlayerVehicleID(playerid));
	return 1;
}
CMD:vgydytis(playerid)
{
    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
	new Float:vPos[3], masyvas[128];
    if(!playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(playerDB[playerid][KadaVipGydes] > gettime()) return SendClientMessage(playerid, RED, "* Ðità komandà galima naudoti tik kas 1 minutæ!");
	SetPlayerHealthEx(playerid, 100);
	SetPlayerArmourEx(playerid, 100);
	playerDB[playerid][KadaVipGydes] = gettime() + 60;
	SendClientMessage(playerid,BLUE,"* Pasigydei");
	GetPlayerPos(playerid, vPos[0], vPos[1], vPos[2]);
	format(masyvas, 128, "[VIP] %s pasigydë",GetPlayerNameEx(playerid));

	for(new p = 0; p < MAX_PLAYERS; p++)
	{
	    if(IsPlayerConnected(p))
	    {
		    if(IsPlayerInRangeOfPoint(p, 20.0, vPos[0], vPos[1], vPos[2]))
	        {
	            SendClientMessage(p, RED, masyvas);
	        }
	    }
	}
	return 1;
}
CMD:vc(playerid, params[])
{
	if(CheckMute(playerid)) return 1;
    if(!playerDB[playerid][vip]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new zin[128], str[155];
    if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid, ORANGE, "* Vip chato þinutë: /vc [Þinutë]");
	format(str, sizeof(str), "[VIP-CHAT] %s: %s", GetPlayerNameEx(playerid), zin);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerNPC(i) || !IsPlayerConnected(i) || !playerDB[i][vip]) continue;
		SendClientMessage(i, RED, str);
	}
	return 1;
}
CMD:priziuretojas(playerid, params[])
{
	if(!playerDB[playerid][dpriziuretojas] && !playerDB[playerid][epriziuretojas] && !playerDB[playerid][apriziuretojas] && !playerDB[playerid][vpriziuretojas] && !playerDB[playerid][banpriziuretojas] && !playerDB[playerid][gpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	ShowPlayerDialog(playerid, 8777, DIALOG_STYLE_LIST, "Priþiuretojai", "Direktoriø priþiuretojo komandos\nEmigracijø priþiurëtojo komandos\nAdministratoriø priþiûrëtojø komandos\nVIP'ø priþiûrëtojo komandos\nBAN/UNBAN priþiûrëtojo komandos\nKlubø priþiûrëtojo komandos", "Pasirinkti", "Iðeiti");
	return 1;
}
CMD:daktyvumas(playerid)
{
	if(playerDB[playerid][dpriziuretojas] != true && playerDB[playerid][admin] < 5) return 0;

	mysql_query("SELECT `Vardas`, `Lead`, `Prazaide` FROM `players` WHERE `Lead` > '0'");
	mysql_store_result();

	new pName[24], dID, dName[15], dDate[32], pStatus[30], dyrikai, String[350], Stringas[2500], resultline[50];

	strcat(Stringas, "Vardas_Pavardë\tDrk\tStatusas\tPask. prisijungimas\n");

	while(mysql_fetch_row_format(resultline))
	{
		sscanf(resultline, "p<|>s[24]ds[32]", pName, dID, dDate);

		dyrikai ++;

		switch(dID)
		{
            case LEAD_FARAI: dName = "Policija";
			case LEAD_MEDIKAI: 	dName = "Medikai";
			case LEAD_SWAT: 	dName = "SWAT";
			case LEAD_Mechanikas: 	dName = "Mechanikai";
			case LEAD_FUROS: 	dName = "Furistai";
			case LEAD_TAXI: 	dName = "TAXI";
			case LEAD_Gdyleriai: 	dName = "Dyleriai";
			case LEAD_RADISTAS: 	dName = "Radija";
			case LEAD_SPD: 	dName = "Armija";
			case LEAD_BAIKERIAI: 	dName = "Baikeriai";
		}

		if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}ONLINE{FFFFFF}";
		else 											pStatus = "{8cc17b}OFFLINE{FFFFFF}";

		format(String, sizeof(String), "%d. {8cc17b}%s\t{8cc17b}%s\t%s\t{8cc17b}%s\n", dyrikai, pName, dName, pStatus, dDate);
		strcat(Stringas, String);
	}

	ShowPlayerDialog(playerid, 1114, DIALOG_STYLE_TABLIST_HEADERS, "Direktoriø aktyvumas", Stringas, "Uþdaryti", "");

	mysql_free_result();

	return 1;
}

CMD:gaktyvumas(playerid)
{
	if(playerDB[playerid][gpriziuretojas] != true && playerDB[playerid][admin] < 5) return 0;

	mysql_query("SELECT `Vardas`, `Lead`, `Prazaide` FROM `players` WHERE `Lead` > '0'");
	mysql_store_result();

	new pName[24], dID, dName[50], dDate[32], pStatus[30], dyrikai, String[300], Stringas[2500], resultline[50];

	strcat(Stringas, "Vardas_Pavardë\tDrk\tStatusas\tPask. prisijungimas\n");

	while(mysql_fetch_row_format(resultline))
	{
		sscanf(resultline, "p<|>s[24]ds[32]", pName, dID, dDate);

		dyrikai ++;

		switch(dID)
		{
            case LEAD_Arifa: dName = "Russian mafia";
			case LEAD_Gstreet: 	dName = "Yakuza mafia";
			case LEAD_KLUBAS: 	dName = "Costella klubas";
			case LEAD_KLUBASS: 	dName = "Patriotai klubas";
		}

		if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}ONLINE{FFFFFF}";
		else 											pStatus = "{8cc17b}OFFLINE{FFFFFF}";

		format(String, sizeof(String), "%d. {8cc17b}%s\t{8cc17b}%s\t%s\t{8cc17b}%s\n", dyrikai, pName, dName, pStatus, dDate);
		strcat(Stringas, String);
	}

	ShowPlayerDialog(playerid, 1114, DIALOG_STYLE_TABLIST_HEADERS, "Direktoriø aktyvumas", Stringas, "Uþdaryti", "");

	mysql_free_result();

	return 1;
}
CMD:sandeliurr(playerid, params[])
{
	new msg[128];
    if(!playerDB[playerid][dpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    LSD[0] = 0;
	LSD[1] = 0;
	AMFA[0] = 0;
	AMFA[1] = 0;
	SanNupirktas[0] = false;
	SanNupirktas[1] = false;
	GrobiamasSandelis[0] = false;
	GrobiamasSandelis[1] = false;
	format(SanSavininkas[0], 2, "--");
	format(SanSavininkas[1], 2, "--");
	SaveSandeliai();
	UpdateSandeliuLabel();
	format(msg, sizeof(msg), "* Direktoriø priþiûrëtojas %s iðtuðtino visus gaujø sandelius esanèius BB-LS sandeliuose!", GetPlayerNameEx(playerid));
   	SendClientMessageToAll(GREEN,msg);
	SendClientMessageToAll(GREEN, "* Mafijos juos grobti galës vël!");
   	return 1;
}
CMD:priz(playerid, params[])
{
	if(!playerDB[playerid][dpriziuretojas] && !playerDB[playerid][epriziuretojas] && !playerDB[playerid][apriziuretojas] && !playerDB[playerid][vpriziuretojas] && !playerDB[playerid][banpriziuretojas] && !playerDB[playerid][gpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(CheckMute(playerid)) return 1;
	new tekstas[800], zin[900];
	if(sscanf(params, "s[800]", tekstas)) return SendClientMessage(playerid, 0x00FF00AA, "* Naudojimas: /s [tekstas]");
	if(playerDB[playerid][ParaseAdminas] > gettime()) return SendClientMessage(playerid, RED, "* Raðyti per priþiûrëtoju chatà galite tik kas 30 sekundþiø.");
    if(playerDB[playerid][dpriziuretojas])
    {
		format(zin, sizeof(zin), "{32870e}[Direktoriø Priþiûrëtojas] %s[%i] : {47af1a}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
    if(playerDB[playerid][epriziuretojas])
    {
		format(zin, sizeof(zin), "{32870e}[Emigracijos Priþiûrëtojas] %s[%i] : {47af1a}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
    if(playerDB[playerid][apriziuretojas])
    {
		format(zin, sizeof(zin), "{32870e}[Administratoriø Priþiûrëtojas] %s[%i] : {47af1a}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
    if(playerDB[playerid][vpriziuretojas])
    {
		format(zin, sizeof(zin), "{32870e}[VIP Priþiûrëtojas] %s[%i] : {ccaf66}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
	if(playerDB[playerid][banpriziuretojas])
    {
		format(zin, sizeof(zin), "{32870e}[BAN Priþiûrëtojas] %s[%i] : {47af1a}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
	if(playerDB[playerid][gpriziuretojas])
    {
		format(zin, sizeof(zin), "{32870e}[Gaujø Priþiûrëtojas] %s[%i] : {47af1a}%s", GetPlayerNameEx(playerid), playerid,tekstas);
	}
	SendClientMessageToAll(0x00FF0000, zin);
	playerDB[playerid][ParaseAdminas] = gettime() + 30;
	return 1;
}
CMD:dpelnai(playerid, params[])
{
    if(!playerDB[playerid][dpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    new strf[1000], str[100];
    format(str, 100, "{ffffff}Policijos dapartamento darbo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[0])); strcat(strf, str);
    format(str, 100, "{ffffff}Mechanikø darbo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[1])); strcat(strf, str);
    format(str, 100, "{ffffff}Taxistø darbo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[2])); strcat(strf, str);
    format(str, 100, "{ffffff}Medikø darbo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[3])); strcat(strf, str);
    format(str, 100, "{ffffff}Dyleriø darbo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[4])); strcat(strf, str);
    format(str, 100, "{ffffff}Russian mafijos pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[5])); strcat(strf, str);
    format(str, 100, "{ffffff}Yakuza mafijos pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[6])); strcat(strf, str);
    format(str, 100, "{ffffff}SWAT pajëgø darbo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[7])); strcat(strf, str);
    format(str, 100, "{ffffff}Fûristø darbo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[8])); strcat(strf, str);
    format(str, 100, "{ffffff}Radistø darbo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[9])); strcat(strf, str);
    format(str, 100, "{ffffff}Bakeriø darbo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[10])); strcat(strf, str);
    format(str, 100, "{ffffff}Costello klubo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[11])); strcat(strf, str);
    format(str, 100, "{ffffff}- PATRIOTAI - klubo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[12])); strcat(strf, str);
    format(str, 100, "{ffffff}Armijos darbo pelne dabar yra: {20eaa0}%s {ffffff}\n", konvertuoti_pinigus(Pelnas[13])); strcat(strf, str);
	ShowPlayerDialog(playerid, 5712, DIALOG_STYLE_MSGBOX, "{ffffff}Darbø pelnai", strf, "Aiðku", "");
	return 1;
}
CMD:vvisi(playerid, params[])
{
    if(!playerDB[playerid][vpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    mysql_query("SELECT Vardas,Vip,Vispejimai FROM players WHERE Vip > '0'");
	mysql_store_result( );
	new vVardas[MAX_PLAYER_NAME], x, resultline[40], str[150], fstr[3500], arVip, vIspejimai, vStatus[50];
	while(mysql_fetch_row_format(resultline))
	{
		sscanf(resultline,"p<|>s[24]dd",vVardas, arVip, vIspejimai);
		x++;
		if(arVip > 0)
		{
			if(GetPlayeridMid(vVardas) != INVALID_PLAYER_ID) { vStatus = "{00FF00}prisijungæs"; } else { vStatus = "{FF0000}atsijunges"; }
			format(str, sizeof(str),"{FFFFFF}%d. {E0A51B}%s {FFFFFF}turi {E0A51B}%d {FFFFFF}áspëjimus {FFFFFF}ir jis yra %s\n", x, vVardas, vIspejimai, vStatus);
			strcat(fstr, str);
		}
	}
	ShowPlayerDialog(playerid,1114,DIALOG_STYLE_LIST,"Serverio VIP nariai",fstr,"Gerai","");
	mysql_free_result();
	return 1;
}
CMD:avisi(playerid, params[])
{
    if(!playerDB[playerid][apriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    mysql_query("SELECT Vardas,Admin,Aispejimai FROM players WHERE Admin > '0'");
	mysql_store_result( );
	new aVardas[MAX_PLAYER_NAME], x, resultline[40], str[200], fstr[3500], arAdmin, aIspejimai, aStatus[50];
	while(mysql_fetch_row_format(resultline))
	{
		sscanf(resultline,"p<|>s[24]dd",aVardas, arAdmin, aIspejimai);
		x++;
		if(arAdmin > 0)
		{
			if(GetPlayeridMid(aVardas) != INVALID_PLAYER_ID) { aStatus = "{00FF00}prisijungæs"; } else { aStatus = "{FF0000}atsijunges"; }
			format(str, sizeof(str),"{FFFFFF}%d. {E0A51B}%s {FFFFFF}turi {E0A51B}%d {FFFFFF}áspëjimus {FFFFFF}ir jis yra %s {FFFFFF}(Admin lygis {E0A51B}%d{FFFFFF})\n", x, aVardas, aIspejimai, aStatus, arAdmin);
			strcat(fstr, str);
		}
	}
	ShowPlayerDialog(playerid,1114,DIALOG_STYLE_MSGBOX,"Serverio administratoriai",fstr,"Gerai","");
	mysql_free_result();
	return 1;
}
CMD:nvispeti(playerid, params[])
{
	if(!playerDB[playerid][vpriziuretojas] && playerDB[playerid][admin] < 5) return 0;
	new id,masyvas[128];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "* Nuimti áspëjimà : /nvispeti [Vardas_Pavarde]");
	else if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra");
	else if(!playerDB[id][vip]) return SendClientMessage(playerid, RED, "* Þaidëjas ne VIP narys!");
	else if(id == playerid) return SendClientMessage(playerid, RED, "* Sau nusiimti áspëjimø negalite!");
	else if(playerDB[id][vispejimai] == 0) return SendClientMessage(playerid, RED, "* Þaidëjas neturi áspëjimø!");
	else
	{
	    playerDB[id][vispejimai]--;
		format(masyvas, 128, "* Jûs %s nuëmëte áspëjimà!",GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, masyvas);
	}
	return true;
}
CMD:vispeti(playerid, params[])
{
	if(!playerDB[playerid][vpriziuretojas] && playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, masyvas[128],priezastis[50];
	if(sscanf(params, "us[128]", id,priezastis)) return SendClientMessage(playerid, BLUE, "* Áspëti vipà : /vispeti [Vardas_Pavardë/ID] [Prieþastis]");
	else if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	else if(!playerDB[id][vip]) return SendClientMessage(playerid, RED, "* Þaidëjas ne VIP narys!.");
	else
	{
		playerDB[id][vispejimai] ++;
	 	format(masyvas, 128, "* Davëte áspëjimà vipui %s ir jis jau turi %d/3 áspëjimø.", GetPlayerNameEx(id), playerDB[id][vispejimai]);
		SendClientMessage(playerid, GREEN, masyvas);
		format(masyvas, 128, "* Vipø priþiûrëtojas %s jus áspëjo, uþ %s. Dabar jûs jau turite %d/3 áspëjimø.", GetPlayerNameEx(playerid),priezastis, playerDB[id][vispejimai]);
		SendClientMessage(id, GREEN, masyvas);
		format(masyvas, 128, "[Vip Chat] %s áspëjo %s uþ %s",GetPlayerNameEx(playerid), GetPlayerNameEx(id), priezastis);
		SendMessageToVips(BLUE, masyvas);
		new query[110];
		format(query, 87, "UPDATE players SET Vispejimai = '%d' WHERE Vardas = '%s'",playerDB[id][vip],GetPlayerNameEx(id));
		mysql_query(query);
		if(playerDB[id][vispejimai] > 2)
		{
			playerDB[id][vip] = false;
			playerDB[id][vispejimai] = 0;
			playerDB[id][VipLaikas] = 0;
			SetPlayerColor(id,PLAYCOL_HIDDEN);
			format(query, 110, "UPDATE players SET Vip = '%d', Vispejimai = '%d' WHERE Vardas = '%s'",playerDB[id][vip], playerDB[id][vispejimai],GetPlayerNameEx(id));
			mysql_query(query);
			format(masyvas, 128, "* Þaidëjas %s netenka VIP privilegijø, nes surinko 3/3 áspëjimø.", GetPlayerNameEx(id));
			SendClientMessage(playerid, GREEN, masyvas);
			format(masyvas, 128, "* VIP'ø priþiûrëtojas %s jums nuëmë VIP privilegijas, nes surinkote 3/3 áspëjimø.", GetPlayerNameEx(playerid));
			SendClientMessage(id, GREEN, masyvas);
		}
	}
	return 1;
}
CMD:vispetioff(playerid, params[])
{
    new uQuerry[150], arVipas, vIspejimai, zVardas[MAX_PLAYER_NAME];
    if(!playerDB[playerid][vpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(sscanf(params, "s[24]", zVardas)) return SendClientMessage(playerid, BLUE, "* Áspëti þaidëjà: /vispetioff [Vardas_Pavardë]");
	new pID = GetPlayeridMid(zVardas);
	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Þaidëjas yra þaidime.");
	format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", zVardas);
	mysql_query(uQuerry);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows())
	{
		mysql_fetch_field_row(uQuerry, "Vip"); arVipas = strval(uQuerry);
		mysql_fetch_field_row(uQuerry, "Vispejimai"); vIspejimai = strval(uQuerry);
		if(!arVipas)
		{
			SendClientMessage(playerid, RED, "* Þaidëjas ne vip narys!");
		}
		else
		{
		    if(vIspejimai > 1)
		    {
				SendClientMessage(playerid, RED, "* Þaidëjas surinko 3/3 áspëjimus ir buvo iðmestas ið VIP'ø.");
	   			format(uQuerry, 150, "UPDATE players SET `Vip` = '0', `Vispejimai` = '0', `VipLaikas` = '0' WHERE `Vardas` = '%s'", zVardas);
				mysql_query(uQuerry);
			}
			else
			{
			    format(uQuerry, 150, "UPDATE players SET `Vispejimai` = '%d' WHERE `Vardas` = '%s'", (vIspejimai + 1), zVardas);
				mysql_query(uQuerry);
				SendClientMessage(playerid, BLUE, "* VIP narys gavo 1 áspëjimà..");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, RED, "* Tokio vartotojo duomenø bazëje nëra.");
	}
	return 1;
}
CMD:ismestidrkoff(playerid, params[])
{
    new uQuerry[150], arDrk,zVardas[MAX_PLAYER_NAME];
    if(!playerDB[playerid][dpriziuretojas]) return SendClientMessage(playerid, RED, "* Tokios komandos nëra. Visos komandos: /pagalba");
	if(sscanf(params, "s", zVardas)) return SendClientMessage(playerid, BLUE, "* Iðmesti ið direktoriaus pareigø þaidëjà: /ismestidrkoff [Vardas_Pavardë]");
	new pID = GetPlayeridMid(zVardas);
	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Þaidëjas yra þaidime.");
	format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", zVardas);
	mysql_query(uQuerry);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows())
	{
		mysql_fetch_field_row(uQuerry, "Lead"); arDrk = strval(uQuerry);
		if(!arDrk)
		{
			SendClientMessage(playerid, RED, "* Þaidëjas ne direktorius !");
		}
		else
		{
		    if(arDrk > 0)
		    {
				SendClientMessage(playerid, RED, "* Þaidëjas iðmestas ið direktoriaus pareigø");
	   			format(uQuerry, 150, "UPDATE players SET `Lead` = '0' WHERE `Vardas` = '%s'", zVardas);
				mysql_query(uQuerry);
			}
		}
	}
	else
	{
		SendClientMessage(playerid, RED, "* Tokio vartotojo duomenø bazëje nëra.");
	}
	return 1;
}
CMD:ismestipavoff(playerid, params[])
{
    new uQuerry[150], arDrk,zVardas[MAX_PLAYER_NAME];
    if(!playerDB[playerid][dpriziuretojas]) return SendClientMessage(playerid, RED, "* Tokios komandos nëra. Visos komandos: /pagalba");
	if(sscanf(params, "s", zVardas)) return SendClientMessage(playerid, BLUE, "* Iðmesti ið direktoriaus pareigø þaidëjà: /ismestipavoff [Vardas_Pavardë]");
	new pID = GetPlayeridMid(zVardas);
	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Þaidëjas yra þaidime.");
	format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", zVardas);
	mysql_query(uQuerry);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows())
	{
		mysql_fetch_field_row(uQuerry, "pavdrk"); arDrk = strval(uQuerry);
		if(!arDrk)
		{
			SendClientMessage(playerid, RED, "* Þaidëjas ne pavaduotojas !");
		}
		else
		{
		    if(arDrk > 0)
		    {
				SendClientMessage(playerid, RED, "* Þaidëjas iðmestas ið pavaduotojaus pareigø");
	   			format(uQuerry, 150, "UPDATE players SET `pavdrk` = '0' WHERE `Vardas` = '%s'", zVardas);
				mysql_query(uQuerry);
			}
		}
	}
	else
	{
		SendClientMessage(playerid, RED, "* Tokio vartotojo duomenø bazëje nëra.");
	}
	return 1;
}
CMD:vskirti(playerid, params[])
{
    new uQuerry[150], arVipas, zVardas[MAX_PLAYER_NAME];
    if(playerDB[playerid][admin] < 5) return 0;
	if(sscanf(params, "s[24]", zVardas)) return SendClientMessage(playerid, BLUE, "* Áspëti þaidëjà: /vskirti [Vardas_Pavardë]");
	new pID = GetPlayeridMid(zVardas);
	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Þaidëjas yra þaidime.");
	format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", zVardas);
	mysql_query(uQuerry);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows())
	{
		mysql_fetch_field_row(uQuerry, "Vip"); arVipas = strval(uQuerry);
		if(arVipas)
		{
			SendClientMessage(playerid, RED, "* Þaidëjas jau VIP!");
		}
		else
		{
			format(uQuerry, 150, "UPDATE players SET `Vip` = '1', `Vispejimai` = '0' WHERE `Vardas` = '%s'", zVardas);
			mysql_query(uQuerry);
		}
	}
	else
	{
		SendClientMessage(playerid, RED, "* Tokio vartotojo duomenø bazëje nëra.");
	}
	return 1;
}
CMD:naispeti(playerid, params[])
{
	if(!playerDB[playerid][apriziuretojas] && playerDB[playerid][admin] < 5) return 0;
	new id,masyvas[128];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "* Nuimti áspëjimà : /naispeti [Vardas_Pavarde]");
	else if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra");
	else if(playerDB[id][admin] == 0) return SendClientMessage(playerid, RED, "* Þaidëjas ne ADMIN narys!");
	else if(id == playerid) return SendClientMessage(playerid, RED, "* Sau nusiimti áspëjimø negalite!");
	else if(playerDB[id][aispejimai] == 0) return SendClientMessage(playerid, RED, "* Þaidëjas neturi áspëjimø!");
	else
	{
	    playerDB[id][aispejimai]--;
		format(masyvas, 128, "* Jûs %s nuëmëte áspëjimà!",GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, masyvas);
	}
	return true;
}
CMD:aispeti(playerid, params[])
{
	if(!playerDB[playerid][apriziuretojas] && playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, msg[115], masyvas [128], priezastis[128];
	if(sscanf(params, "us[128]",id,priezastis)) return SendClientMessage(playerid, BLUE, "* Áspëti adminà : /aispeti [Vardas_Pavardë/ID] [Prieþastis]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	else if(playerDB[id][admin] < 1) return SendClientMessage(playerid, RED, "* Þaidëjas ne administratorius!.");
	else if(playerDB[id][admin] == 5) return SendClientMessage(playerid, RED, "* Savininkui duoti áspëjimà, draudþiama!");
	playerDB[id][aispejimai] ++;
 	format(msg, sizeof(msg), "* Davëte áspëjimà administratoriui %s ir jis jau turi %d/3 áspëjimø.", GetPlayerNameEx(id), playerDB[id][aispejimai]);
	SendClientMessage(playerid, GREEN, msg);
	format(msg, sizeof(msg), "* Administratoriø priþiûrëtojas %s jus áspëjo. Dabar jûs jau turite %d/3 áspëjimø.", GetPlayerNameEx(playerid), playerDB[id][aispejimai]);
	SendClientMessage(id, GREEN, msg);
	format(masyvas, 128, "[Admin Chat] %s áspëjo %s uþ %s",GetPlayerNameEx(playerid), GetPlayerNameEx(id), priezastis);
	SendMessageToAdmins(BLUE, masyvas);
	SavePlayerData(id);
	if(playerDB[id][aispejimai] > 2)
	{
		playerDB[id][admin] = 0;
		playerDB[id][aispejimai] = 0;
		playerDB[id][AdminLaikas] = 0;
		SetPlayerColor(id,PLAYCOL_HIDDEN);
		SavePlayerData(id);
		format(msg, sizeof(msg), "* Þaidëjas %s paðalintas ið administratoriaus posto, nes surinko 3/3 áspëjimus.", GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, msg);
		format(msg, sizeof(msg), "* Administratoriø priþiûrëtojas %s jums atëmë administratoriaus privilegijas, nes surinkot 3/3 áspëjimus.", GetPlayerNameEx(playerid));
		SendClientMessage(id, GREEN, msg);
	}
	return 1;
}
CMD:aispetioff(playerid, params[])
{
    new uQuerry[150], arAdminas, aIspejimai, zVardas[MAX_PLAYER_NAME];
    if(!playerDB[playerid][apriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(sscanf(params, "s[24]", zVardas)) return SendClientMessage(playerid, BLUE, "* Áspëti þaidëjà: /aispetioff [Vardas_Pavardë]");
	new pID = GetPlayeridMid(zVardas);
	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Þaidëjas yra þaidime.");
	format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", zVardas);
	mysql_query(uQuerry);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows())
	{
		mysql_fetch_field_row(uQuerry, "Admin"); arAdminas = strval(uQuerry);
		mysql_fetch_field_row(uQuerry, "Aispejimai"); aIspejimai = strval(uQuerry);
		if(arAdminas == 0)
		{
			SendClientMessage(playerid, RED, "* Þaidëjas ne administratorius!");
		}
		else
		{
		    if(aIspejimai > 1)
		    {
				SendClientMessage(playerid, RED, "* Þaidëjas surinko 3/3 áspëjimus ir buvo iðmestas ið Admin'ø.");
	   			format(uQuerry, 150, "UPDATE players SET `Admin` = '0', `Aispejimai` = '0', `AdminLaikas` = '0' WHERE `Vardas` = '%s'", zVardas);
				mysql_query(uQuerry);
			}
			else
			{
			    format(uQuerry, 150, "UPDATE players SET `Aispejimai` = '%d' WHERE `Vardas` = '%s'", (aIspejimai + 1), zVardas);
				mysql_query(uQuerry);
				SendClientMessage(playerid, BLUE, "* Administratorius gavo 1 áspëjimà..");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, RED, "* Tokio vartotojo duomenø bazëje nëra.");
	}
	return 1;
}
CMD:dispeti(playerid, params[])
{
	if(!playerDB[playerid][dpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, msg[115];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Áspëti direktoriø : /dispeti [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(playerDB[id][plead] < 1) return SendClientMessage(playerid, RED, "* Þaidëjas ne direktorius !");
	playerDB[id][dispejimai] ++;
 	format(msg, sizeof(msg), "* Davëte áspëjimà direktoriui %s dabar jis jau turi %d/3 áspëjimus..", GetPlayerNameEx(id), playerDB[id][dispejimai]);
	SendClientMessage(playerid, GREEN, msg);
	format(msg, sizeof(msg), "* Direktoriø priþiûrëtojas %s jus áspëjo. Dabar jûs jau turite %d/3 áspëjimø.", GetPlayerNameEx(playerid), playerDB[id][dispejimai]);
	SendClientMessage(id, GREEN, msg);
	
	new query[128];
	format(query, 128, "UPDATE players SET Dispejimai = '%d' WHERE Vardas = '%s'",playerDB[id][dispejimai],GetPlayerNameEx(id));
	mysql_query(query);
	
	if(playerDB[id][dispejimai] > 2)
	{
		playerDB[id][plead] = 0;
		playerDB[id][dispejimai] = 0;
		format(query, 128, "UPDATE players SET Lead = '%d', Dispejimai = '%d' WHERE Vardas = '%s'",playerDB[id][plead],playerDB[id][dispejimai],GetPlayerNameEx(id));
		mysql_query(query);
		format(msg, sizeof(msg), "* Þaidëjas %s paðalintas ið direktoriaus posto, nes surinko 3/3 áspëjimus.", GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, msg);
		format(msg, sizeof(msg), "* Direktoriø priþiûrëtojas %s jums atëmë direktoriaus privilegijas, nes surinkot 3/3 áspëjimus", GetPlayerNameEx(playerid));
		SendClientMessage(id, GREEN, msg);
	}
	return 1;
}
CMD:ispetip(playerid, params[])
{
	if(!playerDB[playerid][dpriziuretojas]) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, msg[115];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Áspëti pavaduotojà : /pispeti [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(playerDB[id][pavdrk] < 1) return SendClientMessage(playerid, RED, "* Þaidëjas ne pavaduotojas !");
	playerDB[id][pispejimai] ++;
 	format(msg, sizeof(msg), "* Davëte áspëjimà direktoriui %s dabar jis jau turi %d/3 áspëjimus..", GetPlayerNameEx(id), playerDB[id][pispejimai]);
	SendClientMessage(playerid, GREEN, msg);
	format(msg, sizeof(msg), "* Direktoriø priþiûrëtojas %s jus áspëjo. Dabar jûs jau turite %d/3 áspëjimø.", GetPlayerNameEx(playerid), playerDB[id][pispejimai]);
	SendClientMessage(id, GREEN, msg);
	
	new query[128];
	format(query, 128, "UPDATE players SET Pispejimai = '%d' WHERE Vardas = '%s'",playerDB[id][pispejimai],GetPlayerNameEx(id));
	mysql_query(query);
	
	if(playerDB[id][pispejimai] > 2)
	{
		playerDB[id][pavdrk] = 0;
		playerDB[id][pispejimai] = 0;
		format(query, 128, "UPDATE players SET pavdrk = '%d', Pispejimai = '%d' WHERE Vardas = '%s'",playerDB[id][pavdrk],playerDB[id][pispejimai],GetPlayerNameEx(id));
		mysql_query(query);
		format(msg, sizeof(msg), "* Þaidëjas %s paðalintas ið pavaduotojo posto, nes surinko 3/3 áspëjimus.", GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, msg);
		format(msg, sizeof(msg), "* Direktoriø priþiûrëtojas %s jums atëmë pavaduotojo privilegijas, nes surinkot 3/3 áspëjimus", GetPlayerNameEx(playerid));
		SendClientMessage(id, GREEN, msg);
	}
	return 1;
}
/*CMD:ismestivisus(playerid,params[])
{
	if(playerDB[playerid][plead] > 0)
	{
		ShowPlayerDialog(playerid, 44, DIALOG_STYLE_MSGBOX, "{AFAFAF}Iðmesti visus darbuotojus ið darbo", "Ar tikrai norite iðmesti visus savo darbuotojus ið darbo áskaitant ir save,jei dirbate?\n\n{FF0000}Jai pasirinksite iðmesti visus darbuotojus,ðio veiksmo atðaukti nebegalësite.", "Taip","Ne");
	}
	else return KlaidosZinute(playerid, "* Ði komanda tik direktoriams.");
	return 1;
}
CMD:dkomandos(playerid,params[])
{
	if(playerDB[playerid][plead] > 0)
	{
		new str[3000];
		strcat(str, "/dpultas - Direktoriaus valdymo pultas\n");//TIK SU TEISE PAVADUOTOJAS GALI
		strcat(str, "/priimt | /ismesti \n");//TIK SU TEISE PAVADUOTOJAS GALI
		strcat(str, "/dismestivisus - iðmesti visus darbuotojus ið darbo\n");//tik drk
		strcat(str, "/darbuotojai - parodo (visø) darbuotojø sàraðà.\n");//DEFAULT FOR PAV.
		strcat(str, "/d [tekstas] - raðyti visiems\n");//TIK SU TEISE PAVADUOTOJAS GALI
		strcat(str, "/dispeti - áspëti darbuotojà, 3 áspëjimai iðmetamas lauk ið darbo\n");//TIK SU TEISE PAVADUOTOJAS GALI
		strcat(str, "/ismestidarbuotojaoff - Iðmesti atsijungusá darbuotojà\n");//TIK SU TEISE PAVADUOTOJAS GALI
		strcat(str, "/nispejima - Nuimti áspëjimà\n");//TIK SU TEISE PAVADUOTOJAS GALI
		strcat(str, "/pelnas - Perþiûrëti firmos pelna\n");//TIK SU TEISE PAVADUOTOJAS GALI
		strcat(str, "/dzinute [þinutë] - þinutë bus matoma paraðius /dzinute\n");//DEFAULT FOR PAV
		strcat(str, "/rangas - Padidinti darbuotojo rangà\n");//TIK SU TEISE PAVADUOTOJAS GALI
		strcat(str, "/nrangas - Paþeminti darbuotojà rangà\n");//TIK SU TEISE PAVADUOTOJAS GALI
        strcat(str, "/uzdetipav - Uþdësite pavaduotojà.\n");
        strcat(str, "/nuimtipav - Nuimsite pavaduotojà.\n");
        strcat(str, "/stebeti - Stebëti darbuotojà\n");
        strcat(str, "/dcarspawn - perkrauti darbiná transportà.");
        if(playerDB[playerid][plead] == 11)
        {
            strcat(str, "\n/rrpriekabas - Atstatys fûrø priekabas");
        }
        if(playerDB[playerid][plead] == 5)
        {
            strcat(str, "\n/dylstat - Paþiûrësite dylerio status");
        }
		ShowPlayerDialog(playerid, DIALOG_NONE, DIALOG_STYLE_MSGBOX, "{AFAFAF}Direktoriø komandos", str, "Gerai", "");
	}
	else
	{
		KlaidosZinute(playerid,"Ði komanda tik direktoriams.");
	}
	return 1;
}

*/


	//Direktoriø komandos
CMD:dkomandos(playerid, params[])
{
    if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid,RED,"* Ði komanda tik direktoriam");
	ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotojà\nPaskirti pavaduotojà\nNuimti pavaduotojà\nKomandos kitaip", "Rinktis", "Iðeiti");
    return 1;
}
CMD:pkomandos(playerid)
{
    if(playerDB[playerid][pavdrk] < 1) return 0;
    new masyvas[800];
    format(masyvas, sizeof(masyvas), "\t{FF9900}VISOS PAVADUOTOJØ KOMANDOS\n\n\n{C0C0C0}/pdarbuotojai - Parodytis visus darbuotojus");
    format(masyvas, sizeof(masyvas), "%s\n/p - Skelbti atrankas, informacija\n/pispeti - Áspësite darbuotojà uþ blogus nusiþengimus.\n/pcarspawn - Atstatysite á vietà visas nenaudojamas darbo maðinas.\n/ppzu - þiûrësite kà veikia darbuotojas.",masyvas);
	format(masyvas, sizeof(masyvas), "%s\n/ppriimt - priimsite þaidëjà á darbà.\n/pismest - iðmesite darbuotojà ið darbo.\n/rrpriekabas - atstatysite fûrø priekabas ( TIK FÛRISTU PAVADUOTOJUI ).\n/pdylstat - Paþiûrësite dylerio status ( TIK DYLERIØ PAVADUOTOJUI ).\n/pismestidarbuotojaoff - Iðmesti atsijungusá darbuotojà.\n/patsistatidinti - Atsistatidinsite ið pavaduotojaus pareigø.",masyvas);
	format(masyvas, sizeof(masyvas), "%s\n\n{FF0000}NUSIÞENGUS VIEÐOSIOS TVARKOS TAISYKLËMS, AR KOMANDØ PIKNAUDÞIAVIMÀ\nPAVADUOTOJAUS STATUSAS GALI BÛTI ATIMTAS!",masyvas);
	ShowPlayerDialog(playerid, 7744, DIALOG_STYLE_MSGBOX, "Pavaduotojø komandos", masyvas, "Supratau", "");
	return 1;
}
CMD:priimt(playerid, params[])
{
    if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, msg[55];
    if(sscanf(params, "u", id)) return ServerioZinute(playerid, "Priimti þaidëja á savo firma /priimt vardo_dalis");
	
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Nurodyto þaidëjo nëra.");
	if(playerDB[id][leanvited][playerDB[playerid][plead]-1] || playerDB[id][specialybe] == GetJobFromFaction(playerDB[playerid][plead])) return KlaidosZinute(playerid,"Þaidëjas jau priimtas.");
	if(playerDB[playerid][plead] == LEAD_FARAI)           SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti apskirties policijos pareigûnu. Jei norite ástoti, atvykite á miesteliø policijos nuovada.");
	else if(playerDB[playerid][plead] == LEAD_MEDIKAI)    SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti apskirties mediku. Jei norite ástoti, atvykite á ligoninës darbuotojø sektoriu.");
	else if(playerDB[playerid][plead] == LEAD_Mechanikas) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti apskirties mechaniku. Jei norite ástoti, atvykite pas mus.");
	else if(playerDB[playerid][plead] == LEAD_TAXI )      SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti Taxi. Jei nori atvyk á taxi firma.");
	else if(playerDB[playerid][plead] == LEAD_Gdyleriai ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti Dyleriu komandoje. Jei nori atvyk á dyleriø bazæ.");
	else if(playerDB[playerid][plead] == LEAD_Arifa )     SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Russian mafijà. Praðome prisitatyti á Russian bazæ.");
	else if(playerDB[playerid][plead] == LEAD_Gstreet )   SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Yakuza mafijà. Praðome prisitatyti á Yakuza bazæ.");
	else if(playerDB[playerid][plead] == LEAD_SWAT)       SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á SWAT pajëgas. Praðome prisitatyti á SWAT bazæ.");
	else if(playerDB[playerid][plead] == LEAD_FUROS )     SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Fûristus. Praðome prisitatyti á fûristø bazæ.");
	else if(playerDB[playerid][plead] == LEAD_RADISTAS)   SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Radistus. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra bazë.");
	else if(playerDB[playerid][plead] == LEAD_BAIKERIAI)  SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Baikerius. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra bazë.");
	else if(playerDB[playerid][plead] == LEAD_KLUBAS)     SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á  Costello  klubà. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra klubas.");
	else if(playerDB[playerid][plead] == LEAD_KLUBASS)    SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á  -Patriotai-  klubà. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra klubas.");
	else if(playerDB[playerid][plead] == LEAD_SPD)        SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Armija. Praðome susisiekti su direktoriumi dël bazës vietos.");
	else                                                  SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti Taxi. Jei nori atvyk á taxi firma.");
	playerDB[id][leanvited][playerDB[playerid][plead] - 1] = true;
	format(msg, sizeof(msg), "Pakvietëte %s ástoti á jûsø firma.", GetPlayerNameEx(id));
	ServerioZinute(playerid, msg);
	return 1;
}
CMD:ismest(playerid, params[])
{
	if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, msg[50];
    if(sscanf(params, "u", id)) return ServerioZinute(playerid, "Ið savo firmos iðmesti þaidëja /ismest vardo_dalis");
	if(id == INVALID_PLAYER_ID) return KlaidosZinute(playerid,"Nurodyto þaidëjo nëra.");
	new darbas = GetJobFromFaction(playerDB[playerid][plead]);
	if(playerDB[id][specialybe]!= darbas) return KlaidosZinute(playerid, "Þaidëjas neádarbintas jûsø firmoje.");
	if(playerDB[playerid][plead] == LEAD_FARAI) KlaidosZinute(id,"apskrities policijos generalinis direktorius jus iðmestë ið policijos.");
	else if(playerDB[playerid][plead] == LEAD_MEDIKAI) KlaidosZinute(id,"Ligoninës direktorius iðmestë jus ið darbo");
	else if(playerDB[playerid][plead] == LEAD_Mechanikas) KlaidosZinute(id,"Mechanikø direktorius iðmetë jus ið darbo.");
	else if(playerDB[playerid][plead] == LEAD_TAXI) KlaidosZinute(id,"Jûs iðmestas ið taxi komandos!");
	else if(playerDB[playerid][plead] == LEAD_Gdyleriai) KlaidosZinute(id,"Jûs iðmestas ið dyleriø bendruomenës!");
	else if(playerDB[playerid][plead] == LEAD_Arifa) KlaidosZinute(id,"Jûs iðmestas ið Russian mafijos!");
	else if(playerDB[playerid][plead] == LEAD_Gstreet) KlaidosZinute(id,"Jûs iðmestas ið Yakuza mafijos!");
	else if(playerDB[playerid][plead] == LEAD_SWAT) KlaidosZinute(id,"Jûs iðmestas ið SWAT pajëgø!");
	else if(playerDB[playerid][plead] == LEAD_FUROS ) KlaidosZinute(id,"Fûristø direktorius iðmetë jus ið darbo.");
	else if(playerDB[playerid][plead] == LEAD_RADISTAS ) KlaidosZinute(id,"Radistø direktorius iðmetë jus ið darbo.");
	else if(playerDB[playerid][plead] == LEAD_BAIKERIAI ) KlaidosZinute(id,"Baikeriø direktorius iðmetë jus ið darbo.");
	else if(playerDB[playerid][plead] == LEAD_KLUBAS ) KlaidosZinute(id,"Klubo  Costello  direktorius iðmetë jus ið klubo.");
	else if(playerDB[playerid][plead] == LEAD_KLUBASS ) KlaidosZinute(id,"Klubo  -Patriotai-  direktorius iðmetë jus ið klubo.");
	else if(playerDB[playerid][plead] == LEAD_SPD ) KlaidosZinute(id,"Jûs iðmestas ið Armijos.");

	else KlaidosZinute(id,"Jûs iðmestas ið taxi firmos. Tai direktoriaus sprendimas.");
	playerDB[id][leanvited][playerDB[playerid][plead] - 1] = false;
	format(msg, sizeof(msg), "Iðmetëte %s ið savo firmos.", GetPlayerNameEx(id));
	KlaidosZinute(playerid, msg);
	if(playerDB[id][uniformd]) SetPlayerSkin(id, playerDB[id][drabuziai]);
	playerDB[id][specialybe] = 0;
	playerDB[id][uniformd] = false;
	playerDB[id][uniforma] = -1;
	playerDB[id][rangas] = 0;
	playerDB[id][pradirbo] = 0;
	playerDB[id][ispejimai] = 0;
	
	new query[256];
	format(query, 256, "UPDATE players SET Job = '%d', Uniformd = '%d', Uniforma = '%d', Rangas = '%d', Pradirbo = '%d', Ispejimai = '%d' WHERE Vardas = '%s'",playerDB[id][specialybe],playerDB[id][uniformd],playerDB[id][uniforma],playerDB[id][rangas],playerDB[id][pradirbo],playerDB[id][ispejimai],GetPlayerNameEx(id));
	mysql_query(query);
	return 1;
}
CMD:darbuotojai(playerid, params[])
{
	if(playerDB[playerid][plead] == 0) return 0;
    mysql_query("SELECT Vardas,Job,Ispejimai,Rangas,prazaide FROM players WHERE Job > '0'");
	mysql_store_result();
	new dVardas[MAX_PLAYER_NAME], dJob, dIspejimai, dRangas, dPradirbo, x, resultline[40], str[220], fstr[2000], dStatus[20], dRangaz[50];
	while(mysql_fetch_row_format(resultline))
	{
		sscanf(resultline,"p<|>s[24]dddd",dVardas, dJob, dIspejimai, dRangas, dPradirbo);
		switch(dJob) // pagal darbo id rangai
		{
			case 1: //PD RANGAI | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Pirminë grandis";
					case 2: dRangaz = "Antrinë grandis";
					case 3: dRangaz = "Vidurinë grandis";
					case 4: dRangaz = "Aukðtesnioji grandis";
					case 5: dRangaz = "Aukðèiausioji grandis";
					default: dRangaz = "Nëra";
				}
			}
			case 2: //MEDIKU RANGAI | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Naujoko mediko";
					case 2: dRangaz = "Patyrusio mediko";
					case 3: dRangaz = "Daktaro";
					default: dRangaz = "Nëra";
				}
			}
			case 3: //TAXI RANGAI | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Taxisto naujoko";
					case 2: dRangaz = "Patyrusio taxisto";
					case 3: dRangaz = "Transporterio";
					default: dRangaz = "Nëra";
				}
			}
			case 4: //Mechaniku rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Pasiuntinuko";
					case 2: dRangaz = "Mechaniko";
					case 3: dRangaz = "Kostë";
					case 4: dRangaz = "Valdþia";
					default: dRangaz = "Nëra";
				}
			}
			case 5: //Dyleriu rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Naujoko";
					case 2: dRangaz = "Apsipratusio";
					case 3: dRangaz = "Senbûvio";
					case 4: dRangaz = "Profesionalaus dylerio";
					default: dRangaz = "Nëra";
				}
			}
			case 10: //SWAT rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Eilinio";
					case 2: dRangaz = "Leitenanto";
					case 3: dRangaz = "Virðilos";
					case 4: dRangaz = "Majoro";
					case 5: dRangaz = "Generolo";
					default: dRangaz = "Nëra";
				}
			}
			case 11: //Furistø ragai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Naujoko fûristo";
					case 2: dRangaz = "Iðtikimo fûristo";
					case 3: dRangaz = "Fûristo profesionalo";
					case 4: dRangaz = "Fûristo senbûvio";
					default: dRangaz = "Neturintis rango";
				}
			}
			case 13:
			{
				switch(dRangas)
				{
				    case 1: dRangaz = "Fotografas";
					case 2: dRangaz = "Þurnalistas";
					case 3: dRangaz = "Redaktorius";
					case 4: dRangaz = "Eterio paþiba";
					default: dRangaz = "Neturintis rango";
				}
			}
			case 14:
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Baikeris";
					case 2: dRangaz = "Senbuvis";
					case 3: dRangaz = "Pro.Baikeris";
					default: dRangaz = "Neturintis rango";
	    		}
			}
			case 17: //ARMIJOS rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
				    case 1: dRangaz = "Eilinio";
				    case 2: dRangaz = "Leitenanto";
				    case 3: dRangaz = "Virðilos";
				    case 4: dRangaz = "Majoro";
				    case 5: dRangaz = "Generolo";
				    default: dRangaz = "Nëra";
				}
			}
			case 40: //Russian rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Kento";
					case 2: dRangaz = "Turintèio paþinèiø";
					case 3: dRangaz = "Vyresnysiojo mafijos nario";
					case 4: dRangaz = "Mafijos senbûvio";
					default: dRangaz = "Nëra";
				}
			}
			case 42: //Yakuza rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Kento";
					case 2: dRangaz = "Turintèio paþinèiø";
					case 3: dRangaz = "Vyresnysiojo mafijos nario";
					case 4: dRangaz = "Mafijos senbûvio";
					default: dRangaz = "Nëra";
				}
			}
	    }
		new darbas = GetJobFromFaction(playerDB[playerid][plead]);
		if(darbas == dJob)
		{
		    x++;
			if(GetPlayeridMid(dVardas) != INVALID_PLAYER_ID) { dStatus = "prisijungæs"; } else { dStatus = "atsijunges"; }
			format(str, sizeof(str),"%d.%s\t%d/3 áspëjimai, jo rangas yra %s ðià savaitæ jis pradirbo %s minuèiø jis yra (%s)\n", x, dVardas, dIspejimai, dRangaz, konvertuoti_pinigus(dPradirbo), dStatus);
			strcat(fstr, str);
		}
	}
	ShowPlayerDialog(playerid,4572,DIALOG_STYLE_MSGBOX,"Darbuotojai",fstr,"Gerai","");
	mysql_free_result();
	return 1;
}
CMD:pdarbuotojai(playerid, params[])
{
	if(playerDB[playerid][pavdrk] < 1) return 0;
    mysql_query("SELECT Vardas,Job,Ispejimai,Rangas,prazaide FROM players WHERE Job > '0'");
	mysql_store_result();
	new dVardas[MAX_PLAYER_NAME], dJob, dIspejimai, dRangas, dPradirbo, x, resultline[40], str[220], fstr[2000], dStatus[20], dRangaz[50];
	while(mysql_fetch_row_format(resultline))
	{
		sscanf(resultline,"p<|>s[24]dddd",dVardas, dJob, dIspejimai, dRangas, dPradirbo);
		switch(dJob) // pagal darbo id rangai
		{
			case 1: //PD RANGAI | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Pirminë grandis";
					case 2: dRangaz = "Antrinë grandis";
					case 3: dRangaz = "Vidurinë grandis";
					case 4: dRangaz = "Aukðtesnioji grandis";
					case 5: dRangaz = "Aukðèiausioji grandis";
					default: dRangaz = "Nëra";
				}
			}
			case 2: //MEDIKU RANGAI | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Naujoko mediko";
					case 2: dRangaz = "Patyrusio mediko";
					case 3: dRangaz = "Daktaro";
					default: dRangaz = "Nëra";
				}
			}
			case 3: //TAXI RANGAI | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Taxisto naujoko";
					case 2: dRangaz = "Patyrusio taxisto";
					case 3: dRangaz = "Transporterio";
					default: dRangaz = "Nëra";
				}
			}
			case 4: //Mechaniku rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Pasiuntinuko";
					case 2: dRangaz = "Mechaniko";
					case 3: dRangaz = "Kostë";
					case 4: dRangaz = "Valdþia";
					default: dRangaz = "Nëra";
				}
			}
			case 5: //Dyleriu rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Naujoko";
					case 2: dRangaz = "Apsipratusio";
					case 3: dRangaz = "Senbûvio";
					case 4: dRangaz = "Profesionalaus dylerio";
					default: dRangaz = "Nëra";
				}
			}
			case 10: //SWAT rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Eilinio";
					case 2: dRangaz = "Leitenanto";
					case 3: dRangaz = "Virðilos";
					case 4: dRangaz = "Majoro";
					case 5: dRangaz = "Generolo";
					default: dRangaz = "Nëra";
				}
			}
			case 11: //Furistø ragai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Naujoko fûristo";
					case 2: dRangaz = "Iðtikimo fûristo";
					case 3: dRangaz = "Fûristo profesionalo";
					case 4: dRangaz = "Fûristo senbûvio";
					default: dRangaz = "Neturintis rango";
				}
			}
			case 13:
			{
				switch(dRangas)
				{
				    case 1: dRangaz = "Fotografas";
					case 2: dRangaz = "Þurnalistas";
					case 3: dRangaz = "Redaktorius";
					case 4: dRangaz = "Eterio paþiba";
					default: dRangaz = "Neturintis rango";
				}
			}
			case 14:
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Baikeris";
					case 2: dRangaz = "Senbuvis";
					case 3: dRangaz = "Pro.Baikeris";
					default: dRangaz = "Neturintis rango";
    			}
			}
			case 17: //ARMIJOS rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
				    case 1: dRangaz = "Eilinio";
				    case 2: dRangaz = "Leitenanto";
				    case 3: dRangaz = "Virðilos";
				    case 4: dRangaz = "Majoro";
				    case 5: dRangaz = "Generolo";
				    default: dRangaz = "Nëra";
				}
			}
			case 40: //Russian rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Kento";
					case 2: dRangaz = "Turintèio paþinèiø";
					case 3: dRangaz = "Vyresnysiojo mafijos nario";
					case 4: dRangaz = "Mafijos senbûvio";
					default: dRangaz = "Nëra";
				}
			}
			case 42: //Yakuza rangai | Vietoi sito case rasai darbo id
			{
				switch(dRangas)
				{
					case 1: dRangaz = "Kento";
					case 2: dRangaz = "Turintèio paþinèiø";
					case 3: dRangaz = "Vyresnysiojo mafijos nario";
					case 4: dRangaz = "Mafijos senbûvio";
					default: dRangaz = "Nëra";
				}
			}
	    }
		new darbas = GetJobFromFaction(playerDB[playerid][pavdrk]);
		if(darbas == dJob)
		{
		    x++;
			if(GetPlayeridMid(dVardas) != INVALID_PLAYER_ID) { dStatus = "prisijungæs"; } else { dStatus = "atsijunges"; }
			format(str, sizeof(str),"%d.%s\t%d/3 áspëjimai, jo rangas yra %s ðià savaitæ jis pradirbo %s minuèiø jis yra (%s)\n", x, dVardas, dIspejimai, dRangaz, konvertuoti_pinigus(dPradirbo), dStatus);
			strcat(fstr, str);
		}
	}
	ShowPlayerDialog(playerid,4572,DIALOG_STYLE_MSGBOX,"Darbuotojai",fstr,"Gerai","");
	mysql_free_result();
	return 1;
}
CMD:d(playerid, params[])
{
    if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(CheckMute(playerid)) return 1;
	new dyrikz[40], zin[310],  msg[210];
	if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid, 0x0000FFFF, "* Naudojimas /d [tekstas]");
	if(playerDB[playerid][ParaseDyrikas] > gettime()) return SendClientMessage(playerid, RED, "* Raðyti per direktoriø chatà galite tik kas 30 sekundþiø.");
	if(playerDB[playerid][plead] == 1) dyrikz = "Policijos direktorius (-ë)";
	else if(playerDB[playerid][plead] == 2) dyrikz = "Medikø direktorius (-ë)";
	else if(playerDB[playerid][plead] == 3) dyrikz = "Taxi direktorius (-ë)";
	else if(playerDB[playerid][plead] == 4) dyrikz = "Mechanikø direktorius (-ë)";
	else if(playerDB[playerid][plead] == 5) dyrikz = "Dyleriø direktorius (-ë)";
	else if(playerDB[playerid][plead] == 6) dyrikz = "Russian mafijos direktorius (-ë)";
	else if(playerDB[playerid][plead] == 8) dyrikz = "Yakuza mafijos direktorius (-ë)";
	else if(playerDB[playerid][plead] == 10) dyrikz = "SWAT direktorius (-ë)";
	else if(playerDB[playerid][plead] == 11) dyrikz = "Fûristø direktorius (-ë)";
	else if(playerDB[playerid][plead] == 13) dyrikz = "Radistø direktorius (-ë)";
	else if(playerDB[playerid][plead] == 14) dyrikz = "Baikeriø direktorius (-ë)";
	else if(playerDB[playerid][plead] == 15) dyrikz = "Klubo  Costello  vadas (-ë)";
	else if(playerDB[playerid][plead] == 16) dyrikz = "Klubo  -Patriotai-  vadas (-ë)";
	else if(playerDB[playerid][plead] == 17) dyrikz = "Armijos direktorius (-ë)";
	format(msg, sizeof(msg), "* %s %s(%i):%s", dyrikz, GetPlayerNameEx(playerid), playerid);
	SendClientMessageToAll(0x09AFFFFF, msg);
	SendClientMessageToAll(0x09AFFFFF, zin);
	playerDB[playerid][ParaseDyrikas] = gettime() + 30;
	return 1;
}
CMD:pelnas(playerid, params[])
{
    if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(GetPelnasIDFromLeader(playerid) == -1) return 1;
	ShowPlayerDialog(playerid, PELNO_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Pelno valdymas", "{ffffff} Balansas.\n Paimti.\n Padëti.\n Iðdalinti.", "Pasirinkti", "Pultas");
	return 1;
}
CMD:ppelnas(playerid, params[])
{
    if(playerDB[playerid][pavdrk] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(GetPelnasIDFromLeader(playerid) == -1) return 1;
	ShowPlayerDialog(playerid, PELNO_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Pelno valdymas", "{ffffff} Balansas.\n Paimti.\n Padëti.\n Iðdalinti.", "Pasirinkti", "");
	return 1;
}
CMD:rangas(playerid, params[])
{
	if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(playerDB[playerid][plead] == 1) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Pirminë grandis\nAntrinë grandis\nVidurinë grandis\nAukðtesnioji grandis\nAukðèiausioji grandis", "Pasirinkti", "Atgal");//5
	if(playerDB[playerid][plead] == 2) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Naujokas medikas\nPatyres medikas\nDaktaras", "Pasirinkti", "Atgal");
	if(playerDB[playerid][plead] == 3) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Taxistas naujokas\nTaxistas patyres\nTransporteris", "Pasirinkti", "Atgal");
	if(playerDB[playerid][plead] == 4) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Pasiuntinukas\nMechanikas\nKostë\nValdþia", "Pasirinkti", "Atgal");
	if(playerDB[playerid][plead] == 5) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Naujokas\nApsipratæs\nSenbûvis\nProfesionalus dyleris", "Pasirinkti", "Atgal");//4
	if(playerDB[playerid][plead] == 10) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Eilinis\nLeitenantas\nVirðyla\nMajoras\nGenerolas", "Pasirinkti", "Atgal"); //5
	if(playerDB[playerid][plead] == 11) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Naujokas fûristas\nIðtikimas fûristas\nFûristas profesionalas\nFûristas senbûvis", "Pasirinkti", "Atgal");//4
	if(playerDB[playerid][plead] == 6) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Kentas\nVyresnysis mafijos narys\nmafijos senbûvis", "Pasirinkti", "Atgal");//4
	if(playerDB[playerid][plead] == 8) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Kentas\nVyresnysis mafijos narys\nmafijos senbûvis", "Pasirinkti", "Atgal");//4
	if(playerDB[playerid][plead] == 13) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Fotografas\nÞurnalistas\nRedaktorius\nEterio paþiba", "Pasirinkti", "Atgal");//4
	if(playerDB[playerid][plead] == 14) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Baikeris\nSenbûvis\nPro.Baikeris", "Pasirinkti", "Atgal");//4
	if(playerDB[playerid][plead] == 17) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Paprastas agentas\nAukðèiausioji grandis", "Pasirinkti", "Atgal");//3
	return 1;
}
CMD:nrangas(playerid, params[])
{
    if(playerDB[playerid][plead] < 1) return 0;
    ShowPlayerDialog(playerid, 7851, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Áraðyk darbuotojo Vardà_Pavardà kad paþemintumëte vienu rangu darbuotojà!:", "Paaukðtinti", "Iðeiti");
 	return 1;
}
CMD:dzinute(playerid, params[])
{
    if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    new zinute[128], uQuerry[400], str[129];
    if(sscanf(params, "s[128]", zinute)) return SendClientMessage(playerid, BLUE, "* Naudojimas /dzinute [tekstas]");
    switch(playerDB[playerid][plead])
    {
        case 1:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Policija'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Policija', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
        case 2:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Medicina'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Medicina', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
        case 3:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Taxi'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Taxi', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
        case 4:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Mechanika'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Mechanika', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
        case 5:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Dyleriai'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Dyleriai', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
        case 6:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Rifa'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Rifa', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
        case 8:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'GroveStreet'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('GroveStreet', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
        case 10:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Swat'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Swat', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
        case 11:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Furistai'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Furistai', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
        case 13:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Radistai'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Radistai', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
		case 14:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Baikeriai'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Baikeriai', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
 		case 15:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Costello'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Costello', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
 		case 16:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'Patriotai'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('Patriotai', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
 		case 17:
        {
			format(uQuerry, 150, "UPDATE `dzinutes` SET `ZinutesTekstas` = '%s', `ArIjungtaZinute` = '1' WHERE `KokioDarboZinute` = 'SPD'", zinute);
			mysql_query(uQuerry);
			//format(uQuerry, sizeof(uQuerry), "INSERT INTO `dzinutes` (KokioDarboZinute, ZinutesTekstas, ArIjungtaZinute) VALUES ('SPD', '%s', '1')", zinute);
			//mysql_query(uQuerry);
        }
	}
	format(str, sizeof(str), "* Nauja darbo þinute pakeistà á ''%s''", zinute);
	SendClientMessage(playerid, BLUE, str);
	return 1;
}
CMD:ispeti(playerid, params[])
{
	if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, msg[95];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Áspëti darbuotojà : /ispeti [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	new darbas = GetJobFromFaction(playerDB[playerid][plead]);
	if(playerDB[id][specialybe]!= darbas) return KlaidosZinute(playerid, "* Þaidëjas neádarbintas jûsø firmoje.");
	playerDB[id][ispejimai] ++;
 	format(msg, sizeof(msg), "* Davëte áspëjimà darbuotojui %s ir jis jau turi %d/3 áspëjimø.", GetPlayerNameEx(id), playerDB[id][ispejimai]);
	SendClientMessage(playerid, GREEN, msg);
	format(msg, sizeof(msg), "* Direktorius %s jus áspëjo. Dabar jûs jau turite %d/3 áspëjimø.", GetPlayerNameEx(playerid), playerDB[id][ispejimai]);
	SendClientMessage(id, GREEN, msg);
	SavePlayerData(id);
	if(playerDB[id][ispejimai] > 2)
	{
		if(playerDB[id][uniformd]) SetPlayerSkin(id, playerDB[id][drabuziai]);
		playerDB[id][specialybe] = 0;
		playerDB[id][uniformd] = false;
		playerDB[id][uniforma] = -1;
		playerDB[id][ispejimai] = 0;
		SavePlayerData(id);
		format(msg, sizeof(msg), "* Þaidëjas %s iðmestas ið jûsø firmos nes surinko 3/3 áspëjimus", GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, msg);
		format(msg, sizeof(msg), "* Direktorius %s jus iðmetë ið savo firmos nes surinkot 3/3 áspëjimus.", GetPlayerNameEx(playerid));
		SendClientMessage(id, GREEN, msg);
	}
	return 1;
}
CMD:nispejima(playerid, params[])
{
	if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new id, masyvas[128], darbas = GetJobFromFaction(playerDB[playerid][plead]);
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "* Nuimti áspëjimà: /nispejima [Vardas_Pavarde]");
	else if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra");
	else if(id == playerid) return SendClientMessage(playerid, RED, "* Sau nusiimti áspëjimø negalite!");
	else if(playerDB[id][specialybe]!= darbas) return KlaidosZinute(playerid, "* Þaidëjas neádarbintas jûsø firmoje.");
	else if(playerDB[id][ispejimai] == 0) return SendClientMessage(playerid, RED, "* Darbuotojas neturi áspëjimø");
	else
	{
	    format(masyvas, 128, "* Direktorius %s nuëmë jums áspejimà!",GetPlayerNameEx(playerid));
	    SendClientMessage(id, RED, masyvas);
	    format(masyvas, 128, "* Nuëmëte %s darbuotojui áspëjimà!", GetPlayerNameEx(id));
	    SendClientMessage(playerid, GREEN, masyvas);
	    playerDB[id][ispejimai]-=1;
	}
	return true;
}
CMD:dcarspawn(playerid, params[])
{
    if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	new v, str[150];
	switch(playerDB[playerid][plead])
	{
	    case 1:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
		 		if(!IsAnyPlayerInVehicle(v))
				{
					if(GetVehicleModel(v) == 523 || GetVehicleModel(v) == 599 || GetVehicleModel(v) == 596 || GetVehicleModel(v) == 427 || GetVehicleModel(v) == 497)
			    	{
						SetVehicleToRespawn(v);
					}
			    }
			}
			format(str, sizeof(str), "[Policijos Racija] Direktorius %s : Atstatë visas nenaudojamas darbo maðinas!", GetPlayerNameEx(playerid));
			SendMessageToCops(BLUE, str);
			return 1;
		}
		case 2:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= medcar[0] && v <= medcar[10])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Medikø Racija] %s direktorius: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToMedics(BLUE, str);
			return 1;
		}
		case 3:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= taxcar[0] && v <= taxcar[4])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[TAXI Racija] %s direktorius: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToTaxi(BLUE, str);
			return 1;
		}
		case 4:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
		 		if(!IsAnyPlayerInVehicle(v))
				{
					if(GetVehicleModel(v) == 525)
			    	{
						SetVehicleToRespawn(v);
					}
			    }
			}
			format(str, sizeof(str), "[Mechanikø Racija] Direktorius %s : Atstatë visas nenaudojamas darbo maðinas!", GetPlayerNameEx(playerid));
			SendMessageToMechanikas(BLUE, str);
			return 1;
		}
		case 5:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= dylcar[0] && v <= dylcar[11])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Dyleriø Racija] %s direktorius: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToGdyleriai(BLUE, str);
			return 1;
		}
		case 10:
	    {
     		for(v = 0; v < MAX_VEHICLES; v++)
			{
		 		if(!IsAnyPlayerInVehicle(v))
				{
					if(GetVehicleModel(v) == 490 || GetVehicleModel(v) == 528)
			    	{
						SetVehicleToRespawn(v);
					}
			    }
			}
			format(str, sizeof(str), "[SWAT Racija] Direktorius %s : Atstatë visas nenaudojamas darbo maðinas!", GetPlayerNameEx(playerid));
			SendMessageToSwatams(BLUE, str);
			return 1;
		}
		case 11:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
				if(v >= furistucar[0] && v <= furistucar[9])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Fûristø Racija] %s direktorius: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToFUROS(BLUE, str);
			return 1;
		}
		case 13:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= RadistuCar[0] && v <= RadistuCar[8])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Radistø Racija] %s direktorius: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToRadistams(BLUE, str);
			return 1;
		}
		case 14:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= BaikeriuCar[0] && v <= BaikeriuCar[9])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Baikeriø Racija] %s direktorius: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToBaikeriams(BLUE, str);
			return 1;
		}
		case 15:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= KluboCar[0] && v <= KluboCar[5])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Klubo  Costello  Racija] %s vadas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToKlubui(BLUE, str);
			return 1;
		}
		case 16:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= Klubo2Car[0] && v <= Klubo2Car[5])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Klubo  -Patriotai-  Racija] %s vadas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToKlubuui(BLUE, str);
			return 1;
		}
		case 17:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= spdcar[0] && v <= spdcar[26])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Armijos Racija] %s direktorius: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToSPD(BLUE, str);
			return 1;
		}
		case 6:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= RifosCar[0] && v <= RifosCar[8])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Russian Racija] %s direktorius: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToRifa(BLUE, str);
			return 1;
		}
		case 8:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= gstreetcar[0] && v <= gstreetcar[8])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Yakuza Racija] %s direktorius: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToGstreet(BLUE, str);
			return 1;
		}
	}
	return 1;
}
CMD:stebeti(playerid, params[])
{
    if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, "* Tokios komandos nëra. Visos komandos: /Pagalba");
	new id, mess[40];
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
	{
		TogglePlayerSpectating(playerid, false);
		for(new slot=0; slot<12; slot++) GivePlayerWeaponEx(playerid,playerDB[playerid][spdata][slot],playerDB[playerid][spdata][12+slot]);
		SetPlayerSkin(playerid,playerDB[playerid][spdata][24]);
		SetPlayerPos(playerid,playerDB[playerid][spos][0],playerDB[playerid][spos][1],playerDB[playerid][spos][2]);
		SetPlayerTWanted(playerid,playerDB[playerid][spdata][25]);
		SetPlayerInterior(playerid,playerDB[playerid][spdata][26]);
		SetPlayerVirtualWorld(playerid,playerDB[playerid][spdata][27]);
		return 1;
	}
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Priþiurëti þaidëjà: /stebeti [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, COLOR, "* Save ir taip matai!");
	if(playerDB[id][specialybe]!=playerDB[playerid][plead]) return SendClientMessage(playerid,RED,"Tai ne tavo darbo darbuotojas!");
	format(mess, sizeof(mess), "* Priþiûrite %s!", GetPlayerNameEx(id));
	SendClientMessage(playerid, COLOR, mess);
	for(new slot=0; slot<12; slot++){ GetPlayerWeaponData(playerid,slot,playerDB[playerid][spdata][slot],playerDB[playerid][spdata][12+slot]);}
	playerDB[playerid][spdata][24]=GetPlayerSkin(playerid);
	GetPlayerPos(playerid,playerDB[playerid][spos][0],playerDB[playerid][spos][1],playerDB[playerid][spos][2]);
	playerDB[playerid][spdata][25]=GetPlayerTWanted(playerid);
	playerDB[playerid][spdata][26]=GetPlayerInterior(playerid);
	playerDB[playerid][spdata][27]=GetPlayerVirtualWorld(playerid);
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
	SetPlayerInterior(playerid,GetPlayerInterior(id));
    if(IsPlayerInAnyVehicle(id))
    {
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(id));
	}
	else
	{
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, id);
	}
	return 1;
}
CMD:ismestidarbuotojaoff(playerid, params[])
{
    new uQuerry[150], arDarbuotojas,zVardas[MAX_PLAYER_NAME];
    if(!playerDB[playerid][plead]) return SendClientMessage(playerid, RED, "* Tokios komandos nëra. Visos komandos: /pagalba");
	if(sscanf(params, "s", zVardas)) return SendClientMessage(playerid, BLUE, "* Iðmesti ið atsijungusi darbuotoja: /ismestidarbuotojaoff [Vardas_Pavardë]");
	new pID = GetPlayeridMid(zVardas);
	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Þaidëjas yra þaidime.");
	format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", zVardas);
	mysql_query(uQuerry);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows())
	{
		mysql_fetch_field_row(uQuerry, "Job"); arDarbuotojas = strval(uQuerry);
		if(playerDB [ playerid ] [ plead ] != arDarbuotojas) return SendClientMessage(playerid,RED,"* Þaidëjas nëra jûsø darbuotojas.");
		else
		{
		    if(arDarbuotojas > 0)
		    {
				SendClientMessage(playerid, RED, "* Þaidëjas iðmestas ið darbo");
	   			format(uQuerry, 150, "UPDATE players SET `Job` = '0' WHERE `Vardas` = '%s'", zVardas);
				mysql_query(uQuerry);
			}
		}
	}
	else
	{
		return SendClientMessage(playerid, RED, "* Tokio vartotojo duomenø bazëje nëra.");
	}
	return 1;
}
CMD:pismestidarbuotojaoff(playerid, params[])
{
    new uQuerry[150], arDarbuotojas,zVardas[MAX_PLAYER_NAME];
	if(playerDB[playerid][pavdrk] < 1) return 0;
	if(sscanf(params, "s", zVardas)) return SendClientMessage(playerid, BLUE, "* Iðmesti ið atsijungusi darbuotoja: /ismestidarbuotojaoff [Vardas_Pavardë]");
	new pID = GetPlayeridMid(zVardas);
	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Þaidëjas yra þaidime.");
	format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", zVardas);
	mysql_query(uQuerry);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows())
	{
		mysql_fetch_field_row(uQuerry, "Job"); arDarbuotojas = strval(uQuerry);
		if(playerDB [ playerid ] [pavdrk] != arDarbuotojas) return SendClientMessage(playerid,RED,"* Þaidëjas nëra jûsø darbuotojas.");
		else
		{
		    if(arDarbuotojas > 0)
		    {
				SendClientMessage(playerid, RED, "* Þaidëjas iðmestas ið darbo");
	   			format(uQuerry, 150, "UPDATE players SET `Job` = '0' WHERE `Vardas` = '%s'", zVardas);
				mysql_query(uQuerry);
			}
		}
	}
	else
	{
		SendClientMessage(playerid, RED, "* Tokio vartotojo duomenø bazëje nëra.");
	}
	return 1;
}
CMD:ppzu(playerid, params[])
{
    if(playerDB[playerid][pavdrk]==0) return SendClientMessage(playerid, RED, "* Tokios komandos nëra. Visos komandos: /Pagalba");
	new id, mess[40];
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
	{
		TogglePlayerSpectating(playerid, false);
		for(new slot=0; slot<12; slot++) GivePlayerWeaponEx(playerid,playerDB[playerid][spdata][slot],playerDB[playerid][spdata][12+slot]);
		SetPlayerSkin(playerid,playerDB[playerid][spdata][24]);
		SetPlayerPos(playerid,playerDB[playerid][spos][0],playerDB[playerid][spos][1],playerDB[playerid][spos][2]);
		SetPlayerTWanted(playerid,playerDB[playerid][spdata][25]);
		SetPlayerInterior(playerid,playerDB[playerid][spdata][26]);
		SetPlayerVirtualWorld(playerid,playerDB[playerid][spdata][27]);
		return 1;
	}
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, COLOR, "* Priþiurëti þaidëjà: /ppzu [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR, "* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, COLOR, "* Save ir taip matai!");
	if(playerDB[id][specialybe]!=playerDB[playerid][pavdrk]) return SendClientMessage(playerid,RED,"Tai ne tavo darbo darbuotojas!");
	format(mess, sizeof(mess), "* Priþiûrite %s!", GetPlayerNameEx(id));
	SendClientMessage(playerid, COLOR, mess);
	for(new slot=0; slot<12; slot++){ GetPlayerWeaponData(playerid,slot,playerDB[playerid][spdata][slot],playerDB[playerid][spdata][12+slot]);}
	playerDB[playerid][spdata][24]=GetPlayerSkin(playerid);
	GetPlayerPos(playerid,playerDB[playerid][spos][0],playerDB[playerid][spos][1],playerDB[playerid][spos][2]);
	playerDB[playerid][spdata][25]=GetPlayerTWanted(playerid);
	playerDB[playerid][spdata][26]=GetPlayerInterior(playerid);
	playerDB[playerid][spdata][27]=GetPlayerVirtualWorld(playerid);
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(id));
	SetPlayerInterior(playerid,GetPlayerInterior(id));
    if(IsPlayerInAnyVehicle(id))
    {
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectateVehicle(playerid, GetPlayerVehicleID(id));
	}
	else
	{
		TogglePlayerSpectating(playerid, 1);
		PlayerSpectatePlayer(playerid, id);
	}
	return 1;
}
CMD:pispeti(playerid, params[])
{
	if(playerDB[playerid][pavdrk] < 1) return SendClientMessage(playerid, RED, "* Tokios komandos nëra. Visos komandos: /pagalba");
	new id, msg[95];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Áspëti darbuotojà : /pispeti [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	new darbas = GetJobFromFaction(playerDB[playerid][pavdrk]);
	if(playerDB[id][specialybe]!= darbas) return KlaidosZinute(playerid, "* Þaidëjas neádarbintas jûsø firmoje.");
	playerDB[id][ispejimai] ++;
 	format(msg, sizeof(msg), "* Davëte áspëjimà darbuotojui %s ir jis jau turi %d/3 áspëjimø.", GetPlayerNameEx(id), playerDB[id][ispejimai]);
	SendClientMessage(playerid, GREEN, msg);
	format(msg, sizeof(msg), "* Pavaduotojas %s jus áspëjo. Dabar jûs jau turite %d/3 áspëjimø.", GetPlayerNameEx(playerid), playerDB[id][ispejimai]);
	SendClientMessage(id, GREEN, msg);
	SavePlayerData(id);
	if(playerDB[id][ispejimai] > 2)
	{
		if(playerDB[id][uniformd]) SetPlayerSkin(id, playerDB[id][drabuziai]);
		playerDB[id][specialybe] = 0;
		playerDB[id][uniformd] = false;
		playerDB[id][uniforma] = -1;
		playerDB[id][ispejimai] = 0;
		SavePlayerData(id);
		format(msg, sizeof(msg), "* Þaidëjas %s iðmestas ið jûsø firmos nes surinko 3/3 áspëjimus", GetPlayerNameEx(id));
		SendClientMessage(playerid, GREEN, msg);
		format(msg, sizeof(msg), "* Pavaduotojas %s jus iðmetë ið savo firmos nes surinkot 3/3 áspëjimus.", GetPlayerNameEx(playerid));
		SendClientMessage(id, GREEN, msg);
	}
	return 1;
}
CMD:p(playerid, params[])
{
    if(playerDB[playerid][pavdrk] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    if(CheckMute(playerid)) return 1;
	new pavaz[70], zin[310],  msg[210];
	if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid, BLUE, "* Naudojimas /p [tekstas]");
	if(playerDB[playerid][ParasePavas] > gettime()) return SendClientMessage(playerid, RED, "* Raðyti galite tik kas 60 sekundþiø!");
	if(playerDB[playerid][pavdrk] == 1) pavaz = "Policijos pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 2) pavaz = "Medikø pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 3) pavaz = "Taxi pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 4) pavaz = "Mechanikø pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 5) pavaz = "Dyleriø pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 6) pavaz = "Russian mafijos pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 8) pavaz = "Yakuza mafijos pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 10) pavaz = "SWAT pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 11) pavaz = "Fûristø pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 13) pavaz = "Radistø pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 14) pavaz = "Baikeriø pavaduotojas (-ë)";
	else if(playerDB[playerid][pavdrk] == 15) pavaz = "Klubo  Costello  deðinioji ranka";
	else if(playerDB[playerid][pavdrk] == 16) pavaz = "Klubo  -Patriotai-  deðinioji ranka";
	else if(playerDB[playerid][pavdrk] == 17) pavaz = "Armijos pavaduotojas (-ë)";
	format(msg, sizeof(msg), "* %s %s(%i): %s", pavaz, GetPlayerNameEx(playerid), playerid);
	SendClientMessageToAll(0x09AFFFFF, msg);
	SendClientMessageToAll(0x09AFFFFF, zin);
	playerDB[playerid][ParasePavas] = gettime() + 60;
	return 1;
}
CMD:ppriimt(playerid, params[])
{
    if(playerDB[playerid][pavdrk] < 1) return SendClientMessage(playerid, RED, "* Tokios komandos nëra. Visos komandos: /Pagalba");
	new id, msg[55];
    if(sscanf(params, "u", id)) return ServerioZinute(playerid, "Priimti þaidëja á savo firma /ppriimt vardo_dalis");
	if(id == INVALID_PLAYER_ID) return KlaidosZinute(playerid,"Nurodyto þaidëjo nëra.");
	if(playerDB[id][leanvited][playerDB[playerid][pavdrk]-1] || playerDB[id][specialybe] == GetJobFromFaction(playerDB[playerid][pavdrk])) return KlaidosZinute(playerid,"Þaidëjas jau priimtas.");
	if(playerDB[playerid][pavdrk] == LEAD_FARAI) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti apskirties policijos pareigûnu. Jei norite ástoti, atvykite á miesteliø policijos nuovada.");
	else if(playerDB[playerid][pavdrk] == LEAD_MEDIKAI) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti apskirties mediku. Jei norite ástoti, atvykite á ligoninës darbuotojø sektoriu.");
	else if(playerDB[playerid][pavdrk] == LEAD_Mechanikas) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti apskirties mechaniku. Jei norite ástoti, atvykite pas mus.");
	else if(playerDB[playerid][pavdrk] == LEAD_TAXI ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti Taxi. Jei nori atvyk á taxi firma.");
	else if(playerDB[playerid][pavdrk] == LEAD_Gdyleriai ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti Dyleriu komandoje. Jei nori atvyk á dyleriø bazæ.");
	else if(playerDB[playerid][pavdrk] == LEAD_Arifa ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Russian mafijà. Praðome prisitatyti á Russian bazæ.");
	else if(playerDB[playerid][pavdrk] == LEAD_Gstreet ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Yakuza mafijà. Praðome prisitatyti á Yakuza bazæ.");
	else if(playerDB[playerid][pavdrk] == LEAD_SWAT ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á SWAT pajëgas. Praðome prisitatyti á SWAT bazæ.");
	else if(playerDB[playerid][pavdrk] == LEAD_FUROS ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Fûristus. Praðome prisitatyti á fûristø bazæ.");
	else if(playerDB[playerid][pavdrk] == LEAD_RADISTAS) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Radistus. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra bazë.");
	else if(playerDB[playerid][pavdrk] == LEAD_BAIKERIAI) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Baikerius. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra bazë.");
	else if(playerDB[playerid][pavdrk] == LEAD_KLUBAS) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á  Costello  klubà. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra klubas.");
	else if(playerDB[playerid][pavdrk] == LEAD_KLUBASS) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á  -Patriotai-  klubà. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra klubas.");
	else if(playerDB[playerid][pavdrk] == LEAD_SPD) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Armija. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra darbo bazë.");

	else SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti Taxi. Jei nori atvyk á taxi firma.");
	playerDB[id][leanvited][playerDB[playerid][pavdrk]-1]=true;
	format(msg, sizeof(msg), "Pakvietëte %s ástoti á jûsø firma.", GetPlayerNameEx(id));
	ServerioZinute(playerid, msg);
	return 1;
}
CMD:pismest(playerid, params[])
{
	if(playerDB[playerid][pavdrk] < 1) return SendClientMessage(playerid, RED, "* Tokios komandos nëra. Visos komandos: /Pagalba");
	new id, msg[50];
    if(sscanf(params, "u", id)) return ServerioZinute(playerid, "Ið savo firmos iðmesti þaidëja /pismest vardo_dalis");
	if(!IsPlayerConnected(id)) return SendClientMessage(playerid,RED,"* Tokio þaidëjo nëra.");
	new darbas = GetJobFromFaction(playerDB[playerid][pavdrk]);
	if(playerDB[id][specialybe]!= darbas) return KlaidosZinute(playerid, "Þaidëjas neádarbintas jûsø firmoje.");
	if(playerDB[playerid][pavdrk] == LEAD_FARAI) KlaidosZinute(id,"apskrities policijos generalinis direktorius jus iðmestë ið policijos.");
	else if(playerDB[playerid][pavdrk] == LEAD_MEDIKAI) KlaidosZinute(id,"Ligoninës direktorius iðmestë jus ið darbo");
	else if(playerDB[playerid][pavdrk] == LEAD_Mechanikas) KlaidosZinute(id,"Mechanikø direktorius iðmetë jus ið darbo.");
	else if(playerDB[playerid][pavdrk] == LEAD_TAXI) KlaidosZinute(id,"Jûs iðmestas ið taxi komandos!");
	else if(playerDB[playerid][pavdrk] == LEAD_Gdyleriai) KlaidosZinute(id,"Jûs iðmestas ið dyleriø bendruomenës!");
	else if(playerDB[playerid][pavdrk] == LEAD_Arifa) KlaidosZinute(id,"Jûs iðmestas ið Russian mafijos!");
	else if(playerDB[playerid][pavdrk] == LEAD_Gstreet) KlaidosZinute(id,"Jûs iðmestas ið Yakuza mafijos!");
	else if(playerDB[playerid][pavdrk] == LEAD_SWAT) KlaidosZinute(id,"Jûs iðmestas ið SWAT pajëgø!");
	else if(playerDB[playerid][pavdrk] == LEAD_FUROS ) KlaidosZinute(id,"Fûristø direktorius iðmetë jus ið darbo.");
	else if(playerDB[playerid][pavdrk] == LEAD_RADISTAS) KlaidosZinute(id,"* Radistø direktorius iðmetë jus ið darbo.");
	else if(playerDB[playerid][pavdrk] == LEAD_BAIKERIAI) KlaidosZinute(id,"* Baikeriø direktorius iðmetë jus ið darbo.");
	else if(playerDB[playerid][pavdrk] == LEAD_KLUBAS) KlaidosZinute(id,"* Klubo  -Patriotai-  direktorius iðmetë jus ið klubo.");
	else if(playerDB[playerid][pavdrk] == LEAD_KLUBASS) KlaidosZinute(id,"* Klubo  -Patriotai-  direktorius iðmetë jus ið klubo.");
	else if(playerDB[playerid][pavdrk] == LEAD_SPD) KlaidosZinute(id,"* Jûs iðmestas ið Armijos.");

	else KlaidosZinute(id,"Jûs iðmestas ið taxi firmos. Tai direktoriaus sprendimas.");
	playerDB[id][leanvited][playerDB[playerid][pavdrk] - 1] = false;
	format(msg, sizeof(msg), "Iðmetëte %s ið savo firmos.", GetPlayerNameEx(id));
	KlaidosZinute(playerid, msg);
	if(playerDB[id][uniformd]) SetPlayerSkin(id, playerDB[id][drabuziai]);
	playerDB[id][specialybe] = 0;
	playerDB[id][uniformd] = false;
	playerDB[id][uniforma] = -1;
	playerDB[id][rangas] = 0;
	playerDB[id][pradirbo] = 0;
	playerDB[id][ispejimai] = 0;
	SavePlayerData(id);
	return 1;
}
CMD:dylstat(playerid, params[])
{
    if(playerDB[playerid][plead] != 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
    new id, msg[250];
    if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Paþiûrëti pardavimø statistikà: /dylstat [Vardas_Pavardë/ID]");
    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, BLUE, "* Tokio þaidëjo nëra.");
    new darbas = GetJobFromFaction(playerDB[playerid][plead]);
	if(playerDB[id][specialybe] != darbas) return KlaidosZinute(playerid, "* Þaidëjas neádarbintas jûsø firmoje.");
	new ParduotiAKx = playerDB[id][ParduotiAK];
	new ParduotiDGLx = playerDB[id][ParduotiDGL];
	new ParduotiSGx = playerDB[id][ParduotiSG];
	new ParduotiSNPx = playerDB[id][ParduotiSNP];
	new Parduoti9MMx = playerDB[id][Parduoti9MM];
	new ParduotiTECx = playerDB[id][ParduotiTEC];
	new ParduotiSMGx = playerDB[id][ParduotiSMG];
	new ParduotiSPAZx = playerDB[id][ParduotiSPAZ];
	format(msg,sizeof(msg),"%s Dylerio pardavimø informacija:\n\nPardavë:\nAK: %d\nDeagle: %d\nShootGun: %d\nSniper: %d\n9MM: %d\nTEC: %d\nSMG: %d\nCombat Shotgun: %d", GetPlayerNameEx(id), ParduotiAKx, ParduotiDGLx, ParduotiSGx, ParduotiSNPx, Parduoti9MMx, ParduotiTECx, ParduotiSMGx, ParduotiSPAZx);
	ShowPlayerDialog(playerid,4514, DIALOG_STYLE_MSGBOX,"Dylerio informacija",msg, "Aiðku","");
	return 1;
}
CMD:pcarspawn(playerid, params[])
{
    if(playerDB[playerid][pavdrk] < 1) return 0;
	new v, str[150];
	switch(playerDB[playerid][pavdrk])
	{
	    case 1:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
		 		if(!IsAnyPlayerInVehicle(v))
				{
					if(GetVehicleModel(v) == 523 || GetVehicleModel(v) == 599 || GetVehicleModel(v) == 596 || GetVehicleModel(v) == 427 || GetVehicleModel(v) == 497)
			    	{
						SetVehicleToRespawn(v);
					}
			    }
			}
			format(str, sizeof(str), "[Policijos Racija] Pavaduotojas %s : Atstatë visas nenaudojamas darbo maðinas!", GetPlayerNameEx(playerid));
			SendMessageToCops(BLUE, str);
			return 1;
		}
		case 2:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= medcar[0] && v <= medcar[10])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Medikø Racija] %s Pavaduotojas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToMedics(BLUE, str);
			return 1;
		}
		case 3:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= taxcar[0] && v <= taxcar[4])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[TAXI Racija] %s Pavaduotojas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToTaxi(BLUE, str);
			return 1;
		}
		case 4:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
		 		if(!IsAnyPlayerInVehicle(v))
				{
					if(GetVehicleModel(v) == 525)
			    	{
						SetVehicleToRespawn(v);
					}
			    }
			}
			format(str, sizeof(str), "[Mechanikø Racija] Pavaduotojas %s : Atstatë visas nenaudojamas darbo maðinas!", GetPlayerNameEx(playerid));
			SendMessageToMechanikas(BLUE, str);
			return 1;
		}
		case 5:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= dylcar[0] && v <= dylcar[11])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Dyleriø Racija] %s Pavaduotojas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToGdyleriai(BLUE, str);
			return 1;
		}
		case 10:
	    {
     		for(v = 0; v < MAX_VEHICLES; v++)
			{
		 		if(!IsAnyPlayerInVehicle(v))
				{
					if(GetVehicleModel(v) == 490 || GetVehicleModel(v) == 528)
			    	{
						SetVehicleToRespawn(v);
					}
			    }
			}
			format(str, sizeof(str), "[SWAT Racija] Pavaduotojas %s : Atstatë visas nenaudojamas darbo maðinas!", GetPlayerNameEx(playerid));
			SendMessageToSwatams(BLUE, str);
			return 1;
		}
		case 11:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= furistucar[0] && v <= furistucar[9])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Fûristø Racija] %s Pavaduotojas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToFUROS(BLUE, str);
			return 1;
		}
		case 13:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= RadistuCar[0] && v <= RadistuCar[8])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Radistø Racija] %s pavaduotojas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToRadistams(BLUE, str);
			return 1;
		}
		case 14:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= BaikeriuCar[0] && v <= BaikeriuCar[9])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Baikeriø Racija] %s Pavaduotojas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToBaikeriams(BLUE, str);
			return 1;
		}
		case 15:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= KluboCar[0] && v <= KluboCar[5])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Klubo  Costello  Racija] %s Deðinioji ranka: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToKlubui(BLUE, str);
			return 1;
		}
		case 16:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= Klubo2Car[0] && v <= Klubo2Car[5])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Klubo  -Patriotai-  Racija] %s Deðinioji ranka: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToKlubuui(BLUE, str);
			return 1;
		}
		case 17:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= spdcar[0] && v <= spdcar[26])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Armijos Racija] %s pavaduotojas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToSPD(BLUE, str);
			return 1;
		}
		case 6:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= RifosCar[0] && v <= RifosCar[8])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Russian Racija] %s Pavaduotojas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToRifa(BLUE, str);
			return 1;
		}
		case 8:
	    {
	        for(v = 0; v < MAX_VEHICLES; v++)
			{
				if(GetVehicleModel(v) < 400) continue;
				if(vehicleDB[v][vOwned]) continue;
				if(IsPlayersInVehicle(v)) continue;
		        if(v >= gstreetcar[0] && v <= gstreetcar[8])
    			{
					SetVehicleToRespawn(v);
				}
			}
			format(str, sizeof(str), "[Yakuza Racija] %s Pavaduotojas: {D4A017}Atstatë visas nenaudojamas darbo maðinas.", GetPlayerNameEx(playerid));
			SendMessageToGstreet(BLUE, str);
			return 1;
		}
	}
	return 1;
}
CMD:pdylstat(playerid, params[])
{
    if(playerDB[playerid][pavdrk] != 5) return SendClientMessage(playerid,RED,"* Ði komanda tik dyleriø direktoriui!");
    new id, msg[250];
    if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Paþiûrëti pardavimø statistikà: /pdylstat [Vardas_Pavardë/ID]");
    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, BLUE, "* Tokio þaidëjo nëra.");
    new darbas = GetJobFromFaction(playerDB[playerid][pavdrk]);
	if(playerDB[id][specialybe] != darbas) return KlaidosZinute(playerid, "* Þaidëjas neádarbintas jûsø firmoje.");
	new ParduotiAKx = playerDB[id][ParduotiAK];
	new ParduotiDGLx = playerDB[id][ParduotiDGL];
	new ParduotiSGx = playerDB[id][ParduotiSG];
	new ParduotiSNPx = playerDB[id][ParduotiSNP];
	new Parduoti9MMx = playerDB[id][Parduoti9MM];
	new ParduotiTECx = playerDB[id][ParduotiTEC];
	new ParduotiSMGx = playerDB[id][ParduotiSMG];
	new ParduotiSPAZx = playerDB[id][ParduotiSPAZ];
	format(msg,sizeof(msg),"%s Dylerio pardavimø informacija:\n\nPardavë:\nAK: %d\nDeagle: %d\nShootGun: %d\nSniper: %d\n9MM: %d\nTEC: %d\nSMG: %d\nCombat Shotgun: %d", GetPlayerNameEx(id), ParduotiAKx, ParduotiDGLx, ParduotiSGx, ParduotiSNPx, Parduoti9MMx, ParduotiTECx, ParduotiSMGx, ParduotiSPAZx);
	ShowPlayerDialog(playerid,4514, DIALOG_STYLE_MSGBOX,"Dylerio informacija",msg, "Aiðku","");
	return 1;
}
CMD:pt(playerid, params[])
{
	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid,RED,"* Ði komanda tik teisësaugai!");
	new id, msg[400], Float:Coo[3], str [175];
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Patikrinti þaidëjà: /pt [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, BLUE, "* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, BLUE, "* Save patikrinti gali ir paprasèiau!.");
	GetPlayerPos(id, Coo[0], Coo[1], Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Coo[0], Coo[1], Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli!");
	
	new narkaix[30], zolex[30], lsdx[30], amfax[30], Teisesx[30], TeisesMx[30], TeisesFx[30], Dirzass[64], GirtumasX[30];
	
	if(playerDB[id][narkotikai] > 0) { narkaix = "{00CC00}Turi"; } else if (playerDB[id][narkotikai] == 0) { narkaix = "{FF0000}Neturi"; }
	if(playerDB[id][zole] > 0) { zolex = "{00CC00}Turi"; } else if(playerDB[id][zole] == 0) { zolex = "{FF0000}Neturi"; }
	if(playerDB[id][lsd] > 0) { lsdx = "{00CC00}Turi"; } else if(playerDB[id][lsd] == 0) { lsdx = "{FF0000}Neturi"; }
	if(playerDB[id][amfa] > 0) { amfax = "{00CC00}Turi"; } else if(playerDB[id][amfa] == 0) { amfax = "{FF0000}Neturi"; }
	if(playerDB[id][teises]) { Teisesx = "{00CC00}Turi"; } else if(!playerDB[id][teises]) { Teisesx = "{FF0000}Neturi"; }
	if(playerDB[id][Mteises]) { TeisesMx = "{00CC00}Turi"; } else if(!playerDB[id][Mteises]) { TeisesMx = "{FF0000}Neturi"; }
	if(playerDB[id][FTeises]) { TeisesFx = "{00CC00}Turi"; } else if(!playerDB[id][FTeises]) { TeisesFx = "{FF0000}Neturi"; }
	if(playerDB[id][Dirzas] == false) { Dirzass = "{FF0000}Neuþsisegæs"; } else { Dirzass = ""COL_PRICE"Uþsisegæs{ffffff}"; }
	if(GetPlayerDrunkLevel(id) > 0) { GirtumasX = "{FF0000}Girtas"; } else if(GetPlayerDrunkLevel(id) == 0) { GirtumasX = "{00CC00}Negirtas"; }
	new GaudomasKiek = GetPlayerTWanted(id);
	
	format(msg,sizeof(msg),"\t{ffffff}Tikrinamojo vardas: {00CC00}%s\n\n{ffffff}Narkotiku: %s\n{ffffff}Þole: %s\n{ffffff}LSD: %s\n{ffffff}Amfa: %s\n{ffffff}Maðinos teisës %s\n{ffffff}Motociklø teisës: %s\n{ffffff}Fûrø teisës: %s\n{ffffff}Dirþas: %s\n{ffffff}Gaudomas: {00CC00}%d {ffffff}lygiø\nBlaivas, ar ne: %s", GetPlayerNameEx(id), narkaix, zolex, lsdx, amfax, Teisesx, TeisesMx, TeisesFx, Dirzass, GaudomasKiek, GirtumasX);
	ShowPlayerDialog(playerid,4513, DIALOG_STYLE_MSGBOX,"Patikra",msg, "Aiðku","");
	
	format(str, 175 ,"{37f467}Teisësaugininkas {ccff66}%s {37f467}Jus tikrina. Paspauskite tiesiog {ccff66}Supratau {37f467}mygtukà ir palaukite kol baigs.",GetPlayerNameEx(playerid));
	ShowPlayerDialog(id, 7595, DIALOG_STYLE_MSGBOX, "Patikrinimas", str, "Supratau", "");
	
	return 1;
}
CMD:gaudomi(playerid, params[])
{
 	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid,RED,"* Ði komanda tik teisësaugai!");
	new k, msg[40];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i) && GetPlayerTWanted(i) > 0 && !playerDB[i][ikalintas])
		{
		    k++;
			format(msg, sizeof(msg), "* %s. %s(%i lygiu)", k, GetPlayerNameEx(i), GetPlayerTWanted(i));
			SendClientMessage(playerid, BLUE, msg);
		}
	}
	return 1;
}
CMD:ita(playerid, params[])
{
   	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid,RED,"* Ði komanda tik teisësaugai!");
	new id, Float:Coo[3];
    if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Átarti þaidëjà: /ita [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, BLUE, "* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, COLOR, " Savæs átarti negalite !");
	if(GetPlayerTWanted(id) >= 100) return SendClientMessage(playerid, BLUE, "* Þaidëjas jau turi 100 þvaigþduèiø, daugiau nebegalima!");
	GetPlayerPos(id, Coo[0], Coo[1], Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 100.0, Coo[0], Coo[1], Coo[2])) return SendClientMessage(playerid, BLUE, "* Þaidëjas per toli, tokiu atstumu tu jo neátarsi.");
	new masyvas[1024];
	format(masyvas, sizeof(masyvas), "Pravaþiavimas per raudonà 3\nKyðio siûlymas\nCivilio nuþudymas\nVairavimas be teisiø\nRelogas surakintam 5\nBereikðmis iðkvietimas 2\nPareigûno nuþudymas 3\nÐaudymas vieðoje vietoje 2");
	format(masyvas, sizeof(masyvas), "%s\nBëgimas nuo teisësaugos 6\nCivilio, pareigûno muðimas 2\nDM (masiniai þudymai, susiðaudymai) 6\nGinklo demonstravymas vieðoje vietoje 2\nESC ájungimas kai nusikaltelis pagautas 2",masyvas);
	format(masyvas, sizeof(masyvas), "%s\nVaþiavimas be lempø nuo 21:00 iki 07:00 serverio laiku 2\nNon Rp 5\nChuliganismas 2\nÁþeidinëjimai, nepagarba pareigûnui. 3\nNarkotiniø medþiagø turëjimas 4\nÐaudymas á pareigûna nuo maðinos stogo 20",masyvas);
	ShowPlayerDialog(playerid,7411,DIALOG_STYLE_LIST, "Baudos" ,masyvas, "Átarti", "Iðeiti");
	playerDB[playerid][ChoosedPlayer] = id;
	return 1;
}
CMD:ist(playerid, params[])
{
	new id, Float:Coo[3], msg[65];
	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17 && playerDB[playerid][admin] < 4 ) return SendClientMessage(playerid,RED,"* Ði komanda tik teisësaugai!");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Iðteisinti zaidëjà: /ist [Vardas_Pavardë/ID]");
 	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, RED, "* Savæs iðteisinti negali.");
	GetPlayerPos(id, Coo[0], Coo[1], Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 50.0, Coo[0], Coo[1], Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas, per toli kaip tu já gali iðteisinti?");
	SetPlayerColor(id,PLAYCOL_HIDDEN);
	SetPlayerTWanted(id, 0);
	format(msg, sizeof(msg), "[T-RACIJA] %s: Iðteisinau %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
	SendMessageToBendraTeisesauga(BLUE, msg);
	return 1;
}
CMD:kon(playerid, params[])
{
	new id, Float:Coo[3], msg[80];
    if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid,RED,"* Ði komanda tik teisësaugai !");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid,BLUE,"* Konfiskuoti narkotikus: /kon [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	GetPlayerPos(id, Coo[0], Coo[1], Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 30.0, Coo[0], Coo[1], Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli, ið tiek toli atimti narkotikø neámanoma.");
	playerDB[id][narkotikai] = 0;
	playerDB[id][zole] = 0;
	format(msg, sizeof(msg), "[T-RACIJA] %s: Atëmiau narkotikus ið %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
	SendMessageToBendraTeisesauga(BLUE, msg);
	return 1;
}
CMD:kgun(playerid, params[])
{
	new id, Float:Coo[3], msg[86];
 	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid,RED,"* Ði komanda tik teisësaugai.");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid,BLUE,"* Atimti ginklus: /kgun [Vardas_Pavardë/ID]");
 	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, RED, "* Ið savæas ginklø atimti negalima!");
	GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 30.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli. Kaip tu atimsi ginklus ið tokio atstumo?");
	ResetPlayerWeaponsEx(id);
	format(msg,54,"* Atëmëte %s turimus ginklus.", GetPlayerNameEx(id));
	SendClientMessage(playerid,GREEN,msg);
	format(msg,60,"* Pareigûnas %s atëmë jûsø ginklus.", GetPlayerNameEx(playerid));
	SendClientMessage(id,RED,msg);
	format(msg, 86, "[T-RACIJA] %s: Atëmiau ginklus ið %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
	SendMessageToBendraTeisesauga(BLUE, msg);
	return 1;
}
CMD:tazeris(playerid, params[])
{
    if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid, RED, "* Ði komanda tik teisësaugai.");
    if(playerDB[playerid][NaudojoTazeri] > gettime()) return SendClientMessage(playerid, RED, "* Tazerá naudoti galima tik kas 5 minutes!");
	if(!Tazer[playerid])
	{
        GivePlayerWeaponEx(playerid, TAZE_WEAPON, 100);
		Tazer[playerid] = true;
		SendClientMessage(playerid, 0xFFFFFFFF, "* Iðsitraukëte tazerá.");
	}
	else
	{
		Tazer[playerid] = false;
		ResetPlayerWeaponEx(playerid, 2);
		SendClientMessage(playerid, 0xFFFFFFFF, "* Ásikiðote tazerá á kiðenæ.");
	}
	return 1;
}
CMD:uztvara(playerid, params[])
{
    if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid, RED, "* Ði komanda tik teisësaugai.");
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Ði komanda transporte nenaudojama!");
	new Float:oPos[4];
	if(playerDB[playerid][uztvara] != INVALID_OBJECT_ID)
	{
	    GetDynamicObjectPos(playerDB[playerid][uztvara], oPos[0], oPos[1], oPos[2]);
        if(!IsPlayerInRangeOfPoint(playerid, 5.0, oPos[0], oPos[1], oPos[2])) return SendClientMessage(playerid, RED, "* Kad paðalintum uþtvarà turi stovëti prie savo uþtvaros.");
		DestroyDynamicObject(playerDB[playerid][uztvara]);
		playerDB[playerid][uztvara] = INVALID_OBJECT_ID;
		SendClientMessage(playerid, BLUE, "* Paðalinote savo uþtvarà.");
	}
	else
	{
	    GetPlayerPos(playerid, oPos[0], oPos[1], oPos[2]);
	    GetPlayerFacingAngle(playerid, oPos[3]);
	    playerDB[playerid][uztvara] = CreateDynamicObject(978, oPos[0], oPos[1], oPos[2] - 0.3, 0.0, 0.0, oPos[3]);
		SendClientMessage(playerid, BLUE, "* Pastatëte uþtvarà.");
	}
    return 1;
}
CMD:ant(playerid, params[])
{
	new id, Float:Coo[3], msg[40];
	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid, RED, "* Ði komanda tik teisësaugai.");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid,BLUE,"* Uþdëti/Nuimti þaidëjui antrankius /ant [Vardas_Pavardë/ID]");
 	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, RED, "* Savæs surakinti negali.");
	if(OfisoDarbas[id] == true) return SendClientMessage(playerid, RED, "* Þaidëjas AFK zonoje!");
	GetPlayerPos(id, Coo[0], Coo[1], Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli, prieikite arèiau.");
	if(PlayerInZone(id, 1361.4547, -2216.6245, -1288.2867, -2150.4135) && playerDB[id][specialybe] == 40) return SendClientMessage(playerid, RED, "* Gaujinio savo mafijos zonoje surakinti negali!");
	if(PlayerInZone(id, -1648.0637, -1586.8470, -1590.0003, -1539.1112) && playerDB[id][specialybe] == 42) return SendClientMessage(playerid, RED, "* Gaujinio savo mafijos zonoje surakinti negali!");
	if(playerDB[id][cuffed])
	{
		format(msg,sizeof(msg),"* Paleidote %s.", GetPlayerNameEx(id));
		SendClientMessage(playerid,GREEN,msg);
		format(msg,sizeof(msg),"* Jus paleido %s.", GetPlayerNameEx(playerid));
		SendClientMessage(id,RED,msg);
		Surakinti(id, true);
	}
	else
	{
		format(msg,sizeof(msg),"* Surakinote %s.", GetPlayerNameEx(id));
		SendClientMessage(playerid,GREEN,msg);
		format(msg,sizeof(msg),"* Jus surakino %s.", GetPlayerNameEx(playerid));
		SendClientMessage(id,GREEN,msg);
		Surakinti(id, false);
	}
	return 1;
}
CMD:tei(playerid, params[])
{
	new id, Float:Coo[3], msg[65];
	if(playerDB[playerid][specialybe]!=1) return SendClientMessage(playerid,RED,"* Ði komanda tik policininkams");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid,BLUE,"* Atimti vairavimo teises: /tei [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, RED, "* Ið savæs teisiu atimti negali!");
	GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli, preikite arèiau, kad atimtumëte maðinos teises.");
	playerDB[id][teises]=false;
	format(msg,sizeof(msg),"* Atëmëte %s vairavimo teises.", GetPlayerNameEx(id));
	SendClientMessage(playerid,GREEN,msg);
	format(msg,sizeof(msg),"* Pareigûnas %s atëmë jûsø vairavimo teises.", GetPlayerNameEx(playerid));
	SendClientMessage(id,RED,msg);
	return 1;
}
CMD:mtei(playerid, params[])
{
	new id, msg[70], Float:Coo[3];
	if(playerDB[playerid][specialybe]!=1) return SendClientMessage(playerid, RED,"* Ði komanda tik policininkams");
 	if(sscanf(params, "u", id)) return SendClientMessage(playerid, RED,"* Atimti motociklo vairavimo teises: /mtei [Vardas_Pavardë/ID]");
 	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	GetPlayerPos(id, Coo[0], Coo[1], Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, 0x7DB34DFF, "* Þaidëjas per toli, preikite arèiau.");
	playerDB[id][Mteises]=false;
	format(msg,sizeof(msg),"* Atëmëte %s motociklo teises.", GetPlayerNameEx(id));
	SendClientMessage(playerid,0xFF000090,msg);
	format(msg,sizeof(msg),"* Pareigûnas %s atëmë jûsø motociklininko paþymëjimà.", GetPlayerNameEx(playerid));
	SendClientMessage(id,0xFF000090,msg);
	return 1;
}
CMD:isodinti(playerid, params[])
{
	new id, Float:Coo[3];
    if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid, RED, "* Ði komanda tik teisësaugai.");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Ásodinti þaidëjà á maðinà /isodinti [Vardas_Pavardë/ID]");
    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	new vehicleid = GetPlayerVehicleID(playerid);
 	GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
  	if(!IsPlayerInRangeOfPoint(playerid, 5.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli preikite arèiau.");
	PutPlayerInVehicleEx(id, vehicleid, 1);
	SendClientMessage(playerid,BLUE,"* Þaidëjas ásodintas.");
	return 1;
}
CMD:policija(playerid)
{
	if(playerDB[playerid][specialybe] !=1) return KlaidosZinute(playerid,"Ðita komanda, tik policijos darbuotojams!");
	new masyvas[505];
	SendClientMessage(playerid,RED," Nuvëstá þaidëjà iki maðinos: {FF8C00}/psekti");
	SendClientMessage(playerid,RED," Atidaryti/Uþdaryti vartus vartus spauskite raidæ {FFFFFF}Y.");
	format(masyvas, sizeof(masyvas), "\t{FF9900}Policijos komandos\n\n{C0C0C0}/ita - Uþdeda ieðkomumo lygá\n/ist - Iðteisinà þaidëjà\n/kgun - Atimsite ginklus\n/tazeris - Duoda tazeri\n/pt - Patikrinsi þaidëjà.\n/ant - Uþdeda/Nuima þaidëjui antrankius\n/tei - Atimta þaidëjo teises\n/mtei - Atima motociklo teises\n/bauda - Duoda þaidëjui baudà\n/uztvara - padëda uþtvarà\n\nMygtukas H - Áspës þaidëjà pasitraukti á ðalykelæ");
	format(masyvas, sizeof(masyvas), "%s\n/rt - Bendra teisësaugos racija\n/sekti - Pradësite sekti þaidëjà.\n/kon - Atimti narkotikus.",masyvas);
	ShowPlayerDialog(playerid, 20000, DIALOG_STYLE_MSGBOX, "Policija", masyvas, "Gerai", "");
	return 1;
}
CMD:sekti(playerid, params[])
{
	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid, RED, "* Ði komanda tik teisësaugai.");
	new id, masyvas[128], Float:pPos[3];
	if(sscanf(params, "u",id)) return SendClientMessage(playerid, BLUE, "* Sekti þaidëja: /sekti [Vardas_Pavarde]");
	else if(!IsPlayerConnected(id)) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra");
	else if(id == playerid) return SendClientMessage(playerid, RED, "* Savæs sekti negalite!");
	else
	{
	    if(SekamasZaidejas[playerid] !=-1)
	    {
	        SekamasZaidejas[playerid] = -1;
			DisablePlayerCheckpointEx(playerid, 21);
	        SendClientMessage(playerid, RED, "* Sekimas atðauktas!");
	        return true;
	    }
	    GetPlayerPos(id, pPos[0], pPos[1], pPos[2]);
	    SetPlayerCheckpointEx(playerid, 21,pPos[0], pPos[1], pPos[2],2);
	    SekamasZaidejas[playerid] = id;
	    format(masyvas, 128, "[Policijos Racija] %s: seku %s",GetPlayerNameEx(playerid), GetPlayerNameEx(id));
	    SendMessageToCops(COLOR_RACIJA,masyvas);
	}
	return true;
}
CMD:swat(playerid)
{
	if(playerDB[playerid][specialybe] !=10) return KlaidosZinute(playerid,"Ðita komanda, tik SWAT darbuotojams!");
	SendClientMessage(playerid,RED," Bendra teisësaugos racija: {FF8C00}/rt");
	SendClientMessage(playerid,RED," Sekti þaidëjà galite su komanda: {FF8C00}/sekti");
	SendClientMessage(playerid,RED," Nuvëstá þaidëjà iki maðinos: {FF8C00}/psekti");
	SendClientMessage(playerid,RED," Atidaryti/Uþdaryti vartus vartus spauskite raidæ {FFFFFF}Y.");
	ShowPlayerDialog(playerid, 2033, DIALOG_STYLE_MSGBOX,"SWAT", "SWAT komandos\n/ita - Uþdeda ieðkomumo lygá\n/gaudomi - Parodo gaudomus þaidëjus\n/ist - Iðteisinsite þaidëjà\n/kgun - Atimsite ginklus\n/tazeris - Gausite tazerá\n/uztvara - Padësite uþtvarà\n/ant - Uþdësite/Nuimsite antrankius\n/isodinti - Ásodinsite þaidëjà á maðinà\n/bauda - Duosite þaidëjui baudà\n/pt - Patikrinsite þaidëjà\n/kon - atimti narkotikus\n\nMygtukas H - Praneðimas", "Gerai", "");
	return 1;
}
CMD:armija(playerid)
{
	if(playerDB[playerid][specialybe] !=17) return KlaidosZinute(playerid,"Ðita komanda, tik ARMIJOS darbuotojams!");
	SendClientMessage(playerid,RED," Bendra teisësaugos racija: {FF8C00}/rt");
	SendClientMessage(playerid,RED," Sekti þaidëjà galite su komanda: {FF8C00}/sekti");
	SendClientMessage(playerid,RED," Nuvëstá þaidëjà iki maðinos: {FF8C00}/psekti");
	SendClientMessage(playerid,RED," Atidaryti/Uþdaryti vartus vartus spauskite raidæ {FFFFFF}Y.");
	SendClientMessage(playerid,RED," Nusiteleportuoti á darbà galite paspaudæ raidæ {FFFFFF}Y.");
	ShowPlayerDialog(playerid, 2034, DIALOG_STYLE_MSGBOX,"ARMIJA", "Armijos komandos\n/ita - Uþdeda ieðkomumo lygá\n/gaudomi - Parodo gaudomus þaidëjus\n/ist - Iðteisinsite þaidëjà\n/kgun - Atimsite ginklus\n/tazeris - Gausite tazerá\n/uztvara - Padësite uþtvarà\n/ant - Uþdësite/Nuimsite antrankius\n/isodinti - Ásodinsite þaidëjà á maðinà\n/bauda - Duosite þaidëjui baudà\n/pt - Patikrinsite þaidëjà\n/kon - atimti narkotikus", "Supratau", "");
	return 1;
}
CMD:dyleris(playerid)
{
	if(playerDB[playerid][specialybe]!=5) return SendClientMessage(playerid,RED,"* Ðita komanda tik dyleriams");
	SendClientMessage(playerid,RED,"* ~~~~~Dylerio komandos~~~~~");
	SendClientMessage(playerid,GREEN,"* Parduoti þolæ: /zoleparduoti [Vardas_Pavardë/ID] [Kiekis] [Gramo kaina].");
	SendClientMessage(playerid,GREEN,"* Parduoti narkotikus: /nparduoti [Vardas_Pavardë/ID] [Kiekis] [Vieneto kaina].");
	SendClientMessage(playerid,GREEN,"* Parduoti ginklus: /ginklas [Vardas_Pavardë/ID] [Ginklas] [Kiek kulkø].");
	SendClientMessage(playerid,GREEN,"* Parodo kiek turi narkotikø.: /narkomanas.");
	SendClientMessage(playerid,GREEN,"* Parduoti ginklus: /pg [Vardas_Pavardë/ID] [Kulkø kiekis] [kaina uþ kulkà].");
	SendClientMessage(playerid,GREEN,"* Atidaryti/Uþdaryti vartus vartus spauskite raidæ {FFFFFF}Y.");
	SendClientMessage(playerid,GREEN,"* Vaþinëkis ir platink narkotikus! .");
	return 1;
}
CMD:radistai(playerid)
{
	if(playerDB[playerid][specialybe]!=13) return SendClientMessage(playerid,RED,"* Ðita komanda tik dyleriams");
	SendClientMessage(playerid,RED,"* ~~~~~Radistø komandos~~~~~");
	SendClientMessage(playerid,GREEN,"* Raðyti visiems matant dël skelbimø, klausimanijø: /radistas [ TEKSTAS ].");
	SendClientMessage(playerid,GREEN,"* Suteiksite þaidëjui 100  vertës prizà: /prizas [ Vardas_Pavardë ].");
	return 1;
}
CMD:mafijosk(playerid)
{
	if(playerDB[playerid][specialybe] != 40 && playerDB[playerid][specialybe] != 42) return SendClientMessage(playerid, RED, "* Ði komanda tik gaujiniams.");
	SendClientMessage(playerid,RED,"* ~~~~~Gaujø komandos~~~~~");
	SendClientMessage(playerid,GREEN,"* Suriðti þaidëjà: /suristi [Vardas_Pavardë/ID].");
	SendClientMessage(playerid,GREEN,"* Ásodinti þaidëjà á maðinà /gisodinti [Vardas_Pavardë/ID].");
	SendClientMessage(playerid,GREEN,"* Iðspirti þaidëjà ið maðinos: /isspirt [Vardas_Pavardë/ID].");
	SendClientMessage(playerid,GREEN,"* Atidaryti/Uþdaryti vartus/angaro vartus spauskite raidæ {FFFFFF}Y.");
	return 1;
}
CMD:medikas(playerid)
{
	if(playerDB[playerid][specialybe]!=2) return SendClientMessage(playerid,RED,"* Ðita komanda tik medikams");
	SendClientMessage(playerid,RED,"* ~~~~~Medikø komandos~~~~~");
	SendClientMessage(playerid,GREEN,"* Parduoti gyvybës: /sgyvybes [Vardas_Pavardë/ID].");
	SendClientMessage(playerid,GREEN,"* Parduoti ðarvus: /ssarvai [Vardas_Pavardë/ID].");
	return 1;
}
CMD:bauda(playerid, params[])
{
	new id, Float:Coo[3];
	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid,RED,"* Ði komanda tik teisësaugai.");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid,BLUE, "* Duoti þaidëjui sumokëti baudà: /bauda [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,RED,"* Tokio þaidëjo nëra.");
	if(id == playerid) return SendClientMessage(playerid, RED, "* Savæs iðteisinti negali.");
    if(OfisoDarbas[id] == true) return SendClientMessage(playerid, RED, "* Þaidëjas AFK zonoje!");
    GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli.");
	if(GetPlayerScore(id) < 500)
	{
		SendClientMessage(playerid, RED, "* Nusikaltelis dar nepatyræs, todël jam negali duoti baudos, gabenk já kalëjmà.");
		new tacka = GetPlayerVehicleID(playerid);
		SendClientMessage(id,RED, "* Jûs esate nepatyræs(XP<500) ir jums negalima duoti baudos, todël bûsite gabenamas á kalëjmæ.");
		RemovePlayerFromVehicle(id);
		for(new i = 0; i< MAX_PLAYERS; i++)
		{
			if(GetPlayerVehicleID(i) == tacka)
			{
				RemovePlayerFromVehicle(i);
			}
		}
		PutPlayerInVehicleEx(id, tacka, 1);
		return 1;
	}
	new bauda = GetPlayerTWanted(id) * 300;
	if(bauda == 0) return SendClientMessage(playerid,RED, "* Þaidëjas nenusikaltæs");
	playerDB[id][textas]=7;
	playerDB[id][rkaina][0]=bauda;
	playerDB[id][rid][0]=playerid;
	new string[120];
 	format(string, 120, "{ffffff}Policininkas %s siûlo susimokëti %s baudà.\nNorësite? Spauskite TAIP/NE.", GetPlayerNameEx(playerid), konvertuoti_pinigus(bauda));
 	ShowPlayerDialog(id,7341,DIALOG_STYLE_MSGBOX,"{ffffff}Baudos mokëjimas", string,"Taip","Ne");
 	playerDB[id][ChoosedPlayer] = playerid;
 	format(string, 120,"* Pasiûlëte nusikalteliui %s mokëti %s  baudà", GetPlayerNameEx(id), konvertuoti_pinigus(bauda));
	SendClientMessage(playerid,RED,string);
	return 1;
}
CMD:sgyvybes(playerid, params[])
{
	if(playerDB[playerid][specialybe] !=2) return KlaidosZinute(playerid,"Ðita komanda, tik medikams.");
	new pID, pKaina, msg[120], Float:Coo[3], Float:hp;
	if(sscanf(params, "ud", pID, pKaina)) return SendClientMessage(playerid, BLUE, "* Parduoti þaidëjams gyvybiø /sgyvybes [Vardas/ID]");
	if(pID == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(!playerDB[playerid][uniformd]) return SendClientMessage(playerid, RED, "* Kad pagydytum þaidëjà turite bûti su darbine uniforma.");
	if(pKaina < 300 || pKaina > 300) return SendClientMessage(playerid, RED, "* Gyvybiø kaina gali bûti tik 0 arba 300");
	if(GetPlayerScore(pID) < 500) return SendClientMessage(playerid, RED, "* Þaidëjas yra naujokas! Reikalinga > 500 XP .");
	GetPlayerPos(pID,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 30.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli.");
	GetPlayerHealth(pID, hp);
	if(hp == 100.0) return SendClientMessage(playerid, RED, "* Þaidëjas jau turi pilnà gyvybiø.");
	if(playerDB[pID][pinigai] < pKaina) return SendClientMessage(playerid, RED, "* Þaidëjas neturi tiek pinigø");
	format(msg, sizeof(msg), "{FFFFFF}Medikas {2DB2A7}%s{FFFFFF} jums siûlo pagydymà uþ {2DB2A7}%s {FFFFFF}.",GetPlayerNameEx(playerid), konvertuoti_pinigus(pKaina));
	ShowPlayerDialog(pID, 9001, DIALOG_STYLE_MSGBOX, "Pagydymas", msg, "Pirkti", "Nepirkti");
	SendClientMessage(playerid, BLUE, "* Pasiûlëte þaidëjui gyvybiø.");
	playerDB[pID][ChoosedPlayer] = playerid;
	playerDB[pID][sGyvybiuKaina] = pKaina;
	return 1;
}
CMD:ssarvai(playerid, params[])
{
	if(playerDB[playerid][specialybe] !=2) return KlaidosZinute(playerid,"Ðita komanda, tik medikams.");
	new pID, pKaina, msg[120], Float:Coo[3], Float:armor;
	if(sscanf(params, "ud", pID, pKaina)) return SendClientMessage(playerid, BLUE, "* Parduoti þaidëjams gyvybiø /ssarvai [Vardas/ID]");
	if(pID == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	if(GetPlayerScore(pID) < 1000) return SendClientMessage(playerid,0xFFFFFFA,"Ðis þmogus neturi pakankamai XP > Reikalinga 1000 XP.");
	if(!playerDB[playerid][uniformd]) return SendClientMessage(playerid, RED, "* Kad uþdëtum ðarvus turi bûti su darbine uniforma.");
	if(pKaina < 1500 || pKaina > 1500) return SendClientMessage(playerid, RED, "* Gyvybiø kaina gali bûti tik 0 arba 1500");
	if(GetPlayerScore(pID) < 500) return SendClientMessage(playerid, RED, "* Þaidëjas yra naujokas!");
	GetPlayerPos(pID,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 30.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli.");
	GetPlayerArmour(pID, armor);
	if(armor == 100.0) return SendClientMessage(playerid, RED, "* Þaidëjas jau turi pilnà ðarvø.");
	if(playerDB[pID][pinigai] < pKaina) return SendClientMessage(playerid, RED, "* Þaidëjas neturi tiek pinigø");
	format(msg, sizeof(msg), "{FFFFFF}Medikas {2DB2A7}%s{FFFFFF} jums siûlo ðarvus uþ {2DB2A7}%s {FFFFFF}.",GetPlayerNameEx(playerid), konvertuoti_pinigus(pKaina));
	ShowPlayerDialog(pID, 9002, DIALOG_STYLE_MSGBOX, "Ðarvai", msg, "Pirkti", "Nepirkti");
	SendClientMessage(playerid, BLUE, "* Pasiûlëte þaidëjui Ðarvø.");
	playerDB[pID][ChoosedPlayer] = playerid;
	playerDB[pID][sArmoroKaina] = pKaina;
	return 1;
}

CMD:pavaduotojai(playerid, params[])
{
    mysql_query("SELECT Vardas,pavdrk FROM players WHERE pavdrk > '0'");
	mysql_store_result( );
	new dVardas[MAX_PLAYER_NAME], x, resultline[50], str[130], fstr[1600], dKoks[60], kLead, dStatus[30];
	while(mysql_fetch_row_format(resultline))
	{
		sscanf(resultline,"p<|>s[24]d",dVardas, kLead);
		x++;
		if(kLead > 0)
		{
			if(kLead == 1) dKoks = "Policijos Pavaduotojas-(ë)";
			else if(kLead == 2) dKoks = "Medikø Pavaduotojas-(ë)";
			else if(kLead == 3) dKoks = "Taxi Pavaduotojas-(ë)";
			else if(kLead == 4) dKoks = "Mechanikø Pavaduotojas-(ë)";
			else if(kLead == 5) dKoks = "Dyleriø Pavaduotojas-(ë)";
			else if(kLead == 6) dKoks = "Russian Mafijos Pavaduotojas-(ë)";
			else if(kLead == 8) dKoks = "Yakuza Mafijos Pavaduotojas-(ë)";
			else if(kLead == 10) dKoks = "SWAT Pavaduotojas-(ë)";
			else if(kLead == 11) dKoks = "Fûristø Pavaduotojas-(ë)";
			else if(kLead == 13) dKoks = "Radistø Pavaduotojas-(ë)";
			else if(kLead == 14) dKoks = "Baikeriø Pavaduotojas-(ë)";
			else if(kLead == 15) dKoks = "Klubo  Costello  Deðinioji ranka";
			else if(kLead == 16) dKoks = "Klubo  -Patriotai-  Deðinioji ranka";
			else if(kLead == 17) dKoks = "Armijos Pavaduotojas-(ë)";

			if(GetPlayeridMid(dVardas) != INVALID_PLAYER_ID) { dStatus = "{00FF00}prisijungæs"; } else { dStatus = "{FF0000}atsijunges"; }
			format(str, sizeof(str),"{FFFFFF}%d. {66ffff}%s - {66ff66}%s {FFFFFF}ir jis yra %s\n", x, dVardas, dKoks, dStatus);
			strcat(fstr, str);
		}
	}
	ShowPlayerDialog(playerid,1114,DIALOG_STYLE_MSGBOX,"Pavaduotojai",fstr,"Uþdaryti","");
	mysql_free_result();
	return 1;
}
CMD:x(playerid, params[])
{
	if(CheckMute(playerid)) return 1;
	if(playerDB[playerid][KadaSkelbe] > gettime()) return SendClientMessage(playerid, RED, "* Ðità komandà galima naudoti tik kas 1 minute!");
	if(GetPlayerInterior(playerid) !=12) return SendClientMessage(playerid, RED, "* Turite bûti skelbimø kontoroje!");
	new zin[128], msg[181];
	if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid,0x00FF00AA, "* Naudojimas: /x [tekstas]");
	if(GetPlayerScore(playerid) < 500) return SendClientMessage(playerid,RED,"* Turite turëti 500 xp norint skelbti skelbimus.");
	if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Skelbimui jums reikës 1000");
	format(msg,sizeof(msg),"{FF5100}* [SKELBËJAS] %s(%i) sako, kad: %s", GetPlayerNameEx(playerid), playerid);
	SendClientMessageToAll(0xFF5100AA, msg);
	SendClientMessageToAll(0xFF5100AA, zin);
	GivePlayerMoneyA(playerid, -1000);
	playerDB[playerid][KadaSkelbe] = gettime() + 60;
	return 1;
}
CMD:lobis(playerid, params[])
{
	SearchLobis(playerid);
	return 1;
}
CMD:persirengti(playerid, params[])
{
	if(playerDB[playerid][uniformd])
	{
		SetPlayerSkin(playerid,playerDB[playerid][drabuziai]);
		playerDB[playerid][uniformd]=false;
		SendClientMessage(playerid,GREEN,"* Persirengëte á savo paprastus drabuþius.");
		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
	}else{
		if(playerDB[playerid][uniforma]==-1) return SendClientMessage(playerid,RED,"* Jûs neturite kitø drabuþiø.");
		SetPlayerSkin(playerid,playerDB[playerid][uniforma]);
		playerDB[playerid][uniformd]=true;
		SendClientMessage(playerid,GREEN,"* Persirengëte á savo firmos uniformà.");
		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		return 1;
	}
	return 1;
}
CMD:isspirt(playerid, params[])
{
	new id, Float:pPos[3], msg[55];
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Turite bûti maðinoje.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, "* Turite bûti maðinos vairuotojas.!");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Iðspirti þaidëjà ið maðinos: /isspirt [Vardas_Pavardë/ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,RED,"* Tokio þaidëjo nëra.");
	if(!IsPlayerInAnyVehicle(id) || GetPlayerVehicleID(id) != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid,RED,"* Þaidëjas ne jûsø maðinoje!");
	GetPlayerPos(id, pPos[0], pPos[1], pPos[2]);
	SetPlayerPos(id, pPos[0], pPos[1] + 2, pPos[2] + 2);
	format(msg, sizeof(msg), "* Jûs iðspyrëte %s ið savo maðinos!", GetPlayerNameEx(id));
	SendClientMessage(playerid, RED, msg);
	return 1;
}


CMD:emigruoti(playerid, params[])
{
    if(!playerDB[playerid][epriziuretojas] && playerDB[playerid][admin] < 5) return 0;

	new giveplayerid, String[216];

	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, -1, ""COL_USAGE" {C2BF1B}/emigruoti <vardas_pavardë/id>");

	if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""COL_ERROR" {FFFFFF}Tokio þaidëjo nëra!");

	if(playerDB[giveplayerid][ArEmigruotas]) return SendClientMessage(playerid, -1, ""COL_ERROR" {FFFFFF}Þaidëjas jau yra emigruotas!");

	SetPlayerScore(giveplayerid, GetPlayerScore(giveplayerid) + 2000);

	GivePlayerMoneyA(giveplayerid, 20000);

	playerDB[giveplayerid][ArEmigruotas] = true;

	format(String, sizeof(String), ""COL_ADMIN" {7bae39}%s {FFFFFF}emigravo jus, gavote "COL_PRICE"2000 {FFFFFF}EXP ir "COL_PRICE"20,000{FFFFFF}!", GetPlayerNameEx(playerid));
	SendClientMessage(giveplayerid, -1, String);

	format(String, sizeof(String), ""COL_ADMIN" {FFFFFF}Sëkmingai emigravote þaidëjà {7bae39}%s{FFFFFF}!", GetPlayerNameEx(giveplayerid));
	SendClientMessage(playerid, -1, String);

	return 1;
}
CMD:emigruotioff(playerid, params[])
{
    new uQuerry[150], arEmigruotas, pXP, pMoney, zVardas[MAX_PLAYER_NAME], String[216];

    if(!playerDB[playerid][epriziuretojas] && playerDB[playerid][admin] < 5) return 0;

	if(sscanf(params, "s", zVardas)) return SendClientMessage(playerid, -1, ""COL_USAGE" {C2BF1B}/emigruotioff <vardas_pavardë/id>");

	new pID = GetPlayeridMid(zVardas);

	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""COL_ERROR" {FFFFFF}Þaidëjas yra prisijungæs!");

	format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", zVardas);
	mysql_query(uQuerry);

	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows())
	{
		mysql_fetch_field_row(uQuerry, "ArEmigruotas"); arEmigruotas = strval(uQuerry);
		mysql_fetch_field_row(uQuerry, "Xp"); pXP = strval(uQuerry);
		mysql_fetch_field_row(uQuerry, "MoneyPocket"); pMoney = strval(uQuerry);
		if(arEmigruotas)
		{
			SendClientMessage(playerid, -1, ""COL_ERROR" {FFFFFF}Þaidëjas jau yra emigruotas!");
		}
		else
		{
			format(String, sizeof(String), ""COL_ADMIN" {FFFFFF}Sëkmingai emigravote þaidëjà {7bae39}%s{FFFFFF}!", zVardas);
			SendClientMessage(playerid, -1, String);

   			format(uQuerry, 150, "UPDATE players SET `Xp` = '%d', `MoneyPocket` = '%d', `ArEmigruotas` = '1' WHERE `Vardas` = '%s'", pXP + 2000, pMoney + 20000, zVardas);
			mysql_query(uQuerry);
		}
	}
	else
	{
		SendClientMessage(playerid, -1, ""COL_ERROR" {FFFFFF}Tokio vartotojo mûsø duomenø bazëje nëra!");
	}
	return 1;
}
COMMAND:pinigai(playerid, params[])
{
    if(playerDB[playerid][admin] < 1) return 0;

    new giveplayerid, String[216];

	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, -1, ""COL_USAGE" {C2BF1B}/pinigai <vardas_pavardë/id>");

	if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, ""COL_ERROR" {FFFFFF}Tokio þaidëjo nëra!");

	format(String, sizeof(String), ""COL_ADMIN" {FFFFFF}Rankose þaidëjas {7bae39}%s {FFFFFF}turi "COL_PRICE"%s{FFFFFF}, o banke "COL_PRICE"%s{FFFFFF}!",
	GetPlayerNameEx(giveplayerid), konvertuoti_pinigus(GetPlayerMoneyA(giveplayerid)), konvertuoti_pinigus(playerDB[giveplayerid][banke]));
	SendClientMessage(playerid, -1, String);

	return 1;
}

CMD:lunbanzaideja(playerid, params[])
{
	new uQuerry[150], ArUzbanintasLaikui, zVardas[MAX_PLAYER_NAME], String[128];

	if(playerDB[playerid][banpriziuretojas] != true && playerDB[playerid][admin] < 5) return 0;

	if(sscanf(params, "s[24]", zVardas)) return SendClientMessage(playerid, -1, "{8cc17b} NAUDOTI: /lunbanzaideja <vardas_pavardë>");

	new pID = GetPlayeridMid(zVardas);

	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, -1, "{8cc17b} Ðis þaidëjas nëra uþblokuotas!");

	format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", zVardas);
	mysql_query(uQuerry);

	mysql_store_result();
	mysql_retrieve_row();

	if(mysql_num_rows())
	{
		mysql_fetch_field_row(uQuerry, "BanLaikas"); ArUzbanintasLaikui = strval(uQuerry);

		if(ArUzbanintasLaikui < gettime())
		{
			SendClientMessage(playerid, -1, "{8cc17b} Ðis þaidëjas nëra uþblokuotas!");
		}
		else
		{
			format(String, sizeof(String), "{FFFFFF} Þaidëjas {8cc17b}%s{FFFFFF} sëkmingai atblokuotas!", zVardas);
			SendClientMessage(playerid, -1, String);

			format(uQuerry, 150, "UPDATE players SET `BanLaikas` = '0' WHERE `Vardas` = '%s'", zVardas);
			mysql_query(uQuerry);
		}
	}
	else
	{
		SendClientMessage(playerid, -1, "{8cc17b} Tokio vartotojo mûsø duomenø bazëje nëra!");
	}

	return 1;
}

CMD:unbanzaideja(playerid, params[])
{
    new uQuerry[150], ArUzbanintas, zVardas[MAX_PLAYER_NAME];
    if(!playerDB[playerid][banpriziuretojas] && playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	if(sscanf(params, "s[24]", zVardas)) return SendClientMessage(playerid, BLUE, "* Atbaninti þaidëjà su: /unbanzaideja [Vardas_Pavardë]");
	new pID = GetPlayeridMid(zVardas);
	if(pID != INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Þaidëjas yra þaidime.");
	format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", zVardas);
	mysql_query(uQuerry);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows())
	{
		mysql_fetch_field_row(uQuerry, "Uzbanintas"); ArUzbanintas = strval(uQuerry);
		if(!ArUzbanintas)
		{
			SendClientMessage(playerid, RED, "* Þaidëjas neuþbanintas!");
		}
		else
		{
			SendClientMessage(playerid, BLUE, "* Þaidëjas buvo sëkmingai atblokuotas.");
   			format(uQuerry, 150, "UPDATE players SET `Uzbanintas` = '0' WHERE `Vardas` = '%s'", zVardas);
			mysql_query(uQuerry);
		}
	}
	else
	{
		SendClientMessage(playerid, RED, "* Tokio vartotojo duomenø bazëje nëra.");
	}
	return 1;
}
CMD:duoti(playerid, params[])
{
	new id, kiek, Float:Coo[3], msg[50];
	if(sscanf(params, "ud", id, kiek)) return SendClientMessage(playerid, BLUE, "* Duoti pinigø: /duoti [Vardas_Pavardë/ID] [Kiekis]");
	if(GetPlayerScore(playerid) < 1000) return SendClientMessage(playerid, RED, "* Jûs per maþai patyræs, todël pinigø duoti negalite! 1.000XP.");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,RED,"* Tokio þaidëjo nëra.!");
	if(kiek < 1) return SendClientMessage(playerid, BLUE, "* Ávesta bloga suma. -Pinigø duoti negalima.");
	if(GetPlayerMoneyA(playerid) < kiek) return SendClientMessage(playerid, RED, "* Tu neturi tiek!");
	GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 30.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli!");
	GivePlayerMoneyA(id, kiek);
	GivePlayerMoneyA(playerid, - kiek);
	format(msg,sizeof(msg),"* %s davë jums %s pinigø.", GetPlayerNameEx(playerid), konvertuoti_pinigus(kiek));
	SendClientMessage(id,GREEN,msg);
	format(msg,sizeof(msg),"* Davëte %s %s pinigø.", GetPlayerNameEx(id), konvertuoti_pinigus(kiek));
	SendClientMessage(playerid,BLUE,msg);
	new query[128];
	format(query, 128, "UPDATE players SET MoneyPocket = '%d' WHERE Vardas = '%s'",GetPlayerMoneyA(id),GetPlayerNameEx(id));
	mysql_query(query);
	format(query, 128, "UPDATE players SET MoneyPocket = '%d' WHERE Vardas = '%s'",GetPlayerMoneyA(playerid),GetPlayerNameEx(playerid));
	mysql_query(query);
	return 1;
}
CMD:ginklas(playerid, params[])
{
	new id, kiek, Float:Coo[3], wep[64], msg[110];
	if(playerDB[playerid][specialybe] != 5) return SendClientMessage(playerid,RED,"* Ði komanda tik dyleriams!");
	if(sscanf(params, "ud", id, kiek)) return SendClientMessage(playerid, GREEN, "* Duoti ginklà: /ginklas [Vardas_Pavardë/ID] [Kulkø kiekis]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,RED,"* Tokio þaidëjo nëra.");

	new ammo = GetPlayerAmmo(playerid);
	new weapon = GetPlayerWeapon(playerid);
	if(kiek < 1) return SendClientMessage(playerid, GREEN, "* Duoti ginklà: /ginklas [Vardas_Pavardë/ID] [Kulkø kiekis]");
	if(ammo < kiek) return SendClientMessage(playerid, RED, "* Tu neturi tiek!");
	GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 30.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli!");
	if(playerDB[id][ikalintas]) return SendClientMessage(playerid,RED,"* Þaidëjas kalëjime, ten ginklai draudþiami!");
    if(GetPlayerScore(id) < 1000) return SendClientMessage(playerid, RED, "* Þaidëjas yra naujokas! Reikia 1.000 XP.");
	GivePlayerWeaponEx(playerid, weapon, - kiek);
	GivePlayerWeaponEx(id, weapon, kiek);
	GetWeaponName(weapon, wep, sizeof(wep));
	format(msg,sizeof(msg),"* Davëte ðautuvo %s kulkø (%s) þaidëjui %s", wep, konvertuoti_pinigus(kiek), GetPlayerNameEx(id));
	SendClientMessage(playerid,BLUE,msg);
	format(msg,sizeof(msg),"* Dyleris %s jums davë ðautuvo %s kulkø (%s)", GetPlayerNameEx(playerid), wep, konvertuoti_pinigus(kiek));
	SendClientMessage(id,GREEN,msg);
	return 1;
}
CMD:pg(playerid, params[])
{
	new id, kiek, kaina, Float:Coo[3], wep[64], msg[110];
	if(playerDB[playerid][specialybe] != 5) return SendClientMessage(playerid,RED,"* Ði komanda tik dyleriams!");
	if(sscanf(params, "udd", id, kiek, kaina)) return SendClientMessage(playerid, GREEN, "* Parduoti ginklà: /pg [Vardas_Pavardë/ID] [Kulkø kiekis] [Kaina uþ kulka]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,RED,"* Tokio þaidëjo nëra.");
	if(GetPlayerScore(id) < 1000) return SendClientMessage(playerid, RED, "* Þaidëjas yra naujokas! Reikia 1.000 XP.");
	new ammo = GetPlayerAmmo(playerid);
	new weapon = GetPlayerWeapon(playerid);
	if(kiek < 1) return SendClientMessage(playerid, GREEN, "* Parduoti ginklà: /pg [Vardas_Pavardë/ID] [Kulkø kiekis] [Kaina uþ kulka]");
	if(kaina < 1) return SendClientMessage(playerid, GREEN, "* Parduoti ginklà: /pg [Vardas_Pavardë/ID] [Kulkø kiekis] [Kaina uþ kulka]");
	if(ammo < kiek) return SendClientMessage(playerid, RED, "* Tu neturi tiek kulkø");
	GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 30.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli!");
	if(playerDB[id][ikalintas]) return SendClientMessage(playerid,RED,"* Þaidëjas kalëjime, ten ginklai draudþiami!");
	GetWeaponName(weapon, wep, sizeof(wep));
	playerDB[id][ChoosedPlayer] = playerid;
	playerDB[id][KiekKulku] = kiek;
	playerDB[id][KainaKulku] = kiek * kaina;
	if(GetPlayerMoneyA(id) < kiek * kaina) return SendClientMessage(playerid, RED, "* Þaidëjas neturi tiek pinigø kad nusipirktu ðovinius!");
	format(msg,sizeof(msg),"* Dyleris %s jums siûlo pirkti %s (%s) kulkø uþ %s", GetPlayerNameEx(playerid), wep, konvertuoti_pinigus(kiek), konvertuoti_pinigus(kaina));
	ShowPlayerDialog(id, 5888, DIALOG_STYLE_MSGBOX, "Dyleriø ginklai", msg, "Pirkti", "Atðaukti");
	return 1;
}
CMD:atkabinti(playerid, params[])
{
	if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Ði komanda tik fûristams!.");
 	if(IsPlayerConnected(playerid))
  	{
   		new tmpcar = GetPlayerVehicleID(playerid);
     	if(IsTrailerAttachedToVehicle(tmpcar))
      	{
       		DetachTrailerFromVehicle(tmpcar);
         	return 1;
		}
  		else
  		{
    		SendClientMessage(playerid, RED, "* Prie tavo fûros ir taip nëra prikabinta priekaba.");
      		return 1;
        }
	}
 	return 1;
}
CMD:pavalgyti(playerid, params[])
{
	if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Ði komanda tik fûristams!.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Norint pavalgyti turi bûti maðinoje!");
	{
		if(GetPlayerMoneyA(playerid) < 100) return SendClientMessage(playerid, RED, "* Neturite 100 kepsniui!");
		playerDB[playerid][alkis] += 40;
		if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
		UpdateAlkanasTextdraw( playerid );
		GivePlayerMoneyA(playerid, -100);
		SetPlayerDrunkLevel(playerid, 0);
		SendClientMessage(playerid,RED,"{FEF280}Suvalgëte kepsná ið fûros, ir sumokëjote uþ já 100");
		SetPlayerHealthEx(playerid, 100);
		ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
		return 1;
	}
}
CMD:furp(playerid)
{
	if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, " Ðia komandà gali naudoti tik Fûristai !");
	SendClientMessage(playerid,0xFF000090," Fûristø pasikrovimo vieta paþymëta þemelapyje raudonu taðkeliu !");
	SetPlayerCheckpointEx(playerid, 7,2771.1541,913.3260,11.0938,2);
 	return 1;
}
CMD:darbai(playerid)
{
	new masyvas[1020];
	format(masyvas, sizeof(masyvas), "%s{0caf35}DARBAI SU PAKVIETIMAIS\t\nPolicijos Departamentas [%dXP]\nMedikai [%dXP]\nTaksistai [%dXP]\nMechanikai [%dXP]\nDyleriai [%dXP]", masyvas, FARAI_ISIDARBINIMO_XP, MEDIKAI_ISIDARBINIMO_XP, TAXI_ISIDARBINIMO_XP, MECHANIKAI_ISIDARBINIMO_XP, GDYLERIAI_ISIDARBINIMO_XP);
	format(masyvas, sizeof(masyvas), "%s\nSWAT [%dXP]\nFûristai [%dXP]\nRadistai [%dXP]\nBaikeriai [%dXP]\n\t\n{0caf35}MAFIJOS\t\n\n\nRussian mafija [%dXP]\n Yakuza mafija [%dXP]\n\t\nKLUBAI\t\n\n\n Costello  klubas [%dXP]\n -Patriotai-  klubas [%dXP]\n\n", masyvas, SWAT_ISIDARBINIMO_XP, FUROS_ISIDARBINIMO_XP, RADISTU_ISIDARBINIMO_XP, BAIKERIAI_ISIDARBINIMO_XP, RUSSIAN_ISIDARBINIMO_XP, YAKUZA_ISIDARBINIMO_XP, KLUBAS_ISIDARBINIMO_XP, KLUBASS_ISIDARBINIMO_XP);
	format(masyvas, sizeof(masyvas), "%s\n\t\n{0caf35}DARBAI BE PAKVIETIMO\t\nKrovikai [0XP]\nValytojai [%dXP]\nPicø iðveþiotojai [%dXP]\nKunigai [%dXP]\nLimuzininkai [%dXP]\nNarai [%dXP]\nMedkirèiai [%dXP]\nGaisrininkai [%dXP]", masyvas, VALYTOJU_ISIDARBINIMO_XP, PICERININKU_ISIDARBINIMO_XP, KUNIGU_ISIDARBINIMO_XP, LIMUZININKU_ISIDARBINIMO_XP, NARU_ISIDARBINIMO_XP, MEDKIRCIU_ISIDARBINIMO_XP, GAISRINES_ISIDARBINIMO_XP) ;
	ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Serverio darbai",masyvas, "Gerai", "");
	return 1;
}
CMD:sexy(playerid) return ApplyAnimation(playerid, "PED", "WOMAN_walksexy",4.1,1,1,1,1,1);
CMD:gulet(playerid) return ApplyAnimation(playerid, "BEACH", "bather", 4.000000, 0, 1, 1, 1, -1);
CMD:yohyoh(playerid) return ApplyAnimation(playerid, "benchpress", "gym_bp_celebrate", 4.000000, 1, 0, 0, 0, 0);
CMD:ateik(playerid) return ApplyAnimation(playerid, "CAMERA", "camstnd_cmon", 4.000000, 1, 0, 0, 0, 0);
CMD:spresti(playerid) return ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.000000, 1, 0, 0, 0, 0);
CMD:xczx(playerid) return ApplyAnimation(playerid, "DODGE", "Cover_Dive_01", 4.000000, 0, 1, 1, 0, 0);
CMD:gogogo(playerid) return ApplyAnimation(playerid, "POLICE", "CopTraf_Away", 4.000000, 1, 0, 0, 0, 0);
CMD:verkt(playerid) return ApplyAnimation(playerid, "GRAVEYARD", "mrnF_loop", 4.000000, 1, 1, 1, 0, 0);
CMD:mot(playerid) return ApplyAnimation(playerid, "KISSING", "gfwave2", 4.000000, 0, 0, 0, 0, 0);
CMD:trenkt(playerid) return ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.000000, 0, 0, 0, 0, 0);
CMD:pee(playerid) return ApplyAnimation(playerid, "PAULNMAC", "Piss_loop", 4.000000, 0, 1, 1, 0, 0);
CMD:wank(playerid) return ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.000000, 1, 0, 0, 0, 0);
CMD:taip(playerid) return ApplyAnimation(playerid, "GANGS", "Invite_Yes", 4.000000, 0, 0, 0, 0, 0);
CMD:ne(playerid) return ApplyAnimation(playerid, "GANGS", "Invite_No", 4.000000, 0, 0, 0, 0, 0);
CMD:parkour(playerid) return ApplyAnimation(playerid, "DAM_JUMP", "DAM_Dive_Loop", 4.000000, 1, 1, 1, 1, 0);
CMD:kungfu(playerid) return ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.000000, 1, 0, 0, 0, 0);
CMD:baik(playerid)
{
 	if(Tazed[playerid]) return SendClientMessage(playerid, RED, "{37f467} Jûs esate paðautas tazerio {ccff66}!");
	if(IsPlayerInAnyVehicle(playerid)){return 1;}
	ClearAnimations(playerid);
	return 1;
}
CMD:pakelt(playerid)
{
	if(playerDB[playerid][cuffed]) return 1;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
	return 1;
}
CMD:rukyti(playerid)
{
	if(playerDB[playerid][cuffed]) return 1;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
	return 1;
}
CMD:sokti(playerid)
{
	switch(random(3))
	{
	    case 0: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
	    case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
	    case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
	}
	return 1;
}
CMD:sedet(playerid, params[])
{
	new id;
	if(sscanf(params, "d", id)) return SendClientMessage(playerid,BLUE,"* Atsisësti: /sedet [1-4]");
	if(id > 4 || id < 1) return SendClientMessage(playerid,BLUE,"* Yra tik 4 sëdëjimo pozos [1-4]");
	switch(id)
	{
	    case 1: ApplyAnimation(playerid, "BEACH", "ParkSit_W_loop", 4.000000, 1, 0, 0, 0, 0);
		case 2: ApplyAnimation(playerid, "BEACH", "SitnWait_loop_W", 4.000000, 1, 0, 0, 0, 0);
		case 3: ApplyAnimation(playerid, "INT_HOUSE", "LOU_In", 4.000000, 0, 1, 1, 1, -1);
		case 4: ApplyAnimation(playerid, "INT_OFFICE", "FF_Dam_Fwd", 4.000000, 0, 1, 1, 1, -1);
	}
	return 1;
}
CMD:buciuot(playerid, params[])
{
	new id, Float:Coo[3], Float:vPos[3], masyvas[80];
	if(sscanf(params, "d", id)) return SendClientMessage(playerid, COLOR, "* Pabuèiuoti zaidejà: /buciuot [Vardas_Pavardë/ID]");
	if(id==INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR, "* Tokio þaidëjo nëra");
	if(id==playerid) return SendClientMessage(playerid, COLOR, "* Kaip pabuèiuosi save?");
    GetPlayerPos(id,Coo[0],Coo[1],Coo[2]);
	if(!IsPlayerInRangeOfPoint(playerid, 7.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, COLOR, "* Þaidëjas per toli, kaip tu já tokiu atstumu pabuèiuosi?");
	if(playerDB[playerid][ikalintas] || playerDB[id][ikalintas]) return SendClientMessage(playerid, COLOR, "* Kalejime buciuotis negalima.");
	if(playerDB[playerid][cuffed]) return SendClientMessage(playerid, RED, "* Jûs esate surakintas arba suriðtas !!");
	SetPlayerPos(id,Coo[0],Coo[1]+1.28,Coo[2]);
	SetPlayerFacingAngle(playerid,0);
	SetPlayerFacingAngle(id,180);
	ClearAnimations(playerid);
	ClearAnimations(id);
	ApplyAnimation(playerid,"KISSING","Grlfrd_Kiss_03",4.0,0,0,0,0,-1); //Pakeisti animacija
	ApplyAnimation(id,"KISSING","Grlfrd_Kiss_03",4.0,0,0,0,0,-1);
	GetPlayerPos(playerid, vPos[0], vPos[1], vPos[2]);
	format(masyvas, 80, "%s pabuèiavo %s",GetPlayerNameEx(playerid), GetPlayerNameEx(id));

	for(new p = 0; p < MAX_PLAYERS; p++)
	{
	    if(IsPlayerConnected(p))
	    {
		    if(IsPlayerInRangeOfPoint(p, 20.0, vPos[0], vPos[1], vPos[2]))
	        {
	            SendClientMessage(p, BLUE, masyvas);
	        }
	    }
	}
	return 1;
}

CMD:gskirti(playerid, params[])
{
 	if(!playerDB[playerid][gpriziuretojas] && playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, "{ff0301}*~~* Naudingiausios komandos {9af551}/komandos {ff0301}*~~*");
	new id, dirikas, post[40], msg[160];
	if(sscanf(params, "ud", id, dirikas)) return SendClientMessage(playerid, BLUE, "* Uzdeti zaidejui direktoriumi: /uzdetidirektoriu [Vardas_Pavardë/ID] [DARBO ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	switch(dirikas)
	{
	    case 0:
	    {
	        if(playerDB[id][plead] == 0) return SendClientMessage(playerid, -1, "{8cc17b} Þaidëjas nëra jokio darbo direktorius!");
			SendClientMessage(playerid, BLUE, "* Paðalinote þaidëjà ið direktoriaus pareigø.");
			SendClientMessage(id, BLUE, "* Priþiurëtojo nuosprendþiu jûs paðalintas nuo direktorius pareigø.");
			playerDB[id][plead] = 0;
			new query[128];
			/*
			    @ ES.^: Modifikuota uþklausa, 0 nurodomas ið karto, o ne ið kintamojo
			*/
			format(query, 128, "UPDATE players SET Lead = '0' WHERE Vardas = '%s'", GetPlayerNameEx(id));
			mysql_query(query);
			/*
			    @ ES.^: Neaiðku ir þemiau esanti sàlyga reikalinga, kadangi nereikðminga
			*/
			//if(playerDB[id][plead] > 1) return SendClientMessage(playerid, -1, "Þaidëjas kitos firmos direktorius");
			return 1;
		}
		/*
		    @ ES.^: Uþkomentuoti nenaudojami ID, kad atsikratyti papildomos sàlygos, kuri buvo aukðèiau
		*/

		case 6: format(post, sizeof(post), "Russian Mafijos");
		case 8: format(post, sizeof(post), "Yakuza Mafijos");
		case 15: format(post, sizeof(post), "Klubo  Costello");
		case 16: format(post, sizeof(post), "Klubo  -Patriotai- ");
		default: return SendClientMessage(playerid, -1, ""COL_ERROR"[KLAIDA]: {ffffff}Tokio darbo ID nëra!");

	}
	if(playerDB[id][plead] != 0 || playerDB[id][pavdrk] !=0) return SendClientMessage(playerid, -1, "{8cc17b} Þaidëjas kito darbo direktorius arba pavaduotojas!");
	playerDB[id][plead] = dirikas;
	playerDB[id][dispejimai] = 0;
	format(msg, sizeof(msg), "{32cc26}* Sveikiname, jûs paskirtas naujuoju {3bf22e}%s{32cc26} direktoriumi. Daugiau informacijos {3bf22e}/dkomandos", post);
	SendClientMessage(id, COLOR_GREEN, msg);
	format(msg, sizeof(msg), "* Paskyrëte %s naujuoju %s direktoriumi.", GetPlayerNameEx(id), post);
	SendClientMessage(playerid, BLUE, msg);

	new query[250];
	new year, month, day;
	getdate(year, month, day);
	/*
	    @ ES.^: Atsikratyta "((month < 10) ? ("0") : (""))" ir "(year < 10) ? ("0") : ("")", kadangi tam yra "%02d"
	*/
   	format(query, sizeof(query), "UPDATE players SET Lead = '%d', NuoKadaDyrikas = '%d/%02d/%02d' WHERE Vardas = '%s'", playerDB[id][plead], day, month, year, GetPlayerNameEx(id));
	mysql_query(query);
	/*
	    @ ES.^: Iðvada: prigrybauta su þaidëjo ID kintamuosiuose.
	*/
	return 1;
}
CMD:skirtipav(playerid, params[])
{
	if(!playerDB[playerid][dpriziuretojas] && playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, "* Tokios komandos nëra. Visos komandos: /pagalba");
	new id, dirikas, post[40], msg[160];
	if(sscanf(params, "ud", id, dirikas)) return SendClientMessage(playerid, BLUE, "* Skirti pavaduotoju: /skirtipav [Vardas_Pavardë/ID] [DARBO ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,RED,"* Tokio þaidëjo nëra.");
	switch(dirikas)
	{
	    case 0:
	    {
			SendClientMessage(playerid, BLUE, "* Paðalinote þaidëjà ið pavaduotojaus pareigø.");
			SendClientMessage(id, BLUE, "* Priþiurëtojo nuosprendþiu jûs paðalintas nuo pavaduotojaus pareigø.");
			playerDB[id][pavdrk]=0;
			new query[128];
			format(query, 128, "UPDATE players SET pavdrk = '%d' WHERE Vardas = '%s'",playerDB[id][pavdrk], GetPlayerNameEx(id));
			mysql_query(query);
			return 1;
		}

		case 1: format(post, sizeof(post), "Apskirties Policijos Dapartamento");
		case 2: format(post, sizeof(post), "Centrinës ligoninës");
		case 3: format(post, sizeof(post), "Taxistø");
		case 4: format(post, sizeof(post), "Mechanikø");
		case 5: format(post, sizeof(post), "Dyleriø");
		case 6: format(post, sizeof(post), "Russian mafijos");
		case 8: format(post, sizeof(post), "Yakuza mafijos");
		case 10: format(post, sizeof(post), "SWAT");
		case 11: format(post, sizeof(post), "Fûristø");
		case 13: format(post, sizeof(post), "Radistø");
		case 14: format(post, sizeof(post), "Baikeriø");
		case 15: format(post, sizeof(post), "Klubo  Costello  deðiniàjà ranka");
		case 16: format(post, sizeof(post), "Klubo  -Patriotai-  deðiniàjà ranka");
		case 17: format(post, sizeof(post), "Armijos");

	}
	playerDB[id][pavdrk] = dirikas;
	format(msg, sizeof(msg),"* Sveikiname, jûs paskirtas naujuoju %s pavaduotojum.", post);
	SendClientMessage(id,GREEN, msg);
	SendClientMessage(id,GREEN, "* Eikite á www.NRMG.LT tinklapá ir sutvarkykite savo forumà.");
	format(msg, sizeof(msg), "* Paskyrëte %s naujuoju %s pavaduotojum.", GetPlayerNameEx(id), post);
	SendClientMessage(playerid,BLUE,msg);
	return 1;
}
CMD:patsistatidinti(playerid, params[])
{
	if(playerDB[playerid][pavdrk] < 1) return 0;
	new str [ 160 ] , pavaz [ 30 ] ;
	SendClientMessage(playerid, BLUE, "* Atsistatidinote nuo pavaduotojaus pareigø.");
	if(playerDB[playerid][pavdrk] == 1) pavaz = "Policijos";
	else if(playerDB[playerid][pavdrk] == 2) pavaz = "Medikø";
	else if(playerDB[playerid][pavdrk] == 3) pavaz = "Taxi";
	else if(playerDB[playerid][pavdrk] == 4) pavaz = "Mechanikø";
	else if(playerDB[playerid][pavdrk] == 5) pavaz = "Dyleriø";
	else if(playerDB[playerid][pavdrk] == 6) pavaz = "Russian mafijos";
	else if(playerDB[playerid][pavdrk] == 8) pavaz = "Yakuza mafijos";
	else if(playerDB[playerid][pavdrk] == 10) pavaz = "SWAT";
	else if(playerDB[playerid][pavdrk] == 11) pavaz = "Fûristø";
	else if(playerDB[playerid][pavdrk] == 13) pavaz = "Radistø";
	else if(playerDB[playerid][pavdrk] == 14) pavaz = "Baikeriø";
	else if(playerDB[playerid][pavdrk] == 15) pavaz = "Klubo  Costello ";
	else if(playerDB[playerid][pavdrk] == 16) pavaz = "Klubo  -Patriotai- ";
	else if(playerDB[playerid][pavdrk] == 17) pavaz = "Armijos";
	playerDB[playerid][pavdrk]=0;
	format(str, sizeof(str), "{ccff00}Þaidëjas {cccc00}%s {ccff00}atsistatidino ið {cccc00}%s {ccff00}pavaduotojaus pareigø {cccc00}." , GetPlayerNameEx ( playerid ) , pavaz );
	SendClientMessageToAll(YELLOW, str);
	return 1;
}
CMD:datsistatidinti(playerid, params[])
{
	if(playerDB[playerid][plead] < 1) return 0;
	new str [ 160 ] , dyrikz [ 30 ] ;
	SendClientMessage(playerid, BLUE, "* Atsistatidinote nuo direktoriaus pareigø.");
	if(playerDB[playerid][plead] == 1) dyrikz = "Policijos";
	else if(playerDB[playerid][plead] == 2) dyrikz = "Medikø";
	else if(playerDB[playerid][plead] == 3) dyrikz = "Taxi";
	else if(playerDB[playerid][plead] == 4) dyrikz = "Mechanikø";
	else if(playerDB[playerid][plead] == 5) dyrikz = "Dyleriø";
	else if(playerDB[playerid][plead] == 6) dyrikz = "Russian mafijos";
	else if(playerDB[playerid][plead] == 8) dyrikz = "Yakuza mafijos";
	else if(playerDB[playerid][plead] == 10) dyrikz = "SWAT";
	else if(playerDB[playerid][plead] == 11) dyrikz = "Fûristø";
	else if(playerDB[playerid][plead] == 13) dyrikz = "Radistø";
	else if(playerDB[playerid][plead] == 14) dyrikz = "Baikeriø";
	else if(playerDB[playerid][plead] == 15) dyrikz = "Klubo  Costello ";
	else if(playerDB[playerid][plead] == 16) dyrikz = "Klubo  -Patriotai- ";
	else if(playerDB[playerid][plead] == 17) dyrikz = "Armijos";
	playerDB[playerid][plead]=0;
	playerDB[playerid][dispejimai] = 0;
	format(str, sizeof(str), "{ccff00}Þaidëjas {cccc00}%s {ccff00}atsistatidino ið {cccc00}%s {ccff00}direktoriaus pareigø {cccc00}." , GetPlayerNameEx (playerid ) , dyrikz ) ;
	SendClientMessageToAll(YELLOW, str);
	return 1;
}
CMD:bai(playerid, params[])
{
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USECELLPHONE) PadetiRaga(playerid);
	if(playerDB[playerid][skambutis]!= -1)
	{
		SendClientMessage(playerid,RED,"* Pokalbis baigtas.");
		new pokalbis = playerDB[playerid][skambutis];
		if(playerDB[pokalbis][skambutis] == playerid)
		{
			playerDB[pokalbis][skambutis]=-1;
			SendClientMessage(pokalbis,RED,"* Pokalbis baigtas.");
			PlayerPlaySound(playerid,1062+1,0,0,0);
		}
		playerDB[playerid][skambutis]=-1;
		PadetiRaga(playerid);
		PlayerPlaySound(playerid,1062+1,0,0,0);
	}
	return 1;
}
CMD:sms(playerid, params[])
{
	new id, zin[128];
	if(CheckMute(playerid)) return 1;
	if(!playerDB[playerid][telefonas]) return SendClientMessage(playerid,RED,"* Jûs neturite telefono!");
	if(playerDB[playerid][telefonostat] == 0) return SendClientMessage(playerid,RED,"* Jûsø telefonas iðjungtas!");
	if(sscanf(params, "us[128]", id, zin)) return SendClientMessage(playerid, BLUE, "* Paraðyti trumpàjà þinutæ: /sms [Vardas_Pavardë/ID] [Tekstas]");
	if(playerDB[playerid][mobsas] < 2) return SendClientMessage(playerid,RED,"* Jums nepakanka pinigø sàskaitoje. Nueikite ir nusipirkite papildymà!");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra!.");
	if(!playerDB[id][telefonas]) return SendClientMessage(playerid, RED, "* Þaidëjas neturi telefono!");
	if(!playerDB[id][telefonostat]) return SendClientMessage(playerid, RED, "* Þaidëjo telefonas iðjungtas.");
	if(playerDB[id][Muted] > gettime())
	{
		SendClientMessage(playerid, RED, "* Þaidëjui kuriam paraðete sms yra uþtildytas, todël jis jums netraðys kol nepasibaigs atitildymo laikas.");
	}
	playerDB[playerid][mobsas] -= 2;
	SendSMS(id, GetPlayerNameEx(playerid), GetPlayerNameEx(id), zin, playerid);
	return 1;
}
CMD:skamb(playerid, params[])
{
	new id, msg[90];
	if(!playerDB[playerid][telefonas]) return SendClientMessage(playerid,RED,"* Jûs neturite telefono!");
	if(playerDB[playerid][telefonostat] ==0) return SendClientMessage(playerid,RED,"* Jûsø telefonas iðjungtas");
	if(sscanf(params, "u", id)) return SendClientMessage(playerid, BLUE, "* Skambinti þaidëjui: /skamb [Vardas_Pavardë/ID]");
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		SendClientMessage(playerid,BLUE,"* Kai baigsite pokalbá, ragelá padëkite su ( /bai ).");
		PakeltiRaga(playerid);
	}
	if(playerDB[playerid][mobsas] < 4) return SendClientMessage(playerid,RED,"* Jums nepkanka pinigø skambinimui, nusipirkite papildymà kioske.");
	if(id==INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Operatorius: Tokio þaidëjo nëra.");
	if(!playerDB[id][telefonas]) return SendClientMessage(playerid, RED, "* Operatorius: Þaidëjas neturi telefono.");
	if(!playerDB[id][telefonostat]) return SendClientMessage(playerid, RED, "* Operatorius: Þaidëjo telefono iðjungtas.");
	if(id==playerid) return SendClientMessage(playerid, RED, "* Operatorius: Linija uþimta.");
	if(playerDB[id][skambutis] !=-1) return SendClientMessage(playerid, RED, "* Operatorius: Linija uþimta.");
	format(msg,sizeof(msg),"* Jums skambina %s. Galite atsiliepti ( /ans ) arba atmesti ( /den ).", GetPlayerNameEx(playerid));
	SendClientMessage(id,BLUE,msg);
	PlaySound(id, 1062);
	format(msg,sizeof(msg),"* Skambinate %s...", GetPlayerNameEx(id));
	SendClientMessage(playerid, GREEN, msg);
	playerDB[playerid][skambutis]=id;
	playerDB[id][rid][5]=playerid;
	return 1;
}
CMD:ans(playerid, params[])
{
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE) PakeltiRaga(playerid);
	new msg[75];
	if(playerDB[playerid][skambutis]!=-1) return SendClientMessage(playerid,RED,"* Jûs jau kalbatës su kaþkuom.");
	if(playerDB[playerid][rid][5]==-1)
	{
		SendClientMessage(playerid,RED,"* Jums niekas neskambina.");
		PlayerPlaySound(playerid,1062+1,0,0,0);
		return 1;
	}
	if(playerDB[playerDB[playerid][rid][5]][skambutis]!=playerid)
	{
		SendClientMessage(playerid,RED,"* Jums niekas neskambina.");
		PlayerPlaySound(playerid,1062+1,0,0,0);
		playerDB[playerid][skambutis]=-1;
		return 1;
	}
	format(msg,sizeof(msg),"* Jûs sujungtas su %s. Pokalbi galite baigti su ( /bai )", GetPlayerNameEx(playerDB[playerid][rid][5]));
	SendClientMessage(playerid,GREEN,msg);
	format(msg,sizeof(msg),"* Jûs sujungtas su %s. Pokalbi galite baigti su ( /bai )", GetPlayerNameEx(playerid));
	SendClientMessage(playerDB[playerid][rid][5],GREEN,msg);
	PlayerPlaySound(playerid,1062+1,0,0,0);
	playerDB[playerid][skambutis]=playerDB[playerid][rid][5];
	playerDB[playerDB[playerid][skambutis]][mobsas]-=4;
	return 1;
}
CMD:den(playerid, params[])
{
	new msg[40];
	if(playerDB[playerid][skambutis]!=-1) return SendClientMessage(playerid,BLUE,"* Pokalbi galite baigti su /bai.");
	if(playerDB[playerid][rid][5]==-1) return SendClientMessage(playerid,RED,"* Jums niekas neskambina.");
	if(playerDB[playerDB[playerid][rid][5]][skambutis]!=playerid)
	{
		SendClientMessage(playerid,RED,"* Jums niekas neskambina.");
		playerDB[playerid][skambutis]=-1;
		return 1;
	}
	format(msg,sizeof(msg),"* %s pokalbis atmestas.", GetPlayerNameEx(playerDB[playerid][rid][5]));
	SendClientMessage(playerid,RED,msg);
	PlayerPlaySound(playerid,1062+1,0,0,0);
	format(msg,sizeof(msg),"* %s atmetë pokalbi.", GetPlayerNameEx(playerid));
	SendClientMessage(playerDB[playerid][rid][5],RED,msg);
	playerDB[playerid][skambutis]=-1;
	playerDB[playerDB[playerid][rid][5]][skambutis]=-1;
	PadetiRaga(playerid);
	return 1;
}
CMD:kviesti(playerid, params[])
{
    if(playerDB[playerid][telefonas] == 0) return SendClientMessage(playerid, RED, "{EB3232}« Jûs neturite telefono!");
    new m, g, pd, p, f, t;
    for(new i; i < MAX_PLAYERS; i++ )
    {
        if(IsPlayerConnected(i))
        {
            //online ++;
            if( playerDB[i][specialybe] == 1 )             pd ++;
            else if( playerDB[i][specialybe] == 2 )        t ++;
            else if( playerDB[i][specialybe] == 3 )        m ++;
            else if( playerDB[i][specialybe] == 13 )       p ++;
            else if( playerDB[i][specialybe] == 5 )        g ++;
            else if( playerDB[i][specialybe] == 6)         f ++;
            //else if( playerDB[i][specialybe] == 17)        sp ++;
        }
    }

    new Kiekis[864];
    format(Kiekis, sizeof Kiekis, "{FFFFFF}« {ff9966}Mechanikai (dirba: %i)\n{FFFFFF}« {ff9966}Medikai (dirba: %i)\n{FFFFFF}« {ff9966}Policija (dirba: %i)\n{FFFFFF}« {ff9966}Medeljino kartelis (dirba: %i)\n{FFFFFF}« {ff9966}Perveþëjø tarnyba (dirba: %i)\n{FFFFFF}« {ff9966}Taksistai (dirba: %i)",m,g,pd,p,f,t);
    ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "Iðkvietimai", Kiekis, "Rinktis", "Atgal");
    return 1;

/*CMD:kviesti(playerid, params[])
{
    new strf[1460], str[110];
    str = "{FFFF00}Serverio tarnybos :\n"; strcat(strf, str);
    str = "\t{ffffff} /02 - Iðkviesti policijà !\n"; strcat(strf, str);
    str = "\t /03 - Iðkviesti medikus !\n"; strcat(strf, str);
    str = "\t /04 - Iðkviesti taksistus !\n"; strcat(strf, str);
    str = "\t /05 - Iðkviesti Prekeivius !\n"; strcat(strf, str);
    str = "\t /06 - Iðkviesti mechanikus !\n"; strcat(strf, str);
    str = "\t /07 - Iðkviesti radistus !\n"; strcat(strf, str);
    str = "\t /08 - Iðkviesti SWAT !\n"; strcat(strf, str);
    str = "\t /09 - Iðkviesti picø iðveþiotojà !\n"; strcat(strf, str);
    ShowPlayerDialog(playerid, 999999, DIALOG_STYLE_MSGBOX, "TARNYBOS :", strf, "Supratau", "");
    return 1;*/
}
CMD:04(playerid, params[])
{
	new zin[128], msg[210];
	if(GetPlayerColor(playerid) == TEXTCOL_GOLD)
	{
		SendClientMessage(playerid,GREEN,"* Taxi atsakytas! Geros dienos");
		SetPlayerColor(playerid,PLAYCOL_HIDDEN);
		playerDB[playerid][IskvietesTaxi] = false;
	}
	else
	{
		if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid,BLUE,"* Iðkviesti taxi: /04 [kur esate?]");
		format(msg,sizeof(msg),"[Taksi Racija] Operatorë Bronyte: %s kvieèia taxi! Vieta: %s. (RAÐYK /vaziuoju %s)", GetPlayerNameEx(playerid), zin, GetPlayerNameEx(playerid));
		SendClientMessage(playerid,YELLOW,"* Taxi jau pakeliui pas jus.");
		SendMessageToTaxi(COLOR,msg);
		SetPlayerColor(playerid,TEXTCOL_GOLD);
		playerDB[playerid][IskvietesTaxi] = true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		SendClientMessage(playerid,COLOR,"* Kai baigsite pokalbá, ragelá padëkite su ( /bai )");
		PakeltiRaga(playerid);
	}
	return 1;
}
CMD:07(playerid, params[])
{
	new zin[128], msg[220];
	if(GetPlayerColor(playerid) == TEXTCOL_GOLD)
	{
		SendClientMessage(playerid,GREEN,"* Radistas atsakytas! Geros dienos");
		SetPlayerColor(playerid,PLAYCOL_HIDDEN);
		playerDB[playerid][IskvietesRadistus] = false;
	}
	else
	{
		if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid,BLUE,"* Iðkviesti radistà: /07 [kur esate?]");
		format(msg,sizeof(msg),"[Radistø Racija] Operatorius Vidmantas: %s kvieèia radistà! Vieta: %s. (RAÐYK /vaziuoju %s)", GetPlayerNameEx(playerid), zin, GetPlayerNameEx(playerid));
		SendClientMessage(playerid,YELLOW,"* Radistas jau pakeliui pas jus.");
		SendMessageToRadistams(COLOR,msg);
		SetPlayerColor(playerid,TEXTCOL_GOLD);
		playerDB[playerid][IskvietesRadistus] = true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		SendClientMessage(playerid,COLOR,"* Kai baigsite pokalbá, ragelá padëkite su ( /bai )");
		PakeltiRaga(playerid);
	}
	return 1;
}
CMD:05(playerid, params[])
{
	new zin[128], msg[280];
	if(GetPlayerColor(playerid) == TEXTCOL_GOLD)
	{
		SendClientMessage(playerid,GREEN,"* Ginkludyleris atsakytas! Geros dienos");
		SetPlayerColor(playerid,PLAYCOL_HIDDEN);
		playerDB[playerid][IskvietesDylerius] = false;
	}
	else
	{
		if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid,BLUE,"* Iðkviesti ginklø dylerá: /05 [kur esate?]");
		format(msg,sizeof(msg),"[Dyleriø Racija] Operatorius Vladas: %s reikalingas dyleris! Vieta: %s .(RAÐYK /vaziuoju %s)", GetPlayerNameEx(playerid), zin, GetPlayerNameEx(playerid));
		SendClientMessage(playerid,BLUE,"* Ginklu dyleris jau pakeliui pas jus.");
		SendMessageToGdyleriai(RED,msg);
		playerDB[playerid][IskvietesDylerius] = true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		SendClientMessage(playerid,COLOR,"* Kai baigsite pokalbá, ragelá padëkite su ( /bai )");
		PakeltiRaga(playerid);
	}
	return 1;
}
CMD:03(playerid, params[])
{
    new zin[128], msg[280];
	if(GetPlayerColor(playerid) == TEXTCOL_RED)
	{
		SendClientMessage(playerid,GREEN,"* Iðkvietimas atsakytas! Geros dienos");
		SetPlayerColor(playerid,PLAYCOL_HIDDEN);
		playerDB[playerid][IskvietesMedikus] = false;
	}
	else
	{
		if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid,BLUE,"* Iðkviesti medikus: /03 [trumpai kodël?]");
		format(msg,sizeof(msg),"[Medikø Racija] Operatorë Martyna: %s kvieèia medikus! (%s). (RAÐYK /vaziuoju %s)", GetPlayerNameEx(playerid), zin, GetPlayerNameEx(playerid));
		SendClientMessage(playerid,GREEN,"* Medikai iðkviesti.");
		SendMessageToMedics(GREEN,msg);
		playerDB[playerid][IskvietesMedikus] = true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		SendClientMessage(playerid,COLOR,"* Kai baigsite pokalbá, ragelá padëkite su ( /bai )");
		PakeltiRaga(playerid);
	}
	return 1;
}
CMD:02(playerid, params[])
{
	new zin[128], msg[280];
	if(GetPlayerColor(playerid) == TEXTCOL_BLUE)
	{
		SendClientMessage(playerid,GREEN,"* Iðkvietimas atsakytas! Geros dienos");
		SetPlayerColor(playerid,PLAYCOL_HIDDEN);
		playerDB[playerid][IskvietesPolicija] = false;
	}
	else
	{
		if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid,BLUE,"* Iðkviesti policijà: /02 [trumpai kodël?]");
		format(msg,sizeof(msg),"[Policijos Racija] Operatore Genutë: %s kvieèia policija! (%s). (RAÐYK /vaziuoju %s)", GetPlayerNameEx(playerid), zin, GetPlayerNameEx(playerid));
 		SendClientMessage(playerid,BLUE,"* Policija atskuba jums padëti.");
 		SendMessageToCops(BLUE,msg);
 		playerDB[playerid][IskvietesPolicija] = true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		SendClientMessage(playerid,COLOR,"* Kai baigsite pokalbá, ragelá padëkite su ( /bai )");
		PakeltiRaga(playerid);
	}
	return 1;
}
CMD:08(playerid, params[])
{
	new zin[128], msg[280];
	if(GetPlayerColor(playerid) == TEXTCOL_BLUE)
	{
		SendClientMessage(playerid,GREEN,"* Iðkvietimas atsakytas! Geros dienos");
		SetPlayerColor(playerid,PLAYCOL_HIDDEN);
		playerDB[playerid][IskvietesSwat] = false;
	}
	else
	{
		if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid,BLUE,"* Iðkviesti SWAT: /08 [trumpai kodël?]");
		format(msg,sizeof(msg),"[SWAT Racija] Operatorë Valdimara: %s kvieèia SWAT pajëgas! (%s). (RAÐYK /vaziuoju %s)", GetPlayerNameEx(playerid), zin, GetPlayerNameEx(playerid));
 		SendClientMessage(playerid,BLUE,"*SWAT atskuba jums padëti.");
 		SendMessageToSwatams(BLUE,msg);
 		playerDB[playerid][IskvietesSwat] = true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		SendClientMessage(playerid,COLOR,"* Kai baigsite pokalbá, ragelá padekite su ( /bai )");
		PakeltiRaga(playerid);
	}
	return 1;
}
CMD:06(playerid, params[])
{
	new zin[128], msg[280];
	if(GetPlayerColor(playerid) == TEXTCOL_GREEN)
	{
		SendClientMessage(playerid,GREEN,"* Iðkvietimas atsakytas! Geros dienos");
		SetPlayerColor(playerid,PLAYCOL_HIDDEN);
		playerDB[playerid][Iskvietesmechanikus] = false;
	}
	else
	{
		if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid,BLUE,"* Iðkviesti mechanikà: /06 [trumpai kodël?]");
		format(msg,sizeof(msg),"** %s kvieèia mechanikà! Vieta  (%s). (RAÐYK /vaziuoju %s)", GetPlayerNameEx(playerid), zin, GetPlayerNameEx(playerid));
		SendClientMessage(playerid,GREEN,"* Mechanikai iðkviesti!.");
 		SendMessageToMechanikas(BLUE,msg);
 		playerDB[playerid][Iskvietesmechanikus] = true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		SendClientMessage(playerid,COLOR,"* Kai baigsite pokalbá, ragelá padëkite su ( /bai )");
		PakeltiRaga(playerid);
	}
	return 1;
}
CMD:09(playerid, params[])
{
	new zin[128], msg[280];
	if(GetPlayerColor(playerid) == TEXTCOL_GREEN)
	{
		SendClientMessage(playerid,GREEN,"* Iðkvietimas atsakytas! Geros dienos");
		SetPlayerColor(playerid,PLAYCOL_HIDDEN);
		playerDB[playerid][IskvietesPica] = false;
	}
	else
	{
		if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid,BLUE,"* Iðkviesti mechanikà: /06 [trumpai kodël?]");
		foreach(Player, i)
		{
			if(playerDB[i][specialybe] == 20)
			{
				format(msg,sizeof(msg),"** %s kvieèia picø iðveþiotojà! Vieta  (%s). (RAÐYK /vaziuoju %s)", GetPlayerNameEx(playerid), zin, GetPlayerNameEx(playerid));
				SendClientMessage(i, BLUE, msg);
			}
		}
		SendClientMessage(playerid,GREEN,"* Picø iðveþiotojas iðkviestas!");
 		playerDB[playerid][IskvietesPica] = true;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
	{
		SendClientMessage(playerid,COLOR,"* Kai baigsite pokalbá, ragelá padëkite su ( /bai )");
		PakeltiRaga(playerid);
	}
	return 1;
}
CMD:me(playerid, params[])
{
    if(CheckMute(playerid)) return 1;
    new zin[128], msg[155], Float:coo[3];
	if(sscanf(params, "s[128]", zin)) return SendClientMessage(playerid, COLOR, "* /me [tekstas]");
	format(msg, sizeof(msg), "* %s %s", GetPlayerNameEx(playerid), zin);
	GetPlayerPos(playerid,coo[0],coo[1],coo[2]);
	for(new player = 0; player < MAX_PLAYERS; player++)
	{
		if(IsPlayerConnected(player))
		{
			if(IsPlayerInRangeOfPoint(player, 20.0, coo[0],coo[1],coo[2]))
			{
				SendClientMessage(player, HOMER, msg);
			}
		}
	}
	return 1;
}
CMD:rt(playerid, params[])
{
	if(CheckMute(playerid)) return 1;
	new zin[128], msg[185];
	if(sscanf(params, "s[128]", zin)) return ServerioZinute(playerid,"Kalbëti per racijà /rt [Tekstas]");
	format(msg,sizeof(msg),"[T-RACIJA] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
	new spc = playerDB[playerid][specialybe];
	switch(spc)
	{
 		case 1: SendMessageToBendraTeisesauga(COLOR_RACIJA,msg);
	    case 10: SendMessageToBendraTeisesauga(COLOR_RACIJA,msg);
	    case 17: SendMessageToBendraTeisesauga(COLOR_RACIJA,msg);
        default: SendClientMessage(playerid, RED,"* Jûs neturite racijos.");
	}
	return 1;
}
CMD:r(playerid, params[])
{
	if(CheckMute(playerid)) return 1;
	new zin[250], msg[300];
	if(playerDB[playerid][specialybe] == 0) return SendClientMessage(playerid, RED,"* Jûs neturite racijos.");
    if(sscanf(params, "s[250]", zin)) return ServerioZinute(playerid,"Kalbëti per racijà /r [Tekstas]");
	switch(playerDB[playerid][specialybe])
	{
	    case 1:
	    {
	        format(msg,sizeof(msg),"[Policijos Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
	    	SendMessageToCops(COLOR_RACIJA,msg);
	    }
 		case 2:
 		{
 			format(msg,sizeof(msg),"[Medikø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
 			SendMessageToMedics(COLOR_RACIJA,msg);
		}
		case 3:
		{
 			format(msg,sizeof(msg),"[Taksi Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
 			SendMessageToTaxi(COLOR_RACIJA,msg);
		}
	    case 4:
		{
 			format(msg,sizeof(msg),"[Mechanikø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToMechanikas(COLOR_RACIJA,msg);
		}
		case 5:
		{
 			format(msg,sizeof(msg),"[Dyleriø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
		    SendMessageToGdyleriai(COLOR_RACIJA,msg);
		}
	    case 10:
		{
			format(msg,sizeof(msg),"[SWAT Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToSwatams(COLOR_RACIJA,msg);
		}
	    case 11:
		{
			format(msg,sizeof(msg),"[Fûristø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToFUROS(COLOR_RACIJA,msg);
		}
		case 13:
		{
		    format(msg, sizeof(msg), "[Radistø Racija] %s: {D4A017} %s",GetPlayerNameEx(playerid), zin);
			SendMessageToRadistams(COLOR_RACIJA,msg);
		}
		case 14:
		{
		    format(msg, sizeof(msg), "[Baikeriø Racija] %s: {D4A017} %s",GetPlayerNameEx(playerid), zin);
		    SendMessageToBaikeriams(COLOR_RACIJA, msg);
		}
		case 15:
		{
		    format(msg, sizeof(msg), "[Klubo  Costello  Racija] %s: {D4A017} %s",GetPlayerNameEx(playerid), zin);
		    SendMessageToKlubui(COLOR_RACIJA, msg);
		}
		case 16:
		{
		    format(msg, sizeof(msg), "[Klubo  -Patriotai-  Racija] %s: {D4A017} %s",GetPlayerNameEx(playerid), zin);
		    SendMessageToKlubuui(COLOR_RACIJA, msg);
		}
		case 17:
		{
		    format(msg, sizeof(msg), "[Armijos Racija] %s: {D4A017} %s",GetPlayerNameEx(playerid), zin);
		    SendMessageToSPD(COLOR_RACIJA, msg);
		}
		case 40:
		{
			format(msg,sizeof(msg),"[Russian Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToRifa(COLOR_RACIJA,msg);
		}
		case 42:
		{
 			format(msg,sizeof(msg),"[Yakuza Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToGstreet(COLOR_RACIJA,msg);
		}
		case 20:
		{
 			format(msg,sizeof(msg),"[Picerininkø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToPicerininkams(COLOR_RACIJA,msg);
		}
		case 22:
		{
 			format(msg,sizeof(msg),"[Valytojø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToValytojams(COLOR_RACIJA,msg);
		}
		case 24:
		{
 			format(msg,sizeof(msg),"[Medkirèiø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToMedkerciams(COLOR_RACIJA,msg);
		}
		case 26:
		{
 			format(msg,sizeof(msg),"[Gaisrininkø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToGaisrininkams(COLOR_RACIJA,msg);
		}
		case 27:
		{
 			format(msg,sizeof(msg),"[Kunigø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToKunigams(COLOR_RACIJA,msg);
		}
		case 28:
		{
 			format(msg,sizeof(msg),"[Narø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToNarams(COLOR_RACIJA,msg);
		}
		case 29:
		{
 			format(msg,sizeof(msg),"[Limuzininkø Racija] %s: {D4A017}%s", GetPlayerNameEx(playerid), zin);
			SendMessageToLimuzininkams(COLOR_RACIJA,msg);
		}
	}
	return 1;
}
CMD:bendradarbiai(playerid, params[])
{
	new s = 0, str[28];
	if(playerDB[playerid][specialybe] == 0) SendClientMessage(playerid, RED, "* Tu neikur nedirbi tad ðios komandos naudoti negali.");
    new spc = playerDB[playerid][specialybe];
    switch(spc)
    {
        default:
        {
            SendClientMessage(playerid, YELLOW, "* Prisijungæ bendradarbiai:");
            for(new p = 0; p < MAX_PLAYERS; p++)
            {
	            if(IsPlayerConnected(p) && playerDB[p][specialybe] == spc)
				{
					s++;
					format(str, sizeof(str), "%d. %s.", s, GetPlayerNameEx(p));
					SendClientMessage(playerid, BLUE, str);
				}
			}
        }
	}
	return 1;
}
CMD:mpirkti ( playerid ) {
	if(!mTurguje[playerid]) return SendClientMessage(playerid,0xFF0000AA,"Neesate maðinø turguje!");
	if(CanBuyCar[playerid]> gettime ( ) ) return SendClientMessage(playerid,0xFF0000AA,"Ðià komandà galite naudoti tik kas 60 sekundþiø.");
	CanBuyCar[playerid]= gettime()+SEKUNDES(60);
	new cost , model , vPos = random ( 4 ) ;
	switch ( playerDB [ playerid ] [ vChoosedCategory ] ) {
		case 1: cost = vOldCars [ playerDB [ playerid ] [ vPressed ] ] [ vsCost ] , model = vOldCars [ playerDB [ playerid ] [ vPressed ] ] [ vsModel ] ;
		case 2: cost = vSportCars [ playerDB [ playerid ] [ vPressed ] ] [ vsCost ] , model = vSportCars [ playerDB [ playerid ] [ vPressed ] ] [ vsModel ] ;
		case 3: cost = vMotoCars [ playerDB [ playerid ] [ vPressed ] ] [ vsCost ] , model = vMotoCars [ playerDB [ playerid ] [ vPressed ] ] [ vsModel ] ;
	}
	if ( playerCar1 [ playerid ] != -1 && playerCar2 [ playerid ] != -1 )
		return SendClientMessage ( playerid , RED , "* {ffffff}Jûs pasiekete {00aa46}maksimalaus {ffffff}maðinø kiekio!" ) ;
	if ( GetPlayerMoneyA ( playerid ) < cost )
		return SendClientMessage ( playerid , RED , "* {ffffff}Jûs neturite pakankamai {00aa46}pinigø!" ) , SelectTextDraw ( playerid, 0xFFFFFFFF ) ;
	GivePlayerMoneyA ( playerid , -cost ) ;
	for ( new tds = 0; tds < 11; tds ++ ) PlayerTextDrawHide ( playerid , CarShop [ tds ] [ playerid ] ) ;
	CancelSelectTextDraw ( playerid ) ;
	SetPlayerVirtualWorld ( playerid, 0 ) ;
	SetPlayerPos ( playerid, 2369.5515,243.9807,26.4900 ) ;
	SetPlayerFacingAngle ( playerid, 320.0 ) ;
	TogglePlayerControllable ( playerid, 1 ) ;
	SetCameraBehindPlayer ( playerid ) ;
	SendClientMessage ( playerid , -1 , "[ {00aa46}AUTO SALONAS {ffffff}] : Sëkmingai {00aa46}ásigyjote {ffffff}tr.priemonë!" ) ;
	SendClientMessage ( playerid , -1 , "[ {00aa46}AUTO SALONAS {ffffff}] : Maðinø valdymas {00aa46}/masinos" ) ;
	if ( playerCar1 [ playerid ] == -1 ) {
		playerCar1 [ playerid ] = CreateVehicle ( model, vSpawns[vPos][0], vSpawns[vPos][1], vSpawns[vPos][2], vSpawns[vPos][3], playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1 ) ;
		format ( vehicleDB [ playerCar1 [ playerid ] ] [ vOwner ] , 50 , "%s" , GetPlayerNameEx ( playerid ) ) ;
		for ( new tune = 0; tune < 13; tune++ ) vehicleDB [ playerCar1 [ playerid ] ] [ vTune ] [ tune ] = 0;
		for ( new color = 0; color < 2; color++ ) vehicleDB [ playerCar1 [ playerid ] ] [ vColor ] [ color ] = playerDB [ playerid ] [ vVehColor ] ;
		vehicleDB [ playerCar1 [ playerid ] ] [ vPaintjob ] = -1;
		vehicleDB [ playerCar1 [ playerid ] ] [ vLocked ] = true;
		vehicleDB [ playerCar1 [ playerid ] ] [ Rida ] = 0.0;
		vehicleDB [ playerCar1 [ playerid ] ] [ gas ] = 40;
		vehicleDB [ playerCar1 [ playerid ] ] [ vLastPos ] [ 0 ] = vSpawns [ vPos ] [ 0 ] ;
		vehicleDB [ playerCar1 [ playerid ] ] [ vLastPos ] [ 1 ] = vSpawns [ vPos ] [ 1 ] ;
		vehicleDB [ playerCar1 [ playerid ] ] [ vLastPos ] [ 2 ] = vSpawns [ vPos ] [ 2 ] ;
		vehicleDB [ playerCar1 [ playerid ] ] [ vLastPos ] [ 3 ] = vSpawns [ vPos ] [ 3 ] ;
		vehicleDB [ playerCar1 [ playerid ] ] [ vModel ] = model;
		vehicleDB [ playerCar1 [ playerid ] ] [ vOwned ] = true;
		SetVehicleParamsEx ( playerCar1 [ playerid ], false, false, false, false, false, false, false ) ;
		new query [ 200 ];
		format ( query , sizeof ( query ) , "INSERT INTO cars (owner,gas,model,color1,color2) VALUES ('%s',%d,%d,%d,%d)" , GetPlayerNameEx ( playerid ) , vehicleDB [ playerCar1 [ playerid ] ] [ gas ] , model , playerDB [ playerid ] [ vVehColor ] , playerDB [ playerid ] [ vVehColor ] ) ;
		mysql_query ( query ) ;
		format ( query , sizeof ( query ) , "[INFO] {bebebe}Þaidëjas {ff9000}%s {bebebe}sëkmingai ásigyjo savo {ff9000}1 {bebebe}tr.priemonë!" , GetPlayerNameEx ( playerid ) ) ;
		SendMessageToAdmins ( RED , query ) ;
		format ( query , sizeof ( query ) , "NRMG:%d%d%d" , random ( 9 ) , random ( 10-6 ) , random ( 8-4 ) ) ;
		SetVehicleNumberPlate ( playerCar1 [ playerid ] , query ) ;
		format ( vehicleDB [ playerCar1 [ playerid ] ] [ numeriai ] , 10 , "%s" , query ) ;
	} else if ( playerCar1 [ playerid ] != -1 && playerCar2 [ playerid ] == -1 )  {
		playerCar2 [ playerid ] = CreateVehicle ( model, vSpawns[vPos][0], vSpawns[vPos][1], vSpawns[vPos][2], vSpawns[vPos][3], playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1 ) ;
		format ( vehicleDB [ playerCar2 [ playerid ] ] [ vOwner ] , 50 , "%s" , GetPlayerNameEx ( playerid ) ) ;
		for ( new tune = 0; tune < 13; tune++ ) vehicleDB [ playerCar2 [ playerid ] ] [ vTune ] [ tune ] = 0;
		for ( new color = 0; color < 2; color++ ) vehicleDB [ playerCar2 [ playerid ] ] [ vColor ] [ color ] = playerDB [ playerid ] [ vVehColor ] ;
		vehicleDB [ playerCar2 [ playerid ] ] [ vPaintjob ] = -1;
		vehicleDB [ playerCar2 [ playerid ] ] [ vLocked ] = true;
		vehicleDB [ playerCar2 [ playerid ] ] [ Rida ] = 0.0;
		vehicleDB [ playerCar2 [ playerid ] ] [ gas ] = 40;
		vehicleDB [ playerCar2 [ playerid ] ] [ vLastPos ] [ 0 ] = vSpawns [ vPos ] [ 0 ] ;
		vehicleDB [ playerCar2 [ playerid ] ] [ vLastPos ] [ 1 ] = vSpawns [ vPos ] [ 1 ] ;
		vehicleDB [ playerCar2 [ playerid ] ] [ vLastPos ] [ 2 ] = vSpawns [ vPos ] [ 2 ] ;
		vehicleDB [ playerCar2 [ playerid ] ] [ vLastPos ] [ 3 ] = vSpawns [ vPos ] [ 3 ] ;
		vehicleDB [ playerCar2 [ playerid ] ] [ vModel ] = model;
		vehicleDB [ playerCar2 [ playerid ] ] [ vOwned ] = true;
		SetVehicleParamsEx ( playerCar2 [ playerid ], false, false, false, false, false, false, false ) ;
		new query [ 200 ];
		format ( query , sizeof ( query ) , "INSERT INTO cars2 (owner,gas,model,color1,color2) VALUES ('%s',%d,%d,%d,%d)" , GetPlayerNameEx ( playerid ) , vehicleDB [ playerCar2 [ playerid ] ] [ gas ] , model , playerDB [ playerid ] [ vVehColor ] , playerDB [ playerid ] [ vVehColor ] ) ;
		mysql_query ( query ) ;
		format ( query , sizeof ( query ) , "[INFO] {bebebe}Þaidëjas {ff9000}%s {bebebe}sëkmingai ásigyjo savo {ff9000}2 {bebebe}tr.priemonë!" , GetPlayerNameEx ( playerid ) ) ;
		SendMessageToAdmins ( RED , query ) ;
		format ( query , sizeof ( query ) , "NRMG:%d%d%d" , random ( 9 ) , random ( 10-6 ) , random ( 8-4 ) ) ;
		SetVehicleNumberPlate ( playerCar2 [ playerid ] , query ) ;
		format ( vehicleDB [ playerCar2 [ playerid ] ] [ numeriai ] , 10 , "%s" , query ) ;
	}
	playerDB [ playerid ] [ vVehColor ] = -1;
	playerDB [ playerid ] [ vChoosedCategory ] = -1;
	playerDB [ playerid ] [ vPressed ] = -1;
	DestroyVehicle ( playerDB [ playerid ] [ vVeh ] ) ;
	playerDB [ playerid ] [ vVeh ] = -1;
	return 1;
}
CMD:mexit ( playerid ) {
	if(mTurguje[playerid]){mTurguje[playerid]=false;}
	ExitFromCarShop ( playerid ) ;
	return 1;
}
CMD:nariai(playerid, params[])
{
	new s = 0, str[28];
    new spc = playerDB[playerid][specialybe];
    switch(spc)
    {
        case 40..42:
        {
            SendClientMessage(playerid, YELLOW, "* Prisijungæ mafijos nariai:");
            for(new p = 0; p < MAX_PLAYERS; p++)
            {
	            if(IsPlayerConnected(p) && playerDB[p][specialybe] == spc)
				{
					s++;
					format(str, sizeof(str), "%d. %s.", s, GetPlayerNameEx(p));
					SendClientMessage(playerid, BLUE, str);
				}
			}
        }
        default: return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
	}
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    return 1;
}


public PakeistiRadija(vehicleid)
{
	new szRadio[49];
	format(szRadio, 49, "» Grojama stotis: {FFB000}%s", RadijosPavadinimas[vehicleid]);
	if(isnull(RadijosURL[vehicleid])) StopAudioStreamForVehicle(vehicleid);
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
	    if(!IsPlayerConnected(p) || !IsPlayerInVehicle(p, vehicleid)) continue;
	    SendClientMessage       (p, 0x6EF83CFF, szRadio);
	    PlayAudioStreamForPlayer(p, RadijosURL[vehicleid]);
	}
	return true;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{


    playerDB[playerid][masina] = vehicleid;
    playerDB[playerid][AntiHomeKint] = vehicleid;
	if(IsPlayerNPC(playerid)) return 1;
	if(playerDB[playerid][ikalintas]) return SetPlayerHealthEx(playerid, 0);
	if(Tazed[playerid]) return 1;
	
	if(vehicleDB[vehicleid][vLocked])
	{
	 	new msg[128];
	 	if(strcmp(GetPlayerNameEx(playerid),vehicleDB[vehicleid][vOwner],true))
	  	{
	        format(msg,sizeof(msg),"* Transporto priemonë yra uþrakinta, ji priklauso: %s",vehicleDB[vehicleid][vOwner]);
			SendClientMessage(playerid,GREEN,msg);
			Stop(playerid);
			return 1;
		}
        format(msg,sizeof(msg),"* Transporto priemonë yra uþrakinta, ji priklauso: %s",vehicleDB[vehicleid][vOwner]);
		SendClientMessage(playerid,GREEN,msg);
	}

	if(!ispassenger)
	{
		if(VehicleHasDriver(vehicleid)) return SendClientMessage(playerid, -1, ""COL_ERROR"××× {ffffff}Tr. priemonæ jau kaþkas vairuoja, todël iðmesti jo negalite!");
	}

    if(Ribotuvas[playerid] == true)
	{
		SetPlayerSpeedCap(playerid, GREICIO_RIBA);
	}
    else
    {
		DisablePlayerSpeedCap(playerid);
	}

    new	model = GetVehicleModel(vehicleid);

	if(model == 401 || model == 581 || model == 469)
	{
		DisablePlayerRaceCheckpoint(playerid);
	}
    
 	if(ispassenger)
	{
	    if(model == 519)
	    {
	       	playerDB[playerid][lektuvas]=vehicleid;
			SetPlayerInterior(playerid,1);
			SetPlayerPos(playerid,2.384830,33.103397,1199.849976);
			SetPlayerVirtualWorld(playerid,vehicleid);
	    }
	    return 1;
	}
 	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    //RemovePlayerAttachedObject(playerid, SLOT);

	if(vehicleid >= vmcar[0] && vehicleid <= vmcar[10])
	{
  		DisablePlayerCheckpointEx(playerid, 16);
	}
	
	if(GetPlayerState(playerid)==PLAYER_STATE_PASSENGER)
	{
		new taximodelis = GetVehicleModel(GetPlayerVehicleID(taxiDB[playerid][taksistas]));
		if(taxiDB[playerid][imti]) //TAXI.Skaiciuojam, tik jei pinigai yra imami
    	{
			new Float:Viet[2][3];
			GetPlayerPos(playerid,Viet[0][0],Viet[0][1],Viet[0][2]);
			Viet[1][0] = taxiDB[playerid][Start][0];
			Viet[1][1] = taxiDB[playerid][Start][1];
			Viet[1][2] = taxiDB[playerid][Start][2];
			

   			new kaina = ((floatround(floatabs(Viet[0][0]-Viet[1][0]))+floatround(floatabs(Viet[0][1]-Viet[1][1]))+floatround(floatabs(Viet[0][2]-Viet[1][2]))))/5;
			taxiDB[playerid][imti]=false;

			if(taximodelis == 420)
			{
				kaina = kaina/2;
			}
			if(taximodelis == 409)
			{
			    kaina = kaina/2;
			}
			    
			if(GetPlayerMoneyA(playerid) >= kaina)
			{
				new msg[120];
			    format(msg,sizeof(msg),"* Keleivis iðlipo, mokestis uþ paslaugas: %s ", konvertuoti_pinigus(kaina));
				SendClientMessage(taxiDB[playerid][taksistas],GREEN,msg);
				format(msg,sizeof(msg),"* Aèiû, kad naudojatës mûsø paslaugomis, mokestis: %s ", konvertuoti_pinigus(kaina));
				SendClientMessage(playerid,GREEN,msg);

				GivePlayerMoneyA(taxiDB[playerid][taksistas],kaina);
				playerDB[playerid][banke]-=kaina;
			    return 1;
			}
			else
			{
			    if(playerDB[playerid][banke] >= kaina)
			    {
			        new msg[120];
					GivePlayerMoneyA(taxiDB[playerid][taksistas],kaina);
					playerDB[playerid][banke]-=kaina;
					format(msg,sizeof(msg),"* Keleivis iðlipo, mokestis uþ paslaugas: %s ", konvertuoti_pinigus(kaina));
					SendClientMessage(taxiDB[playerid][taksistas],GREEN,msg);
					format(msg,sizeof(msg),"* Aèiû, kad naudojatës mûsø paslaugomis, mokestis: %s ", konvertuoti_pinigus(kaina));
					SendClientMessage(playerid,GREEN,msg);
					return 1;
				}
				else
				{
					SendClientMessage(taxiDB[playerid][taksistas],GREEN,"* Keleivis neturi pinigø susimokëti uþ paslaugas!");
					SendClientMessage(playerid,GREEN,"* Neturëjote pinigø susimokëti uþ litus!");
					return 1;
				}
			}
		}
	}
	return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(IsPlayerNPC(playerid)) return 1;
    new vehicleid = GetPlayerVehicleID(playerid);
	if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		if(playerDB[playerid][AntiHomeKint] != vehicleid)
		{
			new str[90];
			format(str, sizeof(str), "[Serveris][3] %s uþblokuotas 1 val uþ HOME naudojimà.", GetPlayerNameEx(playerid));
			SendClientMessageToAll(RED, str);
      		playerDB[playerid][BanLaikas] = gettime() + 3600;
        	SavePlayerData(playerid);
       		SetTimerEx("KickEx", 100, false, "d", playerid);
			return 1;
		}
	}
    if(vehicleid >= vmcar[0] && vehicleid <= vmcar[10])
	{
		DisablePlayerCheckpointEx(playerid, 16);
	}
    if(newstate == PLAYER_STATE_DRIVER)
	{
    	new model = GetPlayerVehicleSeat(playerid);
    	if(model != 128)
    	{
    		if(!model)
    		{
        		model = GetVehicleModel(GetPlayerVehicleID(playerid));
       			if(!(400 <= model <= 611) || MaxPassengers[model - 400 >>> 3] >>> ((model - 400 & 7) << 2) & 0xF == 15) return Kick(playerid);
    		}
    		else return Kick(playerid);
    	}
	}
	else if(newstate == PLAYER_STATE_PASSENGER)
	{
    	new model = GetVehicleModel(GetPlayerVehicleID(playerid));
    	if(400 <= model <= 611)
    	{
    		model -= 400;
    		new seat = GetPlayerVehicleSeat(playerid);
    		if(seat != 128)
    		{
  				model = (MaxPassengers[model >>> 3] >>> ((model & 7) << 2)) & 0xF;
        		if(!model || model == 15) return Kick(playerid);
        		else if(!(0 < seat <= model)) return Kick(playerid);
    		}
    		else return Kick(playerid);
		}
	}
    if( newstate == PLAYER_STATE_DRIVER )
	{
	    new temp;
	    temp = GetVehicleModel( GetPlayerVehicleID( playerid ) );
	    BE_Play_Check[ playerid ] = true;
	    for(new i; i != sizeof( BE_Bad_Vehs ); i++ )
	    {
	        if( temp == BE_Bad_Vehs[ i ] )
	        {
	            BE_Play_Check[ playerid ] = false;
	            break;
	        }
	    }
	}
	if( oldstate == PLAYER_STATE_DRIVER )
	{
    	BE_Play_Check[ playerid ] = false;
	}
    if(newstate == PLAYER_STATE_ONFOOT && oldstate == PLAYER_STATE_DRIVER)
	{
	    ExitFromCarShop(playerid);
	}
    if(newstate == PLAYER_STATE_DRIVER)//  || newstate == PLAYER_STATE_PASSENGER iðimtas spidometras passenger
    {
		SetPlayerArmedWeapon(playerid, 0);
		
        if(playerDB[playerid][vChoosedCategory] == -1)
        {
	        if(!IsABike(vehicleid))
	        {
				if(!isnull(RadijosURL[vehicleid]))
	            {
					new szRadio[49];
	                format(szRadio, 49, "» Grojama stotis: {FFB000}%s", RadijosPavadinimas[vehicleid]);
	                SendClientMessage(playerid, 0x6EF83CFF, szRadio);
	                PlayAudioStreamForPlayer(playerid, RadijosURL[vehicleid]);
				}
	            SpeedoTimer [ playerid ] = SetTimerEx ( "UpdateSpeedo",100,true,"i",playerid) ;
	        }
		    if(vehicleDB[vehicleid][vOwned] && vehicleDB[vehicleid][vLocked])
			{
			    if(strcmp(vehicleDB[vehicleid][vOwner], GetPlayerNameEx(playerid), false))
			    {
			        if(playerDB[playerid][admin] < 4)
			        {
						Kick(playerid);
						return 0;
					}
			    }
			}
		}
    }
    if(newstate == PLAYER_STATE_ONFOOT && (oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER))
	{
		StopAudioStreamForPlayer(playerid);
		KillTimer ( SpeedoTimer [ playerid ] ) ;
		HideSidometer ( playerid ) ;

		playerDB[playerid][Dirzas] = false;
	}

 	if(newstate == PLAYER_STATE_DRIVER)
 	{
		new model = GetVehicleModel(vehicleid);
        new spec = playerDB[playerid][specialybe];
        
		//Automobiliø teisës
        if(vehicleid >= vmcar[0] && vehicleid <= vmcar[5])
		{
			if(GetPlayerMoneyA(playerid) < 500)
			{
				SendClientMessage(playerid, RED, "* REGITRA: Egzamino kaina 500 euru, bet jûs tiek neturite.");
				RemovePlayerFromVehicle(playerid);
				SetVehicleToRespawn(vehicleid);
				return 1;
			}
			if(playerDB[playerid][teises])
			{
				SendClientMessage(playerid,0xFF000090,"* REGITRA: Jûs jau turite maðinos teises.");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][teorija])
			{
				SendClientMessage(playerid,0xFF000090,"* REGITRA: Jûs neturite iðlaikæs teorinio testo regitros pastate!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][teises])
			{
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "REGITRA", "Ar norite laikyti vairavimo egzaminà? Kainà 500", "Taip", "Ne");
				return 1;
			}
		}
		//Moto teisës
        if(vehicleid >= vmcar[6] && vehicleid <= vmcar[8])
		{
			if(GetPlayerMoneyA(playerid) < 500)
			{
				SendClientMessage(playerid, RED, "* REGITRA: Egzamino kaina 500 euru, bet jûs tiek neturite.");
				RemovePlayerFromVehicle(playerid);
				SetVehicleToRespawn(vehicleid);
				return 1;
			}
			if(playerDB[playerid][Mteises])
			{
				SendClientMessage(playerid,0xFF000090,"* REGITRA: Jûs jau turite motociklo teises.");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][teorija])
			{
				SendClientMessage(playerid,0xFF000090,"* REGITRA: Jûs neturite iðlaikæs teorinio testo regitros pastate!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][Mteises])
			{
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "REGITRA", "Ar norite laikyti vairavimo egzaminà? Kainà 500 euru", "Taip", "Ne");
				return 1;
			}
		}
		//Furu teisës
		if(vehicleid >= vmcar[9] && vehicleid <= vmcar[10])
		{
			if(GetPlayerMoneyA(playerid) < 500)
			{
				SendClientMessage(playerid, RED, "* Egzamino kaina 500 euru, bet jûs tiek neturite.");
				RemovePlayerFromVehicle(playerid);
				SetVehicleToRespawn(vehicleid);
				return 1;
			}
			if(playerDB[playerid][FTeises])
			{
				SendClientMessage(playerid,0xFF000090,"* REGITRA: Jûs jau turite furø teises.");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][teorija])
			{
				SendClientMessage(playerid,0xFF000090,"* REGITRA: Jûs neturite iðlaikæs teorinio testo regitros pastate!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][FTeises])
			{
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "REGITRA", "Ar norite laikyti vairavimo egzaminà? Kainà 500", "Taip", "Ne");
				return 1;
			}
		}
//------------------------------------------------------------------------------
	 	//APfuros
		if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9])
		{
	  		if(spec != 11 && playerDB[playerid][admin] < 5)
	    	{
			    KlaidosZinute(playerid,"* Jus ne {FF8C00}Fûristas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
	 	}
//------------------------------------------------------------------------------
		//AP PD ILIPIMAS I CAR
        if(model == 523 || model == 596)
        {
	  		if(spec != 1 && playerDB[playerid][admin] < 5)
	    	{
		     	KlaidosZinute(playerid,"* Jus ne {FF8C00}Policininkas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}

		//Policija.
		if(model == 599 || model == 427 || model == 497)
		{
	  		if(spec != 1 && playerDB[playerid][admin] < 5)
	    	{
		     	KlaidosZinute(playerid,"* Jus ne {FF8C00}Policininkas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(playerDB[playerid][rangas] < 3 && playerDB[playerid][admin] < 5)
	    	{
		     	KlaidosZinute(playerid,"* Norint vaþinëti su ðia maðina turite turëti patruliuojanèio policininko rangà.");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
//------------------------------------------------------------------------------
        //AP MEDIKU ILIPIMAS I CAR
		if(vehicleid >= medcar[0] && vehicleid <= medcar[4])
		{
	  		if(spec != 2 && playerDB[playerid][admin] < 5)
	    	{
			    KlaidosZinute(playerid,"* Jus ne {FF8C00}Medikas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(playerDB[playerid][rangas] < 2 && playerDB[playerid][admin] < 5)
	    	{
		     	KlaidosZinute(playerid,"* Norint vaþinëti ðia maðina turite turëti patyrusio mediko rangà.");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
	 	}
	 	if(vehicleid >= medcar[5] && vehicleid <= medcar[10])
		{
	  		if(spec != 2 && playerDB[playerid][admin] < 5)
	    	{
			    KlaidosZinute(playerid,"* Jus ne {FF8C00}Medikas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
	 	}
//------------------------------------------------------------------------------
        //AP TAXISTU ILIPMAS I CAR
	 	if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4])
		{
	 		if(spec != 3 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Taksistas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
		//Baikeriø
	 	if(vehicleid >= BaikeriuCar[0] && vehicleid <= BaikeriuCar[9])
		{
	 		if(spec != 14 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Baikeris {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
		//Klubo.
	 	if(vehicleid >= KluboCar[0] && vehicleid <= KluboCar[5])
		{
	 		if(spec != 15 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00} Costello  {FF0000}klubo narys !");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			SendClientMessage(playerid,RED," Sëkmës mûsiðká, palaikyk tvarkà !");
		}
		//Klubo.
	 	if(vehicleid >= Klubo2Car[0] && vehicleid <= Klubo2Car[5])
		{
	 		if(spec != 16 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00} -Patriotai-  {FF0000}klubo narys !");
				Stop(playerid);
				return 1;
			}
			SendClientMessage(playerid,RED," Sëkmës mûsiðká, palaikyk tvarkà !");
		}
		//SPD.
	 	if(vehicleid >= spdcar[0] && vehicleid <= spdcar[26])
		{
	 		if(spec != 17 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00} KARININKAS !");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
		//AP MECHNAIKU ILIPMAS I CAR
	 	if(model == 525)
		{
	 		if(spec != 4 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Mechanikas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
//------------------------------------------------------------------------------
		//AP RIFA ILIPIMAS I CAR
		if(vehicleid >= RifosCar[0] && vehicleid <= RifosCar[8])
		{
	 		if(spec != 40 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Russian mafijà {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
//------------------------------------------------------------------------------
		//Yakuza ILIPIMAS I CAR
		if(vehicleid >= gstreetcar[0] && vehicleid <= gstreetcar[8])
		{
	 		if(spec != 42 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Yakuza mafijà {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
//------------------------------------------------------------------------------
        //AP DYLERIU ILIPMAS I CAR BURRITO
		if(vehicleid >= dylcar[6] && vehicleid <= dylcar[11])
		{
	 		if(spec != 5 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Dyleris {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
		
		if(vehicleid >= dylcar[0] && vehicleid <= dylcar[5])
		{
	 		if(spec != 5 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Dyleris {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(playerDB[playerid][rangas] < 2 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Kad vairuotum ðità transportà tavo rangas turi bûti apsipratusio!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
		
		//SWAT tr.priemoniø priskirimas .
		if(model == 490 || model == 528)
		{
	 		if(spec != 10 && playerDB[playerid][admin] < 5)
	   		{
				SendClientMessage(playerid, RED, "* Jus ne {FF8C00}SWAT {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
//------------------------------------------------------------------------------
		//Radistai
		if(vehicleid >= RadistuCar[0] && vehicleid <= RadistuCar[8])
		{
	 		if(spec != 13 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Radistas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
//------------------------------------------------------------------------------
		//AP Picerininku ILIPMAS I CAR
		if(model == 448)
		{
	 		if(spec != 20 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Picerininkas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
			ServerioZinute(playerid,"Vaþinëkite po miestelá ir siûlykite picas þmonëms su /pica");
			ServerioZinute(playerid,"Taip pat pasiimkite picà ið picerijos vidaus ir vaþiokite á namus uþ tai gausite dar +5 uþ atveþimà.");
			SendClientMessage(playerid, -1, "{FF9900}________________________________________________________________");
			if(!playerDB[playerid][vezapica]) SetPlayerCheckpointEx(playerid, 1,1356.7487,233.2664,19.5669,2);
		}
//------------------------------------------------------------------------------
		//Valytojø .
		if(model == 574 || model == 552)
		{
	 		if(spec != 22 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Valytojas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
			if(playerDB[playerid][KelintasVALCP] == 0)
			{
				SetPlayerCheckpointEx(playerid, 17,925.7020,-180.0647,10.3276, 4.0);
				playerDB[playerid][KelintasVALCP] ++;
			}
		}
		//Medkirèiø .
	 	if(model == 600)
		{
	 		if(spec != 24 && playerDB[playerid][admin] < 5)
	   		{
				KlaidosZinute(playerid,"* Jus ne {FF8C00}Medkertys {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
		//Gaisrinine
	 	if(model == 407)
		{
	 		if(spec != 26 && playerDB[playerid][admin] < 5)
	   		{
				SendClientMessage(playerid, RED, "* Jus ne {FF8C00}Gaisrininkas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
		//Kunigai
	 	if(model == 442)
		{
	 		if(spec != 27 && playerDB[playerid][admin] < 5)
	   		{
				SendClientMessage(playerid, RED, "* Jus ne {FF8C00}Kûnigas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
		//Narai
	 	if(model == 472 || model == 473)
		{
	 		if(spec != 28 && playerDB[playerid][admin] < 5)
	   		{
				SendClientMessage(playerid, RED, "* Jus ne {FF8C00}Naras {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
		//Limuzinistai
		if(model == 409)
		{
	 		if(spec != 29 && playerDB[playerid][admin] < 5)
	   		{
				SendClientMessage(playerid, RED, "* Jus ne {FF8C00}Limuzinininkas {FF0000}!");
				Stop(playerid);
				return 1;
			}
			if(!playerDB[playerid][uniformd]) return RemovePlayerFromVehicle(playerid), KlaidosZinute(playerid,"Turite buti su uniforma");
			AlgosZinutes(playerid);
		}
//------------------------------------------------------------------------------
		if(vehicleid == misijoscar[0])
		{
	 		if(playerDB[playerid][radomcar] == 1)
	   		{
				KlaidosZinute(playerid,"* Jûs jau esate radæs ðità motociklà!");
				Stop(playerid);
				return 1;
			}
			playerDB[playerid][radomcar] = 1;
			GivePlayerMoneyA(playerid, 1000);
			SetPlayerScore(playerid, GetPlayerScore(playerid) + 10);
			KlaidosZinute(playerid,"* Radote motociklà keliauninkà todël gavote {FF0000}1.000{FFFFFF} ir {FF0000}10{FFFFFF}XP");
			Stop(playerid);
		}
//------------------------------------------------------------------------------
		if(vehicleid == misijoscar[1])
		{
	 		if(playerDB[playerid][radomcar1] == 1)
	   		{
				KlaidosZinute(playerid,"* Jûs jau esate radæs ðità motociklà!");
				Stop(playerid);
				return 1;
			}
			playerDB[playerid][radomcar1] = 1;
			GivePlayerMoneyA(playerid, 1000);
			SetPlayerScore(playerid, GetPlayerScore(playerid) + 10);
			KlaidosZinute(playerid,"* Radote motociklà keliauninkà todël gavote {FF0000}1.000{FFFFFF} ir {FF0000}10{FFFFFF}XP");
			Stop(playerid);
		}
//------------------------------------------------------------------------------
		if(vehicleid == misijoscar[2])
		{
	 		if(playerDB[playerid][radomcar2] == 1)
	   		{
				KlaidosZinute(playerid,"* Jûs jau esate radæs ðità motociklà!");
				Stop(playerid);
				return 1;
			}
			playerDB[playerid][radomcar2] = 1;
			GivePlayerMoneyA(playerid, 1000);
   			SetPlayerScore(playerid, GetPlayerScore(playerid) + 10);
			KlaidosZinute(playerid,"* Radote motociklà keliauninkà todël gavote {FF0000}1.000{FFFFFF} ir {FF0000}10{FFFFFF}XP");
			Stop(playerid);
		}
//------------------------------------------------------------------------------
		if(vehicleid >= nuomcar[0] && vehicleid <= nuomcar[7])
	{
			if ( playerDB[playerid][NaujokuLaikas] > gettime())
		{
			SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate naujokas, todël Jums nuomà visiðkai nemokama {ccff66}! {37f467}Sëkmës kelyje {ccff66}!") ;
		}
			else
		{
			SendClientMessage(playerid, RED,"{37f467} Iðsinuomavote tr.priemonæ uþ {ccff66}50 {37f467} {ccff66}.");
			SendClientMessage(playerid, RED,"{37f467} Nuomos laikas neribotas, kol neiðlipsite ið ðios tr.priemonæs {ccff66}. {37f467}Sëkmës kelyje {ccff66}!");
			GivePlayerMoneyA(playerid, -50);
		}
			return 1;
	}
//------------------------------------------------------------------------------
  		if(model == 510)
		{
	        SendClientMessage(playerid, RED,"{37f467} Ðis dviratis Jums {ccff66}nemokamas {37f467}! Sëkmës vaþinëjant {ccff66}.");
		}

//-------------------isëdimas á maðina------------------------------------------
		if(!IsABike(vehicleid))
		{
			SendClientMessage(playerid, GREEN, "{66ff00}Visas transporto priemonës valdymas - paspaudæ klaviðà {FFFF00}NUMPAD 6");
			SendClientMessage(playerid, GREEN, "{66ff00}Bûkite saugûs kelyje! Naudokite komandà {FFFF00}/autopilotas {66ff00}ir gaukite {FFFF00}+ 2Eur/MIN");
			SendClientMessage(playerid, GREEN, "{66ff00}Ájungti/iðjungti radijà - Naudokite komandà {FFFF00}/radijas");
			SendClientMessage(playerid, GREEN, "{66ff00}Jeigu norite uþsidëti ðalmà, kad bûtu saugiau - Naudokite komandà {FFFF00}/salmas");
			SendClientMessage(playerid, GREEN, "{66ff00}Uþvesti varyklá galite paspaudæ klaviðà {FFFF00}NUMPAD 2");
			SendClientMessage(playerid, GREEN, "{66ff00}Norëdami uþsidëti dirþà raðykitæ komandà: {FFFF00}/dirzas {66ff00}ir gaukite {FFFF00}+ 1Eur/MIN");
				
		}
//---------------------isëdimas pabaiga---------------------------------------
//------------------------------------------------------------------------------
		if(model != 481 && model != 510 && model != 509 && model !=462 && model !=581 && model !=462 && model != 521 && model !=463 && model !=522 && model !=461 && model !=471 && model !=448 && model !=468 && model !=586) //Netaikomi dviraciams dalykai
		{
			if(!playerDB[playerid][teises]) SendClientMessage(playerid, RED, "* Neturite automobilio teisiø! Rekomenduojama jas iðlaikyti vairavimo mokykloje!");
		}
		if(model == 581 && model == 521 && model == 463 && model == 522 && model == 461 && model == 448 && model == 471 && model == 468 && model == 586)
		{
			if(!playerDB[playerid][Mteises])
			{
				SendClientMessage(playerid, RED,"* Neturite motociklo teisiø! Rekomenduojama jas iðlaikyti vairavimo mokykloje!");
			}
		}
	}
	else if(newstate== PLAYER_STATE_PASSENGER)
	{
		new model = GetVehicleModel(vehicleid);
		if(model == 431)
        {
            new vairuotojas = GetDriver(vehicleid);
            if(vairuotojas != INVALID_PLAYER_ID)
			{
   				new kaina = random(15);
				if(GetPlayerMoneyA(playerid) >= kaina)
				{
					SendClientMessage(vairuotojas, GREEN,"* Pardavëte bilietà!");
					SendClientMessage(playerid, GREEN,"* Nusipirkote bilietà!");
					GivePlayerMoneyA(vairuotojas,kaina);
					GivePlayerMoneyA(playerid,-kaina);
				}
			}
        }
        if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4] || model == 409)
		{
            if(GetPlayerColor(playerid) == COLOR)
			{
				SetPlayerColor(playerid,PLAYCOL_HIDDEN);
			}

			new vairuotojas = GetDriver(vehicleid);

			if(vairuotojas == INVALID_PLAYER_ID) return 1; 
			if(playerDB[vairuotojas][specialybe]!=3 && playerDB[vairuotojas][specialybe]!=29 && playerDB[vairuotojas][specialybe]!=15 && playerDB[playerid][admin] < 5){print("netaxistas");return 1;} //Vairuotojas ne taxistas

			GetPlayerPos(playerid,taxiDB[playerid][Start][0],taxiDB[playerid][Start][1],taxiDB[playerid][Start][2]);
			taxiDB[playerid][taksistas]=vairuotojas;
			keleivis[vairuotojas]=playerid;

			SendClientMessage(vairuotojas,GREEN,"* Álipo keleivis ar imsite pinigus? [taip/ne]");
			playerDB[vairuotojas][textas]=3;
			return 1;
		}
	}
	return 1;
}
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    new vehicleid = GetPlayerVehicleID(playerid);
	if(newkeys == KEY_ANALOG_DOWN && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(playerDB[playerid][specialybe] ==4) return 1;
		
	    if(!IsABike(vehicleid))
	    {
	        if(vehicleDB[vehicleid][gas] < 1) return SendClientMessage(playerid, RED, "* Maðinoje nëra degalø kaip tu jà uþvesi?");
	        new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
			GetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
			if(!Engine) { SetVehicleParamsEx(vehicleid, true, Lights, Alarm, Doors, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~g~UZVEDEI VARIKLI",2000,4); } else { SetVehicleParamsEx(vehicleid, false, Lights, Alarm, Doors, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~R~UZGESINAI VARIKLI",2000,4); }
	    }
	    return 0;
	}
	//Þvejyba
	else if(newkeys & KEY_SPRINT)
	{
		if(playerDB[playerid][zvejoja])
		{
			if(!IsPlayerInRangeOfPoint(playerid,10, 1431.1145,-254.6659,6.2645) ||
			!IsPlayerInRangeOfPoint(playerid,10,1421.4216,-254.8006,6.2645) ||
			!IsPlayerInRangeOfPoint(playerid,10,1413.1129,-254.7549,6.2645) ||
			!IsPlayerInRangeOfPoint(playerid,10,1407.5969,-254.7410,6.2645) ||
			!IsPlayerInRangeOfPoint(playerid,10,1398.8552,-254.7296,6.2445) ||
			!IsPlayerInRangeOfPoint(playerid,10,1393.2410,-254.4523,6.2445))
			{
		        if(playerDB[playerid][laikastraukti])
		        {
		            if(playerDB[playerid][kiekistrauke] < 100) playerDB[playerid][kiekistrauke] += 10;
					SetProgressBarValue(zvejybosbar[playerid], playerDB[playerid][kiekistrauke]);
					UpdateProgressBar(zvejybosbar[playerid], playerid);
					ApplyAnimation(playerid, "SWORD", "sword_block", 4.1, 0, 1, 1, 1, 1, 1);
				}
				else
				{
				    SendClientMessage(playerid, RED, "* Iðtraukiai meðkeræ per anksti be laimikio!");
				    ClearAnimations(playerid);
				    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			        TogglePlayerControllable(playerid,true);
					playerDB[playerid][kiekistrauke] = 0;
					playerDB[playerid][zvejoja] = false;
				 	playerDB[playerid][laikastraukti] = false;
					if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
					DestroyProgressBar(zvejybosbar[playerid]);
				    zvejybosbar[playerid] = INVALID_BAR_ID;
				    KillTimer(ZvejojaEx[playerid]);
					KillTimer(UzkiboEx[playerid]);
				}
			}
		}
		return 0;
 	}
//Prikabinimas
   	else if(newkeys & KEY_SUBMISSION)
	{
       	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
       	{
			if(GetVehicleModel(vehicleid) == 525)
			{
				new Float:aPos[3];
				for(new v = 0; v < MAX_VEHICLES; v++)
				{
				    if(GetVehicleModel(v) < 400 || v == vehicleid) continue;
					GetVehiclePos(v, aPos[0], aPos[1], aPos[2]);
					if(IsPlayerInRangeOfPoint(playerid, 10.0, aPos[0], aPos[1], aPos[2]))
					{
						AttachTrailerToVehicle(v, vehicleid);
						return 0;
					}
				}
			}
		}
		return 0;
	}
	if(newkeys & KEY_CROUCH)
	{
	    new i;
	    for(i = 0; i < MAX_OWN_GARAGES_IN_SERVER; i ++)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 3.0, OwnGaragesSystem[i][garBuyPickupPos][0], OwnGaragesSystem[i][garBuyPickupPos][1], OwnGaragesSystem[i][garBuyPickupPos][2]))
	        {
				if(!strcmp(OwnGaragesSystem[i][garOwnerName], GetPlayerNameEx(playerid), false, MAX_PLAYER_NAME))
	            {
	                new String[50], Stringas[100], GarageOpened[30];
	                
	                if(OwnGaragesSystem[i][garGatesOpened] == 1) { GarageOpened = "{FF0000}Atidarytas{F2F2F2}"; } else { GarageOpened = "{04B404}Uþdarytas{F2F2F2}"; }

					format(String,   sizeof(String),   "{F2F2F2}Garaþo {AEB404}%d{F2F2F2} valdymas", i);
					format(Stringas, sizeof(Stringas), "{F2F2F2}1.\tAtidaryti/Uþdaryti garaþa (%s)\n2.\tParduoti garaþà\n", GarageOpened);
					
					ShowPlayerDialog(playerid, OwnGarageControlDialog, DIALOG_STYLE_LIST, String, Stringas, "Pasirinkti", "Uþdaryti");

                    playerDB[playerid][SomeoneVariable] = i;
				}
	            else if(!strcmp(OwnGaragesSystem[i][garOwnerName], "Nera", true, MAX_PLAYER_NAME))
	            {
	                playerDB[playerid][SomeoneVariable] = i;
	            
	                ShowPlayerDialog(playerid, OwnGarageBuyDialog, DIALOG_STYLE_MSGBOX, "{F2F2F2}Nuosavas garaþas!", "{F2F2F2}Ðis garaþas parduodamas, garaþo kaina yra {AEB404}20 mln (didesniø 25mln){F2F2F2}  arba {AEB404}5 (didesniø 8){F2F2F2} kreditai.\n\n\t\tSpauskite 'Pirkti' jeigu norite nusipirkti garaþà.\n", "Pirkti!", "Uþdaryti");
	            }
	            
	            Stop(playerid);
	        	break;
	        }
	    }
	}
//Teisësaugai
	if(newkeys & KEY_CROUCH)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 470 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(GetPlayerVehicleID(playerid)) == 427 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(GetPlayerVehicleID(playerid)) == 598 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER || GetVehicleModel(GetPlayerVehicleID(playerid)) == 523 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				new Float:Coord[3];
				GetPlayerPos(playerid, Coord[0], Coord[1], Coord[2]);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(IsPlayerInRangeOfPoint(i, 20.0, Coord[0], Coord[1], Coord[2]))
						{
							SendClientMessage(i, -1, "{00FF40}Teisësauga: Praðome pasitraukti á ðalikelæ!");
						}
					}
				}
			}
		}
		return 1;
	}
//Maðinos valdymas
	if(newkeys & KEY_ANALOG_RIGHT)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			ShowPlayerDialog(playerid,4147,DIALOG_STYLE_LIST,"Transporto priemonës valdymas","{ffffff}Uþvesti/Uþgesinti variklá\nÁjungti/Iðjungti ðviesas\nAtidaryti/Uþdaryti kapotà\nAtidaryti/Uþdaryti bagaþinæ\nAtrakinti/Uþrakinti duris","Pasirinkti","Atðaukti");
			return 1;
		}
	}
	if(newkeys == KEY_ANALOG_RIGHT)
	{
		new id, Float:Coo[3], msg[40];
		if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17) return 0;
		if(id == playerid) return SendClientMessage(playerid, RED, "* Prie taves nieko nëra.");
		if(IsPlayerInAnyVehicle(playerid)) return KlaidosZinute(playerid,"* Norëdami naudotis ðia komanda,turite iðlipti ið maðinos.");
		if(playerDB[playerid][specialybe] == 1 && playerDB[playerid][specialybe] == 10 && playerDB[playerid][specialybe] == 17) return SendClientMessage(playerid, RED, "Teisësaugos nario surakinti negali");
		if(OfisoDarbas[id] == true) return SendClientMessage(playerid, RED, "* Þaidëjas AFK zonoje!");
		GetPlayerPos(id, Coo[0], Coo[1], Coo[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 5.0, Coo[0],Coo[1],Coo[2])) return SendClientMessage(playerid, RED, "* Þaidëjas per toli.");
		if(PlayerInZone(id, 1361.4547, -2216.6245, -1288.2867, -2150.4135) && playerDB[id][specialybe] == 40) return SendClientMessage(playerid, RED, "* Gaujinio savo mafijos zonoje surakinti negali!");
		if(PlayerInZone(id, -1648.0637, -1586.8470, -1590.0003, -1539.1112) && playerDB[id][specialybe] == 42) return SendClientMessage(playerid, RED, "* Gaujinio savo mafijos zonoje surakinti negali!");
		if(playerDB[id][cuffed])
		{
			format(msg,sizeof(msg),"* Paleidote %s.", GetPlayerNameEx(id));
			SendClientMessage(playerid,GREEN,msg);
			format(msg,sizeof(msg),"* Jus paleido %s.", GetPlayerNameEx(playerid));
			SendClientMessage(id,RED,msg);
			Surakinti(id, true);
		}
		else
		{
			format(msg,sizeof(msg),"* Surakinote %s.", GetPlayerNameEx(id));
			SendClientMessage(playerid,GREEN,msg);
			format(msg,sizeof(msg),"* Jus surakino %s.", GetPlayerNameEx(playerid));
			SendClientMessage(id,GREEN,msg);
			Surakinti(id, false);
		}
		return 1;
	}
//===========================Vartai=============================================
	else if(newkeys & 65536)
	{
		//Mechanikø KMA
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , 100.02937, -130.45940, 2.78894))
		{
			if(playerDB[playerid][specialybe] == 4 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 4 || playerDB[playerid][pavdrk] == 4)
			{
				if(!Vartai[0])
				{
					MoveDynamicObject(MechanikuKma,  100.02937, -130.45940, -4.15368,4);
    				new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}KMA atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					kma = Create3DTextLabel(stringas,BALTA, 1261.4316,511.6115,21.6140,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote KMA vartus!", 3000, 5);
	 				Vartai[0] = true;
				}
	   			else
	            {
					MoveDynamicObject(MechanikuKma, 100.02937, -130.45940, 2.78894,4);
					Delete3DTextLabel(kma);
					GameTextForPlayer(playerid, "~R~ Uzdarote KMA vartus!", 3000, 5);
					Vartai[0] = false;
				}
			}
			return 0;
		}
		//Furu vartai
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , 1337.43457, 739.64679, 11.40944))
		{
			if(playerDB[playerid][specialybe] == 11 || playerDB[playerid][admin] >= 5 || playerDB[playerid][plead] == 11 || playerDB[playerid][pavdrk] == 11)
			{
				if(!Vartai[24])
				{
					MoveDynamicObject(FuruVartai,1337.43457, 739.64679, 6.90076,3);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					furistuda = Create3DTextLabel(stringas,BALTA, 1337.43457, 739.64679, 14.40944,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus!", 3000, 5);
	 				Vartai[24] = true;
				}
	   			else
	            {
					MoveDynamicObject(FuruVartai, 1337.43457, 739.64679, 11.40944,3);
					Delete3DTextLabel(furistuda);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus!", 3000, 5);
					Vartai[24] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Fûristø pasikrovimo vartai .
		if(IsPlayerInRangeOfPoint(playerid, 20.0 , 2777.10352, 913.01196, 9.98130))
		{
			if(playerDB[playerid][specialybe] == 11 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 11 || playerDB[playerid][pavdrk] == 11)
			{
				if(!Vartai[2])
				{
					MoveDynamicObject(FuristuPVartai, 2777.10352, 913.01196, 6.94536,3);
    				new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					furistupa = Create3DTextLabel(stringas,BALTA, 2776.7007,913.1850,12.2404,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus!", 3000, 5);
	 				Vartai[2] = true;
				}
	   			else
	            {
					MoveDynamicObject(FuristuPVartai, 2777.10352, 913.01196, 9.98130,3);
					Delete3DTextLabel(furistupa);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus!", 3000, 5);
					Vartai[2] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Yakuza vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , -721.99738, 1001.00500, 12.52000))
		{
			if(playerDB[playerid][specialybe] == 42 || playerDB[playerid][admin] >= 4)
			{
				if(!Vartai[3])
				{
					MoveDynamicObject(YakuzaVartai, -721.99738, 1001.00500, 7.70000,4);
 					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					yakuzav = Create3DTextLabel(stringas,BALTA, -719.3213,1001.3607,14.9078,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus!", 3000, 5);
	 				Vartai[3] = true;
				}
	   			else
	            {
					MoveDynamicObject(YakuzaVartai, -721.99738, 1001.00500, 12.52000,4);
					Delete3DTextLabel(yakuzav);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus!", 3000, 5);
					Vartai[3] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Yakuza vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , -721.99738, 901.93298, 12.52000))
		{
			if(playerDB[playerid][specialybe] == 42 || playerDB[playerid][admin] >= 4)
			{
				if(!Vartai[4])
				{
     				MoveDynamicObject(YakuzaVartai2, -721.99738, 901.93298, 7.70000,4);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					yakuzava = Create3DTextLabel(stringas,BALTA, -723.8626,901.5742,13.8974,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus!", 3000, 5);
	 				Vartai[4] = true;
				}
	   			else
	            {
     				MoveDynamicObject(YakuzaVartai2, -721.99738, 901.93298, 12.52000,4);
     				Delete3DTextLabel(yakuzava);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus!", 3000, 5);
					Vartai[4] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Yakuza angaro vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , -695.53192, 967.02301, 13.14000))
		{
			if(playerDB[playerid][specialybe] == 42 || playerDB[playerid][admin] >= 4)
			{
				if(!Vartai[5])
				{
					MoveDynamicObject(YakuzaVartai3, -695.53192, 967.02301, 9.10000,4);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Angarà atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					yakuzaang = Create3DTextLabel(stringas,BALTA, -695.9306,966.9066,13.5346,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote angara", 3000, 5);
	 				Vartai[5] = true;
				}
	   			else
	            {
					MoveDynamicObject(YakuzaVartai3, -695.53192, 967.02301, 13.14000,4);
					Delete3DTextLabel(yakuzaang);
					GameTextForPlayer(playerid, "~R~ Uzdarote angara", 3000, 5);
					Vartai[5] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Russian vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , -310.24121, 1736.12000, 43.30000))
		{
			if(playerDB[playerid][specialybe] == 40 || playerDB[playerid][admin] >= 4)
			{
				if(!Vartai[6])
				{
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					russianv = Create3DTextLabel(stringas,BALTA, -310.8929,1736.1185,44.2772,10,0,10);
					MoveDynamicObject(RussianVartai, -310.24121, 1736.12000, 39.10000,4);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus", 3000, 5);
	 				Vartai[6] = true;
				}
	   			else
	            {
					MoveDynamicObject(RussianVartai, -310.24121, 1736.12000, 43.30000,4);
					Delete3DTextLabel(russianv);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus", 3000, 5);
					Vartai[6] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Russian angaro vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , -293.25531, 1762.94739, 44.64000))
		{
			if(playerDB[playerid][specialybe] == 40 || playerDB[playerid][admin] >= 4)
			{
				if(!Vartai[7])
				{
					MoveDynamicObject(RussianVartai2, -293.25531, 1762.94739, 39.40000,4);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Angarà atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					russianang = Create3DTextLabel(stringas,BALTA, -293.4432,1762.5269,44.2519,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote angara", 3000, 5);
	 				Vartai[7] = true;
				}
	   			else
	            {
					MoveDynamicObject(RussianVartai2, -293.25531, 1762.94739, 44.64000,4);
					Delete3DTextLabel(russianang);
					GameTextForPlayer(playerid, "~R~ Uzdarote angara", 3000, 5);
					Vartai[7] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Treniruoèiø zona .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 ,  54.12000, 2501.07227, 16.80000))
		{
			if(playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 1 || playerDB[playerid][admin] >= 4 || playerDB[playerid][specialybe] == 17)
			{
				if(!Vartai[8])
				{
					MoveDynamicObject(TreniruociuV,  54.12000, 2501.07227, 11.90000,3);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus", 3000, 5);
	 				Vartai[8] = true;
				}
	   			else
	            {
					MoveDynamicObject(TreniruociuV,  54.12000, 2501.07227, 16.80000,3);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus", 3000, 5);
					Vartai[8] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Treniruoèiø zona .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 ,  54.12000, 2509.87427, 16.80000))
		{
			if(playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 1 || playerDB[playerid][admin] >= 4 || playerDB[playerid][specialybe] == 17)
			{
				if(!Vartai[9])
				{
					MoveDynamicObject(TreniruociuV2,  54.12000, 2509.87427, 11.90000,3);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus", 3000, 5);
	 				Vartai[9] = true;
				}
	   			else
	            {
					MoveDynamicObject(TreniruociuV2,  54.12000, 2509.87427, 16.80000,3);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus", 3000, 5);
					Vartai[9] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Treniruoèiø zona .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 ,  16.06560, 2528.26294, 16.50000))
		{
			if(playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 1 || playerDB[playerid][admin] >= 4 || playerDB[playerid][specialybe] == 17)
			{
				if(!Vartai[10])
				{
					MoveDynamicObject(TreniruociuV3,  16.06560, 2528.26294, 13.20000,3);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus", 3000, 5);
	 				Vartai[10] = true;
				}
	   			else
	            {
					MoveDynamicObject(TreniruociuV3,  16.06560, 2528.26294, 16.50000,3);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus", 3000, 5);
					Vartai[10] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Treniruoèiø zona .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 ,  5.96380, 2528.26294, 16.50000))
		{
			if(playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 1 || playerDB[playerid][admin] >= 4 || playerDB[playerid][specialybe] == 17)
			{
				if(!Vartai[11])
				{
					MoveDynamicObject(TreniruociuV4,  5.96380, 2528.26294, 13.20000,3);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus", 3000, 5);
	 				Vartai[11] = true;
				}
	   			else
	            {
					MoveDynamicObject(TreniruociuV4,  5.96380, 2528.26294, 16.50000,3);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus", 3000, 5);
					Vartai[11] = false;
				}
			}
			return 0;
		}

		//Miesteliø - Treniruoèiø zona .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 ,  -8.35240, 2509.36475, 16.80000))
		{
			if(playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 1 || playerDB[playerid][admin] >= 4 || playerDB[playerid][specialybe] == 17)
			{
				if(!Vartai[12])
				{
					MoveDynamicObject(TreniruociuV5,  -8.35240, 2509.36475, 11.90000,3);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus", 3000, 5);
	 				Vartai[12] = true;
				}
	   			else
	            {
					MoveDynamicObject(TreniruociuV5,  -8.35240, 2509.36475, 16.80000,3);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus", 3000, 5);
					Vartai[12] = false;
				}
			}
			return 0;
		}
		//Miesteliø - Treniruoèiø zona .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 ,  -8.35240, 2501.34448, 16.80000))
		{
			if(playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 1 || playerDB[playerid][admin] >= 4 || playerDB[playerid][specialybe] == 17)
			{
				if(!Vartai[13])
				{
					MoveDynamicObject(TreniruociuV6,  -8.35240, 2501.34448, 11.90000,3);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus", 3000, 5);
	 				Vartai[13] = true;
				}
	   			else
	            {
					MoveDynamicObject(TreniruociuV6,  -8.35240, 2501.34448, 16.80000,3);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus", 3000, 5);
					Vartai[13] = false;
				}
			}
			return 0;
		}
		//SWAT vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , -75.65522, -352.73993, 3.23075))
		{
			if(playerDB[playerid][specialybe] == 10 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 10 || playerDB[playerid][pavdrk] == 10)
			{
				if(!Vartai[14])
				{
					MoveDynamicObject(SWATVartai,-75.65522, -352.73993, -2.36016,3);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					swat = Create3DTextLabel(stringas,BALTA, -76.0597,-351.9595,3.2792,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus!", 3000, 5);
	 				Vartai[14] = true;
				}
	   			else
	            {
					MoveDynamicObject(SWATVartai,-75.65522, -352.73993, 3.23075,3);
					Delete3DTextLabel(swat);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus!", 3000, 5);
					Vartai[14] = false;
				}
			}
			return 0;
		}
		//Dyleriø vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , 892.54395, 372.50211, 20.93407))
		{
			if(playerDB[playerid][specialybe] == 5 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 5 || playerDB[playerid][pavdrk] == 5)
			{
				if(!Vartai[16])
				{
					MoveDynamicObject(DyleriuVartai, 892.54395, 372.50211, 16.70907,3);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					dyleriai = Create3DTextLabel(stringas,BALTA, 892.54395, 372.50211, 20.93407,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus!", 3000, 5);
	 				Vartai[16] = true;
				}
	   			else
	            {
					MoveDynamicObject(DyleriuVartai, 892.54395, 372.50211, 20.93407,3);
					Delete3DTextLabel(dyleriai);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus!", 3000, 5);
					Vartai[16] = false;
				}
			}
			return 0;
		}
		
		//Baikeriø vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , 1919.80, 623.33, 12.66))
		{
			if(playerDB[playerid][specialybe] == 14 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 14 || playerDB[playerid][pavdrk] == 14)
			{
				if(!Vartai[17])
				{
					MoveDynamicObject(BaikeriuVartai, 1919.80, 623.33, 7.00,3);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					baikeriaiv = Create3DTextLabel(stringas,BALTA, 1919.7122,624.1016,13.5737,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus!", 3000, 5);
	 				Vartai[17] = true;
				}
	   			else
	            {
					MoveDynamicObject(BaikeriuVartai, 1919.80, 623.33, 12.66,3);
					Delete3DTextLabel(baikeriaiv);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus!", 3000, 5);
					Vartai[17] = false;
				}
			}
			return 0;
		}
		//Baikeriø vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , 1880.97, 623.35, 12.66))
		{
			if(playerDB[playerid][specialybe] == 14 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 14 || playerDB[playerid][pavdrk] == 14)
			{
				if(!Vartai[18])
				{
					MoveDynamicObject(BaikeriuVartai2, 1880.97, 623.35, 7.00,3);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					baikeriaiva = Create3DTextLabel(stringas,BALTA, 1880.9432,623.7505,12.2575,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus!", 3000, 5);
	 				Vartai[18] = true;
				}
	   			else
	            {
					MoveDynamicObject(BaikeriuVartai2, 1880.97, 623.35, 12.66,3);
					Delete3DTextLabel(baikeriaiva);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus!", 3000, 5);
					Vartai[18] = false;
				}
			}
			return 0;
		}
		//Klubo vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , -503.986,2592.948,53.832))
		{
			if(playerDB[playerid][specialybe] == 15 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 15 || playerDB[playerid][pavdrk] == 15)
			{
				if(!Vartai[19])
				{
					MoveDynamicObject(KluboVartai, -503.98599, 2592.94800, 48.99200,3);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					costello = Create3DTextLabel(stringas,BALTA, -503.6335,2593.0098,55.6287,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote klubo vartus!", 3000, 5);
	 				Vartai[19] = true;
				}
	   			else
	            {
					MoveDynamicObject(KluboVartai, -503.986,2592.948,53.832,3);
					Delete3DTextLabel(costello);
					GameTextForPlayer(playerid, "~R~ Uzdarote klubo vartus!", 3000, 5);
					Vartai[19] = false;
				}
			}
			return 0;
		}
		//Klubo 2 vartai .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , -1515.96936, 2541.28735, 57.30000))
		{
			if(playerDB[playerid][specialybe] == 16 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 16 || playerDB[playerid][pavdrk] == 16)
			{
				if(!Vartai[20])
				{
					MoveDynamicObject(KluboVartai2, -1515.96936, 2541.28735, 50.00000,3);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					patriotai = Create3DTextLabel(stringas,BALTA, -1515.9557,2541.8350,59.5003,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote klubo vartus!", 3000, 5);
	 				Vartai[20] = true;
				}
	   			else
	            {
					MoveDynamicObject(KluboVartai2, -1515.96936, 2541.28735, 57.30000,3);
					Delete3DTextLabel(patriotai);
					GameTextForPlayer(playerid, "~R~ Uzdarote klubo vartus!", 3000, 5);
					Vartai[20] = false;
				}
			}
			return 0;
		}
		//Klubo angaras .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 , -523.982,2571.619,55.276))
		{
			if(playerDB[playerid][specialybe] == 15 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 15 || playerDB[playerid][pavdrk] == 15)
			{
				if(!Vartai[21])
				{
					MoveDynamicObject(KluboAngaras, -523.98199, 2571.61890, 49.68000,3);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Angarà atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					costelloang = Create3DTextLabel(stringas,BALTA, -523.5255,2572.0344,55.3629,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote klubo angaro vartus!", 3000, 5);
	 				Vartai[21] = true;
				}
	   			else
	            {
					MoveDynamicObject(KluboAngaras, -523.982,2571.619,55.276,3);
					Delete3DTextLabel(costelloang);
					GameTextForPlayer(playerid, "~R~ Uzdarote klubo angaro vartus!", 3000, 5);
					Vartai[21] = false;
				}
			}
			return 0;
		}
		//Miesteliø - SPD vartai pirmi .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 ,  2237.5930, 2453.0940, 10.1470))
		{
	   		if(playerDB[playerid][specialybe] == 17 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 17 || playerDB[playerid][pavdrk] == 17)
	   		{
	    		if(!Vartai[22])
	    		{	
	    			MoveDynamicObject(SPDPirmi, 2237.5930, 2453.0940, 3.1470,2);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					armijavaantri = Create3DTextLabel(stringas,BALTA, 2237.5930, 2453.0940, 13.1470,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus!", 3000, 5);
	 				Vartai[22] = true;
				}
	   			else
	            {
					MoveDynamicObject(SPDPirmi, 2237.5930, 2453.0940, 10.1470,2);
					Delete3DTextLabel(armijavapirmi);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus!", 3000, 5);
					Vartai[22] = false;
				}
			}
			return 0;
		}
		//Miesteliø - SPD vartai antri .
		if(IsPlayerInRangeOfPoint(playerid, 10.0 ,  2334.86279, 2443.65454, 4.63320))
		{
	   		if(playerDB[playerid][specialybe] == 17 || playerDB[playerid][admin] == 5 || playerDB[playerid][plead] == 17 || playerDB[playerid][pavdrk] == 17)
	   		{
	    		if(!Vartai[23])
	    		{	
	    			MoveDynamicObject(SPDAntri, 2334.86279, 2443.65454, -1.0,2);
					new stringas [ 70 ] ;
					format(stringas,sizeof(stringas),"{777676}Vartus atidarë - {27A116}%s", GetPlayerNameEx(playerid));
					armijavaantri = Create3DTextLabel(stringas,BALTA, 2334.86279, 2443.65454, 7.63320,10,0,10);
	 				GameTextForPlayer(playerid, "~G~ Atidarote vartus!", 3000, 5);
	 				Vartai[23] = true;
				}
	   			else
	            {
					MoveDynamicObject(SPDAntri, 2334.86279, 2443.65454, 4.63320,2);
					Delete3DTextLabel(armijavaantri);
					GameTextForPlayer(playerid, "~R~ Uzdarote vartus!", 3000, 5);
					Vartai[23] = false;
				}
			}
			return 0;
		}
	}

	
///////////////////Poþeminiø garaþø ávaþevimas / iðëjimai . ////////////////////
	
	else if(newkeys & KEY_NO)
	{
	    //Policijos iðvaþevimas / iðëjimas ið poþeminio garaþo .
	    if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) return 0;
		if(IsPlayerInRangeOfPoint(playerid, 6.0, 158.5280,-205.3322,997.5148))
		{
		    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				SetVehiclePos(vehicleid,166.1885,-178.2595,1.3395);
				SetPlayerPos(playerid,166.1885,-178.2595,1.3395);
				PutPlayerInVehicleEx(playerid, vehicleid, 0);
			}
			else
			{
				SetPlayerPos(playerid,166.1885,-178.2595,1.3395);
			}
			return 0;
		}
		
	    //Policijos ávaþevimas / áëimas á poþeminá garaþà .
		else if(IsPlayerInRangeOfPoint(playerid, 6.0, 165.9209,-185.1821,1.5700))
		{
			if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][admin] != 5 && playerDB[playerid][plead] != 1 && playerDB[playerid][pavdrk] != 1)
			{
				KlaidosZinute(playerid,"Poþeminiu garaþu gali naudotis tik Policijos darbuotojai !");
				return 0;
			}
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				SetVehiclePos(vehicleid,164.0137,-205.7722,997.5148);
				SetPlayerPos(playerid,164.0137,-205.7722,997.5148);
				PutPlayerInVehicleEx(playerid, vehicleid, 0);
			}
			else
			{
				SetPlayerPos(playerid,164.0137,-205.7722,997.5148);
			}
			return 0;
		}
  		/*/SPD ávaþevimas / áëimas á SPD bazë . PAKEISTI I PD GARAZA
		else if(IsPlayerInRangeOfPoint(playerid, 6.0, 855.0255,-1062.0068,24.8108))
		{
			if(playerDB[playerid][specialybe] != 17 && playerDB[playerid][admin] != 5 && playerDB[playerid][plead] != 17 && playerDB[playerid][pavdrk] != 17)
			{
				KlaidosZinute(playerid,"Poþeminiu garaþu gali naudotis tik Karininkai !");
				return 0;
			}
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				SetVehiclePos(vehicleid,-2199.2307,-90.1964,30.4199);
				SetPlayerPos(playerid,-2199.2307,-90.1964,30.4199);
				PutPlayerInVehicleEx(playerid, vehicleid, 0);
			}
			else
			{
				SetPlayerPos(playerid,-2199.2307,-90.1964,30.4199);
			}
			return 0;
		}
		//SPD áðvaþevimas / áðimas ið SPD bazë .
		else if(IsPlayerInRangeOfPoint(playerid, 6.0, -2199.2307,-90.1964,30.4199))
		{
			if(playerDB[playerid][specialybe] != 17 && playerDB[playerid][admin] != 5 && playerDB[playerid][plead] != 17 && playerDB[playerid][pavdrk] != 17)
			{
				KlaidosZinute(playerid,"Poþeminiu garaþu gali naudotis tik Karininkai !");
				return 0;
			}
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				SetVehiclePos(vehicleid,855.0255,-1062.0068,24.8108);
				SetPlayerPos(playerid,855.0255,-1062.0068,24.8108);
				PutPlayerInVehicleEx(playerid, vehicleid, 0);
			}
			else
			{
				SetPlayerPos(playerid,855.0255,-1062.0068,24.8108);
			}
			return 0;
		}*/
		// Dyleriu i garaza su 2
		else if(IsPlayerInRangeOfPoint(playerid, 6.0, 880.7129,395.5938,20.6196))
		{
			if(playerDB[playerid][specialybe] !=5 && playerDB[playerid][admin] !=5 && playerDB[playerid][plead] !=5 && playerDB[playerid][pavdrk] !=5 )
			{
				KlaidosZinute(playerid,"* Garaþu gali naudotis tik Dyleriai");
				return 0;
			}
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    // Jeigu su masina.
				SetVehiclePos(vehicleid,-2075.4014,-2258.0872,-29.0294);
				SetPlayerPos(playerid,-2075.4014,-2258.0872,-29.0294);
				PutPlayerInVehicleEx(playerid, vehicleid, 0);
			}
			else
			{
				SetPlayerPos(playerid,-2075.4014,-2258.0872,-29.0294);
			}
		    return 0;
		}
		// Dyleriu i lauka su 2
		else if(IsPlayerInRangeOfPoint(playerid, 6.0, -2075.4014,-2258.0872,-29.0294))
		{
		    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
			    // Jeigu su masina.
				SetVehiclePos(vehicleid,880.7129,395.5938,20.6196);
				SetPlayerPos(playerid,880.7129,395.5938,20.6196);
				PutPlayerInVehicleEx(playerid, vehicleid, 0);
			}
			else
			{
				SetPlayerPos(playerid,-1153.4705,-1029.3855,129.2535);
			}
			return 0;
		}
	}

//--------------------Kito miestelio--------------------------------------------
	
	else if(newkeys & KEY_SECONDARY_ATTACK)
	{
		if(playerDB[playerid][pila])
		{
		    playerDB[playerid][pila] = false;
		}

		if(GetPlayerState(playerid) != PLAYER_STATE_PASSENGER && IsPlayerInAnyVehicle(playerid))
	    {
			if(vehicleDB[vehicleid][gas] < 1)
			{
			    new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
				GetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
				if(!IsABike(vehicleid)) { SetVehicleParamsEx(vehicleid, false, Lights, Alarm, Doors, Bonnet, Boot, Objective); }
				RemovePlayerFromVehicle(playerid);
				return 0;
			}
		}
	
	    if(playerDB[playerid][lektuvas]!=-1)
	    {
	        new Float:bbX, Float:bbY, Float:bbZ, Float:bbA;
	 		GetVehiclePos(playerDB[playerid][lektuvas], bbX, bbY, bbZ);
  			GetVehicleZAngle(playerDB[playerid][lektuvas], bbA);
  			bbX += (5 * floatsin(-floatsub(bbA, 45.0), degrees)),
  			bbY += (5 * floatcos(-floatsub(bbA, 45.0), degrees));
  			SetPlayerInterior(playerid, 0);
  			SetPlayerPos(playerid, bbX, bbY, floatsub(bbZ, 0.94));
			SetPlayerFacingAngle(playerid, bbA);
			SetPlayerVirtualWorld(playerid,0);
			playerDB[playerid][lektuvas]=-1;
		}
		
		new house = playerDB[playerid][NamoID];
		if(house != -1)
		{
 			if(IsPlayerInRangeOfPoint(playerid, 2.0, hInfo[house][IntX], hInfo[house][IntY], hInfo[house][IntZ]))
  			{
  				SetPlayerInterior(playerid, 0);
				SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ]);
				SetPlayerFacingAngle(playerid, hInfo[house][ExitAngle]);
				playerDB[playerid][NamoID] = -1;
			}
			return 0;
		}
		
		for(house = 0; house < MAX_HOUSES; house++)
	{
   		if(IsPlayerInRangeOfPoint(playerid, 2.0, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ]))
   		{
    		if(!hInfo[house][Buyed])
    		{
        		new str[125];
        		if(PlayerHaveHouse(playerid) != -1) return SendClientMessage(playerid, -1, "Klaida, Jûs jau turite namà.");
     			if(GetPlayerMoneyA(playerid) < hInfo[house][Cost]) return SendClientMessage(playerid, -1, "Klaida, neturite tiek pinigø.");
     			GivePlayerMoneyA(playerid, - hInfo[house][Cost]);
        		hInfo[house][Buyed] = true;
     			hInfo[house][Locked] = true;
     			format(hInfo[house][Owner], 21, "%s", GetPlayerNameEx(playerid));
     			format(str, 104, "{66ffcc}Namo numeris: %d\nNamas neparduodamas\nSavininkas: %s", house + 1, hInfo[house][Owner]);
     			Update3DTextLabelText(hInfo[house][House3D], -1, str);
     			DestroyPickup(hInfo[house][HousePickup]);
        		hInfo[house][HousePickup] = CreatePickup(1272, 1, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], 0);
          		SaveHouse(house);
          		SendClientMessage(playerid, -1, "Nusipirkote namà.");
          		SendClientMessage(playerid, -1, "Atrakinti / Uþrakinti namà galite su komandà /raktas");
    		}
    		else
    		{
        		if(hInfo[house][Locked] && strcmp(hInfo[house][Owner], GetPlayerNameEx(playerid), false)) return SendClientMessage(playerid, -1, "Klaida, negalite áeiti, namo duris uþrakintos.");
     			if(!strcmp(hInfo[house][Owner], GetPlayerNameEx(playerid), true)) SendClientMessage(playerid, -1, "{37f467} Jûsø namø valdymas ir kita informacijà.{ccff66} /namas");
     			SetPlayerVirtualWorld(playerid, hInfo[house][htVW]);
     			SetPlayerInterior(playerid, hInfo[house][hInt]);
     			SetPlayerPos(playerid, hInfo[house][IntX], hInfo[house][IntY], hInfo[house][IntZ]);
                SetPlayerFacingAngle(playerid, hInfo[house][IntAngle]);
     			playerDB[playerid][NamoID] = house;
   			}
   			return 0;
		}
	}
		
		for(new b = 0; b < MAX_BUSINESSES; b++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 2, bInfo[b][bPos_X], bInfo[b][bPos_Y], bInfo[b][bPos_Z]))
			{
				if(!bInfo[b][bBuyed])
				{
				    if(PlayerHaveBusiness(playerid) != -1) return SendClientMessage(playerid, RED, "* Jûs jau turite verslà, antro sau leisti negalite.");
					if(GetPlayerMoneyA(playerid) < bInfo[b][bCost]) return SendClientMessage(playerid, RED, "* Jums nepakanka pinigø verslo pirkimui.");
					if(GetPlayerScore(playerid) < 1500) return SendClientMessage(playerid, RED, "* Jums nepkanaka patirties taðkø pirkti verslui. Reikia 1.500 patirties.");
					GivePlayerMoneyA(playerid, - bInfo[b][bCost]);
    				bInfo[b][bBuyed] = true;
					format(bInfo[b][bOwner], 21, "%s", GetPlayerNameEx(playerid));
					SendClientMessage(playerid, BLUE, "* Nusipirkote verslà. Norëdmami valdyti já spauskite {ffffff}ENTER.");
					UpdateBusiness(b);
                    SaveBusiness(b);
				}
				else
				{
					if(!strcmp(bInfo[b][bOwner], GetPlayerNameEx(playerid), true))
					{
					    ShowPlayerDialog(playerid, BUSINESS_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Verslo meniu.", "{ffffff} Paimti uzdirbtus pinigus.\n Parduoti versla.\n Perleisti versla.\n Parduoti versla zmogui.", "Rinktis", "Uzdaryti");
						playerDB[playerid][VersloID] = b;
					}
				}
			}
		}
	}
	return 0;
}
public OnPlayerEnterCheckpoint(playerid)
{
	new cpid = pCPID[playerid];
	switch(cpid)
	{
		case 0:
		{
			if(IsPlayerInCheckpointEx(playerid, cpid)) DisablePlayerCheckpointEx(playerid, 0);
		}
		case 1:
		{
			if(IsPlayerInCheckpointEx(playerid, cpid))
			{
				if(playerDB[playerid][specialybe] == 20)
				{
					if(!playerDB[playerid][vezapica])
					{
						playerDB[playerid][vezapica] = true;
						GameTextForPlayer(playerid, "~W~VESK PICA I NAMUS KUR NURODYTA", 7000, 4);
						DisableAllPlayerCheckpoints(playerid);
						switch(random(21))
						{
							case 0: SetPlayerCheckpointEx(playerid, 2,2208.4773,58.0918,26.9650,2);
							case 1: SetPlayerCheckpointEx(playerid, 2,2207.5344,110.1439,27.1107,2);
							case 2: SetPlayerCheckpointEx(playerid, 2,2232.3225,163.0792,26.9690,2);
							case 3: SetPlayerCheckpointEx(playerid, 2,2289.8262,158.6096,27.1957,2);
							case 4: SetPlayerCheckpointEx(playerid, 2,2328.5388,120.1126,26.9482,2);
							case 5: SetPlayerCheckpointEx(playerid, 2,2358.6289,120.4456,26.8411,2);
							case 6: SetPlayerCheckpointEx(playerid, 2,2327.8262,157.8979,27.0695,2);
							case 7: SetPlayerCheckpointEx(playerid, 2,2360.6340,182.8298,27.1617,2);
							case 8: SetPlayerCheckpointEx(playerid, 2,2376.3875,75.8310,27.2973,2);
							case 9: SetPlayerCheckpointEx(playerid, 2,2379.0366,26.1218,26.8736,2);
							case 10: SetPlayerCheckpointEx(playerid, 2,2411.7029,12.2760,26.0809,2);
							case 11: SetPlayerCheckpointEx(playerid, 2,2397.3887,-53.0068,27.0804,2);
							case 12: SetPlayerCheckpointEx(playerid, 2,2491.7964,7.2309,26.9701,2);
							case 13: SetPlayerCheckpointEx(playerid, 2,2549.0979,14.8471,26.5911,2);
							case 14: SetPlayerCheckpointEx(playerid, 2,2529.0718,131.0818,26.0753,2);
							case 15: SetPlayerCheckpointEx(playerid, 2,749.2557,-581.7735,16.8451,2);
							case 16: SetPlayerCheckpointEx(playerid, 2,752.0613,-510.3520,16.4712,2);
							case 17: SetPlayerCheckpointEx(playerid, 2,786.3987,-510.3005,16.4248,2);
							case 18: SetPlayerCheckpointEx(playerid, 2,246.4952,-126.1924,1.7701,2);
							case 19: SetPlayerCheckpointEx(playerid, 2,249.2024,-84.6318,2.2062,2);
							case 20: SetPlayerCheckpointEx(playerid, 2,277.6760,-57.8325,1.1701,2);
						}
					}
				}
			}
		}
		case 2:
		{
			if(IsPlayerInCheckpointEx(playerid, cpid))
			{
   				if(playerDB[playerid][specialybe] == 20)
				{
					if(playerDB[playerid][vezapica])
					{
    					DisableAllPlayerCheckpoints(playerid);
   						playerDB[playerid][vezapica] = false;
						SetPlayerCheckpointEx(playerid, 1,1356.7487,233.2664,19.5669,2);
						GivePlayerMoneyA(playerid, 5);
						GameTextForPlayer(playerid, "~W~ATVEZIAI PICA GAVAI ~G~5", 7000, 4);
						ServerioZinute(playerid, "* Vaþiuok pasiimti naujos picos á picerijà.");
					}
				}
			}
		}
		case 3:
		{
  			if(IsPlayerInCheckpointEx(playerid, cpid))
     		{
       			if(playerDB[playerid][ikalintas])
				{
					if(playerDB[playerid][nesamaisa])
					{
     					DisableAllPlayerCheckpoints(playerid);
						SetPlayerCheckpointEx(playerid, 4, 2755.5071,2747.8848,14.5450, 2.0);
   						playerDB[playerid][nesamaisa] = false;
						playerDB[playerid][atnesemaisu] ++;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
						RemovePlayerAttachedObject(playerid, 0);
						new msgz[40];
						format(msgz, sizeof(msgz), "* Jûs esate atneðæs %i/10 maiðø!", playerDB[playerid][atnesemaisu]);
						SendClientMessage(playerid, YELLOW, msgz);
						if(playerDB[playerid][atnesemaisu] == 10)
						{
                            if(playerDB[playerid][kalejimo_laikas] < 120) return SendClientMessage(playerid, RED, "Jûsø likes laikas kaleime ir taip maþesnis nei 2 minutës!");
   							playerDB[playerid][kalejimo_laikas] -= 120;
				   			playerDB[playerid][atnesemaisu] = 0;
				   			SendClientMessage(playerid, RED, "* [KALËJIMAS]Kadangi atneðiai visus maiðus, tau pamaþëjo kalëjmo laikas 2 minutëmis !");
						}
					}
				}
			}
		}
		case 4:
		{
  			if(IsPlayerInCheckpointEx(playerid, cpid))
  			{
    			if(playerDB[playerid][ikalintas])
				{
					if(!playerDB[playerid][nesamaisa])
					{
						DisableAllPlayerCheckpoints(playerid);
   						SetPlayerCheckpointEx(playerid, 3, 2836.3262,2768.4297,14.2870, 2.0);
						playerDB[playerid][nesamaisa] = true;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
 						SetPlayerAttachedObject( playerid, 0, 2060, 1, 0.109637, 0.431794, -0.005850, 0.000000, 87.603507, 0.654105, 1.000000, 1.000000, 1.000000 ); // CJ_SANDBAG - maisas pataisytas
 					}
				}
			}
		}
		case 5:
		{
  			if(IsPlayerInCheckpointEx(playerid, cpid))
     		{
      			DisableAllPlayerCheckpoints(playerid);
			    SetPlayerCheckpointEx(playerid, 6, 1081.2303,-344.8193,73.9807, 2.0);
			    playerDB[playerid][nesamaisadarbas] = false;
				playerDB[playerid][atnesemaisud] ++;
				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
				RemovePlayerAttachedObject(playerid, 0);
				new msgx[70];
				format(msgx, sizeof(msgx), "* Jûs esate atneðæs %i/10 maiðø! Atneðus 10 gausite 50 á algà.", playerDB[playerid][atnesemaisud]);
				SendClientMessage(playerid, YELLOW, msgx);
				if(playerDB[playerid][atnesemaisud] == 10)
				{
 					playerDB[playerid][alga] += 50;
   					playerDB[playerid][atnesemaisud] = 0;
		   			SendClientMessage(playerid, RED, "* [Krovikai]Sveikiname suneðiojai 10/10 maiðø gavai +50 á algos biudþetà!!");
   				}
			}
		}
  		case 6:
  		{
	    	if(IsPlayerInCheckpointEx(playerid, cpid))
	     	{
	     		if(playerDB[playerid][specialybe] == 25)
				{
	   				if(!playerDB[playerid][nesamaisadarbas])
					{
						DisableAllPlayerCheckpoints(playerid);
		    			SetPlayerCheckpointEx(playerid, 5, 1045.3718,-298.5816,73.9931, 2.0);//-154.4367,1063.5693,19.8106
						playerDB[playerid][nesamaisadarbas] = true;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	   					SetPlayerAttachedObject( playerid, 0, 2060, 1, 0.109637, 0.431794, -0.005850, 0.000000, 87.603507, 0.654105, 1.000000, 1.000000, 1.000000 ); // CJ_SANDBAG - maisas pataisytas
					}
				}
	   		}
		}
		case 7:
		{
			if(IsPlayerInCheckpointEx(playerid, cpid))
			{
				SendClientMessage(playerid, RED, "* Atvykai á pasirinktà vietà.");
				DisablePlayerCheckpointEx(playerid, 7);
			}
		}
        case 8:
		{
			if(IsPlayerInCheckpointEx(playerid, cpid))
			{
				if(playerDB[playerid][specialybe] == 11)
				{
		    		new vehicleid = GetPlayerVehicleID(playerid);
					if(!(vehicleid >= furistucar[0] && vehicleid <= furistucar[9])) return SendClientMessage(playerid, RED, "* Turite atvaþiuoti su fûra, o ne paprasta maðina!");
					{
						if(!IsTrailerAttachedToVehicle(vehicleid)) return SendClientMessage(playerid, RED, "* Turi atvaþiuoti su priekaba!");
						{
							if(vehicleDB[GetVehicleTrailer(GetPlayerVehicleID(playerid))][ikrauta] < 99) return SendClientMessage(playerid, RED, "* Tu atvaþiavai su tusèia priekaba, todël nieko negausi.");
							IskraunamviskaisfurosEx[playerid] = SetTimerEx("Iskraunamviskaisfuros", 1000, false, "d", playerid);
							SendClientMessage(playerid, -1, "{009999}* Teks truputi palaukti, iðkraunamas krovinys");
							DisableAllPlayerCheckpoints(playerid);
						}
					}
				}
			}
		}
		case 9:
		{
		    if(playerDB[playerid][uzsisakedviracius] == 0) return SendClientMessage(playerid, RED, "* Tu nesi uþsisakæs dviraèiø krovinio. Gráðk á fûristø darbo vietà ir uþsisakyk já ten!");
		    if(playerDB[playerid][prisikroves] == 1) return SendClientMessage(playerid, RED, "* Tu jau prisikrovæs pilnà priekabà prekiø, todël daugiau nebegalima.");
		    new vehicleid = playerDB[playerid][masina], Float:vPos[6];
		    if(vehicleid == -1) return SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		    {
  				if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9]) // tikriname ar paskutine masina fura
		        {
		            if(IsTrailerAttachedToVehicle(vehicleid)) // tikriname ar priekaba prikabinta
		            {
		            	GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]); // isgauname furos pozicija
		            	GetVehiclePos(GetVehicleTrailer(vehicleid), vPos[3], vPos[4], vPos[5]); // isgauname furos priekabos pozicija
                        if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[0], vPos[1], vPos[2]))
                        {
                            // Tikrini ar fura toli nuo zaidejo
                            if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[3], vPos[4], vPos[5]))
                            {
                            // Tikrini ar furos priekaba toli nuo zaidejo
                                KraunamdviraciusEx[playerid] = SetTimerEx("Kraunamdviracius", 1000, false, "d", playerid);
                                SendClientMessage(playerid, GREEN, "{009999}* Teks truputi palaukti. Kraunamos prekës á priekabà.");
                                DisableAllPlayerCheckpoints(playerid);
                            }
                      		else
                            {
                                SendClientMessage(playerid, RED, "* Jûsø fûros priekaba per toli.");
                            }
						}
						else
						{
						    SendClientMessage(playerid, RED, "* Jûsø fûra per toli.");
						}
					}
    				else
		            {
		                SendClientMessage(playerid, RED, "* Turite èia atsivaryti fûrà su priekaba, á kurià galëtume sukrauti prekes.");
		            }
		        }
				else
		        {
		            SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		        }
            }
		}
		case 10:
		{
            if(playerDB[playerid][uzsisakebaldus] == 0) return SendClientMessage(playerid, RED, "* Tu nesi uþsisakæs bladø krovinio. Gráðk á fûristø darbo vietà ir uþsisakyk já ten!");
		    if(playerDB[playerid][prisikroves] == 1) return SendClientMessage(playerid, RED, "* Tu jau prisikrovæs pilnà priekabà prekiø, todël daugiau nebegalima.");
		    new vehicleid = playerDB[playerid][masina], Float:vPos[6];
		    if(vehicleid == -1) return SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		    {
  				if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9]) // tikriname ar paskutine masina fura
		        {
		            if(IsTrailerAttachedToVehicle(vehicleid)) // tikriname ar priekaba prikabinta
		            {
		            	GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]); // isgauname furos pozicija
		            	GetVehiclePos(GetVehicleTrailer(vehicleid), vPos[3], vPos[4], vPos[5]); // isgauname furos priekabos pozicija
                        if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[0], vPos[1], vPos[2]))
                        {
                            // Tikrini ar fura toli nuo zaidejo
                            if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[3], vPos[4], vPos[5]))
                            {
                            // Tikrini ar furos priekaba toli nuo zaidejo
                                KraunambaldusEx[playerid] = SetTimerEx("Kraunambaldus", 1000, false, "d", playerid);
                                SendClientMessage(playerid, GREEN, "{009999}* Teks truputi palaukti. Kraunamos prekës á priekabà.");
                                DisableAllPlayerCheckpoints(playerid);
                            }
                            else
                            {
                                SendClientMessage(playerid, RED, "* Jûsø fûros priekaba per toli.");
                            }
						}
						else
						{
						    SendClientMessage(playerid, RED, "* Jûsø fûra per toli.");
						}
					}
		            else
		            {
		                SendClientMessage(playerid, RED, "* Turite èia atsivaryti fûrà su priekaba, á kurià galëtume sukrauti prekes.");
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		        }
			}
		}
		case 11:
		{
            if(playerDB[playerid][rangas] < 2) return SendClientMessage(playerid, RED, "* Ðità kroviná gali veþti tik iðtikimo fûristo rangà turintis darbuotojas!");
		    if(playerDB[playerid][uzsisakebuittech] == 0) return SendClientMessage(playerid, RED, "* Tu nesi uþsisakæs buitinës technikos krovinio. Gráðk á fûristø darbo vietà ir uþsisakyk já ten!");
		    if(playerDB[playerid][prisikroves] == 1) return SendClientMessage(playerid, RED, "* Tu jau prisikrovæs pilnà priekabà prekiø, todël daugiau nebegalima.");
		    new vehicleid = playerDB[playerid][masina], Float:vPos[6];
		    if(vehicleid == -1) return SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		    {
  				if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9]) // tikriname ar paskutine masina fura
		        {
		            if(IsTrailerAttachedToVehicle(vehicleid)) // tikriname ar priekaba prikabinta
		            {
		            	GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]); // isgauname furos pozicija
		            	GetVehiclePos(GetVehicleTrailer(vehicleid), vPos[3], vPos[4], vPos[5]); // isgauname furos priekabos pozicija
                        if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[0], vPos[1], vPos[2]))
                        {
                            // Tikrini ar fura toli nuo zaidejo
                            if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[3], vPos[4], vPos[5]))
                            {
                            // Tikrini ar furos priekaba toli nuo zaidejo
                                KraunambuittechEx[playerid] = SetTimerEx("Kraunambuittech", 1000, false, "d", playerid);
                                SendClientMessage(playerid, RED, "{009999}* Teks truputi palaukti. Kraunamos prekës á priekabà.");
                                DisableAllPlayerCheckpoints(playerid);
                            }
                            else
                            {
                                SendClientMessage(playerid, RED, "* Jûsø fûros priekaba per toli.");
                            }
						}
						else
						{
						    SendClientMessage(playerid, RED, "* Jûsø fûra per toli.");
						}
					}
		            else
		            {
		                SendClientMessage(playerid, RED, "* Turite èia atsivaryti fûrà su priekaba, á kurià galëtume sukrauti prekes.");
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		        }
			}
		}
        case 12:
		{
            if(playerDB[playerid][rangas] < 3) return SendClientMessage(playerid, RED, "* Ðità kroviná gali veþti tik fûristo profesionalo rangà turintis darbuotojas!");
		    if(playerDB[playerid][uzsisakeanglis] == 0) return SendClientMessage(playerid, RED, "* Tu nesi uþsisakæs angliø krovinio. Gráðk á fûristø darbo vietà ir uþsisakyk já ten!");
		    if(playerDB[playerid][prisikroves] == 1) return SendClientMessage(playerid, RED, "* Tu jau prisikrovæs pilnà priekabà prekiø, todël daugiau nebegalima.");
		    new vehicleid = playerDB[playerid][masina], Float:vPos[6];
		    if(vehicleid == -1) return SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		    {
		        if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9]) // tikriname ar paskutine masina fura
		        {
		            if(IsTrailerAttachedToVehicle(vehicleid)) // tikriname ar priekaba prikabinta
		            {
		            	GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]); // isgauname furos pozicija
		            	GetVehiclePos(GetVehicleTrailer(vehicleid), vPos[3], vPos[4], vPos[5]); // isgauname furos priekabos pozicija
                        if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[0], vPos[1], vPos[2]))
                        {
                            // Tikrini ar fura toli nuo zaidejo
                            if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[3], vPos[4], vPos[5]))
                            {
                            // Tikrini ar furos priekaba toli nuo zaidejo
                                KraunamanglisEx[playerid] = SetTimerEx("Kraunamanglis", 1000, false, "d", playerid);
                                SendClientMessage(playerid, -1, "{009999}* Teks truputi palaukti. Kraunamos prekës á priekabà.");
                                DisableAllPlayerCheckpoints(playerid);
                            }
                            else
                            {
                                SendClientMessage(playerid, RED, "* Jûsø fûros priekaba per toli.");
                            }
						}
						else
						{
						    SendClientMessage(playerid, RED, "* Jûsø fûra per toli.");
						}
					}
		            else
		            {
		                SendClientMessage(playerid, RED, "* Turite èia atsivaryti fûrà su priekaba, á kurià galëtume sukrauti prekes.");
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		        }
			}
		}
        case 13:
		{
            if(playerDB[playerid][rangas] < 4) return SendClientMessage(playerid, RED, "* Ðità kroviná gali veþti tik fûristo senbûvio rangà turintis darbuotojas!");
		    if(playerDB[playerid][uzsisakezvyra] == 0) return SendClientMessage(playerid, RED, "* Tu nesi uþsisakæs þvyro krovinio. Gráðk á fûristø darbo vietà ir uþsisakyk já ten!");
		    if(playerDB[playerid][prisikroves] == 1) return SendClientMessage(playerid, RED, "* Tu jau prisikrovæs pilnà priekabà prekiø, todël daugiau nebegalima.");
		    new vehicleid = playerDB[playerid][masina], Float:vPos[6];
		    if(vehicleid == -1) return SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		    {
  				if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9]) // tikriname ar paskutine masina fura
		        {
		            if(IsTrailerAttachedToVehicle(vehicleid)) // tikriname ar priekaba prikabinta
		            {
		            	GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]); // isgauname furos pozicija
		            	GetVehiclePos(GetVehicleTrailer(vehicleid), vPos[3], vPos[4], vPos[5]); // isgauname furos priekabos pozicija
                        if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[0], vPos[1], vPos[2]))
                        {
                            // Tikrini ar fura toli nuo zaidejo
                            if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[3], vPos[4], vPos[5]))
                            {
                            // Tikrini ar furos priekaba toli nuo zaidejo
                                KraunamzvyraEx[playerid] = SetTimerEx("Kraunamzvyra", 1000, false, "d", playerid);
                                SendClientMessage(playerid, -1, "{009999}* Teks truputi palaukti. Kraunamos prekës á priekabà.");
                                DisableAllPlayerCheckpoints(playerid);
                            }
                            else
                            {
                                SendClientMessage(playerid, RED, "* Jûsø fûros priekaba per toli.");
                            }
						}
						else
						{
						    SendClientMessage(playerid, RED, "* Jûsø fûra per toli.");
						}
					}
		            else
		            {
		                SendClientMessage(playerid, RED, "* Turite èia atsivaryti fûrà su priekaba, á kurià galëtume sukrauti prekes.");
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		        }
		    }
		}
		case 16:
     	{
      		if(IsPlayerInCheckpointEx(playerid, cpid))
        	{
        	
   				if(playerDB[playerid][kelintasCPVM] == 1)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid, 16,2461.3594,84.6711,26.0630, 4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 2)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid, 16,2438.7515,44.4095,26.0630,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 3)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid, 16, 2396.6404,72.2848,26.0630, 4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 4)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2358.5891,94.2458,26.1012,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 5)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2311.2375,94.0158,26.0633, 4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 6)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2291.4148,67.7247,26.0636,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 7)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2265.8037,44.4108,26.0630,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 8)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2149.2263,44.3600,26.0630,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 9)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1952.3163,43.1403,32.8245,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 10)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1698.9646,126.0479,31.4504,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 11)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1560.3846,123.0708,29.1977,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 12)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1494.1699,163.9089,29.9533,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 13)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1359.5150,220.9952,19.1333,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}

				else if(playerDB[playerid][kelintasCPVM] == 14)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1280.8605,235.5848,19.1345,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 15)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1235.3086,63.3114,22.6418,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 16)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1284.5223,-89.2708,36.6107,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 17)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1070.9009,-184.2516,36.6275,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 18)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,724.7406,-158.1521,20.2229,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 19)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,540.0397,-138.8402,37.2851,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 20)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,363.4770,-139.9032,1.7446,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}

				else if(playerDB[playerid][kelintasCPVM] == 21)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,335.3289,-99.9421,1.1214,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 22)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,247.4772,-69.5228,1.1540,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 23)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,144.1035,-69.1612,1.1568,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 24)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,130.4769,-150.2894,1.1568,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 25)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,164.5868,-214.3227,1.1596,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 26)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,184.0913,-280.2125,1.1567,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 27)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,215.5951,-349.9257,3.9695,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 28)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,372.6220,-400.1544,23.2457,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 29)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,521.4864,-417.9349,28.4413,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 30)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,639.1004,-450.4559,15.9146,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}

				else if(playerDB[playerid][kelintasCPVM] == 31)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,669.9123,-487.5804,15.9141,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 32)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,719.1273,-513.0765,15.9164,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 33)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,779.5935,-532.5698,15.9146,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 34)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,829.0486,-552.6016,15.9146,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 35)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,931.7230,-530.8777,33.6827,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 36)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1196.7153,-425.1388,11.3073,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 37)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1333.8824,-353.3886,2.6894,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 38)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1698.0314,-336.9331,36.5415,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 39)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1862.6584,-238.6944,39.7740,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 40)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,1895.5283,-13.8280,34.5422,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}

				else if(playerDB[playerid][kelintasCPVM] == 41)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2008.1368,37.4324,30.5441,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 42)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2257.3838,39.1139,26.0630,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 43)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2291.4990,-9.4348,26.0663,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 44)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2329.2397,-30.5355,26.0651,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 45)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2478.2175,-10.9275,26.0580,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 46)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2536.6335,29.0655,26.0614,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 47)
				{
					DisablePlayerCheckpointEx(playerid, 16);
					SetPlayerCheckpointEx(playerid,16,2483.5286,114.3661,26.0630,4.0);
					playerDB[playerid][kelintasCPVM] ++;
				}
				else if(playerDB[playerid][kelintasCPVM] == 48)
				{
     	        	DisablePlayerCheckpointEx(playerid, 16);
					playerDB[playerid][kelintasCPVM] = 0;
					SendClientMessage(playerid, 0xFFFF00FF, "* Vairavimo egzaminas baigtas.");
				   	new Float:health;
					new veh;
				    veh = GetPlayerVehicleID(playerid);
				    GetVehicleHealth(veh, health);
				    if(health > 900)
					{
					    new vehicleid = GetPlayerVehicleID(playerid);
					    if(vehicleid >= vmcar[0] && vehicleid <= vmcar[5])
					    {
					        SendClientMessage(playerid,COLOR_YELLOW,"* Iðlaikei maðinø teises. Sëkmës kelyje.");
                            SetPlayerPos(playerid, 2445.9993,129.9475,26.4900);
					  		playerDB[playerid][teises]=true;
							SetVehicleToRespawn(vehicleid);
							RemovePlayerFromVehicle(playerid); return 1;
					    }
						if(vehicleid >= vmcar[6] && vehicleid <= vmcar[8])
						{
							SendClientMessage(playerid,COLOR_YELLOW,"* Iðlaikei motociklø teises. Sëkmës kelyje.");
							SetPlayerPos(playerid, 2445.9993,129.9475,26.4900);
					  		playerDB[playerid][Mteises]=true;
							SetVehicleToRespawn(vehicleid);
							RemovePlayerFromVehicle(playerid); return 1;
						}
						if(vehicleid >= vmcar[9] && vehicleid <= vmcar[10])
						{
							SendClientMessage(playerid,COLOR_YELLOW,"* Iðlaikëte furistø teises. Sëkmës kelyje.");
							SetPlayerPos(playerid, 2445.9993,129.9475,26.4900);
					  		playerDB[playerid][FTeises]=true;
							SetVehicleToRespawn(vehicleid);
							RemovePlayerFromVehicle(playerid); return 1;
						}
					}
				    if(health < 900)
				    {
						SendClientMessage(playerid,COLOR_RED,"* Vairavimo egzaminas neiðlaikytas. Kita karta pasistenk labiau!");
						SetVehicleToRespawn(veh);
						RemovePlayerFromVehicle(playerid);
						return 1;
				   }
        	    }
          	}
		}
		case 17:
     	{
      		if(IsPlayerInCheckpointEx(playerid, cpid))
        	{
        	    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Turite bûti valytoju maðinoje, kad iðvalytumëte gatvæ!!");
         		if(playerDB[playerid][KelintasVALCP] == 1)
				{
			 		DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid,17,381.8507,-145.6848,3.5525, 4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~1/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 2)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,438.3818,-144.3533,16.9407,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~2/30 IKI REISO PABAIGOS",4000,4);
				}

				else if(playerDB[playerid][KelintasVALCP] == 3)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,540.8068,-144.7667,37.1311,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~3/30 IKI REISO PABAIGOS",4000,4);
				}

				else if(playerDB[playerid][KelintasVALCP] == 4)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,656.6942,-157.7115,25.2964,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~4/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 5)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,791.4297,-168.6707,18.2040,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~5/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 6)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,925.7020,-180.0647,10.3276,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~6/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 7)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1046.8883,-188.4417,31.6460,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~7/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 8)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1226.6003,-140.5858,39.1847,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~8/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 9)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1323.7965,-62.5926,35.5322,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~9/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 10)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1424.4581,25.5399,31.7305,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~10/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 11)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1585.9044,124.4906,29.3074,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~11/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 12)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1675.2980,125.5502,30.8382,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~12/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 13)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1809.4205,71.4469,34.7771,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~13/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 14)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1941.0452,38.4194,33.1989,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~14/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 15)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,2154.8042,39.2283,26.0317,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~15/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 16)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,2280.0071,38.9996,26.0229,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~16/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 17)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,2326.4006,-31.2165,26.0357,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~17/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 18)
				{
					DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,2307.7576,94.4073,26.0307,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~18/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 19)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,2170.1653,43.5902,26.0307,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~19/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 20)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,2047.9558,44.1558,27.5467,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~20/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 21)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1909.5479,45.6614,34.2357,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~21/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 22)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1783.6965,90.8078,33.9895,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~22/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 23)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1686.5507,128.8401,31.0770,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~23/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 24)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1409.0490,19.9575,32.1151,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~24/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 25)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,1250.7261,-116.6294,38.2299,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~25/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 26)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,836.3544,-167.0963,18.5801,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~26/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 27)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,570.1224,-143.2774,34.5014,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~27/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 28)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,335.8615,-120.4330,1.0638,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~28/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 29)
				{
				    DisablePlayerCheckpointEx(playerid, 17);
					SetPlayerCheckpointEx(playerid, 17,327.1863,-52.7683,1.2867,4.0);
					playerDB[playerid][KelintasVALCP] ++;
					GameTextForPlayer(playerid,"~w~29/30 IKI REISO PABAIGOS",4000,4);
				}
				else if(playerDB[playerid][KelintasVALCP] == 30)
				{
					DisablePlayerCheckpointEx(playerid, 17);
					playerDB[playerid][KelintasVALCP] = 0;
     				new vehicleid = GetPlayerVehicleID(playerid), model = GetVehicleModel(vehicleid);
					if(model == 574 || model == 552)
					{
						GameTextForPlayer(playerid,"~w~Baigete reisa gavote +~r~30 ~w~prie algos",4000,4);
						playerDB[playerid][alga] += 30;
						SendClientMessage(playerid, RED, "Norint pradëti dar vienà reisà ásëskite iðnaujo á valytoju maðinà");
						return 1;
				   }
			 	}
          	}
		}
		case 18:
		{
			if(playerDB[playerid][uzsisakegunus] == 0) return SendClientMessage(playerid, RED, "* Tu nesi uþsisakæs ginklø krovinio. Gráðk á fûristø darbo vietà ir uþsisakyk já ten!");
		    if(playerDB[playerid][prisikroves] == 1) return SendClientMessage(playerid, RED, "* Tu jau prisikrovæs pilnà priekabà prekiø, todël daugiau nebegalima.");
		    new vehicleid = playerDB[playerid][masina], Float:vPos[6];
		    if(vehicleid == -1) return SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		    {
	  			if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9]) // tikriname ar paskutine masina fura
		        {
		            if(IsTrailerAttachedToVehicle(vehicleid)) // tikriname ar priekaba prikabinta
		            {
		            	GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]); // isgauname furos pozicija
		            	GetVehiclePos(GetVehicleTrailer(vehicleid), vPos[3], vPos[4], vPos[5]); // isgauname furos priekabos pozicija
                        if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[0], vPos[1], vPos[2]))
                        {
                            // Tikrini ar fura toli nuo zaidejo
                            if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[3], vPos[4], vPos[5]))
                            {
                            // Tikrini ar furos priekaba toli nuo zaidejo
                                KraunamgunusEx[playerid] = SetTimerEx("Kraunamgunus", 1000, false, "d", playerid);
                                SendClientMessage(playerid, GREEN, "{009999}* Teks truputi palaukti. Kraunamos prekës á priekabà.");
                                DisableAllPlayerCheckpoints(playerid);
                            }
                            else
                            {
                                SendClientMessage(playerid, RED, "* Jûsø fûros priekaba per toli.");
                            }
						}
						else
						{
						    SendClientMessage(playerid, RED, "* Jûsø fûra per toli.");
						}
					}
		            else
		            {
		                SendClientMessage(playerid, RED, "* Turite èia atsivaryti fûrà su priekaba, á kurià galëtume sukrauti prekes.");
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		        }
            }
		}
		case 19:
		{
		    if(playerDB[playerid][uzsisakenarkus] == 0) return SendClientMessage(playerid, RED, "* Tu nesi uþsisakæs dviraèiø krovinio. Gráðk á fûristø darbo vietà ir uþsisakyk já ten!");
		    if(playerDB[playerid][prisikroves] == 1) return SendClientMessage(playerid, RED, "* Tu jau prisikrovæs pilnà priekabà prekiø, todël daugiau nebegalima.");
		    new vehicleid = playerDB[playerid][masina], Float:vPos[6];
		    if(vehicleid == -1) return SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		    {
				if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9]) // tikriname ar paskutine masina fura
		        {
		            if(IsTrailerAttachedToVehicle(vehicleid)) // tikriname ar priekaba prikabinta
		            {
		            	GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]); // isgauname furos pozicija
		            	GetVehiclePos(GetVehicleTrailer(vehicleid), vPos[3], vPos[4], vPos[5]); // isgauname furos priekabos pozicija
                        if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[0], vPos[1], vPos[2]))
                        {
                            // Tikrini ar fura toli nuo zaidejo
                            if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[3], vPos[4], vPos[5]))
                            {
                            // Tikrini ar furos priekaba toli nuo zaidejo
                                KraunamnarkusEx[playerid] = SetTimerEx("Kraunamnarkus", 1000, false, "d", playerid);
                                SendClientMessage(playerid, GREEN, "{009999}* Teks truputi palaukti. Kraunamos prekës á priekabà.");
                                DisableAllPlayerCheckpoints(playerid);
                            }
                            else
                            {
                                SendClientMessage(playerid, RED, "* Jûsø fûros priekaba per toli.");
                            }
						}
						else
						{
						    SendClientMessage(playerid, RED, "* Jûsø fûra per toli.");
						}
					}
		            else
		            {
		                SendClientMessage(playerid, RED, "* Turite èia atsivaryti fûrà su priekaba, á kurià galëtume sukrauti prekes.");
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		        }
            }
		}
		case 20:
		{
		    if(playerDB[playerid][uzsisakezole] == 0) return SendClientMessage(playerid, RED, "* Tu nesi uþsisakæs dviraèiø krovinio. Gráðk á fûristø darbo vietà ir uþsisakyk já ten!");
		    if(playerDB[playerid][prisikroves] == 1) return SendClientMessage(playerid, RED, "* Tu jau prisikrovæs pilnà priekabà prekiø, todël daugiau nebegalima.");
		    new vehicleid = playerDB[playerid][masina], Float:vPos[6];
		    if(vehicleid == -1) return SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		    {
				if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9]) // tikriname ar paskutine masina fura
		        {
		            if(IsTrailerAttachedToVehicle(vehicleid)) // tikriname ar priekaba prikabinta
		            {
		            	GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]); // isgauname furos pozicija
		            	GetVehiclePos(GetVehicleTrailer(vehicleid), vPos[3], vPos[4], vPos[5]); // isgauname furos priekabos pozicija
                        if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[0], vPos[1], vPos[2]))
                        {
                            // Tikrini ar fura toli nuo zaidejo
                            if(IsPlayerInRangeOfPoint(playerid, 15.0, vPos[3], vPos[4], vPos[5]))
                            {
                            // Tikrini ar furos priekaba toli nuo zaidejo
                                KraunamzoleEx[playerid] = SetTimerEx("Kraunamzole", 1000, false, "d", playerid);
                                SendClientMessage(playerid, GREEN, "{009999}* Teks truputi palaukti. Kraunamos prekës á priekabà.");
                                DisableAllPlayerCheckpoints(playerid);
                            }
                            else
                            {
                                SendClientMessage(playerid, RED, "* Jûsø fûros priekaba per toli.");
                            }
						}
						else
						{
						    SendClientMessage(playerid, RED, "* Jûsø fûra per toli.");
						}
					}
		            else
		            {
		                SendClientMessage(playerid, RED, "* Turite èia atsivaryti fûrà su priekaba, á kurià galëtume sukrauti prekes.");
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, RED, "* Turite èia atvaþiuoti su fûra.");
		        }
            }
		}
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	new cpid = pCPID[playerid];
	switch(cpid)
	{
		case 1:
		{
			if(IsPlayerInCheckpointEx(playerid, cpid))
			{
				/*printf("Paliko CP %d", cpid);*/
			}
		}
	}
   	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
 	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnObjectMoved(objectid){

	return 1;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if ( playertextid == CarShop [ 3 ] [ playerid ] ) {
 		playerDB [ playerid ] [ vVehColor ] = 1;
   		ChangeVehicleColor ( playerDB [ playerid ] [ vVeh ] , playerDB [ playerid ] [ vVehColor ] , playerDB [ playerid ] [ vVehColor ] ) ;
     	SelectTextDraw(playerid, 0xFFFFFFFF);
     	return 1;
	}
	else if ( playertextid == CarShop [ 4 ] [ playerid ] ) {
 		playerDB [ playerid ] [ vVehColor ] = 15;
   		ChangeVehicleColor ( playerDB [ playerid ] [ vVeh ] , playerDB [ playerid ] [ vVehColor ] , playerDB [ playerid ] [ vVehColor ] ) ;
     	SelectTextDraw(playerid, 0xFFFFFFFF);
     	return 1;
	}
	else if ( playertextid == CarShop [ 5 ] [ playerid ] ) {
 		playerDB [ playerid ] [ vVehColor ] = 3;
   		ChangeVehicleColor ( playerDB [ playerid ] [ vVeh ] , playerDB [ playerid ] [ vVehColor ] , playerDB [ playerid ] [ vVehColor ] ) ;
     	SelectTextDraw(playerid, 0xFFFFFFFF);
     	return 1;
	}
	else if ( playertextid == CarShop [ 6 ] [ playerid ] ) {
 		playerDB [ playerid ] [ vVehColor ] = 86;
   		ChangeVehicleColor ( playerDB [ playerid ] [ vVeh ] , playerDB [ playerid ] [ vVehColor ] , playerDB [ playerid ] [ vVehColor ] ) ;
     	SelectTextDraw(playerid, 0xFFFFFFFF);
     	return 1;
	}
	else if ( playertextid == CarShop [ 7 ] [ playerid ] ) {
 		playerDB [ playerid ] [ vVehColor ] = 65;
   		ChangeVehicleColor ( playerDB [ playerid ] [ vVeh ] , playerDB [ playerid ] [ vVehColor ] , playerDB [ playerid ] [ vVehColor ] ) ;
     	SelectTextDraw(playerid, 0xFFFFFFFF);
     	return 1;
	}
	else if ( playertextid == CarShop [ 8 ] [ playerid ] ) {
 		playerDB [ playerid ] [ vVehColor ] = 6;
   		ChangeVehicleColor ( playerDB [ playerid ] [ vVeh ] , playerDB [ playerid ] [ vVehColor ] , playerDB [ playerid ] [ vVehColor ] ) ;
     	SelectTextDraw(playerid, 0xFFFFFFFF);
     	return 1;
	}
 	else if ( playertextid == CarShop [ 9 ] [ playerid ] ) {
 		playerDB[playerid][vPressed] --;
   		playerDB[playerid][vVehColor] = vCarsColors[random(6)];
     	DestroyVehicle(playerDB[playerid][vVeh]);
      	switch(playerDB[playerid][vChoosedCategory])
		{
  			case 1:
	    	{
     			if ( playerDB [ playerid ] [ vPressed ]  < 0) playerDB[playerid][vPressed] = MAX_OLD_CARS - 1;
	        	playerDB[playerid][vVeh] = CreateVehicle(vOldCars[playerDB[playerid][vPressed]][vsModel], VEHICLE_POS_X, VEHICLE_POS_Y, vOldCars[playerDB[playerid][vPressed]][vsPosZ], VEHICLE_POS_R, playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1);
			}
			case 2:
   			{
	        	if(playerDB[playerid][vPressed] < 0) playerDB[playerid][vPressed] = MAX_SPORT_CARS - 1;
	        	playerDB[playerid][vVeh] = CreateVehicle(vSportCars[playerDB[playerid][vPressed]][vsModel], VEHICLE_POS_X, VEHICLE_POS_Y, vSportCars[playerDB[playerid][vPressed]][vsPosZ], VEHICLE_POS_R, playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1);
			}
			case 3:
  			{
	        	if(playerDB[playerid][vPressed] < 0) playerDB[playerid][vPressed] = MAX_MOTO_CARS - 1;
	        	playerDB[playerid][vVeh] = CreateVehicle(vMotoCars[playerDB[playerid][vPressed]][vsModel], VEHICLE_POS_X, VEHICLE_POS_Y, vMotoCars[playerDB[playerid][vPressed]][vsPosZ], VEHICLE_POS_R, playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1);
			}
		}
		SetVehicleParamsEx(playerDB[playerid][vVeh], false, true, false, true, false, false, false);
		SetVehicleVirtualWorld(playerDB[playerid][vVeh], playerid + 100);
		SetPlayerVirtualWorld(playerid, playerid + 100);
		SetPlayerPos(playerid, VEHICLE_POS_X, VEHICLE_POS_Y, VEHICLE_POS_Z);
		PutPlayerInVehicleEx(playerid, playerDB[playerid][vVeh], 0);
		TogglePlayerControllable(playerid, 0);
		SetPlayerCameraPos(playerid, CAMERA_POS_X, CAMERA_POS_Y, CAMERA_POS_Z);
		SetPlayerCameraLookAt(playerid, VEHICLE_POS_X, VEHICLE_POS_Y, VEHICLE_POS_Z);
		UpdateCarShopTextDraws(playerid);
		SelectTextDraw(playerid, 0xFFFFFFFF);
		return 1;
	}
 	else if ( playertextid == CarShop [ 10 ] [ playerid ] )
  	{
		playerDB[playerid][vPressed] ++;
		playerDB[playerid][vVehColor] = vCarsColors[random(6)];
		DestroyVehicle(playerDB[playerid][vVeh]);
		switch(playerDB[playerid][vChoosedCategory])
		{
			case 1:
			{
				if(playerDB[playerid][vPressed] > MAX_OLD_CARS - 1) playerDB[playerid][vPressed] = 0;
				playerDB[playerid][vVeh] = CreateVehicle(vOldCars[playerDB[playerid][vPressed]][vsModel], VEHICLE_POS_X, VEHICLE_POS_Y, vOldCars[playerDB[playerid][vPressed]][vsPosZ], VEHICLE_POS_R, playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1);
			}
			case 2:
			{
				if(playerDB[playerid][vPressed] > MAX_SPORT_CARS - 1) playerDB[playerid][vPressed] = 0;
				playerDB[playerid][vVeh] = CreateVehicle(vSportCars[playerDB[playerid][vPressed]][vsModel], VEHICLE_POS_X, VEHICLE_POS_Y, vSportCars[playerDB[playerid][vPressed]][vsPosZ], VEHICLE_POS_R, playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1);
			}
			case 3:
			{
				if(playerDB[playerid][vPressed] > MAX_MOTO_CARS - 1) playerDB[playerid][vPressed] = 0;
				playerDB[playerid][vVeh] = CreateVehicle(vMotoCars[playerDB[playerid][vPressed]][vsModel], VEHICLE_POS_X, VEHICLE_POS_Y, vMotoCars[playerDB[playerid][vPressed]][vsPosZ], VEHICLE_POS_R, playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1);
			}
		}
		SetVehicleParamsEx(playerDB[playerid][vVeh], false, true, false, true, false, false, false);
		SetVehicleVirtualWorld(playerDB[playerid][vVeh], playerid + 100);
		SetPlayerVirtualWorld(playerid, playerid + 100);
		SetPlayerPos(playerid, VEHICLE_POS_X, VEHICLE_POS_Y, VEHICLE_POS_Z);
		PutPlayerInVehicleEx(playerid, playerDB[playerid][vVeh], 0);
		TogglePlayerControllable(playerid, 0);
		SetPlayerCameraPos(playerid, CAMERA_POS_X, CAMERA_POS_Y, CAMERA_POS_Z);
		SetPlayerCameraLookAt(playerid, VEHICLE_POS_X, VEHICLE_POS_Y, VEHICLE_POS_Z);
		UpdateCarShopTextDraws(playerid);
		SelectTextDraw(playerid, 0xFFFFFFFF);
		return 1;
	}

	if(playertextid == LytiesPasirinkimoTextDraw[playerid][1])
	{
        playerDB[playerid][lytis]      = 1;
		Logged[playerid]               = true;
		playerDB[playerid][authstate]  = 1;
		playerDB[playerid][DeleteAcc]  = true;

		SendClientMessage(playerid, RED, "{84FBFB}Jûs pasirinkote vyriðkà lytá.");
		SendClientMessage(playerid, RED, "{00E1E1}Pagrindines komandas galite suþinoti paraðæ {FFFFFF}/komandos");
		SendClientMessage(playerid, RED, "{00E1E1}Informacijà apie savo paskyrà galite suþinoti paraðæ {FFFFFF}/info");
		SendClientMessage(playerid, RED, "{00E1E1}Visas perkamas paslaugas rasite - /paslaugos, informacija apie jûsø vartotojà - {FFFFFF}/info");

        PlayerTextDrawHide(playerid, LytiesPasirinkimoTextDraw[playerid][0]);
	    PlayerTextDrawHide(playerid, LytiesPasirinkimoTextDraw[playerid][1]);
	    PlayerTextDrawHide(playerid, LytiesPasirinkimoTextDraw[playerid][2]);
	    PlayerTextDrawHide(playerid, LytiesPasirinkimoTextDraw[playerid][3]);

	    CancelSelectTextDraw(playerid);
    }

    if(playertextid == LytiesPasirinkimoTextDraw[playerid][2])
    {
		playerDB[playerid][lytis]      = 0;
		Logged[playerid]               = true;
		playerDB[playerid][authstate]  = 1;
		playerDB[playerid][DeleteAcc]  = true;

		SendClientMessage(playerid, RED, "{84FBFB}Jûs pasirinkote moteriðkà lytá.");
		SendClientMessage(playerid, RED, "{00E1E1}Pagrindines komandas galite suþinoti paraðæ {FFFFFF}/komandos");
		SendClientMessage(playerid, RED, "{00E1E1}Informacijà apie savo paskyrà galite suþinoti paraðæ {FFFFFF}/info");
		SendClientMessage(playerid, RED, "{00E1E1}Visas perkamas paslaugas rasite - /paslaugos, informacija apie jûsø vartotojà - {FFFFFF}/info");

        PlayerTextDrawHide(playerid, LytiesPasirinkimoTextDraw[playerid][0]);
	    PlayerTextDrawHide(playerid, LytiesPasirinkimoTextDraw[playerid][1]);
	    PlayerTextDrawHide(playerid, LytiesPasirinkimoTextDraw[playerid][2]);
	    PlayerTextDrawHide(playerid, LytiesPasirinkimoTextDraw[playerid][3]);

	    CancelSelectTextDraw(playerid);
    }

    if(playertextid == RegLogTextDraw[playerid][4]) // Registracija
    {
    	new lQuery[65];

		format(lQuery, sizeof(lQuery), "SELECT * FROM `players` WHERE `Vardas` = '%s'", GetPlayerNameEx(playerid));

		mysql_query(lQuery);

		mysql_store_result();

		if(mysql_num_rows())
		{
		    return SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Ðis vartotojas jau egzistuoja, todël spauskite mygtukà {FF5454}\"Prisijungimas\"{ffffff}.");
		}
		else
		{
			ShowPlayerDialog(playerid, 9845, DIALOG_STYLE_PASSWORD, "Registracija",
			"{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:",
			"Registruotis", "Iðeiti");

			PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][0]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][1]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][2]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][3]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][4]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][5]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][6]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][7]);

		    CancelSelectTextDraw(playerid);
		}
    }

    if(playertextid == RegLogTextDraw[playerid][5]) // Prisijungimas
    {
        new lQuery[65];

		format(lQuery, sizeof(lQuery), "SELECT * FROM `players` WHERE `Vardas` = '%s'", GetPlayerNameEx(playerid));

		mysql_query(lQuery);

		mysql_store_result();
		
		if(mysql_num_rows())
		{
			ShowPlayerDialog(playerid, 3, DIALOG_STYLE_PASSWORD, "Prisijungimas",
			"{2ED0B5}Norëdami prisijungti á serverá jus turite ávesti savo slaptaþodá.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudojote prisiregistruojant á serverá á serverá:",
			"Prisijungti", "Iðeiti");
			
			PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][0]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][1]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][2]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][3]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][4]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][5]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][6]);
	        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][7]);

		    CancelSelectTextDraw(playerid);
		}
		else
		{
			return SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Ðis vartotojas neegzistuoja mûsø duom. bazëje, todël spauskite mygtukà {FF5454}\"Registracija\"{ffffff}.");
		}
    }

    if(playertextid == RegLogTextDraw[playerid][6]) // Iðëjimas
    {
        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][0]);
        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][1]);
        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][2]);
        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][3]);
        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][4]);
        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][5]);
        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][6]);
        PlayerTextDrawHide(playerid, RegLogTextDraw[playerid][7]);

	    CancelSelectTextDraw(playerid);

	    SetTimerEx("KickEx", 100, false, "d", playerid);
    }

	return 1;
}

getDoorssStatus ( id ) {
	new status [ 30 ];
	if ( vehicleDB [ id ] [ vLocked ] )
	    status = "{ff0000}Uþrakintos";
	else
	    status = "{ffff00}Atrakintos";
	return status;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	switch(dialogid)
	{
		case OwnGarageControlDialog:
		{
			if(response)
	        {
	            new GarageID = playerDB[playerid][SomeoneVariable];

	            switch(listitem)
	            {
	                case 0: // Atidaryti/Uþdaryti garaþa.
	                {
	                    if(OwnGaragesSystem[GarageID][garGatesOpened] == 1)
	                    {
	                        CloseOwnGarageGates(GarageID);

	                        OnPlayerKeyStateChange(playerid, KEY_CROUCH, 0);
	                    }
	                    else
	                    {
	                        OpenOwnGarageGates(GarageID);

	                        OnPlayerKeyStateChange(playerid, KEY_CROUCH, 0);
	                    }
	                }
	                case 1: // Parduoti garaþà.
	                {
						ShowPlayerDialog(playerid, OwnGarageSellDialog, DIALOG_STYLE_INPUT, "{F2F2F2}Nuosavo garaþo pardavimas!",
						"{F2F2F2}Norëdami parduoti garaþà á þemiau esanti laukeli turite áraðyti tekstà pagal pavyzdi:\n\t{FF0000}[Þaidëjo Vardas/ID] [Siûloma suma] | Pvz: Vardenis 1000.0\n{F2F2F2}", "Siûlyti", "Atgal");
	                }
	            }
	        }
	    }
	    case OwnGarageSellDialog:
        {
            if(response)
            {
                new giveplayerid, SuggMoney;

				if(!sscanf(inputtext, "ri", giveplayerid, SuggMoney))
	    		{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if(SuggMoney > 0)
					    {
					    	if(giveplayerid != playerid)
					    	{
					    	    new Float: X, Float: Y, Float: Z; GetPlayerPos(giveplayerid, X, Y, Z);
					    	    if(IsPlayerInRangeOfPoint(playerid, 10.0, X, Y, Z))
					    	    {
					    			new String[256];
					    			new GarageID = playerDB[playerid][SomeoneVariable];

					    			format(String, sizeof(String), ""#COL_WAIT"[PALAUKITE]: {F2F2F2}Pasiûlete þaidëjui {FF0000}%s{F2F2F2} garaþà numeriu {AEB404}%d{F2F2F2} uþ {AEB404}%i", GetPlayerNameEx(giveplayerid), GarageID, SuggMoney);
									SendClientMessage(playerid, -1, String);

									format(String, sizeof(String), "{FF0000}%s {F2F2F2}jums siûlo garaþà numeriu {FF0000}%d{F2F2F2} uþ {AEB404}%i{F2F2F2}\n\t\tAr norite???", GetPlayerNameEx(playerid), GarageID, SuggMoney);
									ShowPlayerDialog(giveplayerid, OwnGarageSuggestionDialog, DIALOG_STYLE_MSGBOX, "{F2F2F2}Garaþo siûlymas!", String, "Taip", "Ne");

									SuggestionSystem     [giveplayerid][0] = playerid;
									SuggestionSystem     [giveplayerid][1] = GarageID;
									SuggestionSystemMoney[giveplayerid]    = SuggMoney;
								}
								else
								{
								    ShowPlayerDialog(playerid, OwnGarageSellDialog, DIALOG_STYLE_INPUT, "{F2F2F2}Nuosavo garaþo pardavimas!",
									"{FF0000}Þaidëjas yra per toli nuo jûsø!{F2F2F2}\n", "Siûlyti", "Atgal");
								}
							}
							else
							{
							    OnDialogResponse(playerid, OwnGarageControlDialog, true, 1, "");
							}
						}
						else
						{
						    OnDialogResponse(playerid, OwnGarageControlDialog, true, 1, "");
						}
					}
					else
					{
					    ShowPlayerDialog(playerid, OwnGarageSellDialog, DIALOG_STYLE_INPUT, "{F2F2F2}Nuosavo garaþo pardavimas!",
						"{FF0000}Þaidëjas neprisijungæs!{F2F2F2}\nNorëdami parduoti garaþà á þemiau esanti laukeli turite áraðyti tekstà pagal pavyzdi\n\t{FF0000}[Þaidëjo Vardas/ID] [Siûloma suma] | Pvz: Vardenis 1000.0\n{F2F2F2}", "Siûlyti", "Atgal");
					}
	    		}
	    		else
	    		{
	    		    OnDialogResponse(playerid, OwnGarageControlDialog, true, 1, "");
	    		}
            }
            else
            {
                OnPlayerKeyStateChange(playerid, KEY_SECONDARY_ATTACK, 0);
            }
        }
        case OwnGarageSuggestionDialog:
		{
	        new SuggPlayerid     = SuggestionSystem     [playerid][0];
			new GarageID         = SuggestionSystem     [playerid][1];
			new SuggMoney        = SuggestionSystemMoney[playerid];

		    if(response)
		    {
				if(GetPlayerMoneyA(playerid) >= SuggMoney)
				{
				    new String[220];
				    format(String, sizeof(String), ""#COL_INFO"[INFO]: {F2F2F2}Sveikinu, nusipirkus garaþà numeriu {AEB404}%d{F2F2F2} uþ {AEB404}%i{F2F2F2}!", GarageID, SuggMoney);
					SendClientMessage(playerid, -1, String);

					format(String, sizeof(String), ""#COL_INFO"[INFO]: {F2F2F2}Pardavete garaþà numeriu {AEB404}%d{F2F2F2} uþ {AEB404}%i{F2F2F2}!", GarageID, SuggMoney);
					SendClientMessage(SuggPlayerid, -1, String);

					GivePlayerMoneyA(playerid,    -SuggMoney);
					GivePlayerMoneyA(SuggPlayerid, SuggMoney);

					strdel(OwnGaragesSystem[GarageID][garOwnerName], 0,                         MAX_PLAYER_NAME);
                    strcat(OwnGaragesSystem[GarageID][garOwnerName], GetPlayerNameEx(playerid), MAX_PLAYER_NAME);

					format(String, sizeof(String), "{5FB404}Garaþas {AEB404}%d{5FB404}\nSavininkas: {FF0000}%s{5FB404}\nGalios dar {AEB404}%d{5FB404}\n[Spauskite ENTER]\n", OwnGaragesSystem[GarageID][garIndeficationID], OwnGaragesSystem[GarageID][garOwnerName], OwnGaragesSystem[GarageID][garLeftDays]);
					UpdateDynamic3DTextLabelText(OwnGaragesSystem[GarageID][gar3DTextLabel], -1, String);

				}
				else
				{
				    SendClientMessage(playerid, -1, ""#COL_INFO"[INFO]: {F2F2F2}Jums neuþtenka pinigø!");

					SendClientMessage(SuggPlayerid, -1, ""#COL_INFO"[INFO]: {F2F2F2}Þaidëjui neuþtenka pinigø!");
				}
		    }
		    else
		    {
		        SendClientMessage(SuggPlayerid, -1, ""#COL_INFO"[INFO]: {F2F2F2}Þaidëjas nesutiko su jûsø pasiûlimu!");
		    }
		    
		    SuggestionSystem     [playerid][0] = 0;   SuggestionSystem     [SuggPlayerid][0] = 0;
			SuggestionSystem     [playerid][1] = 0;   SuggestionSystem     [SuggPlayerid][1] = 0;
			SuggestionSystemMoney[playerid]    = 0;   SuggestionSystemMoney[SuggPlayerid]    = 0;
		}
        case OwnGarageBuyDialog:
        {
            if(response)
            {
                new GarageID = playerDB[playerid][SomeoneVariable];
                
                if((GetPlayerMoneyA(playerid) >= 20000000 && !OwnGaragesSystem[GarageID][garSpecialOwnGarage]) || (GetPlayerMoneyA(playerid) >= 25000000 && OwnGaragesSystem[GarageID][garSpecialOwnGarage]))
                {
                    if(!OwnGaragesSystem[GarageID][garSpecialOwnGarage])
                    {
                    	GivePlayerMoneyA(playerid, -20000000);
                    }
                    else
                    {
                        GivePlayerMoneyA(playerid, -25000000);
                    }
                    
                    strdel(OwnGaragesSystem[GarageID][garOwnerName], 0,                         MAX_PLAYER_NAME);
                    strcat(OwnGaragesSystem[GarageID][garOwnerName], GetPlayerNameEx(playerid), MAX_PLAYER_NAME);
                    
                    OwnGaragesSystem[GarageID][garLeftDays] = 30;
                    
                    new String[220];
					format(String, sizeof(String), "{5FB404}Garaþas {AEB404}%d{5FB404}\nSavininkas: {FF0000}%s{5FB404}\nGalios dar {AEB404}%d{5FB404}\n[Spauskite ENTER]\n", OwnGaragesSystem[GarageID][garIndeficationID], OwnGaragesSystem[GarageID][garOwnerName], OwnGaragesSystem[GarageID][garLeftDays]);
					UpdateDynamic3DTextLabelText(OwnGaragesSystem[GarageID][gar3DTextLabel], -1, String);
					
					SendClientMessage(playerid, -1, ""#COL_INFO"[GARAGES]: {F2F2F2}Nusipirkote nuosava garaþà!");
                }
	        }
        }
    }
    
    
    
	//BAUSTI
	
	switch(dialogid)
	{
		case FALDialog:
		{
			if(response)
			{
				new giveplayerid = playerDB[playerid][ChoosedPlayer], String[300];

				//for(new i = 0; i < sizeof(FAL); i ++)
				{
					switch(listitem)
					{
						case 1..5:
						{
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþtildë þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendMessageToAdmins(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s {FFFFFF}| Laikas: {8cc17b}%s{FFFFFF} min!", FAL[listitem][Bausme], konvertuoti_pinigus(FAL[listitem][bLaikas]));
							SendMessageToAdmins(-1, String);
							
							// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþtildë jus uþ {8cc17b}%s{FFFFFF} Laikui {8cc17b}%s MIN!", GetPlayerNameEx(playerid), FAL[listitem][Bausme],konvertuoti_pinigus(FAL[listitem][bLaikas]));
							SendClientMessage(giveplayerid,-1, String);


							playerDB[giveplayerid][Muted] = gettime() + (FAL[listitem][bLaikas] * 60);
						}

						case 8..17:
						{
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}ákalino þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendMessageToAdmins(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s {FFFFFF}| Laikas: {8cc17b}%s{FFFFFF} min!", FAL[listitem][Bausme], konvertuoti_pinigus(FAL[listitem][bLaikas]));
							SendMessageToAdmins(-1, String);
							
							// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}ákalino jus uþ {8cc17b}%s{FFFFFF} Laikui {8cc17b}%s MIN!", GetPlayerNameEx(playerid), FAL[listitem][Bausme],konvertuoti_pinigus(FAL[listitem][bLaikas]));
							SendClientMessage(giveplayerid,-1, String);


							JailPlayer(giveplayerid, FAL[listitem][bLaikas]);
						}

						case 20..22:
						{
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}iðmetë þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendClientMessageToAll(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s{FFFFFF}!", FAL[listitem][Bausme]);
							SendClientMessageToAll(-1, String);
							
							// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}iðmetë jus ið serverio uþ {8cc17b}%s!", GetPlayerNameEx(playerid), FAL[listitem][Bausme]);
							SendClientMessage(giveplayerid,-1, String);


							IsmestiZaideja(giveplayerid, 100);
						}

						case 25..28:
						{
							if(playerDB[playerid][baninolaikui] > gettime()) return SendClientMessage(playerid, -1, "{FFFFFF} Dar nepraëjo 10 minuèiø nuo praeito uþblokavimo!");

							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}laikinai uþblokavo þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendClientMessageToAll(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s {FFFFFF}| Laikas: {8cc17b}%s{FFFFFF} min!", FAL[listitem][Bausme], konvertuoti_pinigus(FAL[listitem][bLaikas]));
							SendClientMessageToAll(-1, String);
							
							// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþblokavo jus laikinai uþ {8cc17b}%s{FFFFFF} Laikui {8cc17b}%s MIN!", GetPlayerNameEx(playerid), TAL[listitem][Bausme],konvertuoti_pinigus(TAL[listitem][bLaikas]));
							SendClientMessage(giveplayerid,-1, String);


							playerDB[giveplayerid][BanLaikas] = gettime() + (FAL[listitem][bLaikas] * 60);

							IsmestiZaideja(giveplayerid, 100);

							if(playerDB[playerid][admin] <= 3)
							{
								playerDB[playerid][baninolaikui] = gettime() + 300;
							}
						}
					}
				}
			}
		}

		case SALDialog:
		{
			if(response)
			{
				new giveplayerid = playerDB[playerid][ChoosedPlayer], String[300];

				//for(new i = 0; i < sizeof(SAL); i ++)
				{
					switch(listitem)
					{
						case 1..5:
						{
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþtildë þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendMessageToAdmins(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s {FFFFFF}| Laikas: {8cc17b}%s{FFFFFF} min!", SAL[listitem][Bausme], konvertuoti_pinigus(SAL[listitem][bLaikas]));
							SendMessageToAdmins(-1, String);
							
														// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþtildë jus uþ {8cc17b}%s{FFFFFF} Laikui {8cc17b}%s MIN!", GetPlayerNameEx(playerid), SAL[listitem][Bausme],konvertuoti_pinigus(SAL[listitem][bLaikas]));
							SendClientMessage(giveplayerid,-1, String);

							playerDB[giveplayerid][Muted] = gettime() + (SAL[listitem][bLaikas] * 60);
						}

						case 8..17:
						{
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}ákalino þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendMessageToAdmins(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s {FFFFFF}| Laikas: {8cc17b}%s{FFFFFF} min!", SAL[listitem][Bausme], konvertuoti_pinigus(SAL[listitem][bLaikas]));
							SendMessageToAdmins(-1, String);
							
														// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}ákalino jus uþ {8cc17b}%s{FFFFFF} Laikui {8cc17b}%s MIN!", GetPlayerNameEx(playerid), SAL[listitem][Bausme],konvertuoti_pinigus(SAL[listitem][bLaikas]));
							SendClientMessage(giveplayerid,-1, String);

							JailPlayer(giveplayerid, SAL[listitem][bLaikas]);
						}

						case 20..22:
						{
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}iðmetë þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendClientMessageToAll(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s{FFFFFF}!", SAL[listitem][Bausme]);
							SendClientMessageToAll(-1, String);
							
														// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}iðmetë jus ið serverio uþ {8cc17b}%s!", GetPlayerNameEx(playerid), SAL[listitem][Bausme]);
							SendClientMessage(giveplayerid,-1, String);

							IsmestiZaideja(giveplayerid, 100);
						}

						case 25..28:
						{
							if(playerDB[playerid][baninolaikui] > gettime()) return SendClientMessage(playerid, -1, "{FFFFFF} Dar nepraëjo 10 minuèiø nuo praeito uþblokavimo!");

							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}laikinai uþblokavo þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendClientMessageToAll(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s {FFFFFF}| Laikas: {8cc17b}%s{FFFFFF} min!", SAL[listitem][Bausme], konvertuoti_pinigus(SAL[listitem][bLaikas]));
							SendClientMessageToAll(-1, String);
							
														// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþblokavo jus laikinai uþ {8cc17b}%s{FFFFFF} Laikui {8cc17b}%s MIN!", GetPlayerNameEx(playerid), SAL[listitem][Bausme],konvertuoti_pinigus(SAL[listitem][bLaikas]));
							SendClientMessage(giveplayerid,-1, String);

							playerDB[giveplayerid][BanLaikas] = gettime() + (SAL[listitem][bLaikas] * 60);

							IsmestiZaideja(giveplayerid, 100);

							if(playerDB[playerid][admin] <= 3)
							{
								playerDB[playerid][baninolaikui] = gettime() + 300;
							}
						}
					}
				}
			}
		}

		case TALDialog:
		{
			if(response)
			{
				new giveplayerid = playerDB[playerid][ChoosedPlayer], String[300];

				//for(new i = 0; i < sizeof(TAL); i ++)
				{
					switch(listitem)
					{
						case 1..5:
						{
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþtildë þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendMessageToAdmins(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s {FFFFFF}| Laikas: {8cc17b}%s{FFFFFF} min!", TAL[listitem][Bausme], konvertuoti_pinigus(TAL[listitem][bLaikas]));
							SendMessageToAdmins(-1, String);
							
																					// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþtildë jus uþ {8cc17b}%s{FFFFFF} Laikui {8cc17b}%s MIN!", GetPlayerNameEx(playerid), TAL[listitem][Bausme],konvertuoti_pinigus(TAL[listitem][bLaikas]));
							SendClientMessage(giveplayerid, -1, String);

							playerDB[giveplayerid][Muted] = gettime() + (TAL[listitem][bLaikas] * 60);
						}

						case 8..17:
						{
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}ákalino þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendMessageToAdmins(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s {FFFFFF}| Laikas: {8cc17b}%s{FFFFFF} min!", TAL[listitem][Bausme], konvertuoti_pinigus(TAL[listitem][bLaikas]));
							SendMessageToAdmins(-1, String);
							
																					// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}ákalino jus uþ {8cc17b}%s{FFFFFF} Laikui {8cc17b}%s MIN!", GetPlayerNameEx(playerid), TAL[listitem][Bausme],konvertuoti_pinigus(TAL[listitem][bLaikas]));
							SendClientMessage(giveplayerid,-1, String);

							JailPlayer(giveplayerid, TAL[listitem][bLaikas]);
						}

						case 20..22:
						{
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}iðmetë þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendClientMessageToAll(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s{FFFFFF}!", TAL[listitem][Bausme]);
							SendClientMessageToAll(-1, String);
																					// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}iðmetë jus ið serverio uþ {8cc17b}%s!", GetPlayerNameEx(playerid), TAL[listitem][Bausme]);
							SendClientMessage(giveplayerid,-1, String);

							IsmestiZaideja(giveplayerid, 100);
						}

						case 25..28:
						{
							if(playerDB[playerid][baninolaikui] > gettime()) return SendClientMessage(playerid, -1, "{FFFFFF} Dar nepraëjo 10 minuèiø nuo praeito uþblokavimo!");

							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}laikinai uþblokavo þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendClientMessageToAll(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s {FFFFFF}| Laikas: {8cc17b}%s{FFFFFF} min!", TAL[listitem][Bausme], konvertuoti_pinigus(TAL[listitem][bLaikas]));
							SendClientMessageToAll(-1, String);
							
														// rodys nubaustam
							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþblokavo jus laikinai uþ {8cc17b}%s{FFFFFF} Laikui {8cc17b}%s MIN!", GetPlayerNameEx(playerid), TAL[listitem][Bausme],konvertuoti_pinigus(TAL[listitem][bLaikas]));
							SendClientMessage(giveplayerid,-1, String);

							playerDB[giveplayerid][BanLaikas] = gettime() + (TAL[listitem][bLaikas] * 60);

							IsmestiZaideja(giveplayerid, 100);

							if(playerDB[playerid][admin] <= 3)
							{
								playerDB[playerid][baninolaikui] = gettime() + 300;
							}
						}

						case 31..35:
						{
							if(playerDB[playerid][baninopaprastai] > gettime()) return SendClientMessage(playerid, -1, "{FFFFFF} Dar nepraëjo 10 minuèiø nuo praeito uþblokavimo!");

							format(String, sizeof(String),
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþblokavo þaidëjà {8cc17b}%s{FFFFFF}!", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
							SendClientMessageToAll(-1, String);

							format(String, sizeof(String),
							"{FFFFFF} Prieþastis: {8cc17b}%s{FFFFFF}!", TAL[listitem][Bausme]);
							SendClientMessageToAll(-1, String);
							
							format(String, sizeof(String), // BanIP
							"{FFFFFF} Administratorius {8cc17b}%s {FFFFFF}uþblokavo jus uþ {8cc17b}%s", GetPlayerNameEx(playerid), TAL[listitem][Bausme]);
							SendClientMessage(giveplayerid,-1, String);

							BanPlayer(playerid, giveplayerid, TAL[listitem][Bausme]);

							if(playerDB[playerid][admin] <= 3)
							{
								playerDB[playerid][baninopaprastai] = gettime() + 300;
							}
						}
					}
				}
			}
		}
	}
	
	
	
	//BAUSTI pabaiga
	
// Gaujø sistemos .

	if(dialogid == 4354)
		{
			//palikti afk sistemai
		}

	if ( dialogid == 14200 ) {
	    if ( response ) {
	        switch ( listitem ) {
	            case 2: {
	                ShowPlayerDialog ( playerid , 14202 , DIALOG_STYLE_INPUT , "Kvietimas á gaujà" , "Áraðykite vardà þaidëjo ( arba ID ) kuri norite pakviesti" , "Kviesti" , "Uþdaryti" ) ;
	            }
	            case 3: {
	                ShowPlayerDialog ( playerid , 14203 , DIALOG_STYLE_INPUT , "Iðmetimas ið gaujos" , "Áraðykite vardà þaidëjo ( arba ID ) kurá norite iðmesti" , "Iðmesti" , "Uþdaryti" ) ;
	            }
	            case 4: {
					new string1 [ 600 ] , string2 [ 200 ] , eilesNR = 0;
					format ( string1 , sizeof ( string1 ) , "Prisijungæ gaujiniai: \n\n" ) ;
					for ( new i; i < MAX_PLAYERS; i ++ ) {
					    if ( IsPlayerConnected ( i ) && playerDB [ playerid ] [ gaujosID ] == playerDB [ i ] [ gaujosID ] ) {
						    eilesNR ++;
						    format ( string2 , sizeof ( string2 ) , "%d. %s - %d EXP\n" , eilesNR , GetPlayerNameEx ( i ) , GetPlayerScore ( i ) ) ;
						    strcat ( string1 , string2 , sizeof ( string1 ) ) ;
					    }
					}
					ShowPlayerDialog ( playerid , 14204 , DIALOG_STYLE_MSGBOX , "Gaujos nariai ONLINE" , string1 , "Uþdaryti" , "" ) ;
	            }
	            case 5: {
	                ShowPlayerDialog ( playerid , 14205 , DIALOG_STYLE_INPUT , "Gaujos pavadinimo keitimas" , "Áraðykite naujà pavadinimà" , "Keisti" , "Uþdaryti" ) ;
	            }
	            case 6: {
	            	ShowPlayerDialog ( playerid , 14207 , DIALOG_STYLE_INPUT , "Raðykite á chat'à" , "Jûsø þinutë" , "Siûsti" , "Uþdaryti" ) ;
	            }
	            case 7: {
	                if(playerDB[playerid][KadaGRase] > gettime()) return SendClientMessage(playerid, RED, " Ðità komandà galima naudoti tik kas 1 minute !");
	            	ShowPlayerDialog ( playerid , 14208 , DIALOG_STYLE_INPUT , "Raðykite á global chat'à" , "Jûsø þinutë" , "Siûsti" , "Uþdaryti" ) ;
	            }
                    case 8: {
                                        new query [ 200 ] ;
                                        format ( query , sizeof ( query ) , "DELETE FROM gangs WHERE gId = %d AND gLeader = '%s'" , playerDB [ playerid ] [ gaujosID ] , GetPlayerNameEx ( playerid ) ) ;
                                        mysql_query ( query ) ;
                                        for ( new i; i < MAX_PLAYERS; i ++ ) {
                                            if ( IsPlayerConnected ( i ) && playerDB [ playerid ] [ gaujosID ] == playerDB [ i ] [ gaujosID ] ) {
                                                    if ( i != playerid ) {
                                                        playerDB [ i ] [ gaujosID ] = 0;
                                                        SendClientMessage ( i , RED , " Jûsø gauja buvo uþdaryta, todël nuo ðiol Jûs nebe gaujinis !" ) ;
                                                        format ( query , sizeof ( query ) , "UPDATE players SET gaujosID = 0 WHERE Vardas = '%s'" , GetPlayerNameEx ( i ) ) ;
                                                        mysql_query ( query ) ;
                                                    }
                                                }
                                        }
                                        format ( query , sizeof ( query ) , "UPDATE players SET gaujosID = 0 WHERE gaujosID = %d" , playerDB [ playerid ] [ gaujosID ] ) ;
                                        mysql_query ( query ) ;
                                        playerDB [ playerid ] [ gaujosID ] = 0;
                                        SendClientMessage ( playerid , RED , " Sëkmingai uþdarëtë savo gaujà !" ) ;
                    }
                }
            }
        }
	if ( dialogid == 14201 ) {
	    if ( response ) {
	        switch ( listitem ) {
	            case 2: {
	                new query [ 150 ] ;
					for ( new i = 0; i < MAX_PLAYERS; i ++ ) {
					    if ( IsPlayerConnected ( i ) && playerDB [ playerid ] [ gaujosID ] == playerDB [ i ] [ gaujosID ] ) {
							format ( query , sizeof ( query ) , " %s áðëjo ið Jûsø gaujos !" , GetPlayerNameEx ( playerid ) ) ;
							SendClientMessage ( i , GREEN , query ) ;
						}
					}
	                playerDB [ playerid ] [ gaujosID ] = 0 ;
	                SendClientMessage ( playerid , RED , " Áðëjote ið gaujos !" ) ;
		            format ( query , sizeof ( query ) , "UPDATE players SET gaujosID = 0 WHERE Vardas = '%s'" , GetPlayerNameEx ( playerid ) ) ;
		            mysql_query ( query ) ;
	            }
	            case 3: {
	                ShowPlayerDialog ( playerid , 14207 , DIALOG_STYLE_INPUT , "Raðykite á chat'à" , "Jûsø þinutë" , "Siûsti" , "Uþdaryti" ) ;
	            }
	            case 4: {
					new string1 [ 600 ] , string2 [ 200 ] , eilesNR = 0;
					format ( string1 , sizeof ( string1 ) , "Prisijungæ gaujiniai: \n\n" ) ;
					for ( new i = 0 ; i < MAX_PLAYERS; i ++ ) {
					    if ( IsPlayerConnected ( i ) && playerDB [ playerid ] [ gaujosID ] == playerDB [ i ] [ gaujosID ] ) {
						    eilesNR ++;
						    format ( string2 , sizeof ( string2 ) , "%d. %s - %d EXP\n" , eilesNR , GetPlayerNameEx ( i ) , GetPlayerScore ( i ) ) ;
						    strcat ( string1 , string2 , sizeof ( string1 ) ) ;
						}
					}
					ShowPlayerDialog ( playerid , 14204 , DIALOG_STYLE_MSGBOX , "Gaujos nariai ONLINE" , string1 , "Uþdaryti" , "" ) ;
	            }
	        }
	    }
	}
	if ( dialogid == 14202 ) {
	    if ( response ) {
			new playerioID , string [ 300 ];
			if ( sscanf ( inputtext , "u" , playerioID ) ) return ShowPlayerDialog ( playerid , 14202 , DIALOG_STYLE_INPUT , "Kvietimas á gaujà" , "Áraðykite vardà þaidëjo ( arba ID ) kurá norite pakviesti" , "Kviesti" , "Uþdaryti" ) ;
			if ( playerDB [ playerioID ] [ gaujosID ] != 0 ) return SendClientMessage ( playerid , RED,  " Þaidëjas jau turi gaujà !" ) ;
			if ( !IsPlayerConnected ( playerioID ) ) return SendClientMessage ( playerid , RED , " Þaidëjas atsijungæs !" ) ;
			if ( GetPlayerScore ( playerioID ) < 1000) return SendClientMessage(playerid,RED," Þaidëjas neturi pakankamai EXP ! Reikia 1.000 XP .");
			if ( playerDB [ playerioID ] [ gaujosID ] == playerDB [ playerid ] [ gaujosID ] ) return SendClientMessage ( playerid , RED , " Þaidëjas jau Jûsø gaujoje !" ) ;
            if ( playerioID == playerid ) return SendClientMessage ( playerid , RED , " Savæs priimti negalite, nes ir taip esate savo gaujoje !" ) ;
			gPakviestas [ playerioID ] = playerDB [ playerid ] [ gaujosID ] ;
            format ( string , sizeof ( string ) , " Jûs buvote pakviestas á %s gaujà ! [ /gpriimt arba /gatmest ]" , gInfo [ playerDB [ playerid ] [ gaujosID ] ] [ gName ] ) ;
            SendClientMessage ( playerioID , GREEN , string ) ;
	    }
	}
	if ( dialogid == 14203 ) {
	    if ( response ) {
			new playerioID , string [ 300 ];
			if ( sscanf ( inputtext , "u" , playerioID ) ) return ShowPlayerDialog ( playerid , 14203 , DIALOG_STYLE_INPUT , "Iðmetimas ið gaujos" , "Áraðykite vardà þaidëjo ( arba ID ) kurá norite iðmesti" , "Iðmesti" , "Uþdaryti" ) ;
			if ( !IsPlayerConnected ( playerioID ) ) return SendClientMessage ( playerid , RED , " Þaidëjas atsijungæs !" ) ;
			if ( playerDB [ playerioID ] [ gaujosID ] != playerDB [ playerid ] [ gaujosID ] ) return SendClientMessage ( playerid , RED , " Þaidëjas ne Jûsø gaujoje !" ) ;
			if ( playerioID == playerid ) return SendClientMessage ( playerid , RED , " Savæs iðmesti ið gaujos negalite !" ) ;
			playerDB [ playerioID ] [ gaujosID ] = 0;
            format ( string , sizeof ( string ) , " Jûs buvote iðmestas ið %s gaujos !" , gInfo [ playerDB [ playerid ] [ gaujosID ] ] [ gName ] ) ;
            SendClientMessage ( playerioID , RED , string ) ;
            format ( string , sizeof ( string ) , "UPDATE players SET gaujosID = 0 WHERE Vardas = '%s'" , GetPlayerNameEx ( playerioID ) ) ;
            mysql_query ( string ) ;
	    }
	}
	if ( dialogid == 14205 ) {
	    if ( response ) {
	        new query [ 300 ] ;
	        format ( query , sizeof ( query ) , "SELECT * FROM gangs WHERE gName = '%s'" , inputtext ) ;
	        mysql_query ( query ) ;
	        mysql_store_result ( ) ;
	        if ( !mysql_num_rows ( ) ) {
	            format ( query , sizeof ( query ) , "UPDATE gangs SET gName = '%s' WHERE gLeader = '%s' AND gId = %d" , inputtext , GetPlayerNameEx ( playerid ) , playerDB [ playerid ] [ gaujosID ] ) ;
	            mysql_query ( query ) ;
	            format ( query , sizeof ( query ) , " Sëkmingai pakeitëte gaujos pavadinimà ið %s á %s !" , gInfo [ playerDB [ playerid ] [ gaujosID ] ] [ gName ] , inputtext ) ;
	            SendClientMessage ( playerid , GREEN , query ) ;
	            for ( new i = 0; i < MAX_PLAYERS;  i ++ ) {
	                if ( IsPlayerConnected ( i ) && playerDB [ playerid ] [ gaujosID ] == playerDB [ i ] [ gaujosID ] ) {
		                format ( query , sizeof ( query ) , " Jûsø gaujos pavadinimas buvo pakeistas ið %s á %s !" , gInfo [ playerDB [ playerid ] [ gaujosID ] ] [ gName ] , inputtext ) ;
						SendClientMessage ( i , GREEN , query ) ;
					}
	            }
	            format ( gInfo [ playerDB [ playerid ] [ gaujosID ] ] [ gName ] , 100 , "%s" , inputtext ) ;
	        }
	        else return SendClientMessage ( playerid , RED , " Toks pavadinimas jau uþimtas !" ) ;
	        mysql_free_result ( ) ;
	    }
	}
	if ( dialogid == 14207 ) {
	    if ( response ) {
	        new string [ 500 ] ;
	        for ( new i; i < MAX_PLAYERS; i ++ ) {
	            if ( IsPlayerConnected ( i ) && playerDB [ playerid ] [ gaujosID ] == playerDB [ i ] [ gaujosID ] ) {
		        	format ( string , sizeof ( string ) , "[  %s  GAUJA ] %s(%i): %s" , gInfo [ playerDB [ playerid ] [ gaujosID ] ] [ gName ] , GetPlayerNameEx ( playerid ) , playerid , inputtext ) ;
		            SendClientMessage ( i , GREEN , string ) ;
				}
			}
		}
	}
	if ( dialogid == 14208 )
	{
		if ( response )
		{
			new masyvas [ 700 ] ;
			format ( masyvas , sizeof ( masyvas ) , "Gaujos {996600} %s  {993300}leaderis {996600}%s(%i) {993300}praneða: {996600}%s" , gInfo [ playerDB [ playerid ] [ gaujosID ] ] [ gName ] , GetPlayerNameEx ( playerid ) , playerid , inputtext ) ;
			SendClientMessageToAll(0x99330000, masyvas ) ;
			SendClientMessage( playerid, RED, " Sëkmingai paraðëte, raðyti vël galësite tik po {FF8C00}1 {FF0000}minutës {FF8C00}!" ) ;
			playerDB[playerid][KadaGRase] = gettime() + 60;
		}
	}
// Bakeliø pirkimas .
	if(dialogid == 10720)
	{
	    if(!response) return SendClientMessage(playerid, RED, "{37f467} Sëkmës {ccff66}!");
		if(response)
		{
		    if(playerDB[playerid][bakelis]) return SendClientMessage(playerid,RED, "{37f467} Jûs jau turite nusipirkes bakelá.{ccff66} /bakelis");
		    if(GetPlayerMoneyA(playerid) < 200) return SendClientMessage(playerid,RED, "{37f467} Jums neuþtenka pinigø ant bakelio. Bakelis kainuoja{ccff66} 200 {37f467}{ccff66}.");
			playerDB[playerid][bakelis]=1 ;
			SendClientMessage(playerid, BLUE, "{37f467} Sëkmingai, nusipirkote bakelá uþ {ccff66}200 {37f467} {ccff66}!");
			SendClientMessage(playerid, BLUE, "{37f467} Bakelio naudojimas : {ccff66}/bakelis");
			SendClientMessage(playerid, BLUE, "{37f467} Norëdami duoti bakelá kitam þaidëjui : {ccff66}/duotibakeli [ Vardas_Pavardë ]");
			SendClientMessage(playerid, BLUE, "{37f467} Pripildyti tr.priemonæ degalø galësite tik kai bus tr.priem {ccff66}20 {37f467}litrø degalø, ne maþiau {ccff66}!");
			GivePlayerMoneyA(playerid, -200);
		}
		return 1;
	}

	if(dialogid == DIALOG_REGLOG_PASIRINKIMAS)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid, -1, "{9966CC}[INFO]: {ffffff}Jeigu jums dingo kursorius, raðykite {9966CC}/reglog{ffffff}.");
	
					PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][0]);
					PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][1]);
					PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][2]);
					PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][3]);
					PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][4]);
					PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][5]);
					PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][6]);
					PlayerTextDrawShow(playerid, RegLogTextDraw[playerid][7]);

					SelectTextDraw(playerid, -1);
				}
				case 1:
				{
					new lQuery[65];

					format(lQuery, sizeof(lQuery), "SELECT * FROM `players` WHERE `Vardas` = '%s'", GetPlayerNameEx(playerid));

					mysql_query(lQuery);

					mysql_store_result();

					if(mysql_num_rows())
					{
					    ShowPlayerDialog(playerid, 3, DIALOG_STYLE_PASSWORD, "Prisijungimas",
						"{2ED0B5}Norëdami prisijungti á serverá jus turite ávesti savo slaptaþodá.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudojote prisiregistruojant á serverá á serverá:",
						"Prisijungti", "Iðeiti");
					}
					else
					{
						ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija",
						"{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:",
						"Registruotis", "Iðeiti");
					}
				}
			}
		}
		return 1;
	}
	
	if ( dialogid == 14105 ) {
	    new Float:vpos [ 3 ] , string [ 200 ];
	    if ( response ) {
	        if ( playerCar1 [ playerid ] == -1 ) return SendClientMessage ( playerid , RED , "* Jûs neturite 1 tr.priemonës!" ) ;
   			GetVehiclePos ( playerCar1 [ playerid ]  , vpos [ 0 ] , vpos [ 1 ] , vpos [ 2 ] );
			SetPlayerMapIcon ( playerid , 1 , vpos [ 0 ] , vpos [ 1 ] , vpos [ 2 ] , 55 , 0 , MAPICON_GLOBAL_CHECKPOINT ) ;
			format ( string , sizeof ( string ) , "[ {00aa46}TRANSPORTAS {ffffff}] Jûsø {00aa46}1 {ffffff}tr. priemonë bûvo {00aa46}paþymëtà {ffffff}radare!"  ) ;
			SendClientMessage ( playerid , -1 , string ) ;
	    }
	    else {
	    	if ( playerCar2 [ playerid ] == -1 ) return SendClientMessage ( playerid , RED , "* Jûs neturite 2 tr.priemonës!" ) ;
   			GetVehiclePos ( playerCar2 [ playerid ]  , vpos [ 0 ] , vpos [ 1 ] , vpos [ 2 ] );
			SetPlayerMapIcon ( playerid , 1 , vpos [ 0 ] , vpos [ 1 ] , vpos [ 2 ] , 55 , 0 , MAPICON_GLOBAL_CHECKPOINT ) ;
			format ( string , sizeof ( string ) , "[ {00aa46}TRANSPORTAS {ffffff}] Jûsø {00aa46}2 {ffffff}tr. priemonë bûvo {00aa46}paþymëtà {ffffff}radare!"  ) ;
			SendClientMessage ( playerid , -1 , string ) ;
	    }
	}
	if ( dialogid == 14065 ) {
	    if ( response ) {
	        new string [ 1020 ] , string2 [ 300 ];
	        switch ( listitem ) {
	            case 2: {
	                new veh = playerCar1 [ playerid ] ;
	                format ( string2 , sizeof ( string2 ) , "{bebebe}Maðinos {00aa46}%s {bebebe}valdymas\n\n" , VehicleNames [ vehicleDB [ veh ] [ vModel ] - 400 ] ) ;
	                strcat ( string , string2 , sizeof ( string ) );
	                format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Degalø kiekis: {ffffff}%d litrø\n" , vehicleDB [ veh ] [ gas ] ) ; strcat ( string , string2 , sizeof ( string ) ) ;
                    format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Rida: {ffffff}%.02f KM\n" , vehicleDB [ veh ] [ Rida ] ) ; strcat ( string , string2 , sizeof ( string ) ) ;
                    format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Numeriai: {ffffff}%s\n" , vehicleDB [ veh ] [ numeriai ] ) ; strcat ( string , string2 , sizeof ( string ) ) ;
                    format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Statusas: {ffffff}%s\n" , getCarStatus ( veh ) ) ; strcat ( string , string2 , sizeof ( string ) ) ;
                    format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Durys: {ffffff}%s\n" , getDoorssStatus ( veh ) ) ; strcat ( string , string2 , sizeof ( string ) ) ;
                    format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Maðinos pavadinimas: {ffffff}%s" , VehicleNames [ vehicleDB [ veh ] [ vModel ] - 400 ] ) ; strcat ( string , string2 , sizeof ( string ) ) ;
					format ( string2 , sizeof ( string2 ) ,
					"\n\n{ffffff}Tr.priemonës komandos:\n\
					\t{ffffff}» {00aa46}/uzraktas {ffffff}- {00aa46}uþrakinti/atrakinti tr.priemonæ\n\
					\t{ffffff}» {00aa46}/carmapas {ffffff}- {00aa46}rasti tr.priemonæ\n\
					\t{ffffff}» {00aa46}/parduoti {ffffff}- {00aa46}parduoti tr.priemonæ" ) ;
					strcat ( string , string2 , sizeof ( string ) ) ;
					format ( string2 , sizeof ( string2 ) , "\n\n{ff0000}Maðinos taisymo kaina: {ffffff}6.000" ) ; strcat ( string , string2 , sizeof ( string ) ) ;
					ShowPlayerDialog ( playerid , 14100 , DIALOG_STYLE_MSGBOX , "{ffffff}Pirmos maðinos valdymas" , string , "Taisyti" , "Uþdaryti" ) ;
				}
	            case 3: {
	                new veh = playerCar2 [ playerid ] ;
	                format ( string2 , sizeof ( string2 ) , "{bebebe}Maðinos {00aa46}%s {bebebe}valdymas\n\n" , VehicleNames [ vehicleDB [ veh ] [ vModel ] - 400 ] ) ;
	                strcat ( string , string2 , sizeof ( string ) );
	                format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Degalø kiekis: {ffffff}%d litrø\n" , vehicleDB [ veh ] [ gas ] ) ; strcat ( string , string2 , sizeof ( string ) ) ;
                    format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Rida: {ffffff}%.02f KM\n" , vehicleDB [ veh ] [ Rida ] ) ; strcat ( string , string2 , sizeof ( string ) ) ;
                    format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Numeriai: {ffffff}%s\n" , vehicleDB [ veh ] [ numeriai ] ) ; strcat ( string , string2 , sizeof ( string ) ) ;
                    format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Statusas: {ffffff}%s\n" , getCarStatus ( veh ) ) ; strcat ( string , string2 , sizeof ( string ) ) ;
                    format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Durys: {ffffff}%s\n" , getDoorssStatus ( veh ) ) ; strcat ( string , string2 , sizeof ( string ) ) ;
                    format ( string2 , sizeof ( string2 ) , "\t{ffffff}» {00aa46}Maðinos pavadinimas: {ffffff}%s" , VehicleNames [ vehicleDB [ veh ] [ vModel ] - 400 ] ) ; strcat ( string , string2 , sizeof ( string ) ) ;
					format ( string2 , sizeof ( string2 ) ,
					"\n\n{ffffff}Tr.priemonës komandos:\n\
					\t{ffffff}» {00aa46}/uzraktas {ffffff}- {00aa46}uþrakinti/atrakinti tr.priemonæ\n\
					\t{ffffff}» {00aa46}/carmapas {ffffff}- {00aa46}rasti tr.priemonæ\n\
					\t{ffffff}» {00aa46}/parduoti {ffffff}- {00aa46}parduoti tr.priemonæ" ) ;
					strcat ( string , string2 , sizeof ( string ) ) ;
					format ( string2 , sizeof ( string2 ) , "\n\n{ff0000}Maðinos taisymo kaina: {ffffff}6.000" ) ; strcat ( string , string2 , sizeof ( string ) ) ;
					ShowPlayerDialog ( playerid , 14101 , DIALOG_STYLE_MSGBOX , "{ffffff}Antros maðinos valdymas" , string , "Taisyti" , "Uþdaryti" ) ;
				}
	        }
	    }
	}
	if ( dialogid == 14100 ) {
	    if ( response ) {
			new veh = playerCar1 [ playerid ];
			if ( !vehicleDB [ veh ] [ vSprogo ] ) return SendClientMessage ( playerid , RED , "* Jûsø pirmasis transportas nesudauþytas!" ) ;
			if ( GetPlayerMoneyA ( playerid ) < 6000 ) return SendClientMessage ( playerid , RED , "* Jûs neturite {ffffff}6.000!" ) ;
			GivePlayerMoneyA ( playerid , -6000 ) ;
			vehicleDB [ veh ] [ vSprogo ] = false;
			SendClientMessage ( playerid , RED , "* Dabar galite atsiimti savo maðinà ið KMA ( {ffffff}SUTAISYTA {ff0000})" ) ;
	 	}
	}
	if ( dialogid == 14101 ) {
	    if ( response ) {
			new veh = playerCar2 [ playerid ];
			if ( !vehicleDB [ veh ] [ vSprogo ] ) return SendClientMessage ( playerid , RED , "* Jûsø antrasis transportas nesudauþytas!" ) ;
			if ( GetPlayerMoneyA ( playerid ) < 6000 ) return SendClientMessage ( playerid , RED , "* Jûs neturite {ffffff}6.000!" ) ;
			GivePlayerMoneyA ( playerid , -6000 ) ;
			vehicleDB [ veh ] [ vSprogo ] = false;
			SendClientMessage ( playerid , RED , "* Dabar galite atsiimti savo maðinà ið KMA ( {ffffff}SUTAISYTA {ff0000})" ) ;
	 	}
	}
	if ( dialogid == 14081 ) {
	    if ( response ){
	        new string [ 100 ];
	        switch ( listitem ) {
	            case 1: { // ip
	                if ( playerDB [ playerid ] [ ipSecurity ] ) {
                        SendClientMessage ( playerid , -1 , "[ {ff9000}APSAUGA {ffffff}] IP apsauga {ff0000}iðjungta!" ) ;
                        playerDB [ playerid ] [ ipSecurity ] = false;
                        format ( string , sizeof ( string ) , "UPDATE players SET ipSecurity = 0 WHERE Vardas = '%s'" , GetPlayerNameEx ( playerid ) ) ;
                        mysql_query ( string ) ;
	                }
	                else {
                        SendClientMessage ( playerid , -1 , "[ {ff9000}APSAUGA {ffffff}] IP apsauga {00aa46}ájungtà!" ) ;
                        playerDB [ playerid ] [ ipSecurity ] = true;
                        format ( string , sizeof ( string ) , "UPDATE players SET ipSecurity = 1 WHERE Vardas = '%s'" , GetPlayerNameEx ( playerid ) ) ;
                        mysql_query ( string ) ;
	                }
	            }
	        }
	    }
	}
	if ( dialogid == 14080 ) {
	    if ( response ) {
				new string [ 300 ];
				format ( string , sizeof ( string ) ,
				"{ffffff}Paskutini karta jus buvote prisijungæs ið {ff9000}%s {ffffff}IP\n\
				{ffffff}Paskutinis prisijungimas buvo {ff9000}%s" , playerDB [ playerid ] [ lastIP ] , playerDB [ playerid ] [ lastCDate ] ) ;
				ShowPlayerDialog ( playerid , 14084 , DIALOG_STYLE_MSGBOX , "Prisijungimo informacija" , string , "Aiðku" , "" ) ;
	        }
		}
	if ( dialogid == 14090 ) {
		if ( response ) {
		    if ( playerCar1 [ playerid ] != -1 ) {
		    	ShowPlayerDialog ( playerid , 14068 , DIALOG_STYLE_LIST , "{ffffff}Maðinø pardavimas" , "{ffffff}» {00aa46}Pardavimas þaidëjui\n{ffffff}» {00aa46}Pardavimas á turgø" , "Rinktis" , "Uþdaryti" ) ;
			}
			else return SendClientMessage ( playerid , RED, "* Jûs neturite pirmos maðinos!" ) ;
		}
		if ( !response ) {
		    if ( playerCar2 [ playerid ] != -1 ) {
		        ShowPlayerDialog ( playerid , 14091 , DIALOG_STYLE_LIST , "{ffffff}Maðinø pardavimas" , "{ffffff}» {00aa46}Pardavimas þaidëjui\n{ffffff}» {00aa46}Pardavimas á turgø" , "Rinktis" , "Uþdaryti" ) ;
		    }
		    else return SendClientMessage ( playerid , RED, "* Jûs neturite antros maðinos!" ) ;
		}
	}
	if ( dialogid == 14068 ) {
	    if ( response ) {
	        switch ( listitem ) {
	            case 0: {
             		ShowPlayerDialog ( playerid , 14069 , DIALOG_STYLE_INPUT , "{ffffff}Maðinos pardavimas" , "{ff0000}[ Þaidëjo vardas ] [ Kaina ]\n{00aa46}Ávëskitæ þaidëjo vardà" , "Parduoti" , "Uþdaryti" ) ;
	            }
	            case 1: {
             		ShowPlayerDialog ( playerid , 14070 , DIALOG_STYLE_MSGBOX , "{ffffff}Maðinos pardavimas" , "{00aa46}Ar tikrai norite parduotá?\n{ffffff}Pardavimo kainà: 2.000" , "Parduoti" , "Uþdaryti" ) ;
	            }
	        }
	    }
	}
	if ( dialogid == 14091 ) {
	    if ( response ) {
	        switch ( listitem ) {
	            case 0: {
             		ShowPlayerDialog ( playerid , 14092 , DIALOG_STYLE_INPUT , "{ffffff}Maðinos pardavimas" , "{ff0000}[ Þaidëjo vardas ] [ Kaina ]\n{00aa46}Ávëskitæ þaidëjo vardà" , "Parduoti" , "Uþdaryti" ) ;
	            }
	            case 1: {
             		ShowPlayerDialog ( playerid , 14093 , DIALOG_STYLE_MSGBOX , "{ffffff}Maðinos pardavimas" , "{00aa46}Ar tikrai norite parduotá?\n{ffffff}Pardavimo kainà: 2.000" , "Parduoti" , "Uþdaryti" ) ;
	            }
	        }
	    }
	}
	if ( dialogid == 14092 ) {
	    if ( response ) {
	        if ( strfind ( inputtext , "-" , true ) != -1 ) return ShowPlayerDialog ( playerid , 14092 , DIALOG_STYLE_INPUT , "{ffffff}Maðinos pardavimas" , "{ff0000}[ Þaidëjo vardas ] [ Kaina ]\n{00aa46}Ávëskitæ þaidëjo vardà" , "Parduoti" , "Uþdaryti" ) ;
	        new pID , price , string [ 400 ];
	        if ( sscanf ( inputtext , "ud" , pID , price ) )
	            return ShowPlayerDialog ( playerid , 14092 , DIALOG_STYLE_INPUT , "{ffffff}Maðinos pardavimas" , "{ff0000}[ Þaidëjo vardas ] [ Kaina ]\n{00aa46}Ávëskitæ þaidëjo vardà" , "Parduoti" , "Uþdaryti" ) ;
			if ( IsPlayerConnected ( pID ) ) {
			    if ( GetPlayerMoneyA ( pID ) < price )
			        return SendClientMessage ( playerid , RED , "* Þaidëjas neturi tiek pinigø!" ) ;
				if ( GetPlayerScore ( pID ) < 500 )
				    return SendClientMessage ( playerid , RED , "* Þaidëjas naujokas!" ) ;
				if ( playerCar2 [ pID ] != -1 )
					return SendClientMessage ( playerid , RED , "* Þaidëjas jau turi antraji tr.priemonæ!" ) ;
				SetPVarInt ( pID , "pardavejoID" , playerid ) ;
				SetPVarInt ( pID , "mPrice" , price ) ;
				format ( string , sizeof ( string ) ,
				"{ffffff}» {00aa46}Þaidëjas {ffffff}%s {00aa46}pasiûlæ jums pirktá maðinà!\n\
				{00aa46}Maðinos pavadinimas: {ffffff}%s\n\
				{00aa46}Maðinos rida: {ffffff}%.02f KM\n\
				{00aa46}Maðinos kaina: {ffffff}%d \n\n\
				{ff9000}Ar sutinkate pirktá?" ,
				GetPlayerNameEx ( playerid ) , VehicleNames [ vehicleDB [ playerCar2 [ playerid ] ] [ vModel ] - 400 ] ,
				vehicleDB [ playerCar2 [ playerid ] ] [ Rida ] , price ) ;
				ShowPlayerDialog ( pID , 14094 , DIALOG_STYLE_MSGBOX , "{ffffff}Maðinos pirkimas" , string , "Taip" , "Ne" ) ;
				format ( string , sizeof ( string ) , "[ {ff0000}PARDAVIMAS {ffffff}] Pasiûlët þaidëjui {00aa46}%s {ffffff}pirktá maðinà!" , GetPlayerNameEx ( pID ) ) ;
				SendClientMessage ( playerid , -1 , string ) ;
			}
			else return SendClientMessage ( playerid , RED , "* Þaidëjas neprisijungæs!" ) ;
	    }
	}
	if ( dialogid == 14094 ) {
	    new pID = GetPVarInt ( playerid , "pardavejoID" ) , price = GetPVarInt ( playerid , "mPrice" ) , string [ 200 ];
	    if ( response ) {
	        GivePlayerMoneyA ( playerid , -price ) ;
	        GivePlayerMoneyA ( pID , price ) ;
			format ( vehicleDB [ playerCar2 [ pID ] ] [ vOwner ] , 50 , "%s" , GetPlayerNameEx ( playerid ) ) ;
			playerCar2 [ playerid ] = playerCar2 [ pID ];
			playerCar2 [ pID ] = -1;
			format ( string , sizeof ( string ) , "UPDATE cars2 SET owner = '%s' WHERE owner = '%s'" , GetPlayerNameEx ( playerid ) , GetPlayerNameEx ( pID ) ) ;
			mysql_query ( string ) ;
			format ( string , sizeof ( string ) , "[ {ff0000}PARDAVIMAS {ffffff}] Pardavët savo {00aa46}tr.priemonæ {ffffff}uþ {00aa46}%d " , price ) ;
			SendClientMessage ( pID , -1 , string ) ;
			format ( string , sizeof ( string ) , "* Sëkmingai nupirkote uþ %d tr.priemonæ!" , price ) ;
			SendClientMessage ( playerid , RED , string ) ;
	    }
	    else {
	        SendClientMessage ( playerid , RED , "* Atsisakete pirktá maðinà!" ) ;
	        SendClientMessage ( pID , -1 , "[ {ff0000}PARDAVIMAS {ffffff}] Þaidëjas atsisake {00aa46}pirktá!" ) ;
	    }
	}
	if ( dialogid == 14093 ) {
	    if ( response ) {
	        GivePlayerMoneyA ( playerid , 2000 ) ;
	        format ( vehicleDB [ playerCar2 [ playerid ] ] [ vOwner ] , 50 , "Nera" ) ;
	        DestroyVehicle ( playerCar2 [ playerid ] ) ;
	        playerCar2 [ playerid ] = -1;
			new string [ 100 ];
			format ( string , sizeof ( string ) , "DELETE FROM cars2 WHERE owner = '%s'" , GetPlayerNameEx ( playerid ) ) ;
			mysql_query ( string ) ;
			SendClientMessage ( playerid , RED , "* Pardavët savo maðinà uþ 2.000!" ) ;
	    }
	}
	if ( dialogid == 14069 ) {
	    if ( response ) {
	        if ( strfind ( inputtext , "-" , true ) != -1 ) return ShowPlayerDialog ( playerid , 14092 , DIALOG_STYLE_INPUT , "{ffffff}Maðinos pardavimas" , "{ff0000}[ Þaidëjo vardas ] [ Kaina ]\n{00aa46}Ávëskitæ þaidëjo vardà" , "Parduoti" , "Uþdaryti" ) ;
	        new pID , price , string [ 400 ];
	        if ( sscanf ( inputtext , "ud" , pID , price ) )
	            return ShowPlayerDialog ( playerid , 14069 , DIALOG_STYLE_INPUT , "{ffffff}Maðinos pardavimas" , "{ff0000}[ Þaidëjo vardas ] [ Kaina ]\n{00aa46}Ávëskitæ þaidëjo vardà" , "Parduoti" , "Uþdaryti" ) ;
			if ( IsPlayerConnected ( pID ) ) {
			    if ( GetPlayerMoneyA ( pID ) < price )
			        return SendClientMessage ( playerid , RED , "* Þaidëjas neturi tiek pinigø!" ) ;
				if ( GetPlayerScore ( pID ) < 500 )
				    return SendClientMessage ( playerid , RED , "* Þaidëjas naujokas!" ) ;
				if ( playerCar1 [ pID ] != -1 )
					return SendClientMessage ( playerid , RED , "* Þaidëjas jau turi pirmaji tr.priemonæ!" ) ;
				SetPVarInt ( pID , "pardavejoID" , playerid ) ;
				SetPVarInt ( pID , "mPrice" , price ) ;
				format ( string , sizeof ( string ) ,
				"{ffffff}» {00aa46}Þaidëjas {ffffff}%s {00aa46}pasiûlæ jums pirktá maðinà!\n\
				{00aa46}Maðinos pavadinimas: {ffffff}%s\n\
				{00aa46}Maðinos rida: {ffffff}%.02f KM\n\
				{00aa46}Maðinos kaina: {ffffff}%d \n\n\
				{ff9000}Ar sutinkate pirktá?" ,
				GetPlayerNameEx ( playerid ) , VehicleNames [ vehicleDB [ playerCar1 [ playerid ] ] [ vModel ] - 400 ] ,
				vehicleDB [ playerCar1 [ playerid ] ] [ Rida ] , price ) ;
				ShowPlayerDialog ( pID , 14071 , DIALOG_STYLE_MSGBOX , "{ffffff}Maðinos pirkimas" , string , "Taip" , "Ne" ) ;
				format ( string , sizeof ( string ) , "[ {ff0000}PARDAVIMAS {ffffff}] Pasiûlët þaidëjui {00aa46}%s {ffffff}pirktá maðinà!" , GetPlayerNameEx ( pID ) ) ;
				SendClientMessage ( playerid , -1 , string ) ;
			}
			else return SendClientMessage ( playerid , RED , "* Þaidëjas neprisijungæs!" ) ;
	    }
	}
	if ( dialogid == 14071 ) {
	    new pID = GetPVarInt ( playerid , "pardavejoID" ) , price = GetPVarInt ( playerid , "mPrice" ) , string [ 200 ];
	    if ( response ) {
	        GivePlayerMoneyA ( playerid , -price ) ;
	        GivePlayerMoneyA ( pID , price ) ;
			format ( vehicleDB [ playerCar1 [ pID ] ] [ vOwner ] , 50 , "%s" , GetPlayerNameEx ( playerid ) ) ;
			playerCar1 [ playerid ] = playerCar1 [ pID ];
			playerCar1 [ pID ] = -1;
			format ( string , sizeof ( string ) , "UPDATE cars SET owner = '%s' WHERE owner = '%s'" , GetPlayerNameEx ( playerid ) , GetPlayerNameEx ( pID ) ) ;
			mysql_query ( string ) ;
			format ( string , sizeof ( string ) , "[ {ff0000}PARDAVIMAS {ffffff}] Pardavët savo {00aa46}tr.priemonæ {ffffff}uþ {00aa46}%d " , price ) ;
			SendClientMessage ( pID , -1 , string ) ;
			format ( string , sizeof ( string ) , "* Sëkmingai nupirkote uþ %d tr.priemonæ!" , price ) ;
			SendClientMessage ( playerid , RED , string ) ;
	    }
	    else {
	        SendClientMessage ( playerid , RED , "* Atsisakete pirktá maðinà!" ) ;
	        SendClientMessage ( pID , -1 , "[ {ff0000}PARDAVIMAS {ffffff}] Þaidëjas atsisake {00aa46}pirktá!" ) ;
	    }
	}
	if ( dialogid == 14070 ) {
	    if ( response ) {
	        GivePlayerMoneyA ( playerid , 2000 ) ;
	        format ( vehicleDB [ playerCar1 [ playerid ] ] [ vOwner ] , 50 , "Nera" ) ;
	        DestroyVehicle ( playerCar1 [ playerid ] ) ;
	        playerCar1 [ playerid ] = -1;
			new string [ 100 ];
			format ( string , sizeof ( string ) , "DELETE FROM cars WHERE owner = '%s'" , GetPlayerNameEx ( playerid ) ) ;
			mysql_query ( string ) ;
			SendClientMessage ( playerid , RED , "* Pardavët savo maðinà uþ 2.000!" ) ;
	    }
	}
 // KMA
	if ( dialogid == 13595 ) {
		if ( response ) {
			if ( GetPlayerMoneyA ( playerid ) < 4000 ) return SendClientMessage ( playerid , RED , "* {ffffff}Jums neuþtenka pinigø." ) ;
			SetTimerEx ( "closeKMAGates" , 1000*20 , false , "i" , playerid ) ;
			SendClientMessage ( playerid , RED , "* {ffffff}Jus turite {ff9900}20sec. {ffffff}kad pasiimti maðinà.");
			GivePlayerMoneyA ( playerid , -4000 ) ;
			Pelnas[1] += 1500;
			if ( IsPlayerInRangeOfPoint ( playerid , 10.0 , 101.9927,-124.3456,1.6100 ) ) {
				MoveDynamicObject ( MechanikuKma , 101.9927,-124.3456,1.6100,4 ) ;
				Vartai [ 1 ] = true;
			}
		}
	}
// Maðinø turgus
    if ( dialogid == vSHOP_DIALOGID1 ) {
        if ( response ) {
            playerDB [ playerid ] [ vPressed ] = 0;
            playerDB [ playerid ] [ vChoosedCategory ] = listitem;
            playerDB [ playerid ] [ vVehColor ] = vCarsColors [ random (6) ];
            switch ( listitem ) {
                case 0: return ShowPlayerDialog(playerid, vSHOP_DIALOGID1, DIALOG_STYLE_LIST, "{ff9000}Maðinø {ffffff}turgus", "{bebebe}Iðrinkite maðinø tipa kuri norite þiûrëtá\n{ffffff}» {00aa46}Paprastos maðinos\n{ffffff}» {00aa46}Sportinës maðinos\n{ffffff}» {00aa46}Motociklai", "Rinktis", "Iðeiti");
	            case 1: playerDB[playerid][vVeh] = CreateVehicle(vOldCars[playerDB[playerid][vPressed]][vsModel], VEHICLE_POS_X, VEHICLE_POS_Y, vOldCars[playerDB[playerid][vPressed]][vsPosZ], VEHICLE_POS_R, playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1);
	            case 2: playerDB[playerid][vVeh] = CreateVehicle(vSportCars[playerDB[playerid][vPressed]][vsModel], VEHICLE_POS_X, VEHICLE_POS_Y, vSportCars[playerDB[playerid][vPressed]][vsPosZ], VEHICLE_POS_R, playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1);
	            case 3: playerDB[playerid][vVeh] = CreateVehicle(vMotoCars[playerDB[playerid][vPressed]][vsModel], VEHICLE_POS_X, VEHICLE_POS_Y, vMotoCars[playerDB[playerid][vPressed]][vsPosZ], VEHICLE_POS_R, playerDB[playerid][vVehColor], playerDB[playerid][vVehColor], -1);
            }
            for ( new tds = 0; tds < 11; tds ++ ) PlayerTextDrawShow ( playerid , CarShop [ tds ] [ playerid ] ) ;
			SetVehicleParamsEx ( playerDB [ playerid ] [ vVeh ] , false, true , false, true, false, false, false ) ;
			SetVehicleVirtualWorld ( playerDB [ playerid ] [ vVeh ], playerid + 100 ) ;
			SetPlayerVirtualWorld ( playerid , playerid + 100 ) ;
			SetPlayerPos ( playerid, VEHICLE_POS_X, VEHICLE_POS_Y, VEHICLE_POS_Z ) ;
			PutPlayerInVehicleEx ( playerid, playerDB [ playerid ] [ vVeh ] , 0 ) ;
			TogglePlayerControllable ( playerid, 0 ) ;
			SetPlayerCameraPos ( playerid, CAMERA_POS_X, CAMERA_POS_Y, CAMERA_POS_Z ) ;
			SetPlayerCameraLookAt ( playerid, VEHICLE_POS_X, VEHICLE_POS_Y, VEHICLE_POS_Z ) ;
			SelectTextDraw ( playerid, 0xFFFFFF20 ) ;
			IsjungiameVisusTD ( playerid );
			ClearChat ( playerid , 20 ) ;
			SendClientMessage ( playerid , -1 , "[ {00aa46}AUTO SALONAS {ffffff}] : Norëdami nupirktá maðinà {00aa46}/mpirkti(komandà galima raðyti tik kas 60s)" ) ;
			SendClientMessage ( playerid , -1 , "[ {00aa46}AUTO SALONAS {ffffff}] : Norëdami iðeitá ið auto salono {00aa46}/mexit" ) ;
            SendClientMessage ( playerid , -1 , "[ {00aa46}AUTO SALONAS {ffffff}] : Norëdami pakeistá maðinos spalvà spauskitæ {00aa46}ant rutuliukø" ) ;
            UpdateCarShopTextDraws ( playerid ) ;
        }
        if(!response) return mTurguje[playerid]=false;
    }
	//Mechanikø tune.
	if(dialogid == 8040 )
	{
		if(!response) return 1;
		switch ( listitem )
		{
			case 1: // Idëti nitro.
			{
				new string [ 200 ];
				format(string,sizeof(string),"{33cc33}[ // ] {ffffff}Mechaniko vardas: {ffff00}%s\n          {33cc33}[ // ] {ffffff}2x nitro\n          {33cc33}[ // ] {ffffff}5x nitro",GetPlayerNameEx(playerid));
				ShowPlayerDialog(playerid,8041,DIALOG_STYLE_LIST,"Nitro",string,"Idëti","Atðaukti");
			}
			case 2:
			{
				if(GetPlayerMoneyA(playerid) < 1500) return SendClientMessage(playerid,RED,"* Neturite 1.500 hidraulikai.");
				GivePlayerMoneyA(playerid, -1500);
				Pelnas[1] += 1500;
				new veh = GetPlayerVehicleID(playerid);
				AddVehicleComponent(veh,1087);
				SendClientMessage(playerid,-1,"[ {33cc33}// {ffffff} ] Idëjote hydraulikà á maðinà. ");
				new string [ 500 ];
				format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s idëjo á kito þaidëjo maðina: Hidraulikà. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
				SendMessageToMechanikas(BLUE,string);
			}
		}
		return 1;
	}
	if(dialogid == 8041 )
	{
		if(!response) return 1;
		switch ( listitem )
		{
			case 1: // 2x
			{
				if(GetPlayerMoneyA(playerid) < 500) return SendClientMessage(playerid,RED,"* Neturite 1.000 x2 nitro.");
				GivePlayerMoneyA(playerid, -500);
				Pelnas[1] += 500;
				new veh = GetPlayerVehicleID(playerid);
				AddVehicleComponent(veh,1009);
				SendClientMessage(playerid,-1,"[ {33cc33}// {ffffff} ] Idëjote nitro 2x á maðinà. ");
				new string [ 500 ];
				format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s idëjo á kito þaidëjo maðinà: 2x NITRO. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
				SendMessageToMechanikas(BLUE,string);
			}
			case 2: // 5x
			{
				if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 x5 nitro.");
				GivePlayerMoneyA(playerid, -1000);
				Pelnas[1] += 1000;
				new veh = GetPlayerVehicleID(playerid);
				AddVehicleComponent(veh,1008);
				SendClientMessage(playerid,-1,"[ {33cc33}// {ffffff} ] Idëjote nitro 5x á maðinà. ");
				new string [ 500 ];
				format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s idëjo á kito þaidëjo maðinà: 5x NITRO. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
				SendMessageToMechanikas(BLUE,string);
			}
		}
		return 1;
	}
	//Kazino.
	if(dialogid == DIALOG_SLAPTAZODZIO_KEITIMAS)
	{
		if(response)
		{
		    new query[256], masyvas[128];
			if(sscanf(inputtext, "s[30]",inputtext)) return ShowPlayerDialog(playerid, DIALOG_SLAPTAZODZIO_KEITIMAS, DIALOG_STYLE_INPUT, "Slaptaþodis", "Slaptaþodþio keitimas\n\nNorëdami pasikeisti slaptaþodá, áveskite apaèioje!", "Pakeisti", "Iðeiti");
		    else if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_SLAPTAZODZIO_KEITIMAS, DIALOG_STYLE_INPUT, "Slaptaþodis", "Klaida\n\nPraðome ávesti savo bûsimàjá slaptaþodá.Jo ilgis turi sudaryti nuo 6 iki 20 simboliø!\nSavo slaptaþodþio niekada ir niekam nesakykite!", "Pakeisti", "Iðeiti");
	 		else if(strlen(inputtext) > 24) return ShowPlayerDialog(playerid,DIALOG_SLAPTAZODZIO_KEITIMAS,DIALOG_STYLE_PASSWORD,"Slaptaþodis","Klaida\n\nSlaptaþodþio ilgis turi sudaryti nuo 6 iki 20 simboliø!\nSavo slaptaþodþio niekada ir niekam nesakykite.","Pakeisti","Iðeiti");
            else if(strfind(inputtext, "%", true) != -1) return ShowPlayerDialog(playerid,DIALOG_SLAPTAZODZIO_KEITIMAS,DIALOG_STYLE_PASSWORD,"Slaptaþodis","Slaptaþodþio ilgis turi sudaryti nuo 6 iki 20 simboliø!\nSavo slaptaþodþio niekada ir niekam nesakykite.","Pakeisti","Iðeiti");
            else if(strfind(inputtext, "'", true) != -1) return ShowPlayerDialog(playerid,DIALOG_SLAPTAZODZIO_KEITIMAS,DIALOG_STYLE_PASSWORD,"Slaptaþodis","Slaptaþodþio ilgis turi sudaryti nuo 6 iki 20 simboliø!\nSavo slaptaþodþio niekada ir niekam nesakykite.","Pakeisti","Iðeiti");
			else
			{
		    	format(query, 256, "UPDATE players SET Slaptazodis = '%s' WHERE Vardas = '%s'",inputtext,GetPlayerNameEx(playerid));
		    	mysql_query(query);
 	    		format(query, 256, "UPDATE players SET TikrasSlaptazodis = '%s' WHERE Vardas = '%s'",inputtext,GetPlayerNameEx(playerid));
				mysql_query(query);
		    	format(masyvas, 128, "* Slaptaþodis pakeistas á %s",inputtext);
		    	SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
 	if(dialogid == 24)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(playerDB[playerid][Zetonai] < 1) return SendClientMessage(playerid, RED, "Jûs neturite tiek þetonø.");
	                playerDB[playerid][Zetonai] -= 1;
	                ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pastatymas ant skaièiaus","Ant kokio skaièiaus statysite pastatytus þetonus?\n{ffff00}Galima nuo 0 iki 30","Rinktis","Uþdaryti");
				}
	            case 1:
	            {
	                if(playerDB[playerid][Zetonai] < 2) return SendClientMessage(playerid, RED, "Jûs neturite tiek þetonø.");
	                playerDB[playerid][Zetonai] -= 2;
	                ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pastatymas ant skaièiaus","Ant kokio skaièiaus statysite pastatytus þetonus?\n{ffff00}Galima nuo 0 iki 30","Rinktis","Uþdaryti");
				}
	            case 2:
	            {
	                if(playerDB[playerid][Zetonai] < 5) return SendClientMessage(playerid, RED, "Jûs neturite tiek þetonø.");
	                playerDB[playerid][Zetonai] -= 5;
	                ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pastatymas ant skaièiaus","Ant kokio skaièiaus statysite pastatytus þetonus?\n{ffff00}Galima nuo 0 iki 30","Rinktis","Uþdaryti");
				}
	            case 3:
	            {
	                if(playerDB[playerid][Zetonai] < 10) return SendClientMessage(playerid, RED, "Jûs neturite tiek þetonø.");
	                playerDB[playerid][Zetonai] -= 10;
	                ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pastatymas ant skaièiaus","Ant kokio skaièiaus statysite pastatytus þetonus?\n{ffff00}Galima nuo 0 iki 30","Rinktis","Uþdaryti");
				}
	            case 4:
	            {
	                if(playerDB[playerid][Zetonai] < 20) return SendClientMessage(playerid, RED, "Jûs neturite tiek þetonø.");
	                playerDB[playerid][Zetonai] -= 20;
	                ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pastatymas ant skaièiaus","Ant kokio skaièiaus statysite pastatytus þetonus?\n{ffff00}Galima nuo 0 iki 30","Rinktis","Uþdaryti");
				}
	            case 5:
	            {
	                if(playerDB[playerid][Zetonai] < 40) return SendClientMessage(playerid, RED, "Jûs neturite tiek þetonø.");
	                playerDB[playerid][Zetonai] -= 40;
	                ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pastatymas ant skaièiaus","Ant kokio skaièiaus statysite pastatytus þetonus?\n{ffff00}Galima nuo 0 iki 30","Rinktis","Uþdaryti");
				}
			}
		}
	}
	else if(dialogid == 25)
	{
	    if(response)
	    {
	        new PastatytaSuma;
	        if(sscanf(inputtext,"d",PastatytaSuma)) return ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pastatymas ant skaièiaus","Ant kokio skaièiaus statysite pastatytus þetonus?\n{ffff00}Galima nuo 0 iki 30","Rinktis","Uþdaryti");
	        if(PastatytaSuma < 0 || PastatytaSuma > 30) return ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pastatymas ant skaièiaus","Ant kokio skaièiaus statysite pastatytus þetonus?\n{ffff00}Galima nuo 0 iki 30","Rinktis","Uþdaryti");

	        playerDB[playerid][KazinoKintamasis] = PastatytaSuma;
	        GameTextForPlayer(playerid,"~n~~n~~g~Palaukite, sukamas ratas...",3000,5);
	        TogglePlayerControllable(playerid, false);
	        SetTimerEx("LaimesSkaicius",7500,false,"d",playerid);
		}
	}
	else if(dialogid == 26)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(playerDB[playerid][Zetonai] < 4) return SendClientMessage(playerid, RED, "Jûs neturite tiek þetonø.");
	                playerDB[playerid][Zetonai] -= 4;
	        		playerDB[playerid][KazinoKintamasis] = 4;
	        		GameTextForPlayer(playerid,"~n~~n~~g~Palaukite, sukamas ratas...",3000,5);
	        		TogglePlayerControllable(playerid, false);
	        		SetTimerEx("LaimesSkaicius",7500,false,"d",playerid);
				}
	            case 1:
	            {
	                if(playerDB[playerid][Zetonai] < 5) return SendClientMessage(playerid, RED, "Jûs neturite tiek þetonø.");
	                playerDB[playerid][Zetonai] -= 5;
	        		playerDB[playerid][KazinoKintamasis] = 5;
	        		GameTextForPlayer(playerid,"~n~~n~~g~Palaukite, sukamas ratas...",3000,5);
	        		TogglePlayerControllable(playerid, false);
	        		SetTimerEx("LaimesSkaicius",7500,false,"d",playerid);
				}
	            case 2:
	            {
	                if(playerDB[playerid][Zetonai] < 8) return SendClientMessage(playerid, RED, "Jûs neturite tiek þetonø.");
	                playerDB[playerid][Zetonai] -= 8;
	        		playerDB[playerid][KazinoKintamasis] = 8;
	        		GameTextForPlayer(playerid,"~n~~n~~g~Palaukite, sukamas ratas...",3000,5);
	        		TogglePlayerControllable(playerid, false);
	        		SetTimerEx("LaimesSkaicius",7500,false,"d",playerid);
				}
	            case 3:
	            {
	                if(playerDB[playerid][Zetonai] < 10) return SendClientMessage(playerid, RED, "Jûs neturite tiek þetonø.");
	                playerDB[playerid][Zetonai] -= 10;
	        		playerDB[playerid][KazinoKintamasis] = 10;
	        		GameTextForPlayer(playerid,"~n~~n~~g~Palaukite, sukamas ratas...",3000,5);
	        		TogglePlayerControllable(playerid, false);
	        		SetTimerEx("LaimesSkaicius",7500,false,"d",playerid);
				}
			}
		}
	}
	else if(dialogid == 27)
	{
	    if(response)
	    {
	        new ZetonuKiekis;
	        if(sscanf(inputtext,"d",ZetonuKiekis)) return ShowPlayerDialog(playerid,28,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pirkimas","{ffffff}Áveskite uþ kokià sumà pirksite þetonus.\n{ffff00}KURSAS:{ffffff} 1þetonas = 1.","Pirkti","Uþdaryti");
	        if(ZetonuKiekis < 0 || ZetonuKiekis > 1000) return ShowPlayerDialog(playerid,28,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pirkimas","{ffffff}Áveskite uþ kokià sumà pirksite þetonus.\n{ffff00}KURSAS:{ffffff} 1þetonas = 1.","Pirkti","Uþdaryti");
	        if(GetPlayerMoneyA(playerid) < ZetonuKiekis)
	        {
	            ShowPlayerDialog(playerid,28,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pirkimas","{ffffff}Áveskite uþ kokià sumà pirksite þetonus.\n{ffff00}KURSAS:{ffffff} 1þetonas = 1.","Pirkti","Uþdaryti");
	            if(ZetonuKiekis < 0 || ZetonuKiekis > 1000) return ShowPlayerDialog(playerid,28,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pirkimas","{ffffff}Áveskite uþ kokià sumà pirksite þetonus.\n{ffff00}KURSAS:{ffffff} 1þetonas = 1.","Pirkti","Uþdaryti");
	            SendClientMessage(playerid, RED, "Jûs neturite tiek pinigø.");
	            return 1;
			}
			playerDB[playerid][Zetonai] += ZetonuKiekis;
			GivePlayerMoneyA(playerid, - ZetonuKiekis);
		}
	}
	if(dialogid == DIALOG_DARBU_PAREMIMAS)
	{
		switch(listitem)
		{
			case 0:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_MENTUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Policijos departamentà\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 1:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_MEDIKUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Medikus\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 2:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_TAKSISTUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Taksistus\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 3:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_MECHANIKUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Mechanikus\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 4:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_DYLERIUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Dylerius\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 5:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_SWATUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti SWAT\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 6:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_FURISTUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Furistus\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 7:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_RADISTUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Radistus\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 8:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_RIFA, DIALOG_STYLE_INPUT, "Paremti", "Paremti Russian mafija\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 9:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_GROOVE, DIALOG_STYLE_INPUT, "Paremti", "Paremti GrooveStreet mafija\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 10:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_BAIKERIUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Baikeriø darbà\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
			case 11:
			{
				ShowPlayerDialog(playerid, DIALOG_PAREMTI_SPD, DIALOG_STYLE_INPUT, "Paremti", "Paremti Armijos darbà\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			}
		}
		return true;
	}
	//Paremti mentus
	if(dialogid == DIALOG_PAREMTI_MENTUS)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_MENTUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Policijos departamentà\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_MENTUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_MENTUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[0]+=suma;
			    format(masyvas, 128, "[Policijos Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToCops(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete Policijos firmà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	//Paremti Medikus
	if(dialogid == DIALOG_PAREMTI_MEDIKUS)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_MEDIKUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Medikus\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_MEDIKUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_MEDIKUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[3]+=suma;
			    format(masyvas, 128, "[Medikø Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToMedics(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete Medikø firmà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	//Paremti Taksistus
	if(dialogid == DIALOG_PAREMTI_TAKSISTUS)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_TAKSISTUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Taksistus\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_TAKSISTUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_TAKSISTUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[2]+=suma;
			    format(masyvas, 128, "[Taksistø Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToTaxi(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete Taksistø firmà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	//Paremti Mechanikus
	if(dialogid == DIALOG_PAREMTI_MECHANIKUS)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_MECHANIKUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Mechanikus\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_MECHANIKUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_MECHANIKUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[1]+=suma;
			    format(masyvas, 128, "[Mechanikø Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToMechanikas(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete Mechanikø firmà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	//Paremti Dylerius
	if(dialogid == DIALOG_PAREMTI_DYLERIUS)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_DYLERIUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Dylerius\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_DYLERIUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_DYLERIUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[4]+=suma;
			    format(masyvas, 128, "[Dyleriø Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToGdyleriai(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete Dyleriø firmà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	//Paremti SWAT
	if(dialogid == DIALOG_PAREMTI_SWATUS)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_SWATUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti SWAT\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_SWATUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_SWATUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[7]+=suma;
			    format(masyvas, 128, "[SWAT Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToSwatams(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete SWAT firmà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	//Furistai
	if(dialogid == DIALOG_PAREMTI_FURISTUS)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_FURISTUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Furistus\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_FURISTUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_FURISTUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[8]+=suma;
			    format(masyvas, 128, "[Fûristø Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToFUROS(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete furistø firmà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	if(dialogid == DIALOG_PAREMTI_RADISTUS)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_RADISTUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Radistus\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_RADISTUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_RADISTUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[9]+=suma;
			    format(masyvas, 128, "[Radistø Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToRadistams(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete radistû firmà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	//Rifa
	if(dialogid == DIALOG_PAREMTI_RIFA)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_RIFA, DIALOG_STYLE_INPUT, "Paremti", "Paremti Russian mafija\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_RIFA, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_RIFA, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[5]+=suma;
			    format(masyvas, 128, "[Russian Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToRifa(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete Russian mafijà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	if(dialogid == DIALOG_PAREMTI_GROOVE)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_GROOVE, DIALOG_STYLE_INPUT, "Paremti", "Paremti Yakuza mafija\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_GROOVE, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_GROOVE, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[6]+=suma;
			    format(masyvas, 128, "[Yakuza Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToGstreet(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete Yakuza mafijà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	if(dialogid == DIALOG_PAREMTI_BAIKERIUS)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_BAIKERIUS, DIALOG_STYLE_INPUT, "Paremti", "Paremti Baikeriø darbà\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_BAIKERIUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_BAIKERIUS, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[10]+=suma;
			    format(masyvas, 128, "[Baikeriø Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToBaikeriams(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete Baikeriø darbà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
	if(dialogid == DIALOG_PAREMTI_SPD)
	{
		if(response)
		{
			new suma,masyvas[128];
			if(sscanf(inputtext, "d",suma)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_SPD, DIALOG_STYLE_INPUT, "Paremti", "Paremti Armijos darbà\n\nÁveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma > GetPlayerMoneyA(playerid)) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_SPD, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Jûs tiek neturite!\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else if(suma < 1) return ShowPlayerDialog(playerid, DIALOG_PAREMTI_SPD, DIALOG_STYLE_INPUT, "Paremti", "{FF0000}Maþiausia suma 1 !\n\n{C0C0C0}Áveskite suma, kiek norësite paremti firmà!", "Rinktis", "Iðeiti");
			else
			{
			    GivePlayerMoneyA(playerid, -suma);
			    Pelnas[13]+=suma;
			    format(masyvas, 128, "[Armijos Racija] Þaidëjas %s parëmë jûsø firmà %d !",GetPlayerNameEx(playerid),suma);
			    SendMessageToSPD(BLUE, masyvas);
			    format(masyvas, 128, "* Parëmete Armijos darbà %d !",suma);
			    SendClientMessage(playerid, GREEN, masyvas);
			}
		}
		return true;
	}
//Bankomatai.
	if(dialogid == 50)
	{
		if(response)
		{
		    switch(listitem)
		    {
				case 0:
				{
					new msg[30];
					format(msg,sizeof(msg),"Banke jûs turite: %s ", konvertuoti_pinigus(playerDB[playerid][banke]));
					ShowPlayerDialog(playerid,52, DIALOG_STYLE_MSGBOX,"Balansas",msg, "Gerai","");
				}
				case 1: ShowPlayerDialog(playerid,51, DIALOG_STYLE_INPUT,"Nuimti pinigus","Norëdami nuimti, áveskite sumà","Nuimti","Atgal");
			}
		}
		return 1;
	}
	if(dialogid == 52) return ShowPlayerDialog(playerid, 50, DIALOG_STYLE_LIST, "Bankomatas", "Balansas\nNuimti pinigus", "Pasirinkti", "Baigti");

	if(dialogid == 51)
	{
		if(!response) return ShowPlayerDialog(playerid, 50, DIALOG_STYLE_LIST, "Bankomatas", "Balansas\nNuimti pinigus", "Pasirinkti", "Baigti");
		if(response)
		{
			if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid,51, DIALOG_STYLE_INPUT,"Nuimti pinigus","Simbolis turi buti skaièius\nÁveskite sumà norëdami nuimti pinigus","Nuimti","Atgal");
			if(strval(inputtext) < 1) return ShowPlayerDialog(playerid,51, DIALOG_STYLE_INPUT,"Nuimti pinigus","Simbolis turi buti skaièius didesnis uþ 1\nÁveskite sumà norëdami nuimti pinigus","Nuimti","Atgal");
			if(playerDB[playerid][banke] < strval(inputtext)) return ShowPlayerDialog(playerid,51, DIALOG_STYLE_INPUT,"Nuimti pinigus","Banke jûs tiek neturite\nIveskite sumà norëdami nuimti pinigus","Nuimti","Atgal");
			playerDB[playerid][banke]-=strval(inputtext);
			GivePlayerMoneyA(playerid,strval(inputtext));
			ApplyAnimation(playerid, "MISC", "pickup_box", 4.000000, 0, 0, 0, 0, -1);
		}
		return 1;
	}
	
	if(dialogid == DIALOG_SPALVOS_PASIRINKIMAS)
	{
		if(response)
		{
		    switch(listitem)
		    {
      			case 0:
				{
    				if(playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, "* Jûs ne savininkas!");
					SetPlayerColor(playerid, 0xFF000030);
					SendClientMessage(playerid, GREEN, "* Pasirinkote raudonà spalvà!");
		        }
		        case 1:
				{
    				if(playerDB[playerid][admin] < 1) return SendClientMessage(playerid, RED, "* Jûs ne administratorius!");
					SetPlayerColor(playerid, 0x33AA3330);
					SendClientMessage(playerid, GREEN, "* Pasirinkote þalia spalvà!");
		        }
				case 2:
				{
				    if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs esate nemokamas {ccff66}VIP {37f467}narys {ccff66}! {37f467}Ðios komandos naudoti negalite{ccff66} .");
				    if(playerDB[playerid][vip] == false) return SendClientMessage(playerid, RED, "* Jûs ne VIP narys!");
				    SetPlayerColor(playerid, 0xFFFF0030);
					SendClientMessage(playerid, GREEN, "* Pasirinkote geltonà spalvà!");
				}
				case 3:
				{
				    if(playerDB[playerid][admin] < 4 && !playerDB[playerid][dpriziuretojas] && !playerDB[playerid][epriziuretojas] && !playerDB[playerid][apriziuretojas] && !playerDB[playerid][vpriziuretojas] && !playerDB[playerid][banpriziuretojas] && !playerDB[playerid][gpriziuretojas]) return SendClientMessage(playerid, RED, "* Jûs ne Priþiûrëtojas!");
				    SetPlayerColor(playerid, 0x3399cc30);
					SendClientMessage(playerid, GREEN, "* Pasirinkote mëlynà spalvà!");
				}
		        case 4:
				{
					if(GetPlayerTWanted(playerid) > 1) return SendClientMessage(playerid, RED, " Jûs turite {FF8C00}1 {FF0000}arba daugiau þvaigþduèiø! Spalvà pasikeisti draudþiami!");
					SetPlayerColor(playerid,PLAYCOL_HIDDEN);
					SendClientMessage(playerid, GREEN, "* Pasirinkote áprastà spalvà!");
				}
		    }
		}
		return true;
	}
	//Jei GPS spaudþia rinktis.
	if(dialogid == 4500)
	{
		if(response)
		{
	    	switch(listitem)
	    	{
		        case 0: ShowPlayerDialog(playerid, DIALOG_DARBAI, DIALOG_STYLE_LIST, "Darbai", "Darbai su direktoriaus pakvietimu\nDarbai be direktoriaus pakvietimo", "Rinktis", "Iðeiti");
		        case 1: ShowPlayerDialog(playerid, DIALOG_MAFIJOS, DIALOG_STYLE_LIST, "Mafijos", "Yakuza mafija\nRussian mafija", "Rinktis", "Iðeiti");
		        case 2: ShowPlayerDialog(playerid, DIALOG_PRAMOGU_VIETOS, DIALOG_STYLE_LIST, "Pramogos",
		        "Daþasvydis\nKlubas\nKazino\nÞvejyba\nBokso salë\nStadionas\nDRIFT vieta\nDRAG/Iðlikimo vieta\nKovos menø salë\nDM ZONA\n1 grybavimo zona\n2 grybavimo zona\n3 grybavimo zona\n4 grybavimo zona\n BMX Parkas",
		        "Rinktis", "Iðeiti");
		        case 3: ShowPlayerDialog(playerid, DIALOG_KITOS_VIETOS, DIALOG_STYLE_LIST, "Kitos vietos", "Parkas\nNamø kvartalas\nBaþnyèia\nDraudimas\nRenginiø zona\nGrybø supirkimas", "Rinktis", "Iðeiti");
		        case 4:
				{
				 	new masyvas[800];
					format(masyvas, 800,
					"Vairavimo mokykla\nPagrindinë picerija\nGinklinë Ammu-Nation\nRestoranas Medþiotojø namai\nKonfiskuotø maðinø aikðtelë\nVyriausybë\nBankas\nVieðbutis\nLoterija\nskelbimu kontora\n\
					Maisto parduotuvë\nMaxima\nDrabuþiø parduotuvë\nTechnikos parduotuvë\nOfisas\nMaxima\nPagrindinë picerija\nDegalinë\nDegalinë 2\nDegalinë 3\nPicerija\nTelefonø parduotuvë\nMaðinø pardavimø aikðtelë\nKioskas\nMaðinø nuoma\nMaðinø turgus",
					"Rinktis", "Iðeiti" ) ;
					ShowPlayerDialog(playerid, DIALOG_SVARBIOS_VIETOS, DIALOG_STYLE_LIST, "Svarbios Vietos",masyvas, "Rinktis", "Iðeiti");
				}
				case 5: ShowPlayerDialog(playerid, DIALOG_KLUBU_VIETOS, DIALOG_STYLE_LIST, "Klubø vietos", "Klubas :  Costello \nKlubas :  -Patriotai- ", "Rinktis", "Iðeiti");
				case 6:
				{
				    new b = PlayerHaveBusiness(playerid);
				    if(b == -1) return ShowGpsFirstDialog(playerid);
				    SendClientMessage(playerid, 0xFF000090, "Jûsø verslo vieta nustatyta þemëlapyje raudonu taðkeliu.");
                    SetPlayerCheckpointEx(playerid, 7, bInfo[b][bPos_X], bInfo[b][bPos_Y], bInfo[b][bPos_Z], 2);
				}
				case 7:
				{
					new h = PlayerHaveHouse(playerid);
        			if(h == -1) return ShowGpsFirstDialog(playerid);
        			SendClientMessage(playerid, 0xFF000090, "Jûsø namo vieta nustatyta þemëlapyje raudonu taðkeliu.");
                    SetPlayerCheckpointEx(playerid, 7, hInfo[h][ExitX], hInfo[h][ExitY], hInfo[h][ExitZ], 2);
				}
				case 8: ShowPlayerDialog(playerid, DIALOG_KITI_MIESTELIAI,DIALOG_STYLE_LIST,"Kita","Darbai\nMafijos\nPramogos\nKitos vietos\nSvarbios vietos\nKlubai","Rinktis","Atgal");
			}
		}
		return 1;
	}
	
	if(dialogid == DIALOG_DARBAI)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid, DIALOG_DARBAI_SU, DIALOG_STYLE_LIST, "Darbai", "Policijos departamentas\nMedikai\nTaksistai\nMechanikai\nDyleriai\nRadistai\nFûristai\nSWAT\nBaikeriai\nArmija", "Rinktis", "Atgal");
				case 1: ShowPlayerDialog(playerid, DIALOG_DARBAI_BE, DIALOG_STYLE_LIST, "Darbai", "Valytojai [nuo 50 xp]\nGaisrinë [nuo 1200 xp]\nLimuzininkai [nuo 450 xp]\nPicø iðveþiotojai [nuo 70 xp]\nKrovikai [nuo 0 xp]\nMedkirèiai [nuo 1.000 xp]\nKunigai [nuo 200 xp]\nNarai [nuo 500 xp]", "Rinktis", "Atgal");
			}
		}
		return true;
	}

	if(dialogid == DIALOG_DARBAI_SU)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
					SendClientMessage(playerid,0xFF000090," Policijos darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,653.7253,-524.7097,16.3359,2);
	            }
	            case 1:
	            {
					SendClientMessage(playerid,0xFF000090," Mediku darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1219.7346,323.0757,19.5469,2);
	            }
	            case 2:
	            {
					SendClientMessage(playerid,0xFF000090," Taksistø darbovietes pirmoji vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2218.3330,-77.9485,26.4844,2);
	            }
	            case 3:
	            {
					SendClientMessage(playerid,0xFF000090," Mechanikø darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1251.6927,504.6180,19.8828,2);
	            }
	            case 4:
	            {
					SendClientMessage(playerid,0xFF000090," Dyleriø darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,895.1860,363.4601,19.8828,2);
	            }
	            case 5:
	            {
					SendClientMessage(playerid,0xFF000090," Radistø darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 326.8853,-160.4463,1.5581,2);
	            }
	            case 6:
	            {
					SendClientMessage(playerid,0xFF000090," Fûristø darbovietës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 1341.7434,739.9533,10.8203,2);
	            }
	            case 7:
	            {
					SendClientMessage(playerid,0xFF000090," SWAT darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, -79.7123,-353.1489,1.4297,2);
	            }
	            case 8:
	            {
					SendClientMessage(playerid,0xFF000090," Baikeriø darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 1876.0045,628.1811,10.8203,2);
	            }
	             case 9:
	            {
					SendClientMessage(playerid,0xFF000090," Armijos darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 2233.2336,2437.7903,10.8125,2);
	            }
	        }
	    }
		return true;
	}
	
	if(dialogid == DIALOG_DARBAI_BE)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
					SendClientMessage(playerid,0xFF000090," Valytojø darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,325.7323,-62.4903,1.5704,2);
	            }
	            case 1:
	            {
					SendClientMessage(playerid,0xFF000090," Gaisrinës darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,671.6569,-543.3812,16.3382,2);
	            }
	            case 2:
	            {
					SendClientMessage(playerid,0xFF000090," Limuzininkø darbovietes vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,211.9365,-65.2519,1.5781,2);
	            }
	            case 3:
	            {
					SendClientMessage(playerid,0xFF000090," Picø iðveþiotoju vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1353.0079,252.7913,19.5547,2);
	            }
	            case 4:
	            {
					SendClientMessage(playerid,0xFF000090," Krovikø vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1022.8906,-387.5433,71.1667,2);
	            }
	            case 5:
	            {
					SendClientMessage(playerid,0xFF000090," Medkirèiø vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1945.7196,162.8991,37.3945,2);
	            }
	            case 6:
	            {
					SendClientMessage(playerid,0xFF000090," Kunigø vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2254.9473,-31.9407,26.3359,2);
	            }
	            case 7:
	            {
					SendClientMessage(playerid,0xFF000090," Narø vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2147.2761,-90.8301,2.7553,2);
	            }
	        }
	    }
	    return true;
	}
	
	if(dialogid == DIALOG_MAFIJOS)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid,0xFF000090," Yakuza mafijos vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, -713.9875,1006.7518,12.2290,2);
				}
				case 1:
				{
					SendClientMessage(playerid,0xFF000090," Russian mafijos vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, -321.6211,1731.1674,42.8545,2);
				}
			}
		}
		return 1;
	}
	if(dialogid == DIALOG_PRAMOGU_VIETOS)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid,0xFF000090," Daþasvydþio vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 283.2255,-217.6486,1.5800,2);
				}
				case 1:
				{
					SendClientMessage(playerid,0xFF000090," Klubo vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 684.0731,-479.0579,16.3359,2);
				}
				case 2:
				{
					SendClientMessage(playerid,0xFF000090," Kazino vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 2273.8313,47.5014,26.4844,2);
				}
				case 3:
				{
					SendClientMessage(playerid,0xFF000090," Þvëjybos vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 1423.9286,-214.6719,7.5371,2);
				}
				case 4:
				{
					SendClientMessage(playerid,0xFF000090," Bokso vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 2338.3792,44.7304,26.4844,2);
				}
				case 5:
				{
					SendClientMessage(playerid,0xFF000090," Stadiono vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 1308.6381,323.4223,19.5547,2);
				}
				case 6:
				{
					SendClientMessage(playerid,0xFF000090," DRIFT vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, -302.2192,1504.3479,75.4751,2);
				}
				case 7:
				{
					SendClientMessage(playerid,0xFF000090," DRAG / iðlikimo vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, -1690.7566,-213.3845,14.1440,2);
				}
				case 8:
				{
					SendClientMessage(playerid,0xFF000090," Kovos menø salës vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 2338.1116,53.3552,26.4844,2);
				}
				case 9:
				{
					SendClientMessage(playerid,0xFF000090," DM zonos vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 404.4202,2480.5510,16.4844,2);
				}
				case 10:
				{
					SendClientMessage(playerid,0xFF000090," 1 þvejybos zona nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 1495.1842,290.1375,18.5315,2);
				}
				case 11:
				{
					SendClientMessage(playerid,0xFF000090," 2 þvejybos zona nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 2489.4663,-151.5576,37.7310,2);
				}
				case 12:
				{
					SendClientMessage(playerid,0xFF000090," 3 þvejybos zona nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 192.7056,-561.2433,49.1580,2);
				}
				case 13:
				{
					SendClientMessage(playerid,0xFF000090," 4 þvejybos zona nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 676.2673,-341.3461,10.8436,2);
				}
				case 14:
				{
					SendClientMessage(playerid,0xFF000090,"* BMX parko vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1032.0266,512.9430,19.8828,2); // BMX parkas.
				}
			}
		}
		return 1;
	}
	
	if(dialogid == DIALOG_SVARBIOS_VIETOS)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
				case 0:
				{
					SendClientMessage(playerid,0xFF000090," Vairavimo mokyklos vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2454.4604,118.5204,26.4764,2);
				}
				case 1:
				{
					SendClientMessage(playerid,0xFF000090," Pagrindinës picerijos vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2336.7949,75.0907,26.4807,2);
				}
				case 2:
				{
					SendClientMessage(playerid,0xFF000090," Ginklø parduotuvës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2337.7314,63.8075,26.4793,2);
				}
				case 3:
				{
					SendClientMessage(playerid,0xFF000090," Restorano Medþiotojø namai vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1406.5317,420.3009,19.7794,2);
				}
				case 4:
				{
					SendClientMessage(playerid,0xFF000090," Konfiskuotø maðinø aikðtelës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1253.4348,514.3206,19.8828,2);
				}
				case 5:
				{
					SendClientMessage(playerid,0xFF000090," Vyriausybës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2349.7813,-78.6230,26.4844,2);
				}
				case 6:
				{
					SendClientMessage(playerid,0xFF000090," Banko vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2299.6865,-17.1068,26.4844,2);
				}
				case 7:
				{
					SendClientMessage(playerid,0xFF000090," Vieðbuèio vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1362.7255,310.7605,19.6300,2);
				}
				case 8:
				{
					SendClientMessage(playerid,0xFF000090," Loterijos vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2299.9004,54.9516,26.4844,2);
				}
				case 9:
				{
					SendClientMessage(playerid,0xFF000090," Skelbimu kontoros vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,71.3528,-205.5200,1.2628,2);
				}
				case 10:
				{
					SendClientMessage(playerid,0xFF000090," Maisto parduotuvës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2330.2424,-34.5339,26.4844,2);
				}
				case 11:
				{
					SendClientMessage(playerid,0xFF000090," Maximos parduotuvës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2250.2561,48.2154,26.4844,2);
				}
				case 12:
				{
					SendClientMessage(playerid,0xFF000090," Drabuþiø parduotuvës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2337.2258,-47.8426,26.4844,2);
				}
				case 13:
				{
					SendClientMessage(playerid,0xFF000090," Technikos parduotuvës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2336.8899,-66.1345,26.4844,2);
				}
				case 14:
				{
					SendClientMessage(playerid,0xFF000090," AFK ZONOS vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2237.4280,85.3299,26.4844,2);
				}
				case 15:
				{
					SendClientMessage(playerid,0xFF000090," Maximos parduotuvës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,687.6249,-544.1515,16.3359,2);
				}
				case 16:
				{
					SendClientMessage(playerid,0xFF000090," Pagrindinës picerijos vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2337.1038,73.6267,26.4802,2);
				}
				case 17:
				{
					SendClientMessage(playerid,0xFF000090,"Degalinës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2468.3083,-35.4487,26.4844,2);
				}
				case 18:
				{
					SendClientMessage(playerid,0xFF000090," Degalinës 2 vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,650.0247,-565.5917,16.2827,2);
				}
				case 19:
				{
					SendClientMessage(playerid,0xFF000090," Degalinës 3 vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1349.7347,462.5304,19.8828,2);
				}
				case 20:
				{
					SendClientMessage(playerid,0xFF000090," Picerijos vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1353.5970,251.4755,19.5547,2);
				}
				case 21:
				{
					SendClientMessage(playerid,0xFF000090," Telefonø parduotuvës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,255.9101,-65.9486,1.5781,2);
				}
				case 22:
				{
					SendClientMessage(playerid,0xFF000090," Maðinø pardavimo aikðtelës vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,688.2828,-645.8640,16.2445,2);
				}
				case 23:
				{
					SendClientMessage(playerid,0xFF000090," Kiosko vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,1349.6793,214.8786,19.5547,2);
				}
				case 24:
				{
					SendClientMessage(playerid,0xFF000090," Maðinø nuomos vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2401.5559,94.7255,26.4758,2);
				}
				case 25:
				{
					SendClientMessage(playerid,0xFF000090," Maðinø turgaus vieta nustatyta þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7,2351.6323,219.4338,26.5245,2);
				}
	        }
	    }
	    return 1;
	}
	
	if(dialogid == DIALOG_KITOS_VIETOS)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid,0xFF000090," Parko vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 638.2411,-599.6605,16.3359,2);
				}
				case 1:
				{
					SendClientMessage(playerid,0xFF000090," Namø kvartalo vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, -212.6356,-93.0545,3.1172,2);
				}
				case 2:
				{
					SendClientMessage(playerid,0xFF000090," Baþnyèios vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 2256.7571,-40.0922,26.4737,2);
				}
				case 3:
				{
					SendClientMessage(playerid,0xFF000090," Draudimo vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 2277.0068,85.0120,26.4844,2);
				}
				case 4:
				{
					SendClientMessage(playerid,0xFF000090," Renginiø zonos vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 338.3864,-123.8532,1.4868,2);
				}
				case 5:
				{
					SendClientMessage(playerid,0xFF000090," Grybø supirkimo vieta nustatytà þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, 1304.3177,365.4706,19.5547,2);
				}
			}
		}
		return true;
	}
	
	if(dialogid == DIALOG_KLUBU_VIETOS)
	{
		if(response)
		{
			switch(listitem)
			{
				case 0:
				{
					SendClientMessage(playerid,0xFF000090," Klubas pavadinimu  Costello  nustatytas þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, -497.7458,2597.9783,53.6400,2);
				}
				case 1:
				{
					SendClientMessage(playerid,0xFF000090," Klubas pavadinimu  -Patriotai-  nustatytas þemëlapyje raudonu taðkeliu.");
					SetPlayerCheckpointEx(playerid, 7, -1519.2054,2548.9160,55.6875,2);
				}
			}
		}
		return true;
	}
	//Baudos sumokëjimas
	if(dialogid == DIALOG_BAUDOS_MOKEJIMAS_PASTATE)
	{
	    if(!response)
	    {
	        SendClientMessage(playerid, RED, "* Atsisakëte susimokëti baudos!");
	    }
	    if(response)
	    {
	    	new bauda = GetPlayerTWanted(playerid)*250;
			if(GetPlayerMoneyA(playerid) < bauda)
			{
				SendClientMessage(playerid,RED," Tiek pinigu jus neturite");
				return 1;
			}
			GivePlayerMoneyA(playerid, -bauda);
			Pelnas[0]+=bauda;
			SendClientMessage(playerid,GREEN," Bauda sumokëta, jus iðteisintas!");
			SetPlayerColor(playerid,PLAYCOL_HIDDEN);
			SetPlayerTWanted(playerid,0);
			new masyvas[220];
 			format(masyvas, 110, "[Policijos Racija] Þaidëjas {FFFFFF}%s {FFA500}sumokëjo baudà policijos pastate!",GetPlayerNameEx(playerid));
  			SendMessageToCops(COLOR_RACIJA,masyvas);
 			format(masyvas, 110, "[SWAT Racija] Þaidëjas {FFFFFF}%s {FFA500}sumokëjo baudà policijos pastate!",GetPlayerNameEx(playerid));
  			SendMessageToSwatams(COLOR_RACIJA,masyvas);
	    }
	    return 1;
	}
	//Antros maðinos valdymas
	if(dialogid == DIALOG_MASINOS_VALDYMAS)
	{
	    if(response)
	    {
	        new vehicleid = playerDB[playerid][vCarID2];
	        if(vehicleid == -1) return 1;
	        switch(listitem)
	        {
				case 0:
				{
    				if(vehicleDB[vehicleid][vLocked])
    				{
                        vehicleDB[vehicleid][vLocked] = false;
                        SendClientMessage(playerid, C_YELLOW, " Atrakinote transporto priemonæ.");
					}
					else
					{
                        vehicleDB[vehicleid][vLocked] = true;
                        SendClientMessage(playerid, C_YELLOW, " Uþrakinote transporto priemonæ.");
					}
					SavePlayerVehicle2(playerid);
				}
				case 1:
				{
					new msg[128],Float:coo[6];
					GetVehiclePos(vehicleid,coo[0],coo[1],coo[2]);
					GetPlayerPos(playerid,coo[3],coo[4],coo[5]);
					new Float:atstumas = ((floatabs(coo[0]-coo[3])+floatabs(coo[1]-coo[4])+floatabs(coo[2]-coo[5]))/3)/100;
					SetPlayerCheckpointEx(playerid, 0, coo[0],coo[1],coo[2],2);
					format(msg,sizeof(msg),"* Dabartine masinos vieta rodoma GPS. Ji yra %f KM",atstumas);
					SendClientMessage(playerid,GREEN,msg);
				}
				case 2:
				{
				    ShowPlayerDialog(playerid, DIALOG_MASINOS_ATIDAVIMAS, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Norëdami atiduoti transportà þmogui,\náraðykite þmogaus vardà:", "Atiduoti", "Atgal");
				}
				case 3:
				{
				    ShowPlayerDialog(playerid, DIALOG_MASINOS_PARDAVIMAS, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Norëdami parduoti transportà þmogui,\náraðykite þmogaus vardà:", "Toliau", "Atgal");
				}
				case 4:
				{
				    new str[75];
					format(str, sizeof(str), "{ffffff}Ar tikrai norite parduoti savo transporto priemonæ uþ %s.", konvertuoti_pinigus(GetVehicleCost(vehicleid)));
                    ShowPlayerDialog(playerid, DIALOG_MASINOS_PARDAVIMAS4, DIALOG_STYLE_MSGBOX, "{ffffff}Transporto valdymas.", str, "Parduoti", "Atgal");
				}
				case 5:
				{
				    for(new p = 0; p < MAX_PLAYERS; p++)
				    {
				        if(p == playerid) continue;
						if(IsPlayerInVehicle(p, vehicleid))
						{
						    RemovePlayerFromVehicle(p);
						}
				    }
				    SendClientMessage(playerid, C_YELLOW, "Visi iðmesti ið jûsø transporto priemonës.");
				    return 1;
				}
				case 6:
				{
                    ShowPlayerDialog(playerid, DIALOG_MASINOS_INFO, DIALOG_STYLE_MSGBOX, "{ffffff}Transporto informacija.", ShowVehicleInfo(vehicleid), "Atgal", "");
				}
			}
		}
		return 1;
	}
	// Masinos perdavimo dialogas 1.
	if(dialogid == DIALOG_MASINOS_ATIDAVIMAS)
	{
		if(!response) return ShowPlayerDialog(playerid, DIALOG_MASINOS_VALDYMAS, DIALOG_STYLE_LIST, "{ffffff}Transporto priemonës valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		new id = GetPlayeridMid(inputtext);
		if(id == INVALID_PLAYER_ID || IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_MASINOS_ATIDAVIMAS, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Tokio þaidëjo nëra.\nNorëdami atiduoti transportà þmogui,\náraðykite þmogaus vardà:", "Atiduoti", "Atgal");
        new vehicleid = playerDB[playerid][vCarID2];
		if(vehicleid == -1) return 1;
		if(playerDB[id][vCarID2] != -1)
		{
		    SendClientMessage(playerid, C_RED, "Zaidejas jau turi transporto priemone.");
		    ShowPlayerDialog(playerid, DIALOG_MASINOS_VALDYMAS, DIALOG_STYLE_LIST, "{ffffff}Transporto priemones valdymas.", "{ffffff} Atrakinti/Uzrakinti.\n Surasti.\n Atiduoti zmogui.\n Parduoti zmogui.\n Parduoti i turgu.\n Ismesti zmones is transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		    return 1;
		}
		new str[265];
		format(str, sizeof(str), "{ffffff}%s atiduoda jums transporto priemone.\nInformacija:\n%s\n\nAr paimsite?:", GetPlayerNameEx(playerid), ShowVehicleInfo(vehicleid));
		ShowPlayerDialog(id, DIALOG_MASINOS_ATIDAVIMAS2, DIALOG_STYLE_MSGBOX, " ", str, "Taip", "Ne");
		playerDB[id][CanTakeCar] = playerid;
		return 1;
	}
	// Masinos perdavimo dialogas 2.
	if(dialogid == DIALOG_MASINOS_ATIDAVIMAS2)
	{
	    new id = playerDB[playerid][CanTakeCar];
	    if(response)
	    {
		    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, C_RED, "Klaida, transporto priemonës savininkas atsijunges.");
			playerDB[playerid][vCarID2] = playerDB[id][vCarID2];
	        playerDB[id][vCarID2] = -1;
	        SendClientMessage(playerid, C_YELLOW, "* Sutikote paimti transporto priemonæ.");
	        SendClientMessage(id, C_YELLOW, "* Atidavëte transporto priemonæ.");
	        SavePlayerVehicle2(playerid);
	        SavePlayerVehicle2(id);
	        playerDB[playerid][CanTakeCar] = -1;
		}
		else
		{
		    SendClientMessage(playerid, C_YELLOW, "Nesutikote paimti transporto priemonës.");
		    playerDB[playerid][CanTakeCar] = -1;
		    if(id == INVALID_PLAYER_ID) return 1;
	        SendClientMessage(id, C_RED, "Þaidëjas nesutiko imti transporto priemonës.");
		}
		return 1;
	}
	// Antros Masinos pardavimo dialogas 1.
	if(dialogid == DIALOG_MASINOS_PARDAVIMAS)
	{
		if(!response) return ShowPlayerDialog(playerid, DIALOG_MASINOS_VALDYMAS, DIALOG_STYLE_LIST, "{ffffff}Transporto priemonës valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		new id = GetPlayeridMid(inputtext);
		if(id == INVALID_PLAYER_ID || IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_MASINOS_PARDAVIMAS, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Tokio þaidëjo nëra.\nNorëdami parduoti transporta þmogui,\náraðykite þmogaus vardà:", "Toliau", "Atgal");
        new vehicleid = playerDB[playerid][vCarID2];
		if(vehicleid == -1) return 1;
		if(playerDB[id][vCarID2] != -1)
		{
		    SendClientMessage(playerid, C_RED, "Þaidëjas jau turi transporto priemonæ.");
		    ShowPlayerDialog(playerid, DIALOG_MASINOS_VALDYMAS, DIALOG_STYLE_LIST, "{ffffff}Transporto priemonës valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		    return 1;
		}
		ShowPlayerDialog(playerid, DIALOG_MASINOS_PARDAVIMAS2, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Áveskite sumà uþ kiek norite parduoti transporto priemonæ:", "Siulyti", "Atgal");
		playerDB[playerid][ChoosedPlayer] = id;
		return 1;
	}
	// Antros pardavimo dialogas 2.
	if(dialogid == DIALOG_MASINOS_PARDAVIMAS2)
	{
		if(!response) return ShowPlayerDialog(playerid, DIALOG_MASINOS_PARDAVIMAS, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Norëdami parduoti transporta þmogui,\náraðykite þmogaus vardà:", "Toliau", "Atgal");
		new id = playerDB[playerid][ChoosedPlayer];
		if(id == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, DIALOG_MASINOS_PARDAVIMAS, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Tokio þaidëjo nëra.\nNorëdami parduoti transportà þmogui,\náraðykite þmogaus vardà:", "Toliau", "Atgal");
		if(!IsNumeric(inputtext) || strval(inputtext) < 1) return ShowPlayerDialog(playerid, DIALOG_MASINOS_PARDAVIMAS2, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Klaida, suma per maþa arba neteisingai ávesta.\nÁveskite sumà uþ kiek norite parduoti transporto priemonæ:", "Siulyti", "Atgal");
		new vehicleid = playerDB[playerid][vCarID2];
		if(vehicleid == -1) return 1;
		if(playerDB[id][vCarID2] != -1)
		{
		    SendClientMessage(playerid, C_RED, "Þaidëjas jau turi transporto priemonæ.");
		    ShowPlayerDialog(playerid, DIALOG_MASINOS_VALDYMAS, DIALOG_STYLE_LIST, "{ffffff}Transporto priemonës valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		    return 1;
		}
		new str[280];
		format(str, sizeof(str), "{ffffff}%s siûlo jums transporto priemonæ uþ %s.\nInformacija:\n%s\n\nAr paimsite?:", GetPlayerNameEx(playerid), konvertuoti_pinigus(strval(inputtext)), ShowVehicleInfo(vehicleid));
		ShowPlayerDialog(id, DIALOG_MASINOS_PARDAVIMAS3, DIALOG_STYLE_MSGBOX, " ", str, "Taip", "Ne");
		playerDB[id][CanTakeCar] = playerid;
		playerDB[id][CarCost] = strval(inputtext);
		return 1;
	}
// Masinos pardavimo dialogas 3.
    if(dialogid == DIALOG_MASINOS_PARDAVIMAS3)
	{
		new id = playerDB[playerid][CanTakeCar];
		new cost = playerDB[playerid][CarCost];
	    if(response)
	    {
		    if(id == INVALID_PLAYER_ID)
			{
				playerDB[playerid][CanTakeCar] = -1;
				playerDB[playerid][CarCost] = -1;
				SendClientMessage(playerid, C_RED, "Klaida, transporto priemonës savininkas atsijunges.");
				return 1;
			}
			if(GetPlayerMoneyA(playerid) < cost)
			{
			    SendClientMessage(playerid, C_RED, "Jums neuþtenka pinigø.");
			    SendClientMessage(id, C_RED, "Þaidëjui neuþteko pinigø nusipirkti jûsø transporto priemonæ.");
			    playerDB[playerid][CanTakeCar] = -1;
				playerDB[playerid][CarCost] = -1;
			    return 1;
			}
			if(GetPlayerScore(playerid) < 1500)
			{
			    SendClientMessage(playerid, C_RED, "Jums neuþtenka patirties taðkø. Reikia 1.500.");
			    SendClientMessage(id, C_RED, "Þaidëjas neturi 1.500 patirties, kad ið jûsø nusipirktø transportà.");
			    playerDB[playerid][CanTakeCar] = -1;
				playerDB[playerid][CarCost] = -1;
			}
			if(playerDB[id][vCarID2] == -1)
			{
			    playerDB[playerid][CanTakeCar] = -1;
				playerDB[playerid][CarCost] = -1;
			    SendClientMessage(playerid, C_RED, "Pardavëjas jau nebeturi transporto priemonës.");
				return 1;
			}
			playerDB[playerid][vCarID2] = playerDB[id][vCarID2];
	        playerDB[id][vCarID2] = -1;
	        GivePlayerMoneyA(playerid, - cost);
	        GivePlayerMoneyA(id, cost);
	        SavePlayerVehicle2(playerid);
	        SavePlayerVehicle2(id);
			SendClientMessage(playerid, C_YELLOW, "Nusipirkote transporto priemonæ.");
	        SendClientMessage(id, C_YELLOW, "Pardavëte transporto priemonæ.");
	        playerDB[playerid][CanTakeCar] = -1;
			playerDB[playerid][CarCost] = -1;
		}
		else
		{
		    SendClientMessage(playerid, C_YELLOW, "Atsisakëte pirkti transporto priemonæ.");
		    if(id == INVALID_PLAYER_ID) return 1;
	        SendClientMessage(id, C_RED, "Þaidëjas nesutiko pirkti jûsø transporto priemonës.");
		}
		return 1;
	}
	if(dialogid == DIALOG_MASINOS_PARDAVIMAS4)
	{
	    if(!response) return ShowPlayerDialog(playerid, DIALOG_MASINOS_VALDYMAS, DIALOG_STYLE_LIST, "{ffffff}Transporto priemonës valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		new vehicleid = playerDB[playerid][vCarID2], str[60];
		if(vehicleid == -1) return 1;
		new cost = GetVehicleCost(vehicleid);
		GivePlayerMoneyA(playerid, cost);
		format(str, sizeof(str), "* Pardavëte savo transporto priemonæ uþ {ffffff}%s.", konvertuoti_pinigus(cost));
		SendClientMessage(playerid, C_YELLOW, str);
		DestroyVehicle(vehicleid);
	    format(vehicleDB[vehicleid][vOwner], 21, "-");
	    format(vehicleDB[vehicleid][vNumberPlate], 9, "-");
	    for(new tune = 0; tune < 13; tune++) vehicleDB[vehicleid][vTune][tune] = 0;
        for(new color = 0; color < 2; color++) vehicleDB[vehicleid][vColor][color] = 0;
		vehicleDB[vehicleid][vPaintjob] = -1;
		vehicleDB[vehicleid][Rida] = 0.0;
		vehicleDB[vehicleid][gas] = 0;
		vehicleDB[vehicleid][vLocked] = false;
		vehicleDB[vehicleid][vOwned] = false;
		playerDB[playerid][vCarID2] = -1;
		SavePlayerVehicle2(playerid);
		return 1;
	}
	if(dialogid == DIALOG_MASINOS_INFO)
	{
		if(response)
		{
			ShowPlayerDialog(playerid, DIALOG_MASINOS_VALDYMAS, DIALOG_STYLE_LIST, "{ffffff}Transporto priemones valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		}
		return true;
	}
	if(dialogid == DIALOG_GRYBU_PARDAVIMAS)
	{
		if(response)
		{
			if(playerDB[playerid][grybas] == 0) return SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Jus neturite nei vieno grybo!");

			new String[128];
			format(String, sizeof(String), "{9966CC}[INFO]: {ffffff}Pardavëte visus savo grybus uþ {9966CC}%i {ffffff}.", playerDB[playerid][grybas] * 6);
			SendClientMessage(playerid, -1, String);

			GivePlayerMoneyA(playerid, playerDB[playerid][grybas] * 6);
			playerDB[playerid][grybas] = 0;
		}
		return true;
	}
	if(dialogid == DIALOG_INVESTICIJOS)
	{
		if(response)
		{
		    switch(listitem)
		    {
				case 0:
				{
				    new masyvas[256];
				    format(masyvas, 256, "\tInvesticija\n\nKaip veikia investicijos?\nJûs investuojate pingius á NRMG ir gaunate ðiektiek pelno á minutæ");
				    ShowPlayerDialog(playerid, 401, DIALOG_STYLE_MSGBOX, "Investicijos Informacija", masyvas, "Gerai", "Atgal");
				}
				case 1:
				{
				    if(playerDB[playerid][investicija] > 0) return SendClientMessage(playerid, RED, "* Jûs jau turite investuotus pinigus");
					if(GetPlayerMoneyA(playerid) < 100000) return SendClientMessage(playerid, RED, "* Jûs neturite 100000 ");
					GivePlayerMoneyA(playerid, -100000);
					playerDB[playerid][investicija] = 1;
					SendClientMessage(playerid, GREEN, "* Sëkmingai Investavote 100000, dabar gausite á minutæ 10. Pinigai kyla á jûsø uþdirbtà atlygá!");
				}
				case 2:
				{
				    if(playerDB[playerid][investicija] > 0) return SendClientMessage(playerid, RED, "* Jûs jau turite investuotus pinigus");
					if(GetPlayerMoneyA(playerid) < 200000) return SendClientMessage(playerid, RED, "* Jûs neturite 200000 ");
					GivePlayerMoneyA(playerid, -200000);
					playerDB[playerid][investicija] = 2;
					SendClientMessage(playerid, GREEN, "* Sëkmingai Investavote 200000, dabar gausite á minutæ 20. Pinigai kyla á jûsø uþdirbtà atlygá!");
				}
				case 3:
				{
				    if(playerDB[playerid][investicija] > 0) return SendClientMessage(playerid, RED, "* Jûs jau turite investuotus pinigus");
					if(GetPlayerMoneyA(playerid) < 300000) return SendClientMessage(playerid, RED, "* Jûs neturite 300000 ");
					GivePlayerMoneyA(playerid, -300000);
					playerDB[playerid][investicija] = 3;
					SendClientMessage(playerid, GREEN, "* Sëkmingai Investavote 300000, dabar gausite á minutæ 30. Pinigai kyla á jûsø uþdirbtà atlygá!");
				}
				case 4:
				{
				    if(playerDB[playerid][investicija] > 0) return SendClientMessage(playerid, RED, "* Jûs jau turite investuotus pinigus");
					if(GetPlayerMoneyA(playerid) < 500000) return SendClientMessage(playerid, RED, "* Jûs neturite 500000 ");
					GivePlayerMoneyA(playerid, -500000);
					playerDB[playerid][investicija] = 4;
					SendClientMessage(playerid, GREEN, "* Sëkmingai Investavote 500000, dabar gausite á minutæ 40. Pinigai kyla á jûsø uþdirbtà atlygá!");
				}
				case 5:
				{
				    if(playerDB[playerid][investicija] > 0) return SendClientMessage(playerid, RED, "* Jûs jau turite investuotus pinigus");
					if(GetPlayerMoneyA(playerid) < 750000) return SendClientMessage(playerid, RED, "* Jûs neturite 750000 ");
					GivePlayerMoneyA(playerid, -750000);
					playerDB[playerid][investicija] = 5;
					SendClientMessage(playerid, GREEN, "* Sëkmingai Investavote 750000, dabar gausite á minutæ 50. Pinigai kyla á jûsø uþdirbtà atlygá!");
				}
				case 6:
				{
					playerDB[playerid][investicija] = 0;
					SendClientMessage(playerid, RED, "* Atsisakëte investicijø!");
				}
			}
		}
		return 1;
	}
//Darbo palikimas.
	if(dialogid == 987)
 	{
  		if(!response) //NE
   		{
    		SendClientMessage(playerid, RED, "Darbas nebuvo paliktas.");
		}
		if(response) //TAIP
 		{
			if(playerDB[playerid][uniformd]) SetPlayerSkin(playerid, playerDB[playerid][drabuziai]);
			playerDB[playerid][specialybe] = 0;
			playerDB[playerid][uniformd] = false;
			playerDB[playerid][uniforma] = -1;
			playerDB[playerid][ispejimai] = 0;
			playerDB[playerid][rangas] = 0;
	 		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
	 		SendClientMessage(playerid,RED,"Darbas paliktas.");
	 		playerDB[playerid][pradirbo] = 0;
	 		for(new faction=0; faction < 15; faction++) playerDB[playerid][leanvited][faction]=false;
			return 1;
		}
	}
//Nuoboaudos
	if(dialogid == 7411)
	{
	    if(response)
	    {
	        new id = playerDB[playerid][ChoosedPlayer];
			switch(listitem)
			{
			    case 0:
			    {
	        		new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 3);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 3 lygiais, uþ pravaþiavimà pro raudonà !", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 3 lygiais, uþ pravaþiavimà pro raudonà !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
     				SetPlayerColor(id, 0x660099AA);
			    }
			    case 1:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 2);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 2 lygiais, uþ kyðio ðiûlymà !", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 2 lygiais, uþ kyðio ðiûlymà  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 2:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 2);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 2 lygiais, uþ civilio nuþudymà!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 2 lygiais, uþ civilio nuþudymà  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 3:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 3);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 3 lygiais, uþ vairavymà be teisiø!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 3 lygiais, uþ vairavymà be teisiø  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 4:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 5);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 5 lygiais, uþ relog surakintam!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 5 lygiais, uþ reloga surakintam  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 5:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 2);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 2 lygiais, uþ bereikðmá iðkvietimà!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 2 lygiais, uþ bereikðmá iðkvietimà  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 6:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 3);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 3 lygiais, uþ pareigûno nuþudymà!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 3 lygiais, uþ pareigûno nuþudymà  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 7:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 2);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 2 lygiais, uþ ðaudymà vieðoje vietoje!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 2 lygiais, uþ ðaudymà vieðoje vietoje  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 8:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 6);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 6 lygiais, uþ bëgimà nuo teisësaugos!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 6 lygiais, uþ bëgimà nuo teisësaugos  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 9:
			    {
                	new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 2);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 2 lygiais, uþ civilio pareigûno muðimà!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 2 lygiais, uþ civilio pareigûno muðimà  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 10:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 6);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 6 lygiais, uþ Death Match!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 6 lygiais, uþ Death Match  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 11:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 2);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 2 lygiais, uþ ginklo demonstravimà vieðoje vietoje!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 2 lygiais, uþ ginklo demonstravimà vieðoje vietoje  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 12:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 2);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 2 lygiais, uþ ESC pagautam!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 2 lygiais, uþ ESC pagautam  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 13:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 2);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 2 lygiais, uþ vaþiavimà be lempø!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 2 lygiais, uþ vaþiavimà be lempø  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 14:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 5);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 5 lygiais, uþ Non-RP!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 5 lygiais, uþ Non-RP  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 15:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 2);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 2 lygiais, uþ Chuliganizmà!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 2 lygiais, uþ Chuliganizmà  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 16:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 3);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 3 lygiais, uþ nepagarbà pareigûnui!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 3 lygiais, uþ nepagarbà pareigûnui  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 17:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 4);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 4 lygiais, uþ narkotiniø medþiagø tûrëjimà!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 4 lygiais, uþ narkotiniø medþiagø tûrëjimà  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			    case 18:
			    {
			        new msg[180];
			        SetPlayerTWanted(id, GetPlayerTWanted(id) + 20);
			        format(msg, sizeof(msg), "[T-RACIJA]Pareigûnas %s: Átariu %s, 20 lygiais, uþ ðaudymà á pareigûnà nuo stogo!", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
					SendMessageToBendraTeisesauga(BLUE, msg);
					format(msg, 110,"* Pareigûnas %s jus átarë 20 lygiais, uþ ðaudymà á pareigûnà nuo stogo  !", GetPlayerNameEx(playerid));
					SendClientMessage(id, RED, msg);
					SetPlayerColor(id, 0x660099AA);
			    }
			}
		}
		return 1;
	}
	if(dialogid == 5888)
	{
	    if(response)
	    {
	        new msg[110], wep[64];
	        new id = playerDB[playerid][ChoosedPlayer];
			new weapon = GetPlayerWeapon(id);
			new pKaina = playerDB[playerid][KainaKulku];
			new kiek = playerDB[playerid][KiekKulku];
	        GivePlayerWeaponEx(id, weapon, - kiek);
			GivePlayerWeaponEx(playerid, weapon, kiek);
			GivePlayerMoneyA(playerid, -pKaina);
			GivePlayerMoneyA(id, pKaina);
			GetWeaponName(weapon, wep, sizeof(wep));
			format(msg,sizeof(msg),"* Pardavëte %s kulkø (%s) þaidëjui %s.", wep, konvertuoti_pinigus(kiek), GetPlayerNameEx(id));
			SendClientMessage(id,BLUE,msg);
			format(msg,sizeof(msg),"* Dyleris %s jums pardavë ðautuvo %s kulkø (%s).", GetPlayerNameEx(id), wep, konvertuoti_pinigus(kiek));
			SendClientMessage(playerid,GREEN,msg);
			if(weapon == 30) playerDB[id][ParduotiAK] = kiek;
			if(weapon == 24) playerDB[id][ParduotiDGL] = kiek;
			if(weapon == 25) playerDB[id][ParduotiSG] = kiek;
			if(weapon == 34) playerDB[id][ParduotiSNP] = kiek;
			if(weapon == 22) playerDB[id][Parduoti9MM] = kiek;
			if(weapon == 32) playerDB[id][ParduotiTEC] = kiek;
			if(weapon == 28) playerDB[id][ParduotiSMG] = kiek;
			if(weapon == 27) playerDB[id][ParduotiSPAZ] = kiek;
		}
		else
		{
		    new msg[110];
		    new id = playerDB[playerid][ChoosedPlayer];
		    format(msg,sizeof(msg),"* Þaidëjas %s atsisakë pirkti ðovinius.", GetPlayerNameEx(playerid));
			SendClientMessage(id,BLUE,msg);
			format(msg,sizeof(msg),"* Atsisakëte ið %s pirkti ðovinius.", GetPlayerNameEx(id));
			SendClientMessage(playerid,GREEN,msg);
		}
		return 1;
	}

    if(dialogid == 1588)
	{
		if(response)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
		            new v;
				    for(v = 0; v < MAX_VEHICLES; v++)
					{
					    if(GetVehicleModel(v) < 400) continue;
					    if(vehicleDB[v][vOwned]) continue;
					    if(v >= buliucar[0] && v <= buliucar[37])
					    {
					    	new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
							GetVehicleParamsEx(v, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
							if(!Doors) { SetVehicleParamsEx(v, Engine, Lights, Alarm, true, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~g~UZRAKINAI DURIS",2000,4); } else { SetVehicleParamsEx(v, Engine, Lights, Alarm, false, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~R~ATRAKINAI DURIS",2000,4); }
						}
					}
		        }
		        case 1:
		        {
		            SendClientMessage(playerid, GREEN, "* Pripildiai á buliø maðinas degalø!");
		            new v;
		            for(v = 0; v < MAX_VEHICLES; v++)
					{
					    if(GetVehicleModel(v) < 400) continue;
					    if(vehicleDB[v][vOwned]) continue;
					    if(v >= buliucar[0] && v <= buliucar[37])
					    {
					    	vehicleDB[v][gas] = 60;
						}
					}
		        }
		        case 2:
		        {
		            SendClientMessage(playerid, GREEN, "* Sutvarkiai buliø maðinas!");
		            new v;
		            for(v = 0; v < MAX_VEHICLES; v++)
					{
					    if(GetVehicleModel(v) < 400) continue;
					    if(vehicleDB[v][vOwned]) continue;
					    if(v >= buliucar[0] && v <= buliucar[37])
					    {
					    	RepairVehicle(v);
						}
					}
		        }
		        case 3:
		        {
		            SendClientMessage(playerid, GREEN, "* Atstatiai atgal buliu maðinas!");
		            new v;
		            for(v = 0; v < MAX_VEHICLES; v++)
					{
					    if(GetVehicleModel(v) < 400) continue;
					    if(vehicleDB[v][vOwned]) continue;
					    if(v >= buliucar[0] && v <= buliucar[37])
					    {
					    	SetVehicleToRespawn(v);
						}
					}
		        }
			}
		}
		return 1;
	}
	
	if(dialogid == DIALOG_NUSTATYMAI)
	{
		if(response)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
				//	PlayerTextDrawHide ( playerid , Logo [ playerid ] ) ;
                    SendClientMessage(playerid, RED, " Iðjungiai {FF8C00}uþraðà !");
                    return 1;
						}
		        case 1:
		        {
		         //   PlayerTextDrawShow ( playerid , Logo [ playerid ] ) ;
                    SendClientMessage(playerid, RED, " {33AA33}Ájungiai {FF8C00}uþraðà !");
                    return 1;
						}
		        case 2:
		        {
		            TextDrawHideForPlayer(playerid,laikiux);
					TextDrawHideForPlayer(playerid, datike);
					SendClientMessage(playerid, RED, " Iðjungiai {FF8C00}laikrodá !");
					return 1;
					}
     			case 3:
		        {
		            TextDrawShowForPlayer(playerid,laikiux);
					TextDrawShowForPlayer(playerid, datike);
					SendClientMessage(playerid, RED, " {33AA33}Ájungiai {FF8C00}laikrodá !");
					return 1;
					}
  				case 4:
		        {
		            TextDrawHideForPlayer(playerid, Burger);
		            TextDrawHideForPlayer(playerid, Burger1);
					TextDrawHideForPlayer(playerid, Burger2);
					TextDrawHideForPlayer(playerid, AlkTD[ playerid ]);
					SendClientMessage(playerid, RED, " {33AA33}Iðjungiai {FF8C00}alkio rodymà !");
					return 1;
					}
  				case 5:
		        {
		            TextDrawShowForPlayer(playerid, Burger);
		            TextDrawShowForPlayer(playerid, Burger1);
					TextDrawShowForPlayer(playerid, Burger2);
					TextDrawShowForPlayer(playerid, AlkTD[ playerid ]);
					SendClientMessage(playerid, RED, " {33AA33}Ájungiai {FF8C00}alkio rodymà !");
					return 1;
					}
 				case 6:
		        {
					TextDrawHideForPlayer(playerid, IeskomumasTD1 ) ;
					TextDrawHideForPlayer(playerid, IeskomumasTD2 [ playerid ] ) ;
					SendClientMessage(playerid, RED, " {33AA33}Iðjungiai {FF8C00}átarimo rodymà !");
					return 1;
					}
  				case 7:
		        {
					TextDrawShowForPlayer(playerid, IeskomumasTD1 ) ;
					TextDrawShowForPlayer(playerid, IeskomumasTD2 [ playerid ] ) ;
					SendClientMessage(playerid, RED, " {33AA33}Ájungiai {FF8C00}átarimo rodymà !");
					return 1;
					}
	           }
		}
		return 1;
	}

// dialogai testas
//dialog
	if(dialogid == 10001)
    {
        if(response)
        {
            switch(listitem)
            {
                case 0: ShowPlayerDialog(playerid, 10031, DIALOG_STYLE_INPUT, "{ffffff}Kviesti Mechanikus", "{FFFF00}Kur? {ffffff}(Nekviesk bereikalo)", "Kviesti", "Atgal");
                case 1: ShowPlayerDialog(playerid, 10033, DIALOG_STYLE_INPUT, "{ffffff}Kviesti Medikus", "{FFFF00}Kur? {ffffff}(Nekviesk bereikalo)", "Kviesti", "Atgal");
                case 2: ShowPlayerDialog(playerid, 10034, DIALOG_STYLE_INPUT, "{ffffff}Kviesti Policijà", "{FFFF00}Kur? {ffffff}(Nekviesk bereikalo)", "Kviesti", "Atgal");
                case 3: ShowPlayerDialog(playerid, 10032, DIALOG_STYLE_INPUT, "{ffffff}Kviesti Medeljino kartelá", "{FFFF00}Kur? {ffffff}(Nekviesk bereikalo)", "Kviesti", "Atgal");
                case 4: ShowPlayerDialog(playerid, 10035, DIALOG_STYLE_INPUT, "{ffffff}Kviesti Pervëþëjø tarnyba", "{FFFF00}Kur? {ffffff}(Nekviesk bereikalo)", "Kviesti", "Atgal");
                case 5: ShowPlayerDialog(playerid, 10030, DIALOG_STYLE_INPUT, "{ffffff}Kviesti Taksistus", "{FFFF00}Kur? {ffffff}{ffffff}(Nekviesk bereikalo)", "Kviesti", "Atgal");
                //case 6: ShowPlayerDialog(playerid,6036,DIALOG_STYLE_INPUT,"{ffffff}Kviesti Spec.Pajëgas","{FFFF00}Kurð {ffffff}(Nekviesk bereikalo)","Kviesti","Atgal");
                case 6:
                {
                    if(playerDB[playerid][IskvietesPolicija])
                    {
                        SendClientMessage(playerid,RED,"{EB3232}« Iðkvietimas atðauktas!");
                        playerDB[playerid][IskvietesPolicija]=false;
                    }
                    if(playerDB[playerid][IskvietesTaxi])
                    {
                        SendClientMessage(playerid,RED,"{EB3232}« Iðkvietimas atðauktas!");
                        playerDB[playerid][IskvietesTaxi]=false;
                    }
                    if(playerDB[playerid][Iskvietesmechanikus])
                    {
                        SendClientMessage(playerid,RED,"{EB3232}« Iðkvietimas atðauktas!");
                        playerDB[playerid][Iskvietesmechanikus]=false;
                    }
                    if(playerDB[playerid][Iskvietesmechanikus])
                    {
                        SendClientMessage(playerid,RED,"{EB3232}« Iðkvietimas atðauktas!");
                        playerDB[playerid][Iskvietesmechanikus]=false;
                    }
                    if(playerDB[playerid][IskvietesMedikus])
                    {
                        SendClientMessage(playerid,RED,"{EB3232}« Iðkvietimas atðauktas!");
                        playerDB[playerid][IskvietesMedikus]=false;
                    }
                    if(playerDB[playerid][IskvietesPica])
                    {
                        SendClientMessage(playerid,RED,"{EB3232}« Iðkvietimas atðauktas!");
                        playerDB[playerid][IskvietesPica]=false;
                    }
                    if(playerDB[playerid][IskvietesSwat])
                    {
                        SendClientMessage(playerid,RED,"{EB3232}« Iðkvietimas atðauktas!");
                        playerDB[playerid][IskvietesSwat]=false;
                    }
                }
            }
        }
        return 1;
    }
    if(dialogid == 10036)
    {
        if(!response)
        {
            new t, m, p, g, pd, f, sp;
            for(new i; i < MAX_PLAYERS; i++ )
            {
                if(IsPlayerConnected(i))
                {
                    //online ++;
                    if( playerDB[i][specialybe] == 1 )             pd ++;
                    else if( playerDB[i][specialybe] == 2 )        t ++;
                    else if( playerDB[i][specialybe] == 3 )        m ++;
                    else if( playerDB[i][specialybe] == 13 )        p ++;
                    else if( playerDB[i][specialybe] == 5 )        g ++;
                    else if( playerDB[i][specialybe] == 6)         f ++;
                    else if( playerDB[i][specialybe] == 15)        sp ++;
                }
            }

            new Kiekis[864];
            format(Kiekis, sizeof Kiekis, "{FFFFFF}« {ff9966}Mechanikai (dirba: %i)\n{FFFFFF}« {ff9966}Medikai (dirba: %i)\n{FFFFFF}« {ff9966}Policija (dirba: %i)\n{FFFFFF}« {ff9966}Medeljino kartelis (dirba: %i)\n{FFFFFF}« {ff9966}Perveþëjø tarnyba (dirba: %i)\n{FFFFFF}« {ff9966}Taksistai (dirba: %i)",m,g,pd,p,f,t);
            ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "Iðkvietimai", Kiekis, "Rinktis", "Atgal");
        }
        if(response)
        {
            new text[MAX_PLAYERS];
            strmid(text,inputtext,0,sizeof(text));
            new masyvas[128],name[MAX_PLAYER_NAME];
            GetPlayerName(playerid,name,sizeof(name));
            format(masyvas,128,"{ecf0f1}[Specialiosios pajëgos racija]:{95a5a6} Þaidëjas: %s kvieèia Specialiosios pajëgos! Vieta: (%s)",name,text);
            SendMessageToSwatams(RAUDONA,masyvas);
            SendClientMessage(playerid, BLUE, "{ff9966} I  {FFFFFF}Naudok: /vaziuoju [Vardas_Pavardë]");
            SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} Specialiosios pajëgos iðkviestos");
            playerDB[playerid][IskvietesSwat]=true;
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
                {
                    SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} {ffffff}Kai baigsite, rageli padekite su {FFFF00}/bai");
                    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
                }
            }
        }
        return 1;
    }
    if(dialogid == 10035)
    {
        if(!response)
        {
            new t, m, p, g, pd, f, sp;
            for(new i; i < MAX_PLAYERS; i++ )
            {
                if(IsPlayerConnected(i))
                {
                    //online ++;
                    if( playerDB[i][specialybe] == 1 )             pd ++;
                    else if( playerDB[i][specialybe] == 2 )        t ++;
                    else if( playerDB[i][specialybe] == 3 )        m ++;
                    else if( playerDB[i][specialybe] == 13 )        p ++;
                    else if( playerDB[i][specialybe] == 5 )        g ++;
                    else if( playerDB[i][specialybe] == 6)         f ++;
                    else if( playerDB[i][specialybe] == 15)        sp ++;
                }
            }

            new Kiekis[864];
            format(Kiekis, sizeof Kiekis, "{FFFFFF}« {ff9966}Mechanikai (dirba: %i)\n{FFFFFF}« {ff9966}Medikai (dirba: %i)\n{FFFFFF}« {ff9966}Policija (dirba: %i)\n{FFFFFF}« {ff9966}Medeljino kartelis (dirba: %i)\n{FFFFFF}« {ff9966}Perveþëjø tarnyba (dirba: %i)\n{FFFFFF}« {ff9966}Taksistai (dirba: %i)",m,g,pd,p,f,t);
            ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "Iðkvietimai", Kiekis, "Rinktis", "Atgal");
        }
        if(response)
        {
            new text[MAX_PLAYERS];
            strmid(text,inputtext,0,sizeof(text));
            new masyvas[128],name[MAX_PLAYER_NAME];
            GetPlayerName(playerid,name,sizeof(name));
            format(masyvas,128,"{ecf0f1}[Perveþëjø tarnyba racija]:{95a5a6} Þaidëjas: %s kvieèia perveþëjø tarnyba! Vieta: (%s)",name,text);
            SendMessageToFUROS(RAUDONA,masyvas);
            SendClientMessage(playerid, BLUE, "{ff9966} I  {FFFFFF}Naudok: /vaziuoju [Vardas_Pavardë]");
            SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} Furistai iðkviesti");
            playerDB[playerid][IskvietesPica]=true;
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
                {
                    SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} {ffffff}Kai baigsite, rageli padekite su {FFFF00}/bai");
                    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
                }
            }
        }
        return 1;
    }
    if(dialogid == 10034)
    {
        if(!response)
        {
            new t, m, p, g, pd, f, sp;
            for(new i; i < MAX_PLAYERS; i++ )
            {
                if(IsPlayerConnected(i))
                {
                    //online ++;
                    if( playerDB[i][specialybe] == 1 )             pd ++;
                    else if( playerDB[i][specialybe] == 2 )        t ++;
                    else if( playerDB[i][specialybe] == 3 )        m ++;
                    else if( playerDB[i][specialybe] == 13 )        p ++;
                    else if( playerDB[i][specialybe] == 5 )        g ++;
                    else if( playerDB[i][specialybe] == 6)         f ++;
                    else if( playerDB[i][specialybe] == 15)        sp ++;
                }
            }

            new Kiekis[864];
            format(Kiekis, sizeof Kiekis, "{FFFFFF}« {ff9966}Mechanikai (dirba: %i)\n{FFFFFF}« {ff9966}Medikai (dirba: %i)\n{FFFFFF}« {ff9966}Policija (dirba: %i)\n{FFFFFF}« {ff9966}Medeljino kartelis (dirba: %i)\n{FFFFFF}« {ff9966}Perveþëjø tarnyba (dirba: %i)\n{FFFFFF}« {ff9966}Taksistai (dirba: %i)",m,g,pd,p,f,t);
            ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "Iðkvietimai", Kiekis, "Rinktis", "Atgal");
        }
        if(response)
        {
            new text[MAX_PLAYERS];
            strmid(text,inputtext,0,sizeof(text));
            new masyvas[128],name[MAX_PLAYER_NAME];
            GetPlayerName(playerid,name,sizeof(name));
            format(masyvas,120,"{ecf0f1}[Policijos racija]:{95a5a6} Operatore: %s kvieèia policija! Vieta: (%s)",name,text);
            SendMessageToCops(BLUE,masyvas);
            SendClientMessage(playerid, BLUE, "{ff9966} I  {FFFFFF}Naudok: /vaziuoju [Vardas_Pavardë]");
            playerDB[playerid][IskvietesPolicija]=true;
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
                {
                	SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} Policija iðkviesta");
                    SendClientMessage(playerid,RAUDONA, "{EB3232}« {ffffff}Kai baigsite, rageli padekite su {FFFF00}/bai");
                    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
                }
            }
        }
        return 1;
    }
    if(dialogid == 10033)
    {
        if(!response)
        {
            new t, m, p, g, pd, f, sp;
            for(new i; i < MAX_PLAYERS; i++ )
            {
                if(IsPlayerConnected(i))
                {
                    //online ++;
                    if( playerDB[i][specialybe] == 1 )             pd ++;
                    else if( playerDB[i][specialybe] == 2 )        t ++;
                    else if( playerDB[i][specialybe] == 3 )        m ++;
                    else if( playerDB[i][specialybe] == 13 )        p ++;
                    else if( playerDB[i][specialybe] == 5 )        g ++;
                    else if( playerDB[i][specialybe] == 6)         f ++;
                    else if( playerDB[i][specialybe] == 15)        sp ++;
                }
            }

            new Kiekis[864];
            format(Kiekis, sizeof Kiekis, "{FFFFFF}« {ff9966}Mechanikai (dirba: %i)\n{FFFFFF}« {ff9966}Medikai (dirba: %i)\n{FFFFFF}« {ff9966}Policija (dirba: %i)\n{FFFFFF}« {ff9966}Medeljino kartelis (dirba: %i)\n{FFFFFF}« {ff9966}Perveþëjø tarnyba (dirba: %i)\n{FFFFFF}« {ff9966}Taksistai (dirba: %i)",m,g,pd,p,f,t);
            ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "Iðkvietimai", Kiekis, "Rinktis", "Atgal");
        }
        if(response)
        {
            new text[MAX_PLAYERS];
            strmid(text,inputtext,0,sizeof(text));
            new msg[128],msgs[50],name[MAX_PLAYER_NAME];
            GetPlayerName(playerid,name,sizeof(name));
            format(msg,sizeof(msg),"{ffffff}[Racija] Operatore:{FFFF00} %s {ffffff}kviecia medikus! Vieta: {FFFF00}(%s)",name,text);
            format(msgs,sizeof(msgs),"{ffffff}Naudok: {FFFF00}/vaziuoju [Vardas_Pavardë]");
            SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} {ffffff}Medikai iðkviesti");
            SendMessageToMedics(RAUDONA,msg);
            SendMessageToMedics(RAUDONA,msgs);
            playerDB[playerid][IskvietesMedikus]=true;
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
                {
                    SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} {ffffff}Kai baigsite, rageli padekite su {FFFF00}/bai");
                    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
                }
            }
        }
        return 1;
    }
    if(dialogid == 10032)
    {
        if(!response)
        {
            new t, m, p, g, pd, f, sp;
            for(new i; i < MAX_PLAYERS; i++ )
            {
                if(IsPlayerConnected(i))
                {
                    //online ++;
                    if( playerDB[i][specialybe] == 1 )             pd ++;
                    else if( playerDB[i][specialybe] == 2 )        t ++;
                    else if( playerDB[i][specialybe] == 3 )        m ++;
                    else if( playerDB[i][specialybe] == 13 )        p ++;
                    else if( playerDB[i][specialybe] == 5 )        g ++;
                    else if( playerDB[i][specialybe] == 6)         f ++;
                    else if( playerDB[i][specialybe] == 15)        sp ++;
                }
            }

            new Kiekis[864];
            format(Kiekis, sizeof Kiekis, "{FFFFFF}« {ff9966}Mechanikai (dirba: %i)\n{FFFFFF}« {ff9966}Medikai (dirba: %i)\n{FFFFFF}« {ff9966}Policija (dirba: %i)\n{FFFFFF}« {ff9966}Medeljino kartelis (dirba: %i)\n{FFFFFF}« {ff9966}Perveþëjø tarnyba (dirba: %i)\n{FFFFFF}« {ff9966}Taksistai (dirba: %i)",m,g,pd,p,f,t);
            ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "Iðkvietimai", Kiekis, "Rinktis", "Atgal");
        }
        if(response)
        {
            new text[MAX_PLAYERS];
            strmid(text,inputtext,0,sizeof(text));
            new msg[128],msgs[50],name[MAX_PLAYER_NAME];
            GetPlayerName(playerid,name,sizeof(name));
            format(msg,sizeof(msg),"{ffffff}[Racija] Operatore:{FFFF00} %s {ffffff}kviecia medeljino karteli! Vieta: {FFFF00}(%s)",name,text);
            format(msgs,sizeof(msgs),"{ffffff}Naudok: {FFFF00}/vaziuoju [Vardas_Pavardë]");
            SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} {ffffff}Medeljino kartelis iðkviestas");
            SendMessageToSPD(RAUDONA,msg);
            SendMessageToSPD(RAUDONA,msgs);
            playerDB[playerid][Iskvietesmechanikus]=true;
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
                {
                    SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} {ffffff}Kai baigsite, rageli padekite su {FFFF00}/bai");
                    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
                }
            }
        }
        return 1;
    }
    if(dialogid == 10031)
    {
        if(!response)
        {
            new t, m, p, g, pd, f, sp;
            for(new i; i < MAX_PLAYERS; i++ )
            {
                if(IsPlayerConnected(i))
                {
                    //online ++;
                    if( playerDB[i][specialybe] == 1 )             pd ++;
                    else if( playerDB[i][specialybe] == 2 )        t ++;
                    else if( playerDB[i][specialybe] == 3 )        m ++;
                    else if( playerDB[i][specialybe] == 13 )        p ++;
                    else if( playerDB[i][specialybe] == 5 )        g ++;
                    else if( playerDB[i][specialybe] == 6)         f ++;
                    else if( playerDB[i][specialybe] == 15)        sp ++;
                }
            }

            new Kiekis[864];
            format(Kiekis, sizeof Kiekis, "{FFFFFF}« {ff9966}Mechanikai (dirba: %i)\n{FFFFFF}« {ff9966}Medikai (dirba: %i)\n{FFFFFF}« {ff9966}Policija (dirba: %i)\n{FFFFFF}« {ff9966}Medeljino kartelis (dirba: %i)\n{FFFFFF}« {ff9966}Perveþëjø tarnyba (dirba: %i)\n{FFFFFF}« {ff9966}Taksistai (dirba: %i)",m,g,pd,p,f,t);
            ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "Iðkvietimai", Kiekis, "Rinktis", "Atgal");
        }
        if(response)
        {
            new text[MAX_PLAYERS];
            strmid(text,inputtext,0,sizeof(text));
            new msg[128],msgs[50],name[MAX_PLAYER_NAME];
            GetPlayerName(playerid,name,sizeof(name));
            format(msg,sizeof(msg),"{ffffff}[Racija] Operatore:{FFFF00} %s {ffffff}kviecia mechanikus! Vieta: {FFFF00}(%s)",name,text);
            format(msgs,sizeof(msgs),"{ffffff}Naudok: {FFFF00}/vaziuoju [Vardas_Pavardë]");
            SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} {ffffff}Mechanikai iðkviesti");
            SendMessageToMechanikas(RAUDONA,msg);
            SendMessageToMechanikas(RAUDONA,msgs);
            playerDB[playerid][IskvietesTaxi]=true;
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
                {
                    SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} {ffffff}Kai baigsite, rageli padekite su {FFFF00}/bai");
                    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
                }
            }
        }
        return 1;
    }
    if(dialogid == 10030)
    {
        if(!response)
        {
            new t, m, p, g, pd, f, sp;
            for(new i; i < MAX_PLAYERS; i++ )
            {
                if(IsPlayerConnected(i))
                {
                    //online ++;
                    if( playerDB[i][specialybe] == 1 )             pd ++;
                    else if( playerDB[i][specialybe] == 2 )        t ++;
                    else if( playerDB[i][specialybe] == 3 )        m ++;
                    else if( playerDB[i][specialybe] == 13 )        p ++;
                    else if( playerDB[i][specialybe] == 5 )        g ++;
                    else if( playerDB[i][specialybe] == 6)         f ++;
                    else if( playerDB[i][specialybe] == 15)        sp ++;
                }
            }

            new Kiekis[864];
            format(Kiekis, sizeof Kiekis, "{FFFFFF}« {ff9966}Mechanikai (dirba: %i)\n{FFFFFF}« {ff9966}Medikai (dirba: %i)\n{FFFFFF}« {ff9966}Policija (dirba: %i)\n{FFFFFF}« {ff9966}Medeljino kartelis (dirba: %i)\n{FFFFFF}« {ff9966}Perveþëjø tarnyba (dirba: %i)\n{FFFFFF}« {ff9966}Taksistai (dirba: %i)",m,g,pd,p,f,t);
            ShowPlayerDialog(playerid, 10001, DIALOG_STYLE_LIST, "Iðkvietimai", Kiekis, "Rinktis", "Atgal");
        }
        if(response)
        {
            new text[MAX_PLAYERS];
            strmid(text,inputtext,0,sizeof(text));
            new msg[128],msgs[50],name[MAX_PLAYER_NAME];
            GetPlayerName(playerid,name,sizeof(name));
            format(msg,sizeof(msg),"{ffffff}[Racija] Operatore:{FFFF00} %s {ffffff}kviecia Taksisto darbuotoja! Vieta: {FFFF00}(%s)",name,text);
            format(msgs,sizeof(msgs),"{ffffff}Naudok: {FFFF00}/vaziuoju [Vardas_Pavardë]");
            SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} {ffffff}Taksistas iðkviestas");
            SendMessageToTaxi(RAUDONA,msg);
            SendMessageToTaxi(RAUDONA,msgs);
            playerDB[playerid][IskvietesTaxi]=true;
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_NONE)
                {
                    SendClientMessage(playerid,RAUDONA, "{ff3300}[]:{999999} {ffffff}Kai baigsite, rageli padekite su {FFFF00}/bai");
                    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
                }
            }
        }
        return 1;
    }


    	//////CMD:DARBAS
	if (dialogid == 10210) {
	    if(response){
	        switch(listitem)
	        {
	            case 0:
	            {
					new masyvas[1060];
					format(masyvas, sizeof(masyvas), "Baikeris - 6,000xp");
					format(masyvas, sizeof(masyvas), "%s\nMedikas - 7,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nFuristas - 8,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nMechanikas - 9,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nKarininkas - 9,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nRadija - 10,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nTaxi - 10,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nDyleris - 20,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nPolicininkas - 20,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nSWAT - 30,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\n\nDirektorius galite susirasti su komanda /direktoriai",masyvas);
					ShowPlayerDialog(playerid, 1114, DIALOG_STYLE_MSGBOX, "Darbai",masyvas, "Gerai", "");
	            }
	            case 1:
	            {
					new masyvas[860];
					format(masyvas, sizeof(masyvas), "Ukininkas - 0xp");
					format(masyvas, sizeof(masyvas), "%s\nPizza boy - 2,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nKunigas - 2,500xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nValytojai - 3,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nGaisrininkas - 4,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nNaras - 7,000xp",masyvas);
					format(masyvas, sizeof(masyvas), "%s\nMedkirtys - 10,000xp",masyvas);
					ShowPlayerDialog(playerid, 1114, DIALOG_STYLE_MSGBOX, "Darbai",masyvas, "Gerai", "");
	            }
	            case 2:
	            {
					new str[1028];
					format(str,sizeof(str),"{FFFFFF}Bedarbiai\nPolicininkai\nMedikai\nTaksistai\nFuristai\nBaikeriai\nTuningai\nMechanikai\nSWAT\nDyleriai\nRadijos DJ\nUkininkai\nNarai\nKunigai\nPicu pardavejai\nMedkirciai\nValytojai");
	                ShowPlayerDialog(playerid, 10820, DIALOG_STYLE_LIST, "Visu Zaideju Darbai",str, "Pasirinkti", "Atsaukti");
	            }
	        }
	    }
	    return true;
	}
		//////CMD:prisijunge

	if (dialogid == 10820) 
	{
	    if(response)
	    {
	        switch(listitem)
			{
	           case 0:
	            {
					new x;
					SendClientMessage(playerid,YELLOW,"* Prisijunge Bedarbiai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++)
					{
						if (playerDB[pl][specialybe] == 0)
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 1:
	            {
					new x;
					SendClientMessage(playerid, GREEN, "* Prisijunge Policininkai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++)
					{
						if (playerDB[pl][specialybe] == 1) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,RED,name);
						}
					}
	            }
	            case 2:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Medikai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 2) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 3:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Taksistai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 3) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 4:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Furistai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 11) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 5:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Baikeriai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 14) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 6:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Karininkai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 17) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 7:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Mechanikai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 4) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 8:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge SWAT:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 10) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 9:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Dyleriai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 5) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 10:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Radistai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 13) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 11:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Ukininkai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 28) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 12:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Narai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 30) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 13:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Kunigai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 27) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 14:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Picu pardavejai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 20) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 15:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Medkirciai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 24) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	            case 16:
	            {
					new x;
					SendClientMessage(playerid,GREEN,"* Prisijunge Valytojai:");
					for (new pl = 0; pl < MAX_PLAYERS; pl++) 
					{
						if (playerDB[pl][specialybe] == 22) 
						{
						    x++;
						    new name[50];
						    format(name,sizeof(name),"%i. %s",x,GetPlayerNameEx(pl));
						    SendClientMessage(playerid,GREEN,name);
						}
					}
	            }
	        }
	    }
	    return true;
	}


	if(dialogid == 6001)
	{
		if(response)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1073);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
                    return 1;
						}
		        case 1:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1074);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
                    return 1;
						}
		        case 2:
		        {
                    if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1075);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}
		        case 3:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1076);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}
		        case 4:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1077);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}
					case 5:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1078);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}
					case 6:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1079);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}
					case 7:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1080);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}
					case 8:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1081);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}
					case 9:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1082);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}
					case 10:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1083);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}
					case 11:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1084);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}
					case 12:
		        {
		            if(GetPlayerMoneyA(playerid) < 1000) return SendClientMessage(playerid,RED,"* Neturite 1.000 ratlankiams");
					GivePlayerMoneyA(playerid, -1000);
					Pelnas[1] += 1000;
					new veh = GetPlayerVehicleID(playerid);
				    new vehicle = GetPlayerVehicleID(playerid);
                    AddVehicleComponent(vehicle,1085);
    				new string [ 500 ];
					format(string,sizeof(string),"[MECHANIKAI]: Mechanikas %s ámontavo ratus þaidëjui. || MaðinosID: %i ",GetPlayerNameEx(playerid),veh);
					SendMessageToMechanikas(BLUE,string);
					return 1;
					}

	           }
		}
		return 1;
	}
//Paþyma
	if(dialogid == 10719)
	{
	    if(!response) return SendClientMessage(playerid, GREEN, "* Sëkmës, turbût kità kartà nusipirksi licenzijà :)");
		if(response)
		{
		    if(playerDB[playerid][medicinospazyma] > gettime()) return SendClientMessage(playerid, RED, "* Jûs jau turite paþymà kuri galioja.");
		    if(playerDB[playerid][pinigai] < 1000) return SendClientMessage(playerid, RED, "* Jûs neturite 1.000 paþymai.");
			playerDB[playerid][medicinospazyma] = gettime() + 259200;
			new str [ 150 ] ;
			new laikas = playerDB[playerid][medicinospazyma];
			format(str, sizeof(str), "{37f467} Nusipirkote paþymà kuri galios galios dar: {ccff66}%s",  ConvertSeconds(laikas - gettime()));
			SendClientMessage(playerid, YELLOW, str);
			GivePlayerMoneyA(playerid, -1000);
			Pelnas[3] += 1000;
		}
		return 1;
	}
	
	//Þaidëjo draudimas .
	if(dialogid == 10721)
	{
	    if(!response) return SendClientMessage(playerid, GREEN, "* Sëkmës, turbût kità kartà apsidrausite save.");
		if(response)
		{
		    if(playerDB[playerid][zaidejodraudimas] > gettime()) return SendClientMessage(playerid, RED, "* Jûs jau esate apsidraudæs save !");
		    if(playerDB[playerid][pinigai] < 2000) return SendClientMessage(playerid, RED, "* Jûs neturite 2.000 gyvybës draudimui .");
			playerDB[playerid][zaidejodraudimas] = gettime() + 259200;
			new str [ 150 ] ;
			new laikas = playerDB[playerid][zaidejodraudimas];
			format(str, sizeof(str), "{37f467} Jûs apdraustas ! Draudimas galios dar: {ccff66}%s",  ConvertSeconds(laikas - gettime()));
			SendClientMessage(playerid, YELLOW, str);
			GivePlayerMoneyA(playerid, -2000);
		}
		return 1;
	}
	
	//To su sutikimu
	if(dialogid == 7590)
	{
		if(response)
		{
			new id = playerDB[playerid][ChoosedPlayer];
			new msg[115], Float:tempcoo[3];
			format(msg,sizeof(msg), "* Atsiteleportavote pas þaidëjà %s", GetPlayerNameEx(playerid));
			SendClientMessage(id, GREEN, msg);
			format(msg,sizeof(msg), "* Atsiteleportavo pas jus %s.", GetPlayerNameEx(id));
			SendClientMessage(playerid, GREEN, msg);
			GetPlayerPos(playerid, tempcoo[0], tempcoo[1], tempcoo[2]);
			SetPlayerPos(id, tempcoo[0], tempcoo[1], tempcoo[2]);
			SetCameraBehindPlayer(playerid);
			SetPlayerInterior(id, GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(id, GetPlayerVirtualWorld(playerid));
			return 1;
		}
		else
		{
		    new msg[145];
		    new id = playerDB[playerid][ChoosedPlayer];
		    format(msg,sizeof(msg), "* Þaidëjas %s nesutiko, kad persikeltumete pas ji.", GetPlayerNameEx(playerid));
			SendClientMessage(id, GREEN, msg);
			format(msg,sizeof(msg), "* Nesutikai, kad bûtu atsikelës pas jus %s.", GetPlayerNameEx(id));
			SendClientMessage(playerid, GREEN, msg);
		}
		return 1;
	}
	
//Get su sutikimu
	if(dialogid == 7589)
	{
		if(response)
		{
			new id = playerDB[playerid][ChoosedPlayer];
			new msg[128], Float:tempcoo[3];
			format(msg,sizeof(msg), "* Þaidëjas %s buvo perkeltas pas jus. ", GetPlayerNameEx(playerid));
			SendClientMessage(id, GREEN, msg);
			format(msg,sizeof(msg), "* Buvai perkeltas pas %s.", GetPlayerNameEx(id));
			SendClientMessage(playerid, GREEN, msg);
			SetPlayerInterior(playerid,GetPlayerInterior(id));
			GetPlayerPos(id,tempcoo[0],tempcoo[1],tempcoo[2]);
			SetPlayerPos(playerid,tempcoo[0],tempcoo[1],tempcoo[2]);
			SetCameraBehindPlayer(playerid);
			return 1;
		}
		else
		{
		    new msg[128];
		    new id = playerDB[playerid][ChoosedPlayer];
		    format(msg,sizeof(msg), "* Þaidëjas %s nesutiko bûti perkeltas pas jus. ", GetPlayerNameEx(playerid));
			SendClientMessage(id, GREEN, msg);
			format(msg,sizeof(msg), "* Nesutikai bûti perkeltas pas %s.", GetPlayerNameEx(id));
			SendClientMessage(playerid, GREEN, msg);
		}
		return 1;
	}
	
	if(dialogid == 10789)
	{
	    if(!response) return GameTextForPlayer(playerid,"~g~Sekmes",6000,1);//<-- that's what we need now.
 		if(response)
   		{
   		    if(GetPlayerMoneyA(playerid) < 1500) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}1.500 {7ADE27}, kad nusipirktumëte naujà aprangà!");
   		    if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, 10789, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti http://wiki.sa-mp.com/wiki/Skins:All\nSkino ID turi bûti skaièius.\n\nKaina: {00CC00}1.500 {FFFFFF}.", "Pirkti", "Atgal");
   		    if(strval(inputtext) < 1 || strval(inputtext) > 299) return SendClientMessage(playerid, RED, "* Skin ID tik nuo 1 iki 299!");
   		    switch(strval(inputtext))
			{
				case 1, 77, 79, 262, 282, 50, 189, 194, 274, 169, 28, 13, 125, 191, 192: return ShowPlayerDialog(playerid, 10789, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti http://wiki.sa-mp.com/wiki/Skins:All\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}1.500 {FFFFFF}.", "Pirkti", "Atgal");
				case 285, 124, 107, 155, 205, 68, 8, 41, 24, 76, 27, 31, 26, 263, 195: return ShowPlayerDialog(playerid, 10789, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti http://wiki.sa-mp.com/wiki/Skins:All\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}1.500 {FFFFFF}.", "Pirkti", "Atgal");
				case 80, 81, 70, 265, 142, 29, 126, 106, 61, 277, 69, 119, 181: return ShowPlayerDialog(playerid, 10789, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}1.500 {FFFFFF}.", "Pirkti", "Atgal");
				case 266, 275, 240, 42, 30, 206, 105, 284, 166, 276, 286, 287, 190: return ShowPlayerDialog(playerid, 10789, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}1.500 {FFFFFF}.", "Pirkti", "Atgal");
                case 220, 127, 280, 249, 34, 281, 296, 298, 156, 171: return ShowPlayerDialog(playerid, 10789, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}1.500 {FFFFFF}.", "Pirkti", "Atgal");
                case 267, 269, 271, 283, 288, 293, 299, 297, 294, 292: return ShowPlayerDialog(playerid, 10789, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}1.500 {FFFFFF}.", "Pirkti", "Atgal");
			}
   		    SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai naujà aprangà!");
   		    SetPlayerSkin(playerid, strval(inputtext));
   		    playerDB[playerid][drabuziai] = strval(inputtext);
   		    GivePlayerMoneyA(playerid, -1500);
   		}
		return 1;
	}
//Bauda
	if(dialogid == 7341)
	{
	    new bauda = playerDB[playerid][rkaina][0];
		new mentas = playerDB[playerid][rid][0];
		new mzzg[90];
		if(response)
		{
		    if(GetPlayerMoneyA(playerid) >= bauda)
   			{
   			    GivePlayerMoneyA(playerid, -bauda);
				GivePlayerMoneyA(mentas,bauda/2);
				SendClientMessage(playerid,BLUE,"* Bauda sumokëta, jûs iðteisintas.!");
				SendClientMessage(mentas,BLUE,"* Bauda sumokëta, þmogus iðteisintas!");
				SetPlayerTWanted(playerid,0);
				format(mzzg,sizeof(mzzg),"[T-RACIJA] %s: %s sumokëjo baudà ir buvo iðteisintas!", GetPlayerNameEx(mentas), GetPlayerNameEx(playerid));
				SendMessageToBendraTeisesauga(BLUE,mzzg);
				SetPlayerColor(playerid,PLAYCOL_HIDDEN);
				Surakinti(playerid, true);
				return 1;
			}
			else
			{
			    if(playerDB[playerid][banke] >= bauda)
				{
				    playerDB[playerid][banke] -= bauda;
					GivePlayerMoneyA(mentas,bauda/2);
					SendClientMessage(playerid,BLUE,"* Bauda sumokëta, jûs iðteisintas.!");
					SendClientMessage(mentas,BLUE,"* Bauda sumokëta, þmogus iðteisintas!");
					SetPlayerTWanted(playerid,0);
					format(mzzg,sizeof(mzzg),"[T-RACIJA] %s: %s sumokëjo baudà ir buvo iðteisintas!", GetPlayerNameEx(mentas), GetPlayerNameEx(playerid));
					SendMessageToBendraTeisesauga(BLUE,mzzg);
					SetPlayerColor(playerid,PLAYCOL_HIDDEN);
					Surakinti(playerid, true);
					return 1;
				}
				else
				{
				    SendClientMessage(playerid,RED,"* Kiðenëje tiek pinigø neturite.");
	       			SendClientMessage(mentas,RED,"* Þmogus tiek pinigø neturi.");
	       			return 1;
				}
			}
		}
		return 1;
	}
//Kovø stiliai
	if(dialogid == 5120)
	{
		if(response)
		{
		    switch(listitem)
		    {
		        case 0:
		        {
		            SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
              		SendClientMessage(playerid,-1,"{FFFFFF}Kovos stilius sëkmingai pakeistas. Sëkmës muðantis!");
		        }
		        case 1:
		        {
		            SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
              		SendClientMessage(playerid,-1,"{FFFFFF}Kovos stilius sëkmingai pakeistas. Sëkmës muðantis!");
		        }
		        case 2:
		        {
		            SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
              		SendClientMessage(playerid,-1,"{FFFFFF}Kovos stilius sëkmingai pakeistas. Sëkmës muðantis!");
		        }
		        case 3:
		        {
		            SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
              		SendClientMessage(playerid,-1,"{FFFFFF}Kovos stilius sëkmingai pakeistas. Sëkmës muðantis!");
		        }
		        case 4:
		        {
		            SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
              		SendClientMessage(playerid,-1,"{FFFFFF}Kovos stilius sëkmingai pakeistas. Sëkmës muðantis!");
		        }
		        case 5:
		        {
		            SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
                    SendClientMessage(playerid,-1,"{FFFFFF}Kovos stilius sëkmingai pakeistas. Sëkmës muðantis!");
		        }
			}
		}
		return 1;
	}
	//TOPAI
	if(dialogid == 1475)
	{
	    if(response)
	    {
			switch(listitem)
			{
			    case 0:
			    {
			        new x, str[120], strf[1100];
					mysql_query("SELECT * FROM players ORDER BY Xp DESC LIMIT 10");
					mysql_store_result();
					while(mysql_retrieve_row())
					{
					    new KoksVardas[24], KiekXp[10];
					    x ++;
					    mysql_fetch_field_row(KoksVardas, "Vardas");
					    mysql_fetch_field_row(KiekXp, "Xp");
					    format(str, 120, "{ffffff}%d. {ffcc00}%s {ffffff}turintis {ffcc00}%s {ffffff}patirties taðkø\n", x, KoksVardas, konvertuoti_pinigus(strval(KiekXp))); strcat(strf, str);
				    	ShowPlayerDialog(playerid, 1474, DIALOG_STYLE_MSGBOX, "{ffffff}TOP 10", strf, "Aiðku", "");
					}
					mysql_free_result();
				    return 1;
			    }
			    case 1:
			    {
			        new x, str[120], strf[1100];
					mysql_query("SELECT * FROM players ORDER BY MoneyPocket DESC LIMIT 10");
					mysql_store_result();
					while(mysql_retrieve_row())
					{
					    x ++;
					    new KoksVardas[24], KiekLitu[10];
					    mysql_fetch_field_row(KoksVardas, "Vardas");
					    mysql_fetch_field_row(KiekLitu, "MoneyPocket");
					    format(str, 120, "{ffffff}%d. {ffcc00}%s {ffffff}turintis {ffcc00}%s {ffffff}pinigø\n", x, KoksVardas, konvertuoti_pinigus(strval(KiekLitu))); strcat(strf, str);
					    ShowPlayerDialog(playerid, 1474, DIALOG_STYLE_MSGBOX, "{ffffff}TOP 10 pinigus", strf, "Aiðku", "");
					}
				    mysql_free_result();
				    return 1;
			    }
			    case 2:
			    {
			        new x, str[120], strf[1100];
					mysql_query("SELECT * FROM players ORDER BY Kreditai DESC LIMIT 10");
					mysql_store_result();
					while(mysql_retrieve_row())
					{
					    x ++;
					    new KoksVardas[24], KiekKreditu[10];
					    mysql_fetch_field_row(KoksVardas, "Vardas");
					    mysql_fetch_field_row(KiekKreditu, "Kreditai");
					    format(str, 120, "{ffffff}%d. {ffcc00}%s {ffffff}turintis {ffcc00}%s {ffffff}kreditø-(us)\n", x, KoksVardas, konvertuoti_pinigus(strval(KiekKreditu))); strcat(strf, str);
					    ShowPlayerDialog(playerid, 1474, DIALOG_STYLE_MSGBOX, "{ffffff}TOP 10 kreditus", strf, "Aiðku", "");
					}
				    mysql_free_result();
				    return 1;
			    }
			    case 3:
			    {
			        new x, str[120], strf[1100];
					mysql_query("SELECT * FROM players ORDER BY Pradirbo DESC LIMIT 10");
					mysql_store_result();
					while(mysql_retrieve_row())
					{
					    x ++;
					    new KoksVardas[24], KiekPradirbo[10];
					    mysql_fetch_field_row(KoksVardas, "Vardas");
					    mysql_fetch_field_row(KiekPradirbo, "Pradirbo");
					    format(str, 120, "{ffffff}%d. {ffcc00}%s {ffffff}pradirbæs {ffcc00}%s {ffffff}min\n", x, KoksVardas, konvertuoti_pinigus(strval(KiekPradirbo))); strcat(strf, str);
					    ShowPlayerDialog(playerid, 1474, DIALOG_STYLE_MSGBOX, "{ffffff}TOP 10 pradirbtà laikà", strf, "Aiðku", "");
					}
				    mysql_free_result();
				    return 1;
			    }
			    case 4:
			    {
			        new x, str[150], strf[1200];
					mysql_query("SELECT * FROM players ORDER BY Alga DESC LIMIT 10");
					mysql_store_result();
					while(mysql_retrieve_row())
					{
					    x ++;
					    new KoksVardas[24], KiekAlga[10];
					    mysql_fetch_field_row(KoksVardas, "Vardas");
					    mysql_fetch_field_row(KiekAlga, "Alga");
					    format(str, 140, "{ffffff}%d. {ffcc00}%s {ffffff}turintis {ffcc00}%s {ffffff}uþdirbtos algos\n", x, KoksVardas, konvertuoti_pinigus(strval(KiekAlga))); strcat(strf, str);
					    ShowPlayerDialog(playerid, 1474, DIALOG_STYLE_MSGBOX, "{ffffff}TOP 10 uþdirbtà alga", strf, "Aiðku", "");
					}
				    mysql_free_result();
				    return 1;
			    }
			    case 5:
			    {
			        new x, str[120], strf[1100];
					mysql_query("SELECT * FROM players ORDER BY Wanted DESC LIMIT 10");
					mysql_store_result();
					while(mysql_retrieve_row())
					{
					    x ++;
					    new KoksVardas[24], KiekWanted[10];
					    mysql_fetch_field_row(KoksVardas, "Vardas");
					    mysql_fetch_field_row(KiekWanted, "Wanted");
					    format(str, 120, "{ffffff}%d. {ffcc00}%s {ffffff}turintis {ffcc00}%s {ffffff}ieðkomumo taðkø\n", x, KoksVardas, konvertuoti_pinigus(strval(KiekWanted))); strcat(strf, str);
					    ShowPlayerDialog(playerid, 1474, DIALOG_STYLE_MSGBOX, "{ffffff}TOP 10 ieðkomumo", strf, "Aiðku", "");
					}
				    mysql_free_result();
				    return 1;
			    }
	   			case 6:
			    {
			        new x, str[120], strf[1100];
					mysql_query("SELECT * FROM players ORDER BY Prazaide DESC LIMIT 10");
					mysql_store_result();
					while(mysql_retrieve_row())
					{
					    x ++;
					    new KoksVardas[24], KiekPrazaide[10];
					    mysql_fetch_field_row(KoksVardas, "Vardas");
					    mysql_fetch_field_row(KiekPrazaide, "Prazaide");
					    format(str, 120, "{ffffff}%d. {ffcc00}%s {ffffff}ið viso praþaidë {ffcc00}%d {ffffff}minuèiø\n", x, KoksVardas, strval(KiekPrazaide)); strcat(strf, str);
					    ShowPlayerDialog(playerid, 1474, DIALOG_STYLE_MSGBOX, "{ffffff}TOP 10 praleidæ laiko", strf, "Aiðku", "");
					}
				    mysql_free_result();
				    return 1;
			    }
	   			case 7:
			    {
			        new x, str[130], strf[1100];
					mysql_query("SELECT * FROM cars ORDER BY rida DESC LIMIT 10");
					mysql_store_result();
					while(mysql_retrieve_row())
					{
					    x ++;
					    new KoksOwneris[50], KiekRidos[20];
					    mysql_fetch_field_row(KoksOwneris, "owner");
					    mysql_fetch_field_row(KiekRidos, "rida");
					    format(str, 130, "{ffffff}%d. {ffcc00}%s {ffffff}Tr.priemonës RIDA: {ffcc00}%d KM.\n", x, KoksOwneris, strval(KiekRidos)); strcat(strf, str);
					    ShowPlayerDialog(playerid, 1474, DIALOG_STYLE_MSGBOX, "{ffffff}TOP 10 | 1 maðinos ridà", strf, "Aiðku", "");
					}
				    mysql_free_result();
				    return 1;
			    }
	   			case 8:
			    {
			        new x, str[130], strf[1100];
					mysql_query("SELECT * FROM cars2 ORDER BY rida DESC LIMIT 10");
					mysql_store_result();
					while(mysql_retrieve_row())
					{
					    x ++;
					    new KoksOwneris[50], KiekRidos[20];
					    mysql_fetch_field_row(KoksOwneris, "owner");
					    mysql_fetch_field_row(KiekRidos, "rida");
					    format(str, 130, "{ffffff}%d. {ffcc00}%s {ffffff}Tr.priemonës RIDA: {ffcc00}%d KM KM.\n", x, KoksOwneris, strval(KiekRidos)); strcat(strf, str);
					    ShowPlayerDialog(playerid, 1474, DIALOG_STYLE_MSGBOX, "{ffffff}TOP 10 | 2 maðinos ridà", strf, "Aiðku", "");
					}
				    mysql_free_result();
				    return 1;
			    }
			}
		}
		return 1;
	}
	
	if(dialogid == 1474)
	{
	    if(response)
	    {
	        ShowPlayerDialog(playerid, 1475, DIALOG_STYLE_LIST, "{ffffff}TOP 10", "Top 10 pagal patirties taðkus\nTop 10 pagal pinigus\nTop 10 pagal kreditus\nTop 10 pagal pradirbtà laikà\nTop 10 pagal uþdirbtà algà\nTop 10 pagal ieðkomumo lygá\nTOP 10 pagal praþaista bendrai laikà\nTOP 10 pagal 1 maðinos ridà\nTOP 10 pagal 2 maðinos ridà", "Paþiûrëti", "Iðeiti");
		}
		return 1;
	}
	//TVALDYMAS
	if(dialogid == 4147)
	{
		if(response)
		{
		    switch(listitem)
		    {
		    	case 0:
		        {
		        	new vehicleid = GetPlayerVehicleID(playerid);
				    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, "* Kad uþdegtum maðinai ðviesas turi sëdëti uþ jos vairo!");
				    new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
					GetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
					if(!Engine) { SetVehicleParamsEx(vehicleid, true, Lights, Alarm, Doors, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~g~VARIKLIS UZVESTAS",2000,4); } else { SetVehicleParamsEx(vehicleid, false, Lights, Alarm, Doors, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~R~VARIKLIS ISJUNGTAS",2000,4); }
		        }
		        case 1:
		        {
		        	new vehicleid = GetPlayerVehicleID(playerid);
				    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, "* Kad uþdegtum maðinai ðviesas turi sëdëti uþ jos vairo!");
				    new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
					GetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
					if(!Lights) { SetVehicleParamsEx(vehicleid, Engine, true, Alarm, Doors, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~g~IJUNGIAI SVIESAS",2000,4); } else { SetVehicleParamsEx(vehicleid, Engine,  false, Alarm, Doors, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~R~ISJUNGIAI SVIESAS",2000,4); }
		        }
		        case 2:
		        {
	        		new vehicleid = GetPlayerVehicleID(playerid);
				    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, "* Kad uþvestum maðinà turi sëdëti uþ jos vairo!");
				    new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
					GetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
					if(!Bonnet) { SetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, true, Boot, Objective), GameTextForPlayer(playerid,"~g~ATIDARIAI KAPOTA",2000,4); } else { SetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, false, Boot, Objective), GameTextForPlayer(playerid,"~R~UZDARIAI KAPOTA",2000,4); }
		        }
		        case 3:
		        {
	        		new vehicleid = GetPlayerVehicleID(playerid);
				    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, "* Kad uþvestum maðinà turi sëdëti uþ jos vairo!");
				    new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
					GetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
					if(!Boot) { SetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, true, Objective), GameTextForPlayer(playerid,"~g~ATIDARIAI BAGAZINE",2000,4); } else { SetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, false, Objective), GameTextForPlayer(playerid,"~R~UZDARIAI BAGAZINE",2000,4); }
		        }
		        case 4:
		        {
     		  		new vehicleid = GetPlayerVehicleID(playerid);
				    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, RED, "* Kad uþvestum maðinà turi sëdëti uþ jos vairo!");
				    new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
					GetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
					if(!Doors) { SetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, true, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~g~UZRAKINAI DURIS",2000,4); } else { SetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, false, Bonnet, Boot, Objective), GameTextForPlayer(playerid,"~R~ATRAKINAI DURIS",2000,4); }
		        }
			}
		}
		return 1;
	}
//Þvejyba
    if(dialogid == 8651)
    {
        if(response)
        {
			switch(listitem)
            {
			    case 0:
				{
    				new strf[1600], str[400];
					str = "{ffffff}Sveiki, ðioje vietoje galite þvejoti. Visø pirmà norint þvejoti jums reikës:\n1.Meðkerës\n2.Valo\n3.Masalo\n4.Gerø ágûdþiu.\n\n"; strcat(strf, str);
					str = "Viskà galite nusipirkti èia pat!\nViskà nusipirkus jûs turite eiti prie lieptelio ir pradëti þvejoti.\n"; strcat(strf, str);
					str = "Kibimas gali trukti ávaiai nuo {FF9900}10 {ffffff}sekundþiø iki {FF9900}1 {ffffff}minutës, tad bûkite budrûs, nes neþinia kada gali uþkibti!.\n"; strcat(strf, str);
					str = "Uþkibus þuviai per keletà sekundþiø jûs turësite spëti iðtraukti uþkibusià þuvá(uþkibus spaudinëti {FF9900}SPACE {ffffff}klaviðà)\n"; strcat(strf, str);
					str = "Jei nespësite uþpildyti pilnos juostos spaudinëjant klaviðà ({FF0000}Juostà rodys uþkibus þuviai apaèioje{ffffff}) þuvis pabëgs!\n"; strcat(strf, str);
					str = "Uþ pagautas þuvis jûs gausite ávariai:\nUnguriai {FF9900}15{ffffff}/vnt\n"; strcat(strf, str);
					str = "Karosai{FF9900}5{ffffff}/vnt\nKarpiai {FF9900}20{ffffff}/vnt\nKarðiai {FF9900}12{ffffff}/vnt\nLydekos {FF9900}18{ffffff}/vnt\n\n"; strcat(strf, str);
					str = "Taip pat turëtum þinoti, kad pagavus {FF0000}20 {ffffff}þuvø jas turite neðti ir parduoti èia, nes daugiau nei {FF0000}20 {ffffff}nepaneði!\n"; strcat(strf, str);
					str = "Sëkmës þvejyboje!"; strcat(strf, str);
				    ShowPlayerDialog(playerid, 8652, DIALOG_STYLE_MSGBOX, "Þvejybos turgus", strf, "Gerai", "");
				}
			    case 1: ShowPlayerDialog(playerid, 8651, DIALOG_STYLE_LIST, "Þvejybos turgus","{ffffff}[>]Informacija apie þvejybà\n \n[>]Pirkti meðkeræ {FF9D00}250{ffffff}\n[>]Pirkti valà {FF9D00}80{ffffff}\n[>]Pirkti masalà {FF9D00}50{ffffff}/25vnt\n{FF0000}[>]Parduoti þuvá", "Pasirinkti", "Iðeiti");
			    case 2:
			    {
			        if(playerDB[playerid][meskere]) return SendClientMessage(playerid, RED, "* Tu jau turite nusipirkæs meðkeræ!");
					if(GetPlayerMoneyA(playerid) < 250) return SendClientMessage(playerid, RED, "* Neturi 250 meðkeriai!");
					SendClientMessage(playerid, GREEN, "* Nusipirkai meðkeræ. Þvejoti gali pradëti prie lieptuko paraðæs /zvejoti.");
					playerDB[playerid][meskere] = true;
					GivePlayerMoneyA(playerid, -250);
					ShowPlayerDialog(playerid, 8651, DIALOG_STYLE_LIST, "Þvejybos turgus","{ffffff}[>]Informacija apie þvejybà\n \n[>]Pirkti meðkeræ {FF9D00}250{ffffff}\n[>]Pirkti valà {FF9D00}80{ffffff}\n[>]Pirkti masalà {FF9D00}50{ffffff}/25vnt\n{FF0000}[>]Parduoti þuvá", "Pasirinkti", "Iðeiti");
			    }
			    case 3:
			    {
                    if(playerDB[playerid][valas]) return SendClientMessage(playerid, RED, "* Tu jau turi nusipirkæs valo!");
					if(GetPlayerMoneyA(playerid) < 80) return SendClientMessage(playerid, RED, "* Neturi 80 valui!");
					SendClientMessage(playerid, GREEN, "* Nusipirkai valo uþ 80.");
					playerDB[playerid][valas] = true;
					GivePlayerMoneyA(playerid, -80);
					ShowPlayerDialog(playerid, 8651, DIALOG_STYLE_LIST, "Þvejybos turgus","{ffffff}[>]Informacija apie þvejybà\n \n[>]Pirkti meðkeræ {FF9D00}250{ffffff}\n[>]Pirkti valà {FF9D00}80{ffffff}\n[>]Pirkti masalà {FF9D00}50{ffffff}/25vnt\n{FF0000}[>]Parduoti þuvá", "Pasirinkti", "Iðeiti");
			    }
			    case 4:
			    {
			        if(playerDB[playerid][masalas] >= 100) return SendClientMessage(playerid, RED, "* Tu jau turi pakankamai masalo! Daugiau nebepaneði!");
					if(GetPlayerMoneyA(playerid) < 80) return SendClientMessage(playerid, RED, "* Neturi 50 masalui!");
					SendClientMessage(playerid, GREEN, "* Nusipirkai 25 vnt masalo uþ 50.");
					playerDB[playerid][masalas] += 25;
					GivePlayerMoneyA(playerid, -50);
					ShowPlayerDialog(playerid, 8651, DIALOG_STYLE_LIST, "Þvejybos turgus","{ffffff}[>]Informacija apie þvejybà\n \n[>]Pirkti meðkeræ {FF9D00}250{ffffff}\n[>]Pirkti valà {FF9D00}80{ffffff}\n[>]Pirkti masalà {FF9D00}50{ffffff}/25vnt\n{FF0000}[>]Parduoti þuvá", "Pasirinkti", "Iðeiti");
			    }
			    case 5:
			    {
			        new unguriai = playerDB[playerid][ungurys];
					new karosai = playerDB[playerid][karosas];
				  	new karpiai = playerDB[playerid][karpis];
					new karsiai = playerDB[playerid][karsis];
					new lydekos = playerDB[playerid][lydeka];
					if(unguriai + karosai + karpiai + karsiai + lydekos <=0) return SendClientMessage(playerid, RED, "* Neturi ko parduoti, eik visø pirmà prigaudyk þuvø ir tada parduok!");
					new sumokes = unguriai*15 + karosai*10 + karpiai*25 + karsiai*30 + lydekos*35;
					GivePlayerMoneyA(playerid, sumokes);
					new str[80];
					format(str, sizeof(str), "{008E00}* Pardaviai visas turimas þuvis uþ ({FFCC00}%d{008E00})", sumokes);
		  			SendClientMessage(playerid, -1, str);
		  			playerDB[playerid][ungurys] = 0;
					playerDB[playerid][karosas] = 0;
				  	playerDB[playerid][karpis] = 0;
					playerDB[playerid][karsis] = 0;
					playerDB[playerid][lydeka] = 0;
			    }
			}
		}
        return 1;
    }
    if(dialogid == 8652)
    {
        if(response)
        {
            ShowPlayerDialog(playerid, 8651, DIALOG_STYLE_LIST, "Þvejybos turgus","{ffffff}[>]Informacija apie þvejybà\n \n[>]Pirkti meðkeræ {FF9D00}250{ffffff}\n[>]Pirkti valà {FF9D00}80{ffffff}\n[>]Pirkti masalà {FF9D00}2{ffffff}/vnt\n{FF0000}[>]Parduoti þuvá", "Pasirinkti", "Iðeiti");
		}
		return 1;
	}
		
//Responsas daþasvaidþio
	if(dialogid == 12345)
    {
        if(response)
        {
            switch(listitem)
            {
            	case 0:
            	{
            	    if(GetPlayerMoneyA(playerid) < 1500) return SendClientMessage(playerid,RED,"* Kad pradëtum daþasvaidá turi turëti 1500!");
					GivePlayerMoneyA(playerid, -1500);
            	    ZaidejaiPasY ++;
            	    playerDB[playerid][NuzudesPB] = 0;
					playerDB[playerid][MiresPB] = 0;
					playerDB[playerid][TaskaiPB] = 0;
					playerDB[playerid][DalyvaujaPB] = true;
					playerDB[playerid][YellowPB] = true;
					SendClientMessage(playerid, -1, "{FFCC00}* Prisijungiai á geltonøjø komandà!");
					SetPlayerPos(playerid, 1802.0533, -1801.8297, 52.4688);
					SetPlayerSkin(playerid, SkinPBY);
					ResetPlayerWeaponsEx(playerid);
					GivePlayerWeapon(playerid, 29, 500);
					GivePlayerWeapon(playerid, 24, 500);
					IjungiamPbTd(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerHealthEx(playerid, 100);
					SetPlayerArmourEx(playerid, 100);
            	}
            	case 1:
            	{
            	    if(GetPlayerMoneyA(playerid) < 1500) return SendClientMessage(playerid,RED,"* Kad pradëtum daþasvaidá turi turëti 1500!");
					GivePlayerMoneyA(playerid, -1500);
            	    ZaidejaiPasG ++;
            	    playerDB[playerid][NuzudesPB] = 0;
					playerDB[playerid][MiresPB] = 0;
					playerDB[playerid][TaskaiPB] = 0;
					playerDB[playerid][DalyvaujaPB] = true;
					playerDB[playerid][GreenPB] = true;
            		SendClientMessage(playerid, -1, "{00CC00}* Prisijungiai á þaliøjø komandà!");
            		SetPlayerPos(playerid, 1754.2775, -1748.2770, 52.4688);
					SetPlayerSkin(playerid, SkinPBG);
					ResetPlayerWeaponsEx(playerid);
					GivePlayerWeapon(playerid, 29, 500);
					GivePlayerWeapon(playerid, 24, 500);
					IjungiamPbTd(playerid);
					SetPlayerInterior(playerid, 0);
					SetPlayerHealthEx(playerid, 100);
					SetPlayerArmourEx(playerid, 100);
             	}
     		}
        }
        return 1;
    }
    if(dialogid == 12346)
    {
        if(response)
        {
            switch(listitem)
            {
            	case 0:
            	{
            	    if(playerDB[playerid][GreenPB])
            	    {
            	        ZaidejaiPasG --;
            	        playerDB[playerid][NuzudesPB] = 0;
						playerDB[playerid][MiresPB] = 0;
						playerDB[playerid][TaskaiPB] = 0;
						playerDB[playerid][DalyvaujaPB] = false;
	            		playerDB[playerid][GreenPB] = false;
						SetPlayerPos(playerid, 309.7628, -139.8774, 1004.0625);
						IsjungiamPbTd(playerid);
						ResetPlayerWeapons(playerid);
						SetPlayerSkin(playerid,playerDB[playerid][drabuziai]);
						SetPlayerInterior(playerid, 7);
						SetPlayerHealthEx(playerid, 100);
						SetPlayerArmourEx(playerid, 0);
            	    }
            	    else if(playerDB[playerid][YellowPB])
            	    {
            	        ZaidejaiPasY --;
            	        playerDB[playerid][NuzudesPB] = 0;
						playerDB[playerid][MiresPB] = 0;
						playerDB[playerid][TaskaiPB] = 0;
						playerDB[playerid][DalyvaujaPB] = false;
	            		playerDB[playerid][YellowPB] = false;
						SetPlayerPos(playerid, 309.7628, -139.8774, 1004.0625);
						IsjungiamPbTd(playerid);
						ResetPlayerWeapons(playerid);
						SetPlayerSkin(playerid,playerDB[playerid][drabuziai]);
						SetPlayerInterior(playerid, 7);
						SetPlayerHealthEx(playerid, 100);
						SetPlayerArmourEx(playerid, 0);
            	    }
				}
			}
		}
        return 1;
    }


		//Dvaldymas
	if(dialogid == 9800)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0: ShowPlayerDialog(playerid, 9801, DIALOG_STYLE_INPUT, "Direktorio ofisas", "Áraðykite þaidëjo: Vardà_Pavardæ, kurá norite pakviesti á darbà", "Rinktis", "Atgal");
	            case 1: ShowPlayerDialog(playerid, 9802, DIALOG_STYLE_INPUT, "Direktorio ofisas", "Áraðykite darbuotojo: Vardà_Pavardæ, kad iðmestumëte darbuotojà ið firmos", "Rinktis", "Atgal");
	            case 2:
	            {
	                mysql_query("SELECT Vardas,Job,Ispejimai,Rangas,Pradirbo FROM players WHERE Job > '0'");
					mysql_store_result();
					new dVardas[MAX_PLAYER_NAME], dJob, dIspejimai, dRangas, dPradirbo, x, resultline[40], str[170], fstr[3500], dStatus[20], dRangaz[50];
					while(mysql_fetch_row_format(resultline))
					{
						sscanf(resultline,"p<|>s[24]dddd",dVardas, dJob, dIspejimai, dRangas, dPradirbo);
						switch(dJob) // pagal darbo id rangai
						{
							case 1: //PD RANGAI | Vietoi sito case rasai darbo id
							{
								switch(dRangas)
								{
									case 1: dRangaz = "Pirminë grandis";
									case 2: dRangaz = "Antrinë grandis";
									case 3: dRangaz = "Vidurinë grandis";
									case 4: dRangaz = "Aukðtesnioji grandis";
									case 5: dRangaz = "Aukðèiausioji grandis";
									default: dRangaz = "Nëra";
								}
							}
							case 2: //MEDIKU RANGAI | Vietoi sito case rasai darbo id
							{
						        switch(dRangas)
								{
								    case 1: dRangaz = "Naujoko mediko";
								    case 2: dRangaz = "Patyrusio mediko";
								    case 3: dRangaz = "Daktaro";
								    default: dRangaz = "Nëra";
								}
							}
							case 3: //TAXI RANGAI | Vietoi sito case rasai darbo id
							{
							    switch(dRangas)
								{
							    	case 1: dRangaz = "Taxisto naujoko";
							    	case 2: dRangaz = "Patyrusio taxisto";
							    	case 3: dRangaz = "Transporterio";
							    	default: dRangaz = "Nëra";
								}
							}
							case 4: //Mechaniku rangai | Vietoi sito case rasai darbo id
							{
							    switch(dRangas)
								{
								    case 1: dRangaz = "Pasiuntinuko";
								    case 2: dRangaz = "Mechaniko";
								    case 3: dRangaz = "Kostë";
								    case 4: dRangaz = "Valdþia";
								    default: dRangaz = "Nëra";
								}
							}
							case 5: //Dyleriu rangai | Vietoi sito case rasai darbo id
							{
							    switch(dRangas)
								{
						    		case 1: dRangaz = "Naujoko";
						    		case 2: dRangaz = "Apsipratusio";
						    		case 3: dRangaz = "Senbûvio";
						    		case 4: dRangaz = "Profesionalaus dylerio";
						    		default: dRangaz = "Nëra";
								}
							}
							case 10: //swat rangai | Vietoi sito case rasai darbo id
							{
								switch(dRangas)
								{
								    case 1: dRangaz = "Eilinio";
								    case 2: dRangaz = "Leitenanto";
								    case 3: dRangaz = "Virðilos";
								    case 4: dRangaz = "Majoro";
								    case 5: dRangaz = "Generolo";
								    default: dRangaz = "Nëra";
								}
							}
						    case 11: //Furistø ragai | Vietoi sito case rasai darbo id
							{
							    switch(dRangas)
								{
								    case 1: dRangaz = "Naujoko fûristo";
								    case 2: dRangaz = "Iðtikimo fûristo";
								    case 3: dRangaz = "Fûristo profesionalo";
								    case 4: dRangaz = "Fûristo senbûvio";
								    default: dRangaz = "Neturintis rango";
								}
							}
							case 14:
							{
								switch(dRangas)
								{
									case 1: dRangaz = "Baikeris";
									case 2: dRangaz = "Senbuvis";
									case 3: dRangaz = "Pro.Baikeris";
									default: dRangaz = "Neturintis rango";
				    			}
							}
							case 17: //ARMIJOS rangai | Vietoi sito case rasai darbo id
							{
								switch(dRangas)
								{
								    case 1: dRangaz = "Eilinio";
								    case 2: dRangaz = "Leitenanto";
								    case 3: dRangaz = "Virðilos";
								    case 4: dRangaz = "Majoro";
								    case 5: dRangaz = "Generolo";
								    default: dRangaz = "Nëra";
								}
							}
						    case 40: //Yakuza rangai | Vietoi sito case rasai darbo id
						    {
						        switch(dRangas)
								{
								    case 1: dRangaz = "Kento";
								    case 2: dRangaz = "Turintèio paþinèiø";
								    case 3: dRangaz = "Vyresnysiojo mafijos nario";
								    case 4: dRangaz = "Mafijos senbûvio";
								    default: dRangaz = "Nëra";
								}
							}
						    case 42: //Russia rangai | Vietoi sito case rasai darbo id
						    {
						        switch(dRangas)
								{
								    case 1: dRangaz = "Kento";
								    case 2: dRangaz = "Turintèio paþinèiø";
								    case 3: dRangaz = "Vyresnysiojo mafijos nario";
								    case 4: dRangaz = "Mafijos senbûvio";
								    default: dRangaz = "Nëra";
								}
							}
					    }
						new darbas = GetJobFromFaction(playerDB[playerid][plead]);
						if(darbas == dJob)
						{
						    x++;
                            if(GetPlayeridMid(dVardas) != INVALID_PLAYER_ID) { dStatus = "prisijungæs"; } else { dStatus = "atsijunges"; }
							format(str, sizeof(str),"%d.%s\t%d/3 áspëjimai, jo rangas yra %s ðià savaitæ jis pradirbo %s minuèiø jis yra (%s)\n", x, dVardas, dIspejimai, dRangaz, konvertuoti_pinigus(dPradirbo), dStatus);
							strcat(fstr, str);
						}
					}
					ShowPlayerDialog(playerid,4571,DIALOG_STYLE_MSGBOX,"Darbuotojai",fstr,"Atgal","");
					mysql_free_result();
					}
					case 3: ShowPlayerDialog(playerid, 9803, DIALOG_STYLE_INPUT, "Direktorio ofisas", "Áraðykite praneðimà kurá norësite paskelbti", "Rinktis", "Atgal");
	            	case 4:
	            	{
	                	if(GetPelnasIDFromLeader(playerid) == -1) return 1;
						ShowPlayerDialog(playerid, PELNO_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Pelno valdymas", "{ffffff} Balansas.\n Paimti.\n Padëti.\n Iðdalinti.", "Pasirinkti", "Atgal");
	            	}
	            	case 5:
	            	{
	                	if(playerDB[playerid][plead] < 1) return SendClientMessage(playerid, RED, " Tokios komandos nëra, daugiau informacijos {FFFFFF}/komandos{FF0000}.");
						if(playerDB[playerid][plead] == 1) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Pirminë grandis\nAntrinë grandis\nVidurinë grandis\nAukðtesnioji grandis\nAukðèiausioji grandis", "Pasirinkti", "Atgal");//5
						if(playerDB[playerid][plead] == 2) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Naujokas medikas\nPatyres medikas\nDaktaras", "Pasirinkti", "Atgal");
						if(playerDB[playerid][plead] == 3) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Taxistas naujokas\nTaxistas patyres\nTransporteris", "Pasirinkti", "Atgal");
						if(playerDB[playerid][plead] == 4) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Pasiuntinukas\nMechanikas\nKostë\nValdþia", "Pasirinkti", "Atgal");
						if(playerDB[playerid][plead] == 5) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Naujokas\nApsipratæs\nSenbûvis\nProfesionalus dyleris", "Pasirinkti", "Atgal");//4
						if(playerDB[playerid][plead] == 10) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Eilinis\nLeitenantas\nVirðyla\nMajoras\nGenerolas", "Pasirinkti", "Atgal"); //5
						if(playerDB[playerid][plead] == 11) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Naujokas fûristas\nIðtikimas fûristas\nFûristas profesionalas\nFûristas senbûvis", "Pasirinkti", "Atgal");//4
						if(playerDB[playerid][plead] == 6) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Kentas\nVyresnysis mafijos narys\nMafijos senbûvis", "Pasirinkti", "Atgal");//4
						if(playerDB[playerid][plead] == 8) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Kentas\nVyresnysis mafijos narys\nMafijos senbûvis", "Pasirinkti", "Atgal");//4
						if(playerDB[playerid][plead] == 14) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Kentas\nVyresnysis mafijos narys\nMafijos senbûvis", "Pasirinkti", "Atgal");//4
						if(playerDB[playerid][plead] == 17) return ShowPlayerDialog(playerid, 7845, DIALOG_STYLE_LIST, "{ffffff}Rangas", "Eilinis\nLeitenantas\nVirðyla\nMajoras\nGenerolas", "Pasirinkti", "Atgal"); //5
					}
	            	case 6: ShowPlayerDialog(playerid, 7851, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Áraðyk darbuotojo Vardà_Pavardà kad paþemintumëte vienu rangu darbuotojà!:", "Paþeminti", "Atgal");
					case 7: ShowPlayerDialog(playerid, 9804, DIALOG_STYLE_INPUT, "{ffffff}Áspëjimai", "Áraðykite darbuotojo vardà kurá norësite áspëti:", "Áspëti", "Atgal");
					case 8:
					{
					    new QQ[200];
					    format(QQ,sizeof(QQ),"SELECT * FROM players WHERE pavdrk = '%d'",playerDB[playerid][plead]);
					    mysql_query(QQ);
						mysql_store_result();
						new pav = mysql_num_rows();
						if (pav < 1) {
						    ShowPlayerDialog(playerid, 10281, DIALOG_STYLE_INPUT, "Pavaduotojo paskyrimas", "Irasykite zaideja kuri norite paskirti savo pavaduotoju", "Toliau", "Atsaukti");
						} else {
						    SendClientMessage(playerid,COLOR_RED,"* Tu turi daugiau nei 1 pavaduotoja");
						}
					}
					case 9:
					{
						ShowPlayerDialog(playerid, 10282, DIALOG_STYLE_INPUT, "Pavaduotojo nusalinimas", "Irasykite pavaduotojo varda kuri norite nusalinti", "Toliau", "Atsaukti");
					}
					case 10:
					{
								new str[3000];
								strcat(str, "/priimt | /ismesti darbuotja\n");//TIK SU TEISE PAVADUOTOJAS GALI
								strcat(str, "/darbuotojai - parodo (visø) darbuotojø sàraðà.\n");//DEFAULT FOR PAV.
								strcat(str, "/d [tekstas] - raðyti visiems\n");//TIK SU TEISE PAVADUOTOJAS GALI
								strcat(str, "/dispeti - áspëti darbuotojà, 3 áspëjimai iðmetamas lauk ið darbo\n");//TIK SU TEISE PAVADUOTOJAS GALI
								strcat(str, "/ismestidarbuotojaoff - Iðmesti atsijungusá darbuotojà\n");//TIK SU TEISE PAVADUOTOJAS GALI
								strcat(str, "/nispejima - Nuimti áspëjimà\n");//TIK SU TEISE PAVADUOTOJAS GALI
								strcat(str, "/pelnas - Perþiûrëti firmos pelna\n");//TIK SU TEISE PAVADUOTOJAS GALI
								strcat(str, "/dzinute [þinutë] - þinutë bus matoma paraðius /dzinute\n");//DEFAULT FOR PAV
								strcat(str, "/rangas - Padidinti darbuotojo rangà\n");//TIK SU TEISE PAVADUOTOJAS GALI
								strcat(str, "/nrangas - Paþeminti darbuotojà rangà\n");//TIK SU TEISE PAVADUOTOJAS GALI
						        strcat(str, "/uzdetipav - Uþdësite pavaduotojà.\n");
						        strcat(str, "/nuimtipav - Nuimsite pavaduotojà.\n");
						        strcat(str, "/stebeti - Stebëti darbuotojà\n");
						        strcat(str, "/dcarspawn - perkrauti darbiná transportà.");
						        if(playerDB[playerid][plead] == 11)
						        {
						            strcat(str, "\n/rrpriekabas - Atstatys fûrø priekabas");
						        }
						        if(playerDB[playerid][plead] == 5)
						        {
						            strcat(str, "\n/dylstat - Paþiûrësite dylerio status");
						        }
								ShowPlayerDialog(playerid, DIALOG_NONE, DIALOG_STYLE_MSGBOX, "{AFAFAF}Direktoriø komandos", str, "Gerai", "");
  					}
				}
			}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 4571)
	{
	    if(response)
	    {
	        ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotojà", "Rinktis", "Iðeiti");
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 10281)
	{
	    if(!response) return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotojà", "Rinktis", "Iðeiti");
		if(response)
		{
			if(IsNumeric(inputtext) || !strlen(inputtext)) return SendClientMessage(playerid,COLOR_RED,"* Þaidejo su tokiu vardu nera");
   			new id = GetPlayeridMid(inputtext), msg[125];
			if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_RED,"* Þaidejo su tokiu vardu nera");
	 		if(playerDB[id][plead] > 0 && id != playerid) return SendClientMessage(playerid,COLOR_RED,"* Þaidejas yra kitos firmos direktorius");
	 		if(playerDB[id][pavdrk] > 0 && id != playerid) return SendClientMessage(playerid,COLOR_RED,"* Þaidejas yra kitos firmos pavaduotojas");
			if(playerDB[id][pavdrk] == playerDB[playerid][plead]) return SendClientMessage(playerid,COLOR_RED,"* Zaidejas jau yra jusu pavaduotojas");
			playerDB[id][pavdrk] = playerDB[playerid][plead];

			if(playerDB[playerid][plead] == LEAD_FARAI) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Policijos pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_MEDIKAI) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Medikø pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_Mechanikas) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Mechanikø pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_TAXI ) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Taxi pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_Gdyleriai ) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Dyleriø pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_Arifa ) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Russian mafijos pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_Gstreet) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Yakuza mafijos pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_SWAT) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas SWAT pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_FUROS ) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Fûristø pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_RADISTAS) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Radistø pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_BAIKERIAI) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Baikeriø pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_KLUBAS) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas  klubo  Costello  pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_KLUBASS) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas klubo  -Patriotai-  pavaduotoju!");
			else if(playerDB[playerid][plead] == LEAD_SPD) SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas ARMIJOS pavaduotoju!");
			else SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote paskirtas Taxi pavaduotoju!");

			format(msg, sizeof(msg), "* Paskyrëte %s savo firmos pavaduotoju", GetPlayerNameEx(id));
			SendClientMessage(playerid,GREEN,msg);

			new query[250];
			new year,month,day;
			getdate(year, month, day);
   			format(query, sizeof(query), "UPDATE `players` SET `pavdrk` = '%d', `NuoKadaDyrikas` = '%d/%s%d/%s%d' WHERE Vardas = '%s'",playerDB[playerid][pavdrk], day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year, GetPlayerNameEx(id));
			mysql_query(query);
		}
		return 1;
	}
	if(dialogid == 10282)
	{
	    //if(!response) return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotojà", "Rinktis", "Iðeiti");
		if(response)
		{
			if(IsNumeric(inputtext) || !strlen(inputtext)) return SendClientMessage(playerid,COLOR_RED,"* Þaidejo su tokiu vardu nera");
   			new id = GetPlayeridMid(inputtext), msg[125];
	 		if(playerDB[id][plead] > 0 && id != playerid) return SendClientMessage(playerid,COLOR_RED,"* Þaidejas yra kitos firmos direktorius");
	 		if(playerDB[id][pavdrk] > 0 && id != playerid) return SendClientMessage(playerid,COLOR_RED,"* Þaidejas yra kitos firmos pavaduotojas");
			if(playerDB[id][pavdrk] != playerDB[playerid][plead]) return SendClientMessage(playerid,COLOR_RED,"* Þaidejas nera jusu firmos pavaduotojas");

			if(id == INVALID_PLAYER_ID) {
			    new uQuerry[250], arDarbuotojas, darbas = playerDB[playerid][plead];
			    if(IsNumeric(inputtext) || !strlen(inputtext)) return SendClientMessage(playerid,COLOR_RED,"* Þaidejo su tokiu vardu nera");
				format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", inputtext);
				mysql_query(uQuerry);
				mysql_store_result();
				mysql_retrieve_row();
				if(mysql_num_rows())
				{
					mysql_fetch_field_row(uQuerry, "pavdrk"); arDarbuotojas = strval(uQuerry);
					if(darbas != arDarbuotojas)
					{
						SendClientMessage(playerid, RED, "* Þaidëjas nëra jûsø pavaduotojas");
					}
					else
					{
	    				format(uQuerry, 250, "UPDATE `players` SET `pavdrk` = '0' WHERE `Vardas` = '%s'", inputtext);
						mysql_query(uQuerry);
						SendClientMessage(playerid, BLUE, "* Pavaduotojas buvo nuðalintas");
					}
				}
				else
				{
					SendClientMessage(playerid, RED, "* Þaidëjas nëra jûsø pavaduotojas");
				}
			}
			else
			{
				if(playerDB[playerid][plead] == LEAD_FARAI) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Policijos pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_MEDIKAI) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Mediku pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_Mechanikas) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Mechanikø pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_TAXI ) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Taxi pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_Gdyleriai ) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Dyleriø pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_Arifa ) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Russian Mafijos pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_Gstreet) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Yakuza Mafijos pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_SWAT) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo SWAT pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_FUROS ) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Fûristø pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_RADISTAS) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Radistø pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_BAIKERIAI) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Baikeriø pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_KLUBAS) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo   klubo  Costello  pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_KLUBASS) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo  klubo  -Patriotai-  pavaduotojo posto!");
				else if(playerDB[playerid][plead] == LEAD_SPD) SendClientMessage(id,RED,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo ARMIJOS pavaduotojo posto!");
				else SendClientMessage(id,GREEN,"* Direktoriaus pageidavimu jûs buvote nuðalintas nuo Taxi pavaduotojo posto!");

				playerDB[id][pavdrk] = 0;
			}

			format(msg, sizeof(msg), "* Nuðalinote %s, jis nebera jûsø pavaduotojas", GetPlayerNameEx(id));
			SendClientMessage(playerid,GREEN,msg);
		}
		return 1;
	}
	if(dialogid == 9801)
	{
	    if(!response) return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotojà", "Rinktis", "Iðeiti");
		if(response)
		{
			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, 9801, DIALOG_STYLE_INPUT, "Direktorio ofisas", "Þaidëjo su tokiu vardu nëra!\nÁraðykite þaidëjo: Vardà_Pavardæ, kurá norite pakviesti á darbà", "Rinktis", "Atgal");
   			new id = GetPlayeridMid(inputtext), msg[125];
			if(id == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, 9801, DIALOG_STYLE_INPUT, "Direktorio ofisas", "Þaidëjo su tokiu vardu nëra!\nÁraðykite þaidëjo: Vardà_Pavardæ, kurá norite pakviesti á darbà", "Rinktis", "Atgal");
	 		if(playerDB[id][plead] > 0 && id != playerid) return KlaidosZinute(playerid,"Þaidëjas yra kitos firmos direktorius.");
			if(playerDB[id][leanvited][playerDB[playerid][plead]-1] || playerDB[id][specialybe] == GetJobFromFaction(playerDB[playerid][plead])) return KlaidosZinute(playerid,"Þaidëjas jau priimtas.");
			if(playerDB[playerid][plead] == LEAD_FARAI) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti apskirties policijos pareigûnu. Jei norite ástoti, atvykite á miesteliø policijos nuovada.");
			else if(playerDB[playerid][plead] == LEAD_MEDIKAI) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti apskirties mediku. Jei norite ástoti, atvykite á ligoninës darbuotojø sektoriu.");
			else if(playerDB[playerid][plead] == LEAD_Mechanikas) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti apskirties mechaniku. Jei norite ástoti, atvykite pas mus.");
			else if(playerDB[playerid][plead] == LEAD_TAXI ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti Taxi. Jei nori atvyk á taxi firma.");
			else if(playerDB[playerid][plead] == LEAD_Gdyleriai ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti Dyleriu komandoje. Jei nori atvyk á dyleriø bazæ.");
			else if(playerDB[playerid][plead] == LEAD_Arifa ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Russian mafijà. Praðome prisitatyti á Russian bazæ.");
			else if(playerDB[playerid][plead] == LEAD_Gstreet ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Yakuza mafijà. Praðome prisitatyti á Yakuza bazæ.");
			else if(playerDB[playerid][plead] == LEAD_SWAT) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á SWAT pajëgas. Praðome prisitatyti á SWAT bazæ.");
			else if(playerDB[playerid][plead] == LEAD_FUROS ) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á Fûristus. Praðome prisitatyti á fûristø bazæ.");
			else if(playerDB[playerid][plead] == LEAD_RADISTAS) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á  Radistus. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra bazë.");
			else if(playerDB[playerid][plead] == LEAD_BAIKERIAI) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á  Baikerius. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra bazë.");
			else if(playerDB[playerid][plead] == LEAD_KLUBAS) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á   Costello  klubà. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra klubas.");
			else if(playerDB[playerid][plead] == LEAD_KLUBASS) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á   -Patriotai-  klubà. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra klubas.");
			else if(playerDB[playerid][plead] == LEAD_SPD) SendClientMessage(id,GREEN,"* Jûs kvieèiamas ástoti á ARMIJA. Praðome susisiekti su direktoriumi kad suþinotumëte kur yra darbo bazë.");
			else SendClientMessage(id,GREEN,"* Jûs kvieèiamas dirbti Taxi. Jei nori atvyk á taxi firma.");
			playerDB[id][leanvited][playerDB[playerid][plead] - 1] = true;
			format(msg, sizeof(msg), "Pakvietëte %s ástoti á jûsø firma.", GetPlayerNameEx(id));
			ServerioZinute(playerid, msg);
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 9802)
	{
	    if(!response) return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotojà", "Rinktis", "Iðeiti");
		if(response)
		{
			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, 9802, DIALOG_STYLE_INPUT, "Direktorio ofisas", "Þaidëjo su tokiu vardu nëra!\nÁraðykite darbuotojo: Vardà_Pavardæ, kad iðmestumëte darbuotojà ið firmos", "Rinktis", "Atgal");
   			new id = GetPlayeridMid(inputtext), msg[125];
			if(id != INVALID_PLAYER_ID)
			{
				new darbas = GetJobFromFaction(playerDB[playerid][plead]);
				if(playerDB[id][specialybe]!= darbas) return KlaidosZinute(playerid, "Þaidëjas neádarbintas jûsø firmoje.");
				if(playerDB[playerid][plead] == LEAD_FARAI) KlaidosZinute(id,"Apskrities policijos generalinis direktorius jus iðmestë ið policijos.");
				else if(playerDB[playerid][plead] == LEAD_MEDIKAI) KlaidosZinute(id,"Ligoninës direktorius iðmestë jus ið darbo");
				else if(playerDB[playerid][plead] == LEAD_Mechanikas) KlaidosZinute(id,"Mechanikø direktorius iðmetë jus ið darbo.");
				else if(playerDB[playerid][plead] == LEAD_TAXI) KlaidosZinute(id,"Jûs iðmestas ið taxi komandos!");
				else if(playerDB[playerid][plead] == LEAD_Gdyleriai) KlaidosZinute(id,"Jûs iðmestas ið dyleriø bendruomenës!");
				else if(playerDB[playerid][plead] == LEAD_Arifa) KlaidosZinute(id,"Jûs iðmestas ið Russian mafijos!");
				else if(playerDB[playerid][plead] == LEAD_Gstreet) KlaidosZinute(id,"Jûs iðmestas ið Yakuza mafijos!");
				else if(playerDB[playerid][plead] == LEAD_SWAT) KlaidosZinute(id,"Jûs iðmestas ið SWAT pajëgø!");
				else if(playerDB[playerid][plead] == LEAD_FUROS ) KlaidosZinute(id,"Fûristø direktorius iðmetë jus ið darbo.");
				else if(playerDB[playerid][plead] == LEAD_RADISTAS) KlaidosZinute(id,"* Radistø direktorius iðmetë jus ið darbo.");
				else if(playerDB[playerid][plead] == LEAD_BAIKERIAI) KlaidosZinute(id,"* Baikeriø direktorius iðmetë jus ið darbo.");
				else if(playerDB[playerid][plead] == LEAD_KLUBAS) KlaidosZinute(id,"* Klubo  Costello  direktorius iðmetë jus ið klubo.");
				else if(playerDB[playerid][plead] == LEAD_KLUBASS) KlaidosZinute(id,"* Klubo  -Patriotai-  direktorius iðmetë jus ið klubo.");
				else if(playerDB[playerid][plead] == LEAD_SPD) KlaidosZinute(id,"* Jûs iðmestas ið Armijos.");

				else KlaidosZinute(id,"Jûs iðmestas ið taxi firmos. Tai direktoriaus sprendimas.");
				playerDB[id][leanvited][playerDB[playerid][plead] - 1] = false;
				format(msg, sizeof(msg), "Iðmetëte %s ið savo firmos.", GetPlayerNameEx(id));
				KlaidosZinute(playerid, msg);
				if(playerDB[id][uniformd]) SetPlayerSkin(id, playerDB[id][drabuziai]);
				playerDB[id][specialybe] = 0;
				playerDB[id][uniformd] = false;
				playerDB[id][uniforma] = -1;
				playerDB[id][rangas] = 0;
				playerDB[id][pradirbo] = 0;
				playerDB[id][ispejimai] = 0;
			}
			else
			{
			    new uQuerry[250], arDarbuotojas, darbas = GetJobFromFaction(playerDB[playerid][plead]);
			    if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, 9802, DIALOG_STYLE_INPUT, "Direktorio ofisas", "Þaidëjo su tokiu vardu nëra!\nÁraðykite darbuotojo: Vardà_Pavardæ, kad iðmestumëte darbuotojà ið firmos", "Rinktis", "Atgal");
				format(uQuerry, 150, "SELECT * FROM `players` WHERE `Vardas` = '%s'", inputtext);
				mysql_query(uQuerry);
				mysql_store_result();
				mysql_retrieve_row();
				if(mysql_num_rows())
				{
					mysql_fetch_field_row(uQuerry, "Job"); arDarbuotojas = strval(uQuerry);
					if(darbas != arDarbuotojas)
					{
						KlaidosZinute(playerid, "Þaidëjas neádarbintas jûsø firmoje.");
					}
					else
					{
	    				format(uQuerry, 250, "UPDATE `players` SET `Job` = '0', `Rangas` = '0', `Pradirbo` = '0', `Ispejimai` = '0', `Uniforma` = '-1' WHERE `Vardas` = '%s'", inputtext);
						mysql_query(uQuerry);
						SendClientMessage(playerid, BLUE, "* Þaidëjas buvo iðmestas ið darbo.");
					}
				}
				else
				{
					SendClientMessage(playerid, RED, "* Tokio vartotojo duomenø bazëje nëra.");
				}
			}

		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 9803)
	{
	    if(!response) return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotojà", "Rinktis", "Iðeiti");
		if(response)
		{
   			if(CheckMute(playerid)) return 1;
			new dyrikz[30],  msg[200];
			if(playerDB[playerid][ParaseDyrikas] > gettime()) return SendClientMessage(playerid, RED, "* Raðyti per direktoriø chatà galite tik kas 30 sekundþiø.");
			if(playerDB[playerid][plead] == 1) dyrikz = "Policijos";
			else if(playerDB[playerid][plead] == 2) dyrikz = "Medikø";
			else if(playerDB[playerid][plead] == 3) dyrikz = "Taxi";
			else if(playerDB[playerid][plead] == 4) dyrikz = "Mechanikø";
			else if(playerDB[playerid][plead] == 5) dyrikz = "Dyleriu";
			else if(playerDB[playerid][plead] == 6) dyrikz = "Russian mafijos";
			else if(playerDB[playerid][plead] == 8) dyrikz = "Yakuza mafijos";
			else if(playerDB[playerid][plead] == 10) dyrikz = "SWAT";
			else if(playerDB[playerid][plead] == 11) dyrikz = "Fûristø";
			else if(playerDB[playerid][plead] == 13) dyrikz = "Radistø";
			else if(playerDB[playerid][plead] == 17) dyrikz = "ARMIJOS";
			else if(playerDB[playerid][plead] == 15) dyrikz = "Klubo  Costello ";
			else if(playerDB[playerid][plead] == 16) dyrikz = "Klubo  -Patriotai- ";
			format(msg, sizeof(msg), "* %s direktorius %s: %s", dyrikz, GetPlayerNameEx(playerid), inputtext);
			SendClientMessageToAll(0x09AFFFFF, msg);
			playerDB[playerid][ParaseDyrikas] = gettime() + 30;
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 9804)
	{
	    if(!response) return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotjà", "Rinktis", "Iðeiti");
		if(response)
		{
   			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, 9804, DIALOG_STYLE_INPUT, "Direktorio ofisas", "Þaidëjo su tokiu vardu nëra!\nÁraðykite darbuotojo: Vardà_Pavardæ, kad áspëtumëte darbuotojà", "Rinktis", "Atgal");
   			new id = GetPlayeridMid(inputtext), msg[125];
			if(id == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, 9804, DIALOG_STYLE_INPUT, "Direktorio ofisas", "Þaidëjo su tokiu vardu nëra!\nÁraðykite darbuotojo: Vardà_Pavardæ, kad áspëtumëte darbuotojà", "Rinktis", "Atgal");
			new darbas = GetJobFromFaction(playerDB[playerid][plead]);
			if(playerDB[id][specialybe]!= darbas) return KlaidosZinute(playerid, "* Þaidëjas neádarbintas jûsø firmoje.");
			playerDB[id][ispejimai] ++;
		 	format(msg, sizeof(msg), "* Davëte áspëjimà darbuotojui %s ir jis jau turi %d/3 áspëjimø.", GetPlayerNameEx(id), playerDB[id][ispejimai]);
			SendClientMessage(playerid, GREEN, msg);
			format(msg, sizeof(msg), "* Direktorius %s jus áspëjo. Dabar jûs jau turite %d/3 áspëjimø.", GetPlayerNameEx(playerid), playerDB[id][ispejimai]);
			SendClientMessage(id, GREEN, msg);
			if(playerDB[id][ispejimai] > 2)
			{
				if(playerDB[id][uniformd]) SetPlayerSkin(id, playerDB[id][drabuziai]);
				playerDB[id][specialybe] = 0;
				playerDB[id][uniformd] = false;
				playerDB[id][uniforma] = -1;
				playerDB[id][ispejimai] = 0;
				for(new faction=0; faction < 15; faction++) playerDB[playerid][leanvited][faction]=false;
				format(msg, sizeof(msg), "* Þaidëjas %s iðmestas ið jûsø firmos nes surinko 3/3 áspëjimus", GetPlayerNameEx(id));
				SendClientMessage(playerid, GREEN, msg);
				format(msg, sizeof(msg), "* Direktorius %s jus iðmetë ið savo firmos nes surinkot 3/3 áspëjimus.", GetPlayerNameEx(playerid));
				SendClientMessage(id, GREEN, msg);
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 9001)
	{
	    new pID = playerDB[playerid][ChoosedPlayer];
	    new pKaina = playerDB[playerid][sGyvybiuKaina];
	    if(!response)
		{
		 	SendClientMessage(playerid, RED, "* Atsisakëte pirkti pagydymà!");
		  	SendClientMessage(pID, RED, "* Þaidëjas atsisakë pirkti pagydymà.");
		}
		else if(response)
		{
			SendClientMessage(playerid, YELLOW, "* Jûs buvote pagydytas.");
			SendClientMessage(pID, YELLOW, "* Þaidëjas buvo pagydytas.");
			GivePlayerMoneyA(pID, pKaina);
			GivePlayerMoneyA(playerid, -pKaina);
			SetPlayerHealthEx(playerid, 100);
		}
		return 1;
	}
	
	if(dialogid == 9002)
	{
	    new pID = playerDB[playerid][ChoosedPlayer];
	    new pKaina = playerDB[playerid][sArmoroKaina];
	    if(!response)
		{
		 	SendClientMessage(playerid, RED, "* Atsisakëte pirkti ðarvus!");
		  	SendClientMessage(pID, RED, "* Þaidëjas atsisakë pirkti ðarvus.");
		}
		else if(response)
		{
			SendClientMessage(playerid, YELLOW, "* Medikas jums uþdëjo ðarvus.");
			SendClientMessage(pID, YELLOW, "* Þaidëjas uþsidëjo ðarvus.");
			GivePlayerMoneyA(pID, pKaina);
			GivePlayerMoneyA(playerid, -pKaina);
			SetPlayerArmourEx(playerid, 100);
		}
		return 1;
	}
//------------------------------------------------------------------------------
	//Telefono dialogai
	if(dialogid == 5720)
	{
		if(response)
	 	{
	  		switch(listitem)
	    	{
	     		case 0..3:
	  			{
	    			TelefonValdymDialog(playerid);
	       		}
	         	case 4:
	          	{
	    			if(playerDB[playerid][telefonostat] == 0)
					{
						playerDB[playerid][telefonostat]=1;
						SendClientMessage(playerid,GREEN,"* Ájungëte telefonà!");
						TelefonValdymDialog(playerid);
					}
					else
					{
						playerDB[playerid][telefonostat] = 0;
						SendClientMessage(playerid,RED, "* Iðjungëte telefonà.");
						PlayerPlaySound(playerid, 1062+1, 0, 0, 0);
						playerDB[playerid][skambutis] = -1;
						playerDB[playerDB[playerid][rid][5]][skambutis]=-1;
						TelefonValdymDialog(playerid);
					}
				}
	 			case 6:
	 			{
					new msg[70];
					format(msg, sizeof(msg), "* Jûsø sàskaitoje dabar yra %s", konvertuoti_pinigus(playerDB[playerid][mobsas]));
					SendClientMessage(playerid, GREEN, msg);
					TelefonValdymDialog(playerid);
	  			}
				case 7:
	 			{
					ShowPlayerDialog(playerid, 5721, DIALOG_STYLE_MSGBOX, "{ffffff}Telefonas", "{ffffff}/sms [Vardas_Pavardë/ID] [Tekstas] - Nusiûs þinutæ þaidëjui.\n/skamb [Vardas_Pavardë/ID] - Paskambinsi þaidëjui.\n/ans - Atsiliepti skambuti.\n/bai - Baigti pokalbi.\n/den - Atmesti skambuti.\n/papildyti - Papildyti sàskaita(Reikia turëti papildymà.)","Atgal", "");
	  			}
			}
		}
	 	return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 5721)
	{
		if(response)
		{
			TelefonValdymDialog(playerid);
		}
	 	return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 5722)
	{
		if(response)
		{
			switch(listitem)
		    {
				case 0:
        		{
					if(GetPlayerMoneyA(playerid) < 90) return SendClientMessage(playerid,RED,"* Neturi 90 fotoparatui.");
					ApplyAnimation(playerid,"ped","phone_out",3.0,0,0,0,0,0);
					GivePlayerWeaponEx(playerid,43,100);
					GivePlayerMoneyA(playerid, -90);
 					SendClientMessage(playerid,RED," Ásigyjote foto aparatà.");
				 	ShowPlayerDialog(playerid,5722,DIALOG_STYLE_LIST,"El. Parduotuvë","Fotoparatas 90","Pirkti","Iðeiti");
					 	
				}
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//Telefono pirkimas
	if(dialogid == 5724)
	{
		if(response)
		{
			switch(listitem)
			{
		            case 0:
        			{
        			    if(playerDB[playerid][telefonas]) return SendClientMessage(playerid,RED,"* Jûs jau turite telefonà.");
		            	if(GetPlayerMoneyA(playerid) < 200) return SendClientMessage(playerid,RED,"* Kad nusipirktumëte ðità telefonà jums reikia turëti bent {FF8C00}200");
		            	ApplyAnimation(playerid,"ped","phone_out",3.0,0,0,0,0,0);
						playerDB[playerid][telefonas]=1;
						playerDB[playerid][telefonostat]=0;
						playerDB[playerid][KoksTelefonas]=1;
						GivePlayerMoneyA(playerid, -200);
					 	SendClientMessage(playerid,RED," Ásigyjote telefonà. Visas komandas galite rasti paraðæ: {FF8C00}/tlf");
		            }
		            case 1:
        			{
        			    if(playerDB[playerid][telefonas]) return SendClientMessage(playerid,RED,"* Jûs jau turite telefonà.");
		            	if(GetPlayerMoneyA(playerid) < 400) return SendClientMessage(playerid,RED,"* Kad nusipirktumëte ðità telefonà jums reikia turëti bent {FF8C00}400");
		            	ApplyAnimation(playerid,"ped","phone_out",3.0,0,0,0,0,0);
						playerDB[playerid][telefonas]=1;
						playerDB[playerid][telefonostat]=0;
						playerDB[playerid][KoksTelefonas]=2;
						GivePlayerMoneyA(playerid, -400);
       					SendClientMessage(playerid,RED," Ásigyjote telefonà. Visas komandas galite rasti paraðæ: {FF8C00}/tlf");
		            }
		            case 2:
        			{
        			    if(playerDB[playerid][telefonas]) return SendClientMessage(playerid,RED,"* Jûs jau turite telefonà.");
		            	if(GetPlayerMoneyA(playerid) < 800) return SendClientMessage(playerid,RED,"* Kad nusipirktumëte ðità telefonà jums reikia turëti bent {FF8C00}800");
		            	ApplyAnimation(playerid,"ped","phone_out",3.0,0,0,0,0,0);
						playerDB[playerid][telefonas]=1;
						playerDB[playerid][telefonostat]=0;
						playerDB[playerid][KoksTelefonas]=3;
						GivePlayerMoneyA(playerid, -800);
       					SendClientMessage(playerid,RED," Ásigyjote telefonà. Visas komandas galite rasti paraðæ: {FF8C00}/tlf");
		            }
		            case 3:
        			{
        			    if(playerDB[playerid][telefonas]) return SendClientMessage(playerid,RED,"* Jûs jau turite telefonà.");
		            	if(GetPlayerMoneyA(playerid) < 1500) return SendClientMessage(playerid,RED,"* Kad nusipirktumëte ðità telefonà jums reikia turëti bent {FF8C00}1500");
		            	ApplyAnimation(playerid,"ped","phone_out",3.0,0,0,0,0,0);
						playerDB[playerid][telefonas]=1;
						playerDB[playerid][telefonostat]=0;
						playerDB[playerid][KoksTelefonas]=4;
						GivePlayerMoneyA(playerid, -1500);
       					SendClientMessage(playerid,RED," Ásigyjote telefonà. Visas komandas galite rasti paraðæ: {FF8C00}/tlf");
		            }
		            case 4:
        			{
        			    if(playerDB[playerid][telefonas]) return SendClientMessage(playerid,RED,"* Jûs jau turite telefonà.");
		            	if(GetPlayerMoneyA(playerid) < 3500) return SendClientMessage(playerid,RED,"* Kad nusipirktumëte ðità telefonà jums reikia turëti bent {FF8C00}3500");
		            	ApplyAnimation(playerid,"ped","phone_out",3.0,0,0,0,0,0);
						playerDB[playerid][telefonas]=1;
						playerDB[playerid][telefonostat]=0;
						playerDB[playerid][KoksTelefonas]=5;
						GivePlayerMoneyA(playerid, -3500);
       					SendClientMessage(playerid,RED," Ásigyjote telefonà. Visas komandas galite rasti paraðæ: {FF8C00}/tlf");
					}
					case 5:
        			{
        			    ShowPlayerDialog(playerid,5724,DIALOG_STYLE_LIST,"Telefonai","{FFFFFF}Siemens 200\nNokia 400\nSonyEriccson 800\nSamsung 1500\nIphone 3500\n \nParduoti turimà telefonà","Pasirinkti","Iðeiti");
					}
					case 6:
        			{
        			    if(!playerDB[playerid][telefonas]) return SendClientMessage(playerid,RED,"* Jûs neturite telefono pardavimui!");
						if(playerDB[playerid][KoksTelefonas] == 1) GivePlayerMoneyA(playerid, 100);
						else if(playerDB[playerid][KoksTelefonas] == 2) GivePlayerMoneyA(playerid, 200);
						else if(playerDB[playerid][KoksTelefonas] == 3) GivePlayerMoneyA(playerid, 400);
						else if(playerDB[playerid][KoksTelefonas] == 4) GivePlayerMoneyA(playerid, 750);
						else if(playerDB[playerid][KoksTelefonas] == 5) GivePlayerMoneyA(playerid, 1250);
						SendClientMessage(playerid,GREEN,"* Pardaviai telefonà uþ pusæ kainos kiek jis vertas");
						playerDB[playerid][mobsas]=0;
						playerDB[playerid][telefonas]=0;
						playerDB[playerid][telefonostat]=0;
						playerDB[playerid][KoksTelefonas]=0;
						playerDB[playerid][skambutis] = -1;
						playerDB[playerDB[playerid][rid][5]][skambutis]=-1;
					}
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//Paslaugos dar istaisyti
	if(dialogid == 7774)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
                    PirmasKredituDialogas(playerid);
	            }
	            case 1:
	            {
					PirmasKredituDialogas(playerid);
	            }
	            case 2:
	            {
					new strf[2500], str[200], Idas;
					format(str, 90, "SELECT * FROM `players` WHERE `Vardas` = '%s'", GetPlayerNameEx(playerid));
					mysql_query(str);
					mysql_store_result();
					mysql_retrieve_row();
					if(mysql_num_rows()) { mysql_fetch_field_row(str, "ID"); Idas = strval(str); }
					mysql_free_result();
					str = "\t\t\t\t\t{FFFF00}Kreditø uþsakymas:\n\n\n"; strcat(strf, str);
					str = "{FFFFFF}Raktaþodis\t\tKaina\t\tNumeris\tGaunamø kreditø kiekis\n\n"; strcat(strf, str);
					format(str, 115, "{FFCC00}%s  {ffffff}%d\t\t{00CC00}1.00\t\t{FFCC00}%d\t\t{FF0000}1\n", Raktazodis, Idas,SmsNumeris); strcat(strf, str);
					format(str, 115, "{FFCC00}%s2  {ffffff}%d\t\t{00CC00}2.00\t\t{FFCC00}%d\t\t{FF0000}2\n", Raktazodis, Idas, SmsNumeris); strcat(strf, str);
					format(str, 115, "{FFCC00}%s3  {ffffff}%d\t\t{00CC00}3.00\t\t{FFCC00}%d\t\t{FF0000}3\n", Raktazodis, Idas, SmsNumeris); strcat(strf, str);
					format(str, 115, "{FFCC00}%s4  {ffffff}%d\t\t{00CC00}4.00\t\t{FFCC00}%d\t\t{FF0000}4\n", Raktazodis, Idas, SmsNumeris); strcat(strf, str);
					format(str, 115, "{FFCC00}%s10  {ffffff}%d\t\t{00CC00}10.00\t\t{FFCC00}%d\t\t{FF0000}10\n", Raktazodis, Idas, SmsNumeris); strcat(strf, str);
					format(str, 115, "{FFCC00}%s25  {ffffff}%d\t\t{00CC00}25.00\t\t{FFCC00}%d\t\t{FF0000}25\n", Raktazodis, Idas, SmsNumeris); strcat(strf, str);
					format(str, 115, "{FFCC00}%s30  {ffffff}%d\t\t{00CC00}30.00\t\t{FFCC00}%d\t\t{FF0000}30\n\n\n", Raktazodis, Idas, SmsNumeris); strcat(strf, str);
					str = "{ADA8AA}Kreditus gausite iðkarto iðsiuntæ þinutæ.\n"; strcat(strf, str);
					format(str, 115, "{ADA8AA}Þinutës pavyzdys: {00CC00}TEST12 %d\n", Idas); strcat(strf, str);
					format(str, 115, "{FF0000}%d {ADA8AA}tai jûsø unikalus ID, jis raðomas prie raktaþodþio\n\n", Idas); strcat(strf, str);
					str = "{ADA8AA}Kreditus galite naudoti paraðæ {00CC00}/paslaugos > Pirkti serverio paslaugos > Norima paslauga\n\n"; strcat(strf, str);
					str = "{FF0000}P.S TAI NE ID KURIS RAÐOMAS PER TAB! PRIE RAKTAÞODÞIO IÐKARTO RAÐOMAS JÛSØ ID KURIS SKIRTAS JUMS\n"; strcat(strf, str);
					ShowPlayerDialog(playerid, 7775, DIALOG_STYLE_MSGBOX, "{ffffff}Kreditø uþsakymas", strf, "Aiðku", "");
	            }
	            case 3:
	            {
				   	PirkimuSarasasUzKreditus(playerid);
	            }
			}
		}
		return 1;
	}
	//------------------------------------------------------------------------------
	if(dialogid == 7775)
	{
		if(response)
		{
			PirmasKredituDialogas(playerid);
		}
	 	return 1;
	}
	//------------------------------------------------------------------------------
	if(dialogid == 7776)
	{

	    	if(!response) return PirmasKredituDialogas(playerid);
		    if(response)
		    {
		        switch(listitem)
		        {
		            case 0:
		            {
			            ShowPlayerDialog(playerid, 7777, DIALOG_STYLE_MSGBOX, "{ffffff}Vip naryste", "{ffffff}Bûdamas vip nariu gausi 2 kartus didesnæ algà ir 2 xp daugiau tai is viso bus 7 xp/min\nVIP KOMANDOS:\n\n/v - Raðyti á visiems matomà chatà.\nzxc - Pradëti atgaliná skaièiavimà.\nvgun - Gausi vip ginklø paketà.\nuzsipilti - Pripildysi maðinà degalø.\ntaisyti - Susitvarkysi maðinà uþ 500\n\nKaina: {00CC00}5 {FFFFFF}kreditai.", "Pirkti", "Atgal");
		            }
		            case 1:
		            {
						ShowPlayerDialog(playerid, 7781, DIALOG_STYLE_MSGBOX, "{ffffff}Patirties taðkai", "{ffffff}Prie jûsø esamos patirties prisidës dar 1000 patirties.\nKaina: {00CC00}2 {FFFFFF}kreditai.", "Pirkti", "Atgal");
		            }
		            case 2:
		            {
						ShowPlayerDialog(playerid, 7782, DIALOG_STYLE_MSGBOX, "{ffffff}Pinigai", "{ffffff}Prie jûsø esamø pinigø prisidës dar 35.000 \nKaina: {00CC00}7 {FFFFFF}kreditø.", "Pirkti", "Atgal");
		            }
		            case 3:
		            {
						ShowPlayerDialog(playerid, 7790, DIALOG_STYLE_MSGBOX, "{ffffff}Pinigai", "{ffffff}Prie jûsø esamø pinigø prisidës dar 20.000 \nKaina: {00CC00}4 {FFFFFF}kreditø.", "Pirkti", "Atgal");
		            }
		            case 4:
		            {
						ShowPlayerDialog(playerid, 7783, DIALOG_STYLE_MSGBOX, "{ffffff}Unjail", "{ffffff}Jei sëdite kalëjime bûsite iðtrauktas ið jo\nKaina: {00CC00}2 {FFFFFF}kreditai.", "Pirkti", "Atgal");
		            }
		            case 5:
		            {
                        ShowPlayerDialog(playerid, 7785, DIALOG_STYLE_MSGBOX, "{ffffff}Áspëjimo paðalinimas", "{ffffff}Jei turite vip áspëjimø galite já nusiimti (- 1 ÁSPËJIMAS)\nKaina: {00CC00}2 {FFFFFF}kreditai.", "Pirkti", "Atgal");
		            }
		            case 6:
		            {
                        ShowPlayerDialog(playerid, 7804, DIALOG_STYLE_MSGBOX, "{ffffff}Ieðkomumo paðalinimas", "{ffffff}Ieðkomumo paðalinimas\nKaina: {00CC00}1 {FFFFFF}kreditai.", "Pirkti", "Atgal");
		            }
		            case 7:
		            {
                        ShowPlayerDialog(playerid, 7787, DIALOG_STYLE_MSGBOX, "{ffffff}Teisës", "{ffffff}Maðinos/Motociklo/Fûros teisës\nKaina: {00CC00}3 {FFFFFF}kreditø.", "Pirkti", "Atgal");
		            }
		            case 8:
		            {
                        ShowPlayerDialog(playerid, 7788, DIALOG_STYLE_MSGBOX, "{ffffff}Ginklø licenzija", "{ffffff}Ginklø licenzija.\nSu licenzija galësite naudoti/pirkti ginklus\nKaina: {00CC00}3 {FFFFFF}kreditai.", "Pirkti", "Atgal");
		            }
		            case 9:
		            {
                        ShowPlayerDialog(playerid, 7789, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\n\nKaina: {00CC00}2 {FFFFFF}kreditø.", "Pirkti", "Atgal");
		            }
		            case 10:
		            {
                        ShowPlayerDialog(playerid, 7795, DIALOG_STYLE_MSGBOX, "{ffffff}Garaþai", "{ffffff}Garaþo pirkimas 1 mënesiui.\n\n\n{FFFFFF}Kaina: {00CC00}10 {FFFFFF}kreditø.", "Supratau", "Atgal");
		            }
		            case 11:
		            {
                        ShowPlayerDialog(playerid, 7795, DIALOG_STYLE_MSGBOX, "{ffffff}Namai", "{ffffff}Namo pirkimas, galime pastatyti norimoje vietoje arba duoti jau serveryjæ esame.\nJá nusipirkti galite tik paraðæ á skypæ: {FF0000} arba nrmg.lt\n\n{FFFFFF}Kaina: {00CC00}15-50 {FFFFFF}kreditø.", "Supratau", "Atgal");
		            }
		            case 12:
		            {
                        ShowPlayerDialog(playerid, 7795, DIALOG_STYLE_MSGBOX, "{ffffff}Verslai", "{ffffff}Verslo pirkimas, galime pastatyti norimoje vietoje arba duoti norimà jau esantá serveryjæ neuþimtà\nTaip pat galime sukurti pagal jûsø pageidavimus\nJá nusipirkti galite tik paraðæ á skypæ: {FF0000} arba nrmg.lt\n\n{FFFFFF}Kaina: {00CC00}10-50 {FFFFFF}kreditø.", "Supratau", "Atgal");
		            }
		            case 13:
		            {
                        ShowPlayerDialog(playerid, 7795, DIALOG_STYLE_MSGBOX, "{ffffff}Verslø tobulinimas", "{ffffff}Verslo tobulinimas, norite, kad jûsø verslas uþdirbtø daugiau? Pasididink verslo pelnà uþ kreditus.\nJá nusipirkti galite tik paraðæ á skypæ: {FF0000} arba nrmg.lt\n\n{FFFFFF}Kaina: {00CC00}10-50 {FFFFFF}kreditø.", "Supratau", "Atgal");
		            }
		            case 14:
		            {
                        ShowPlayerDialog(playerid, 7797, DIALOG_STYLE_MSGBOX, "{ffffff}Admin I lygio naryste", "{ffffff}Bûdamas Admin nariu galësite raðyti visiems matant\nTurësite privatu Admin èhat'à\nGalësite naudoti Laiko ban\nPaleisti atgaliná skaièiavimà\nIr daug kitu komandø\n\nKaina: {00CC00}10 {FFFFFF}kreditø.", "Pirkti", "Atgal");
		            }
		            case 15:
		            {
                        ShowPlayerDialog(playerid, 7798, DIALOG_STYLE_MSGBOX, "{ffffff}Admin II lygio naryste", "{ffffff}Bûdamas Admin nariu galësite raðyti visiems matant\nTurësite privatu Admin èhat'à\nGalësite naudoti Laiko ban\nPaleisti atgaliná skaièiavimà\nIr daug kitu komandø\n\nKaina: {00CC00}20 {FFFFFF}kreditø.", "Pirkti", "Atgal");
		            }
		            case 16:
		            {
                        ShowPlayerDialog(playerid, 7799, DIALOG_STYLE_MSGBOX, "{ffffff}Admin III lygio naryste", "{ffffff}Bûdamas Admin nariu galësite raðyti visiems matant\nTurësite privatu Admin èhat'à\nGalësite naudoti Laiko ban\nPaleisti atgaliná skaièiavimà\nIr daug kitu komandø\n\nKaina: {00CC00}30 {FFFFFF}kreditø.", "Pirkti", "Atgal");
		            }
		            case 17:
		            {
                        ShowPlayerDialog(playerid, 7800, DIALOG_STYLE_MSGBOX, "{ffffff}Áspëjimo paðalinimas", "{ffffff}Jei turite admin áspëjimø galite já nusiimti (- 1 ÁSPËJIMAS)\nKaina: {00CC00}2 {FFFFFF}kreditai.", "Pirkti", "Atgal");
		            }
		            case 18:
		            {
                        ShowPlayerDialog(playerid, 7801, DIALOG_STYLE_MSGBOX, "{ffffff}Algos padidinimas", "{ffffff}Algos gavimas papildomi 20 á minutæ mënësiui\nKaina: {00CC00}5 {FFFFFF}kreditai.", "Pirkti", "Atgal");
		            }
		            case 19:
		            {
                        ShowPlayerDialog(playerid, 7802, DIALOG_STYLE_MSGBOX, "{ffffff}Administratoriaus draudimas", "{ffffff}Administratoriaus draudimo nusiëmimo\nKaina: {00CC00}10 {FFFFFF}kreditø.", "Pirkti", "Atgal");
		            }
		            case 20:
		            {
                        ShowPlayerDialog(playerid, 7803, DIALOG_STYLE_MSGBOX, "{ffffff}VIP draudimas", "{ffffff}VIP draudimo nusiëmimo\nKaina: {00CC00}5 {FFFFFF}kreditai.", "Pirkti", "Atgal");
		            }
		            case 21:
		            {
                        ShowPlayerDialog(playerid, 7805, DIALOG_STYLE_MSGBOX, "{ffffff}Gaujø draudimas", "{ffffff}Gaujø draudimo nusiëmimo\nKaina: {00CC00}5 {FFFFFF}kreditai.", "Pirkti", "Atgal");
		            }
				}
			}
			return 1;
		}
//------------------------------------------------------------------------------
	if(dialogid == 7795)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
	    if(response) return PirkimuSarasasUzKreditus(playerid);
	    return 1;
	}
//Paslaugu patvirtinimas!
	if(dialogid == 7777)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1; // tai reiskia, kad nera acc arba nick'as blogai parasytas. bet neturetu sito buti, jeigu kur nesi prigrybaves
			if(krd < VipKaina) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}5 {7ADE27}kreditø, kad nusipirktumëte vip narystæ!");
			if(playerDB[playerid][VDraudimas]) return SendClientMessage(playerid, RED, "Jûs turite VIP draudimà, VIP narystës pirkti negalite !");
			if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} Jûs esate dar naujokas, pirkti {ccff66}VIP {37f467}narystës dar negalite. Turite praþaisti {ccff66}3 {37f467}valandas .");
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai VIP narystæ! Ji galios {FFCC00}30 {7ADE27}dienø nuo uþsakymo dienos!");
			if(playerDB[playerid][vip])
			{
				playerDB[playerid][VipLaikas] += 2592000;
				playerDB[playerid][vip] = true;
			}
			else
			{
				playerDB[playerid][vip] = true;
				playerDB[playerid][VipLaikas] = gettime() + 2592000;
			}
			krd -= VipKaina;
			format(str, 140, "UPDATE `players` SET `Vip` = '1', `Kreditai` = '%d', `VipLaikas` = '%d' WHERE `Vardas` = '%s'", krd, playerDB[playerid][VipLaikas], GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | PIRKO VIP\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7781)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < PatirtiesKaina) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}2 {7ADE27}kreditø, kad nusipirktumëte {FFCC00}1000 {7ADE27}patirties!");
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai {FFCC00}1000 {7ADE27}patirties! ");
			SetPlayerScore(playerid, GetPlayerScore(playerid) + 1000);
			krd -= PatirtiesKaina;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | PATIRTIES TASKU\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
   		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7782)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < LituKaina) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}7 {7ADE27}kreditø, kad nusipirktumëte {FFCC00}35.000 {7ADE27}pinigø!");
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai {FFCC00}35.000 {7ADE27}pinigø! ");
			GivePlayerMoneyA(playerid, 35000);
			krd -= LituKaina;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | PINIGU\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
   		}
		return 1;
	}
	//
	if(dialogid == 7790)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < LituKainaKita) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}4 {7ADE27}kreditø, kad nusipirktumëte {FFCC00}20.000 {7ADE27}pinigø!");
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai {FFCC00}20.000 {7ADE27}pinigø! ");
			GivePlayerMoneyA(playerid, 20000);
			krd -= LituKainaKita;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | PINIGU MAZIAU\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
   		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7783)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1; 
   		    if(krd < UnjailKaina) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}2 {7ADE27}kreditø, kad nusipirktumëte paleidimà ið kalëjmo!");
   		    if(!playerDB[playerid][ikalintas]) return SendClientMessage(playerid, RED, "* Tu ir taip ne kalëjime!");
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai paleidimà ið kalëjmo. Mëgaukis laisvæ ir daugiau nebeprisidirbk!");
			UnjailPlayer(playerid);
			krd -= UnjailKaina;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | UNJAIL\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
   		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7785)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < VipIspKaina) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}2 {7ADE27}kreditø, kad nusipirktumëte {FFCC00}1 {7ADE27}vip áspëjimo paðalinimà!");
   		    if(playerDB[playerid][vispejimai] < 1) return SendClientMessage(playerid, RED, "* Jûs ir taip neturite në vieno áspëjimo, kaip já nusiimsi?!");
			playerDB[playerid][vispejimai] --;
			krd -= VipIspKaina;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | VIP ISPEJIMA NUSIIME\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7804)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < IeskomumoKaina) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}1 {7ADE27}kredito, kad nusipirktumëte policijos ieðkomumo paðalinimà!");
   		    if(GetPlayerTWanted(playerid) < 1) return SendClientMessage(playerid, RED, "* Tu nesi gaudomas policijos ir taip!");
   		    SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai ieðkomumo paðalinimà!");
			SetPlayerTWanted(playerid, 0);
			SetPlayerColor(playerid,PLAYCOL_HIDDEN);
			krd -= IeskomumoKaina;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | IESKOMUMO PASALINIMAS\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
   		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7787)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < TeisiuVisuKaina) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}4 {7ADE27}kreditø, kad nusipirktumëte visas teises!");
   		    if(playerDB[playerid][teises] == true && playerDB[playerid][Mteises] == true && playerDB[playerid][FTeises]) return SendClientMessage(playerid, RED, "* Tu jau turi visas teises!");
   		    SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai visas teises!");
   		    playerDB[playerid][teises] = true;
   		    playerDB[playerid][Mteises] = true;
   		    playerDB[playerid][FTeises] = true;
			krd -= TeisiuVisuKaina;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | TEISIAS PIRKO\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
   		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7788)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < GunLicenzKaina) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}3 {7ADE27}kreditø, kad nusipirktumëte ginklø licenzijà!");
   		    if(playerDB[playerid][gLicenzija] == true) return SendClientMessage(playerid, RED, "* Tu jau turi ginklø licenzijà!");
   		    SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai ginklø licenzijà!");
   		    playerDB[playerid][gLicenzija] = true;
			krd -= GunLicenzKaina;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | GINKLU LICENZIJA\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
   		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7789)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < SkinKeitimas) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}2 {7ADE27}kreditø, kad nusipirktumëte naujà aprangà!");
   		    if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, 7786, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti http://wiki.sa-mp.com/wiki/Skins:All\nSkino ID turi bûti skaièius.\n\nKaina: {00CC00}6 {FFFFFF}kreditø.", "Pirkti", "Atgal");
   		    if(strval(inputtext) < 1 || strval(inputtext) > 299) return SendClientMessage(playerid, RED, "* Skin ID tik nuo 1 iki 299!");
   		    switch(strval(inputtext))
			{
				case 1, 77, 79, 262, 282, 50, 189, 194, 274, 169, 28, 13, 125, 191, 192: return ShowPlayerDialog(playerid, 7786, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}6 {FFFFFF}kreditø.", "Pirkti", "Atgal");
				case 285, 124, 107, 155, 205, 68, 8, 41, 24, 76, 27, 31, 26, 263, 195: return ShowPlayerDialog(playerid, 7786, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}6 {FFFFFF}kreditø.", "Pirkti", "Atgal");
				case 80, 81, 70, 265, 142, 29, 126, 106, 61, 277, 69, 119: return ShowPlayerDialog(playerid, 7786, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}6 {FFFFFF}kreditø.", "Pirkti", "Atgal");
				case 266, 275, 240, 42, 30, 206, 105, 284, 166, 276, 286, 287, 181, 190: return ShowPlayerDialog(playerid, 7786, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}6 {FFFFFF}kreditø.", "Pirkti", "Atgal");
                case 220, 127, 280, 249, 34, 281, 296, 298, 156, 171: return ShowPlayerDialog(playerid, 7786, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}6 {FFFFFF}kreditø.", "Pirkti", "Atgal");
                case 267, 269, 271, 283, 288, 293, 299, 297, 294, 292: return ShowPlayerDialog(playerid, 7786, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti www.NRMG.LT/skinai\nTokio skino pirkti negalite, nes jis naudojamas darbuose!\n\nKaina: {00CC00}6 {FFFFFF}kreditø.", "Pirkti", "Atgal");

			}
   		    SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai naujà aprangà!");
   		    SetPlayerSkin(playerid, strval(inputtext));
   		    playerDB[playerid][drabuziai] = strval(inputtext);
			krd -= SkinKeitimas;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | PIRKO SKIN\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
   		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7797)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1; // tai reiskia, kad nera acc arba nick'as blogai parasytas. bet neturetu sito buti, jeigu kur nesi prigrybaves
	    	if(krd < AdminKaina) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}10 {7ADE27}kreditø, kad nusipirktumëte admin narystæ!");
      		if(playerDB[playerid][ADraudimas]) return SendClientMessage(playerid, RED, "Jûs turite Administratoriaus draudimà, Administratoriaus narystës pirkti negalite !");
			if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} Jûs esate dar naujokas, pirkti {ccff66}Administratoriaus {37f467}narystës dar negalite. Turite praþaisti {ccff66}3 {37f467}valandas .");
			if(playerDB[playerid][admin] > 0) return SendClientMessage(playerid,RED, "* Jûs jau esate administratorius!");
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai Administratoriø I lygio! Jis galios {FFCC00}30 {7ADE27}dienø nuo uþsakymo dienos!");
			playerDB[playerid][admin] = 1;
			playerDB[playerid][AdminLaikas] = gettime() + 2592000;
			krd -= AdminKaina;
			format(str, 140, "UPDATE `players` SET `Admin` = '1', `Kreditai` = '%d', `AdminLaikas` = '%d' WHERE `Vardas` = '%s'", krd, playerDB[playerid][AdminLaikas], GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | PIRKO ADMIN\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7798)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1; // tai reiskia, kad nera acc arba nick'as blogai parasytas. bet neturetu sito buti, jeigu kur nesi prigrybaves
	    	if(krd < AdminKaina2) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}15 {7ADE27}kreditø, kad nusipirktumëte admin narystæ!");
			if(playerDB[playerid][ADraudimas]) return SendClientMessage(playerid, RED, "Jûs turite Administratoriaus draudimà, Administratoriaus narystës pirkti negalite !");
			if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} Jûs esate dar naujokas, pirkti {ccff66}Administratoriaus {37f467}narystës dar negalite. Turite praþaisti {ccff66}3 {37f467}valandas .");
			if(playerDB[playerid][admin] > 0) return SendClientMessage(playerid,RED, "* Jûs jau esate administratorius!");
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai Administratoriø II lygio! Jis galios {FFCC00}30 {7ADE27}dienø nuo uþsakymo dienos!");
			playerDB[playerid][admin] = 2;
			playerDB[playerid][AdminLaikas] = gettime() + 2592000;
			krd -= AdminKaina2;
			format(str, 140, "UPDATE `players` SET `Admin` = '2', `Kreditai` = '%d', `AdminLaikas` = '%d' WHERE `Vardas` = '%s'", krd, playerDB[playerid][AdminLaikas], GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | PIRKO ADMIN2\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
   		}
   		return true;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7799)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1; // tai reiskia, kad nera acc arba nick'as blogai parasytas. bet neturetu sito buti, jeigu kur nesi prigrybaves
	    	if(krd < AdminKaina3) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}20 {7ADE27}kreditø, kad nusipirktumëte admin narystæ!");
			if(playerDB[playerid][ADraudimas]) return SendClientMessage(playerid, RED, "Jûs turite Administratoriaus draudimà, Administratoriaus narystës pirkti negalite !");
			if(playerDB[playerid][NaujokuLaikas] > gettime()) return SendClientMessage(playerid, RED, "{37f467} Jûs esate dar naujokas, pirkti {ccff66}Administratoriaus {37f467}narystës dar negalite. Turite praþaisti {ccff66}3 {37f467}valandas .");
			if(playerDB[playerid][admin] > 0) return SendClientMessage(playerid,RED, "* Jûs jau esate administratorius!");
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkai Administratoriø III lygio! Jis galios {FFCC00}30 {7ADE27}dienø nuo uþsakymo dienos!");
			playerDB[playerid][admin] = 3;
			playerDB[playerid][AdminLaikas] = gettime() + 2592000;
			krd -= AdminKaina3;
			format(str, 140, "UPDATE `players` SET `Admin` = '3', `Kreditai` = '%d', `AdminLaikas` = '%d' WHERE `Vardas` = '%s'", krd, playerDB[playerid][AdminLaikas], GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | PIRKO ADMIN3\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
   		}
   		return true;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7800)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < AdminIspKaina) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}2 {7ADE27}kreditø, kad nusipirktumëte {FFCC00}1 {7ADE27}admin áspëjimo paðalinimà!");
   		    if(playerDB[playerid][aispejimai] < 1) return SendClientMessage(playerid, RED, "* Jûs ir taip neturite në vieno áspëjimo, kaip já nusiimsi?!");
			SendClientMessage(playerid, RED, "{7ADE27}* Pasiðalinai 1 administratoriaus áspëjimà!");
			playerDB[playerid][aispejimai] --;
			krd -= AdminIspKaina;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | ADMIN ISPEJIMA NUSIIME\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7801)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < AlgosPirkimas) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}5 {7ADE27}kreditø, kad nusipirktumëte {FFCC00} Algos papildomà gavimà!");

			if(playerDB[playerid][pAlga])
			{
				playerDB[playerid][AlgosLaikas] += 2592000;
				playerDB[playerid][pAlga] = true;
			}
			else
			{
				playerDB[playerid][pAlga] = true;
				playerDB[playerid][AlgosLaikas] = gettime() + 2592000;
			}

			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkote papildomà algà {FFCC00}30 {7ADE27}dienø !");
			krd -= AlgosPirkimas;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | Pirko algà 20\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7802)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < AdminDraudimas) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}10 {7ADE27}kreditø, kad nusipirktumëte {FFCC00} Administratoriø draudimà!");
			if(!playerDB[playerid][ADraudimas]) return SendClientMessage(playerid, RED, "Jûs neturite administratoriaus draudimo .");
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkote paðalinimà administratoriaus draudimui!");
			playerDB[playerid][ADraudimas] = false;
			krd -= AdminDraudimas;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | Pirko Admin draudima\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7803)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < VIPDraudimas) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}10 {7ADE27}kreditø, kad nusipirktumëte {FFCC00} VIP draudimà!");
			if(!playerDB[playerid][VDraudimas]) return SendClientMessage(playerid, RED, "Jûs neturite VIP draudimo .");
			playerDB[playerid][VDraudimas] = false;
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkote paðalinimà VIP draudimui!");
			krd -= VIPDraudimas;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | Pirko VIP draudima\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
		}
		return 1;
	}
//------------------------------------------------------------------------------
	if(dialogid == 7805)
	{
	    if(!response) return PirkimuSarasasUzKreditus(playerid);
 		if(response)
   		{
   		    new str[150], krd = KiekKredituTuri(GetPlayerNameEx(playerid));
   		    if(krd == -1) return 1;
   		    if(krd < GaujuDraudimas) return SendClientMessage(playerid, RED, "{7ADE27}* Neturite {FFCC00}5 {7ADE27}kreditø, kad nusipirktumëte {FFCC00} Gaujø draudimà!");
			if(!playerDB[playerid][GDraudimas]) return SendClientMessage(playerid, RED, "Jûs neturite Gaujø draudimo .");
			playerDB[playerid][GDraudimas] = false;
			SendClientMessage(playerid, RED, "{7ADE27}* Nusipirkote paðalinimà Gaujø draudimui!");
			krd -= GaujuDraudimas;
			format(str, 140, "UPDATE `players` SET `Kreditai` = '%d' WHERE `Vardas` = '%s'", krd, GetPlayerNameEx(playerid));
			mysql_query(str);
			format(str, 150, "[PASLAUGOS] Kada pirko: %s | Zaidejo vardas: %s | Pirko Gauju draudima 5\r\n", GetDateEx(), GetPlayerNameEx(playerid));
		    Log(PIRKO_PASLAUGAS, str);
		}
		return 1;
	}
//------------------------------------------------------------------------------
//Parduodam pica
	if(dialogid == 4771)
	{
		if(response)
		{
			new pID = playerDB[playerid][ChoosedPlayer];
			SendClientMessage(playerid, GREEN, "* Suvalgëte picà!");
			SendClientMessage(pID, GREEN, "* Þaidëjas suvalgë jûsø siûloma picà!");
			new Float:hp;
			GetPlayerHealth(playerid, hp);
			if(hp<100){SetPlayerHealth(playerid, hp+5);}
			GivePlayerMoneyA(pID, 50);
			GivePlayerMoneyA(playerid, -50);
			playerDB[playerid][alkis] = 100;
			UpdateAlkanasTextdraw( playerid );
			ApplyAnimation(playerid,"VENDING","vend_eat1_P",4.1,0,0,0,0,0);
		}
		return 1;
	}
//------------------------------------------------------------------------------
//Rangai
	if(dialogid == 7845)
	{
	    if(!response) return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotojà", "Rinktis", "Iðeiti");
	    if(response)
		{
			switch(listitem)
	  		{
	    		case 0: ShowPlayerDialog(playerid, 7846, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Áraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
	            case 1: ShowPlayerDialog(playerid, 7847, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Áraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
				case 2: ShowPlayerDialog(playerid, 7848, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Áraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
				case 3: ShowPlayerDialog(playerid, 7849, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Áraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
				case 4: ShowPlayerDialog(playerid, 7850, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Áraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//Duodam rangus
//--Pirmas rangas--
	if(dialogid == 7846)
	{
		if(response)
		{
			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, 7846, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
  	 		new pID = GetPlayeridMid(inputtext);
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, 7846, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
	 		new darbas = GetJobFromFaction(playerDB[playerid][plead]);
			if(playerDB[pID][specialybe]!= darbas) return KlaidosZinute(playerid, "Þaidëjas neádarbintas jûsø firmoje.");
			playerDB[pID][rangas] = 1;
			KoksRangas(playerid,pID);
			KeiciamRangoApranga(pID);
		}
		return 1;
	}
//------------------------------------------------------------------------------
//--Antras rangas--
	if(dialogid == 7847)
	{
		if(response)
		{
			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, 7847, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
   			new pID = GetPlayeridMid(inputtext);
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, 7847, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
	 		new darbas = GetJobFromFaction(playerDB[playerid][plead]);
			if(playerDB[pID][specialybe]!= darbas) return KlaidosZinute(playerid, "Þaidëjas neádarbintas jûsø firmoje.");
			playerDB[pID][rangas] = 2;
			KoksRangas(playerid,pID);
			KeiciamRangoApranga(pID);
		}
		return 1;
	}
//------------------------------------------------------------------------------
//--Treèias rangas--
	if(dialogid == 7848)
	{
		if(response)
		{
			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, 7848, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
   			new pID = GetPlayeridMid(inputtext);
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, 7848, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
	 		new darbas = GetJobFromFaction(playerDB[playerid][plead]);
			if(playerDB[pID][specialybe]!= darbas) return KlaidosZinute(playerid, "Þaidëjas neádarbintas jûsø firmoje.");
			playerDB[pID][rangas] = 3;
			KoksRangas(playerid,pID);
   			KeiciamRangoApranga(pID);
		}
		return 1;
	}
//------------------------------------------------------------------------------
//--Ketvirtas rangas--
	if(dialogid == 7849)
	{
		if(response)
		{
			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, 7846, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
   			new pID = GetPlayeridMid(inputtext);
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, 7846, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
			new darbas = GetJobFromFaction(playerDB[playerid][plead]);
			if(playerDB[pID][specialybe]!= darbas) return KlaidosZinute(playerid, "Þaidëjas neádarbintas jûsø firmoje.");
			playerDB[pID][rangas] = 4;
			KoksRangas(playerid,pID);
			KeiciamRangoApranga(pID);
		}
		return 1;
	}
//------------------------------------------------------------------------------
//--Penktas rangas--
	if(dialogid == 7850)
	{
		if(response)
		{
			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, 7850, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
   			new pID = GetPlayeridMid(inputtext);
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, 7850, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad uþdëtum rangà!:", "Paaukðtinti", "Iðeiti");
	 		new darbas = GetJobFromFaction(playerDB[playerid][plead]);
			if(playerDB[pID][specialybe]!= darbas) return KlaidosZinute(playerid, "Þaidëjas neádarbintas jûsø firmoje.");
			playerDB[pID][rangas] = 5;
			KoksRangas(playerid,pID);
			KeiciamRangoApranga(pID);
		}
		return 1;
	}
//------------------------------------------------------------------------------
//Paþeminame darbuotojà vienu rangu.
	if(dialogid == 7851)
	{
	    if(!response) return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotojà", "Rinktis", "Iðeiti");
		if(response)
		{
			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, 7851, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad nuimtum rangà!:", "Paaukðtinti", "Atgal");
   			new pID = GetPlayeridMid(inputtext);
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, 7851, DIALOG_STYLE_INPUT, "{ffffff}Rangas", "Þaidëjo su tokiu vardu nëra!\nÁraðyk þaidëjo Vardà_Pavardë á laukelá, kad nuimtum rangà!:", "Paaukðtinti", "Atgal");
	 		new darbas = GetJobFromFaction(playerDB[playerid][plead]);
			if(playerDB[pID][specialybe]!= darbas) return KlaidosZinute(playerid, "Þaidëjas neádarbintas jûsø firmoje.");
			if(playerDB[pID][rangas] < 2) return SendClientMessage(playerid, RED, "* Þaidëjas jau ir taip turi maþiausià rangà!");
			playerDB[pID][rangas] --;
			KoksRangasMinus(playerid,pID);
			KeiciamRangoApranga(pID);
		}
		return 1;
	}
//------------------------------------------------------------------------------
//Priziuretoju langas
	if(dialogid == 8777)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
		            if(!playerDB[playerid][dpriziuretojas]) return SendClientMessage(playerid, RED, "* Tu nesi direktoriø priþiurëtojas, kad galëtum paþiûrëti komandas!");
		            new strf[2100], str[500];
					str = "{47A5BD}/uzdetidirektoriu {ffffff}- Paskirsti þaidëja á direktoriaus postà.[DARBØ ID NUO 0 IKI 12]\n\n"; strcat(strf, str);
					str = "{ffffff}\t Policininkø - 1\n\t Medikø - 2\n\t Taksistø - 3\n\t Mechanikø - 4\n\t Dyleriø - 5\n"; strcat(strf, str);
					str = "{ffffff}\t SWAT - 10\n\t Fûristø - 11\n\t Radistø - 13\n\t Baikeriø - 14\n\t Armijos - 17\n\t Paðalinti direktoriø - 0\n\n"; strcat(strf, str);
					str = "{47A5BD}/dispeti {ffffff}- Áspësite direktoriø áspëjimu. 3 áspëjimai ir direktorius bus nuiimamas automatiðkai.\n\n"; strcat(strf, str);
					str = "{47A5BD}/direktoriai {ffffff}- Pamatysite visus direktorius.\n\n"; strcat(strf, str);
					str = "{47A5BD}/daktyvumas {ffffff}- Pamatysite visø direktoriø aktyvûmà.\n\n"; strcat(strf, str);
					str = "{47A5BD}/priz {ffffff} - Praneðite direktoriams ir visiems þaidëjams kokià nors svarbià informacijà.\n\n"; strcat(strf, str);
					str = "{ffffff}\t Nenaudoti bereikalingai komandos, uþ tai bûsite iðmestas ið DPKI\n\n"; strcat(strf, str);
					str = "{47A5BD}/ismestidrkoff {ffffff} - Iðmesite atsijungusá direktoriu.\n\n"; strcat(strf, str);
					str = "{47A5BD}/ismestipavoff {ffffff} - Iðmesite atsijungusá pavaduotojà.\n\n"; strcat(strf, str);
					str = "{47A5BD}/skirtipav {ffffff} - Uþdësite þaidëjui pavaduotojà, naudokite pagal direktoriø ID'à.\n\n"; strcat(strf, str);
					str = "{47A5BD}/dpelnai {ffffff} - Priþiûrësite visø darbø esamus pelnus.\n\n"; strcat(strf, str);
					str = "{47A5BD}/darbinesrr {ffffff} - Atstatysite nenaudojamas darbo maðinas.\n\n"; strcat(strf, str);
					str = "{47A5BD}/sandeliurr {ffffff}- Visus gaujø turimus sandelius iðvalysite ir padarysite niekeno nevaldomus\n\n"; strcat(strf, str);
					str = "{47A5BD}© www.NRMG.LT"; strcat(strf, str);
					ShowPlayerDialog(playerid, 8778, DIALOG_STYLE_MSGBOX, "{ffffff}Direktoriø priþiurëtojas.", strf, "Supratau", "");
	            }
	            case 1:
	            {
		            if(!playerDB[playerid][epriziuretojas]) return SendClientMessage(playerid, RED, "* Tu nesi emigracijø priþiurëtojas, kad galëtum paþiûrëti komandas!");
		            new strf[800], str[300];
		            str = "{47A5BD}/emigruoti - {ffffff}Emigruosite þaidëjà.\n"; strcat(strf, str);
		            str = "{47A5BD}/emigruotioff - {ffffff}Emigruosite þaidëjà atsijungusá.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/priz - {ffffff}Praneðite þaidëjams svarbià informacijà.\nNaudojant nereikalingai gausite áspëjimà arba bûsite iðmestas ið emigracijø priþiûrëtojo posto.\n\n"; strcat(strf, str);
                    ShowPlayerDialog(playerid, 8778, DIALOG_STYLE_MSGBOX, "{ffffff}Emigracijø priþiurëtojas.", strf, "Supratau", "");
	            }
	            case 2:
	            {
	                if(!playerDB[playerid][apriziuretojas]) return SendClientMessage(playerid, RED, "* Tu nesi administratoriø priþiurëtojas, kad galëtum paþiûrëti komandas!");
		            new strf[1150], str[450];
		            str = "{47A5BD}/aispeti [prieþastis] - {ffffff}Áspëti admin nará.\n{47A5BD}/naispeti - {ffffff}Paðalinsite admin áspëjimà.\n{47A5BD}/aispetioff - {ffffff}Áspëti admin nará atsijungusá.\n{47A5BD}/avisi - {ffffff}Pamatysite visus serveryje esanèiusa administratorius.\n{47A5BD}/apr - {ffffff}Praneðite þaidëjams svarbià informacijà.\nNaudojant nereikalingai gausite áspëjimà arba bûsite iðmestas ið adminø priþiûrëtojo posto.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/naispeti [Vardas_Pavarde] - Nuimti áspëjimà\n\n"; strcat(strf, str);
		            str = "{47A5BD}/duotiadraudima {ffffff} - Uþdësite þaidëjui admin draudimà.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/nuimtiadraudima {ffffff} - Nuimsite þaidëjui admin draudimà.\n\n"; strcat(strf, str);
                    ShowPlayerDialog(playerid, 8778, DIALOG_STYLE_MSGBOX, "{ffffff}Administratoriø priþiurëtojas.", strf, "Supratau", "");
	            }
	            case 3:
	            {
	                if(!playerDB[playerid][vpriziuretojas]) return SendClientMessage(playerid, RED, "* Tu nesi vipø priþiurëtojas, kad galëtum paþiûrëti komandas!");
		            new strf[1000], str[450];
		            str = "{47A5BD}/vispeti [prieþastis] - {ffffff}Áspëti VIP nará.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/avispeti - {ffffff}Paðalinsite VIP áspëjimà.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/vispetioff - {ffffff}Áspëti VIP nará atsijungusá.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/priz - {ffffff}Praneðite þaidëjams svarbià informacijà.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/vvisi - {ffffff}Suþinosite visus serverio VIP narius.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/nvispeti [Vardas_Pavarde] - Nuimsite áspëjimà\n\n"; strcat(strf, str);
		            str = "{47A5BD}/duotivdraudima {ffffff} - Uþdësite þaidëjui VIP draudimà.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/nuimtivdraudima {ffffff} - Nuimsite þaidëjui VIP draudimà.\n\n"; strcat(strf, str);
		            str = "Naudojant nereikalingai gausite áspëjimà arba bûsite iðmestas ið vipø priþiûrëtojo posto.\n\n"; strcat(strf, str);
                    ShowPlayerDialog(playerid, 8778, DIALOG_STYLE_MSGBOX, "{ffffff}VIP'ø priþiurëtojas.", strf, "Supratau", "");
	            }
	            case 4:
	            {
	                if(!playerDB[playerid][banpriziuretojas]) return SendClientMessage(playerid, RED, "* Tu nesi BAN/UNBAN priþiurëtojas, kad galëtum paþiûrëti komandas!");
		            new strf[1000], str[500];
		            str = "{47A5BD}/lunbanzaideja - {ffffff}Atbaninsite laikui uþblokuotà nará.\n{47A5BD}"; strcat(strf, str);
		            str = "{47A5BD}/unbanzaideja - {ffffff}Atbaninsite uþblokuotà nará.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/unbanip - {ffffff}Atbaninsite IP banu uþblokuota nará.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/priz - {ffffff}Praneðite þaidëjams svarbià informacijà.\n\n"; strcat(strf, str);
		            str = "Naudojant nereikalingai gausite áspëjimà arba bûsite iðmestas ið ban/unban priþiûrëtojo posto.\n\n"; strcat(strf, str);
                    ShowPlayerDialog(playerid, 8778, DIALOG_STYLE_MSGBOX, "{ffffff}BAN/UNBAN priþiurëtojas.", strf, "Supratau", "");
	            }
	            case 5:
	            {
	                if(!playerDB[playerid][gpriziuretojas]) return SendClientMessage(playerid, RED, "* Tu nesi Klubø priþiurëtojas, kad galëtum paþiûrëti komandas!");
		            new strf[1000], str[450];
		            str = "{47A5BD}/priz - {ffffff}Praneðite þaidëjams svarbià informacijà.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/gaktyvumas {ffffff}- Pamatysite visø direktoriø aktyvûmà.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/duotigdraudima {ffffff} - Uþdësite þaidëjui gaujø draudimà.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/nuimtigdraudima {ffffff} - Nuimsite þaidëjui gaujø draudimà.\n\n"; strcat(strf, str);
		            str = "{47A5BD}/gskirti {ffffff}- Paskirsti þaidëja á direktoriaus postà.[Mafiju, klubu ID's]\n\n"; strcat(strf, str);
		            str = " Russian mafijos - 6\n\t Yakuza mafijos - 8\n\t  Costello  klubas - 15\n\t  -Patriotai-  klubas - 16"; strcat(strf, str);
                    ShowPlayerDialog(playerid, 8778, DIALOG_STYLE_MSGBOX, "{ffffff}Mafijos/Klubu/Gauju priþiurëtojas.", strf, "Supratau", "");
	            }
			}
		}
		return 1;
	}
//------------------------------------------------------------------------------
//Sandeliai
	if(dialogid == 7812)
	{
	    if(response)
		{
			switch(listitem)
	  		{
	    		case 0:
	            {
	            	new msg[280];
					format(msg,sizeof(msg),"{ffffff}Sandelyje dabar yra {E60066}%s {ffffff}tableèiø LSD ir {E60066}%s {ffffff}ðvirkðtø amfetamino.\nSandelis priklauso: {E60066}%s\n{ffffff}Kas valandà sandelyje prisideda po {E60066}20 {ffffff}tableèiø LSD ir {E60066}15 {ffffff}ðvirkðtø amfetamino.",konvertuoti_pinigus(LSD[0]), konvertuoti_pinigus(AMFA[0]), SanSavininkas[0]);
					ShowPlayerDialog(playerid,7813, DIALOG_STYLE_MSGBOX,"{ffffff}Sandelis",msg, "Gerai","");
	            }
	            case 1:
				{
        			if(strcmp(SanSavininkas[0], GetPlayerNameEx(playerid), false)) return SendClientMessage(playerid, RED, "* Sandelá iðtuðtinti gali tik mafijos lyderis(savininkas) kuriam priklauso ðis sandelis"); // Jeigu zaidejas 1 sandelio savininkas
					ShowPlayerDialog(playerid, 7814, DIALOG_STYLE_LIST, "{ffffff}Sandelis","{ffffff}Paimti LSD tabletes\nPaimti amfetamino ðvirkðtus", "Gerai", "Atgal");
				}
			}
        }
		return 1;
	}
//--------------------------Amfos arba LSD tuðtinimo langai---------------------
	if(dialogid == 7814)
	{
	    if(!response) return ShowPlayerDialog(playerid, 7812, DIALOG_STYLE_LIST, "{ffffff}Sandelis", "Sandelio balansas\nIðtuðtinti sandelá.", "Pasirinkti", "Iðeiti");
	    if(response)
	    {
			switch(listitem)
			{
			    case 0:
			    {
			    	ShowPlayerDialog(playerid, 7815, DIALOG_STYLE_INPUT, "LSD","{ffffff}Áraðyk LSD tableèiø skaièiu kurá norësi pasiimti:", "Pasiimti", "Atgal");
			    }
			    case 1:
			    {
			    	ShowPlayerDialog(playerid, 7816, DIALOG_STYLE_INPUT, "Amfetaminas","{ffffff}Áraðyk Amfetamino ðvirkðtu skaièiu kurá norësi pasiimti:", "Pasiimti", "Atgal");
                }
			}
		}
		return 1;
	}
//--------------------------Iðemame LSD tabletes--------------------------------
	if(dialogid == 7815)
	{
		if(!response) return ShowPlayerDialog(playerid, 7814, DIALOG_STYLE_LIST, "{ffffff}Sandelis","{ffffff}Paimti LSD tabletes\nPaimti amfetamino ðvirkðtus", "Gerai", "Atgal");
		if(response)
		{
			if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, 7815, DIALOG_STYLE_INPUT, "LSD","{ffffff}Áraðyk LSD tableèiø skaièiu kurá norësi pasiimti:\n{FF0000}Bûtinai turi bûti skaièius", "Pasiimti", "Atgal");
			if(strval(inputtext) < 1) return ShowPlayerDialog(playerid, 7815, DIALOG_STYLE_INPUT, "LSD","{ffffff}Áraðyk LSD tableèiø skaièiu kurá norësi pasiimti:", "Pasiimti", "Atgal");
			if(LSD[0] < strval(inputtext)) return ShowPlayerDialog(playerid, 7815, DIALOG_STYLE_INPUT, "LSD","{ffffff}Áraðyk LSD tableèiø skaièiu kurá norësi pasiimti:\n{FF0000}Sandelyje tiek LSD tableèiø nëra.\n{ffffff}Patikrinkite sandelá ið naujo.", "Pasiimti", "Atgal");
            new msg[65];
			format(msg, sizeof(msg), "* Pasijemiai %s vienetø LSD tableèiø.", konvertuoti_pinigus(strval(inputtext))); //Formatuojam þinutæ
			SendClientMessage(playerid, GREEN, msg);
			playerDB[playerid][lsd] += strval(inputtext);
			LSD[0] -= strval(inputtext);
			UpdateSandeliuLabel();
		}
		return 1;
	}
//--------------------------Iðemame amfetamino ðvirkðtus------------------------
	if(dialogid == 7816)
	{
		if(!response) return ShowPlayerDialog(playerid, 7814, DIALOG_STYLE_LIST, "{ffffff}Sandelis","{ffffff}Paimti LSD tabletes\nPaimti amfetamino ðvirkðtus", "Gerai", "Atgal");
		if(response)
		{
			if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, 7816, DIALOG_STYLE_INPUT, "AMFETAMINAS","{ffffff}Áraðyk amfetamino ðvirkðtu skaièiu kurá norësi pasiimti:\n{FF0000}Bûtinai turi bûti skaièius", "Pasiimti", "Atgal");
			if(strval(inputtext) < 1) return ShowPlayerDialog(playerid, 7816, DIALOG_STYLE_INPUT, "AMFETAMINAS","{ffffff}Áraðyk Amfetamino ðvirkðtu skaièiu kurá norësi pasiimti:", "Pasiimti", "Atgal");
			if(AMFA[0] < strval(inputtext)) return ShowPlayerDialog(playerid, 7816, DIALOG_STYLE_INPUT, "AMFETAMINAS","{ffffff}Áraðyk amfetamino ðvirkðtu skaièiu kurá norësi pasiimti:\n{FF0000}Sandelyje tiek ðvirkðtø nëra.\n{ffffff}Patikrinkite sandelá ið naujo.", "Pasiimti", "Atgal");
            new msg[65];
			format(msg, sizeof(msg), "* Pasijemiai %s vienetø amfetamino ðvirktø.", konvertuoti_pinigus(strval(inputtext))); //Formatuojam þinutæ
			SendClientMessage(playerid, GREEN, msg);
			playerDB[playerid][amfa] += strval(inputtext);
			AMFA[0] -= strval(inputtext);
			UpdateSandeliuLabel();
		}
		return 1;
	}
//---------------------------ANTRAS SANDELIS------------------------------------
//--------------------------Sandeliø info ir tuðtinimo gui langai---------------
	if(dialogid == 7818)
	{
	    if(response)
		{
			switch(listitem)
	  		{
	    		case 0:
	            {
	            	new msg[280];
					format(msg,sizeof(msg),"{ffffff}Sandelyje dabar yra {E60066}%s {ffffff}tableèiø LSD ir {E60066}%s {ffffff}ðvirkðtø amfetamino.\nSandelis priklauso: {E60066}%s\n{ffffff}Kas valandà sandelyje prisideda po {E60066}5 {ffffff}tableèiø LSD ir {E60066}2 {ffffff}ðvirkðtø amfetamino.",konvertuoti_pinigus(LSD[1]), konvertuoti_pinigus(AMFA[1]), SanSavininkas[1]);
					ShowPlayerDialog(playerid,7819, DIALOG_STYLE_MSGBOX,"{ffffff}Sandelis",msg, "Gerai","");
	            }
	            case 1:
				{
        			if(strcmp(SanSavininkas[1], GetPlayerNameEx(playerid), false)) return SendClientMessage(playerid, RED, "* Sandelá iðtuðtinti gali tik mafijos lyderis(savininkas) kuriam priklauso ðis sandelis"); // Jeigu zaidejas 1 sandelio savininkas
					ShowPlayerDialog(playerid, 7820, DIALOG_STYLE_LIST, "{ffffff}Sandelis","{ffffff}Paimti LSD tabletes\nPaimti amfetamino ðvirkðtus", "Gerai", "Atðaukti");
				}
			}
		}
		return 1;
	}
//--------------------------Amfos arba LSD tuðtinimo langai---------------------
	if(dialogid == 7820)
	{
	    if(!response) return ShowPlayerDialog(playerid, 7818, DIALOG_STYLE_LIST, "{ffffff}Sandelis", "Sandelio balansas\nIðtuðtinti sandelá.", "Pasirinkti", "Iðeiti");
	    if(response)
	    {
			switch(listitem)
			{
			    case 0:
			    {
			    	ShowPlayerDialog(playerid, 7821, DIALOG_STYLE_INPUT, "LSD","{ffffff}Áraðyk LSD tableèiø skaièiu kurá norësi pasiimti:", "Pasiimti", "Atgal");
			    }
			    case 1:
			    {
			    	ShowPlayerDialog(playerid, 7822, DIALOG_STYLE_INPUT, "Amfetaminas","{ffffff}Áraðyk Amfetamino ðvirkðtu skaièiu kurá norësi pasiimti:", "Pasiimti", "Atgal");
                }
			}
		}
		return 1;
	}
//--------------------------Iðemame LSD tabletes--------------------------------
	if(dialogid == 7821)
	{
		if(!response) return ShowPlayerDialog(playerid, 7820, DIALOG_STYLE_LIST, "{ffffff}Sandelis","{ffffff}Paimti LSD tabletes\nPaimti amfetamino ðvirkðtus", "Gerai", "Atgal");
		if(response)
		{
			if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, 7821, DIALOG_STYLE_INPUT, "LSD","{ffffff}Áraðyk LSD tableèiø skaièiu kurá norësi pasiimti:\n{FF0000}Bûtinai turi bûti skaièius", "Pasiimti", "Atgal");
			if(strval(inputtext) < 1) return ShowPlayerDialog(playerid, 7821, DIALOG_STYLE_INPUT, "LSD","{ffffff}Áraðyk LSD tableèiø skaièiu kurá norësi pasiimti:", "Pasiimti", "Atgal");
			if(LSD[1] < strval(inputtext)) return ShowPlayerDialog(playerid, 7821, DIALOG_STYLE_INPUT, "LSD","{ffffff}Áraðyk LSD tableèiø skaièiu kurá norësi pasiimti:\n{FF0000}Sandelyje tiek LSD tableèiø nëra.\n{ffffff}Patikrinkite sandelá ið naujo.", "Pasiimti", "Atgal");
            new msg[65];
			format(msg, sizeof(msg), "* Pasijemiai %s vienetø LSD tableèiø.", konvertuoti_pinigus(strval(inputtext))); //Formatuojam þinutæ
			SendClientMessage(playerid, GREEN, msg);
			playerDB[playerid][lsd] += strval(inputtext);
			LSD[1] -= strval(inputtext);
			UpdateSandeliuLabel();
		}
		return 1;
	}
//--------------------------Iðemame amfetamino ðvirkðtus------------------------
	if(dialogid == 7822)
	{
		if(!response) return ShowPlayerDialog(playerid, 7820, DIALOG_STYLE_LIST, "{ffffff}Sandelis","{ffffff}Paimti LSD tabletes\nPaimti amfetamino ðvirkðtus", "Gerai", "Atgal");
		if(response)
		{
			if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, 7822, DIALOG_STYLE_INPUT, "AMFETAMINAS","{ffffff}Áraðyk amfetamino ðvirkðtu skaièiu kurá norësi pasiimti:\n{FF0000}Bûtinai turi bûti skaièius", "Pasiimti", "Atgal");
			if(strval(inputtext) < 1) return ShowPlayerDialog(playerid, 7822, DIALOG_STYLE_INPUT, "AMFETAMINAS","{ffffff}Áraðyk Amfetamino ðvirkðtu skaièiu kurá norësi pasiimti:", "Pasiimti", "Atgal");
			if(AMFA[1] < strval(inputtext)) return ShowPlayerDialog(playerid, 7822, DIALOG_STYLE_INPUT, "AMFETAMINAS","{ffffff}Áraðyk amfetamino ðvirkðtu skaièiu kurá norësi pasiimti:\n{FF0000}Sandelyje tiek ðvirktø nëra.\n{ffffff}Patikrinkite sandelá ið naujo.", "Pasiimti", "Atgal");
            new msg[65];
			format(msg, sizeof(msg), "* Pasijemiai %s vienetø amfetamino ðvirktø.", konvertuoti_pinigus(strval(inputtext))); //Formatuojam þinutæ
			SendClientMessage(playerid, GREEN, msg);
			playerDB[playerid][amfa] += strval(inputtext);
			AMFA[1] -= strval(inputtext);
			UpdateSandeliuLabel();
		}
		return 1;
	}
//--------------------------------Grobiam pirmà sandelá-------------------------
	if(dialogid == 7811)
	{
 		if(response)
		{
			if(playerDB[playerid][plead]!=6 && playerDB[playerid][plead]!=8) return SendClientMessage(playerid, RED, "* Sandelius pradëti grobti gali tik gaujø lyderiai.");
			if(SanNupirktas[0] == true) return SendClientMessage(playerid, RED, "* Sandelis jau yra uþgrobtas!");
			if(playerDB[playerid][grobia][1] == true) return SendClientMessage(playerid, RED, "* Tu jau grobi kità sandelá! Iðkarto 2 sandeliø grobti negalima!!");
			if(playerDB[playerid][grobia][0] == true) return SendClientMessage(playerid, RED, "* Tu jau já grobi!");
			if(!strcmp(SanSavininkas[1], GetPlayerNameEx(playerid), true)) return SendClientMessage(playerid, RED, "* Tu jau turi kità sandelá!");
			if(GrobiamasSandelis[0] == true) return SendClientMessage(playerid, RED, "* Sandelis grobiamas! Jei nori uþgrobti sandelá turi nuðauti dabartini grobëjà.");
			GrobiamasSandelis[0] = true;
			playerDB[playerid][grobia][0] = true;
			grobiamsandeli1 = SetTimerEx("Grobiamsandeli1",  1000 * 60 * 5, false, "d", playerid); // Penkias minutes turi prabûti prie sandelio pradëjus grobimà.
			SendClientMessage(playerid, YELLOW, "* Gink sandelá 5 minutes! Jei sandelio teritorijoje iðgyvensi 5 minutes jis priklausys tau!");
    	}
		return 1;
	}
//--------------------------------Grobiam antrà sandelá-------------------------
	if(dialogid == 7817)
	{
 		if(response)
		{
			if(playerDB[playerid][plead]!=6 && playerDB[playerid][plead]!=8) return SendClientMessage(playerid, RED, "* Sandelius pradëti grobti gali tik gaujø lyderiai.");
			if(SanNupirktas[1] == true) return SendClientMessage(playerid, RED, "* Sandelis jau yra uþgrobtas!");
			if(playerDB[playerid][grobia][0] == true) return SendClientMessage(playerid, RED, "*  Tu jau grobi kità sandelá! Iðkarto 2 sandeliø grobti negalima!");
			if(playerDB[playerid][grobia][1] == true) return SendClientMessage(playerid, RED, "* Tu jau já grobi!");
			if(!strcmp(SanSavininkas[0], GetPlayerNameEx(playerid), true)) return SendClientMessage(playerid, RED, "* Tu jau turi kità sandelá!");
			if(GrobiamasSandelis[1] == true) return SendClientMessage(playerid, RED, "* Sandelis grobiamas! Jei nori uþgrobti sandelá turi nuðauti dabartini grobëjà.");
			GrobiamasSandelis[1] = true;
			playerDB[playerid][grobia][1] = true;
			grobiamsandeli2 = SetTimerEx("Grobiamsandeli2",  1000 * 60 * 5, false, "d", playerid); // Penkias minutes turi prabûti prie sandelio pradëjus grobimà.
			SendClientMessage(playerid, YELLOW, "* Gink sandelá 5 minutes! Jei sandelio teritorijoje iðgyvensi 5 minutes jis priklausys tau!");
    	}
		return 1;
	}
//Fûristu kroviniø pasirinkimas
	if(dialogid == 1547)
	{
	    if(!response) return SendClientMessage(playerid, -1, "* Sëkmës þaidëjau!");
	    if(response)
		{
			switch(listitem)
	  		{
	    		case 0:
	            {
	                new str[150], strf[405];
				    str = "Krovinys | Kaina pirkti kroviná | Kaina priduoti kroviná\n \nDviraèiø perveþimas | 500 | 1000\nBaldø perveþimas | 500 | 1500\n", strcat(strf, str);
				    str = "Buitinës technikos perveþimas | 500 | 2000\nAngliø perveþimas | 500 | 2500\nÞvyro perveþimas | 500 | 3000\n", strcat(strf, str);
				    str = "Ginklø perveþimas | 500 | 4500\nNarkotikø perveþimas | 500 | 5000\nÞolës perveþimas | 500 | 5500\n{FF0000}Atðaukti uþsakymus.", strcat(strf, str);
				    ShowPlayerDialog(playerid,1547,DIALOG_STYLE_LIST,"Kroviniai", strf,"Pasirinkti","Atðaukti");
				}
				case 1:
			 	{
                	new str[150], strf[405];
				    str = "Krovinys | Kaina pirkti kroviná | Kaina priduoti kroviná\n \nDviraèiø perveþimas | 500 | 1000\nBaldø perveþimas | 500 | 1500\n", strcat(strf, str);
				    str = "Buitinës technikos perveþimas | 500 | 2000\nAngliø perveþimas | 500 | 2500\nÞvyro perveþimas | 500 | 3000\n", strcat(strf, str);
				    str = "Ginklø perveþimas | 500 | 4500\nNarkotikø perveþimas | 500 | 5000\nÞolës perveþimas | 500 | 5500\n{FF0000}Atðaukti uþsakymus.", strcat(strf, str);
				    ShowPlayerDialog(playerid,1547,DIALOG_STYLE_LIST,"Kroviniai", strf,"Pasirinkti","Atðaukti");
			 	}
	            case 2:
				{
				    if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Krovinius uþsisakyti gali tik fûristai!.");
				    if(playerDB[playerid][uzsisakedviracius] == 1 || playerDB[playerid][uzsisakebaldus] == 1 || playerDB[playerid][uzsisakebuittech] == 1 || playerDB[playerid][uzsisakeanglis] == 1 || playerDB[playerid][uzsisakezvyra] == 1 || playerDB[playerid][uzsisakegunus] || playerDB[playerid][uzsisakenarkus] || playerDB[playerid][uzsisakezole]) return SendClientMessage(playerid, RED, "Tu jau esi uþsisakæs kroviná! Vaþiuok ir nugabenk já, arba atðauk já.");
				    SetPlayerMapIcon( playerid, 2, 711.1776,-571.3199,16.3359, 51, 0, MAPICON_GLOBAL );
				    SetPlayerCheckpointEx(playerid, 9, 711.1776,-571.3199,16.3359,4);
				    SendClientMessage(playerid, -1, "{009999}* Uþsisakiai dviraèiø kroviná.Vaþiuok pasiimk kroviná ir nuveþk kur tau liepia!(Krovinio pirkimo vieta paþymëta maðinele þemëlapyje)");
				    playerDB[playerid][uzsisakedviracius] = 1;
				    playerDB[playerid][prisikroves] = 0;
				}
				case 3:
				{
				    if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Krovinius uþsisakyti gali tik fûristai!.");
				    if(playerDB[playerid][uzsisakedviracius] == 1 || playerDB[playerid][uzsisakebaldus] == 1 || playerDB[playerid][uzsisakebuittech] == 1 || playerDB[playerid][uzsisakeanglis] == 1 || playerDB[playerid][uzsisakezvyra] == 1 || playerDB[playerid][uzsisakegunus] || playerDB[playerid][uzsisakenarkus] || playerDB[playerid][uzsisakezole]) return SendClientMessage(playerid, RED, "Tu jau esi uþsisakæs kroviná! Vaþiuok ir nugabenk já, arba atðauk já.");
				    SetPlayerMapIcon( playerid, 2, 2187.4338, -2258.3103, 13.4498, 51, 0, MAPICON_GLOBAL );
				    SetPlayerCheckpointEx(playerid, 10, 2192.8506,-2261.2058,14.1706,4);
				    SendClientMessage(playerid, -1, "{009999}* Uþsisakiai baldø kroviná.Vaþiuok pasiimk kroviná ir nuveþk kur tau liepia!(Krovinio pirkimo vieta paþymëta maðinele þemëlapyje)");
				    playerDB[playerid][uzsisakebaldus] = 1;
				    playerDB[playerid][prisikroves] = 0;
				}
				case 4:
				{
				    if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Krovinius uþsisakyti gali tik fûristai!.");
				    if(playerDB[playerid][rangas] < 2) return SendClientMessage(playerid, RED, "* Ðità kroviná gali veþti tik iðtikimo fûristo rangà turintis darbuotojas!");
				    if(playerDB[playerid][uzsisakedviracius] == 1 || playerDB[playerid][uzsisakebaldus] == 1 || playerDB[playerid][uzsisakebuittech] == 1 || playerDB[playerid][uzsisakeanglis] == 1 || playerDB[playerid][uzsisakezvyra] == 1 || playerDB[playerid][uzsisakegunus] || playerDB[playerid][uzsisakenarkus] || playerDB[playerid][uzsisakezole]) return SendClientMessage(playerid, RED, "Tu jau esi uþsisakæs kroviná! Vaþiuok ir nugabenk já, arba atðauk já.");
				    SetPlayerMapIcon( playerid, 2, 2781.1106, 912.8942, 10.7500, 51, 0, MAPICON_GLOBAL );
				    SetPlayerCheckpointEx(playerid, 11, 2826.3782,955.9203,11.3566,4);
				    SendClientMessage(playerid, -1, "{009999}* Uþsisakiai buitinës technikos kroviná.Vaþiuok pasiimk kroviná ir nuveþk kur tau liepia!(Krovinio pirkimo vieta paþymëta maðinele þemëlapyje)");
				    playerDB[playerid][uzsisakebuittech] = 1;
				    playerDB[playerid][prisikroves] = 0;
				}
				case 5:
				{
				    if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Krovinius uþsisakyti gali tik fûristai!.");
				    if(playerDB[playerid][rangas] < 3) return SendClientMessage(playerid, RED, "* Ðità kroviná gali veþti tik fûristo profesionalo rangà turintis darbuotojas!");
				    if(playerDB[playerid][uzsisakedviracius] == 1 || playerDB[playerid][uzsisakebaldus] == 1 || playerDB[playerid][uzsisakebuittech] == 1 || playerDB[playerid][uzsisakeanglis] == 1 || playerDB[playerid][uzsisakezvyra] == 1 || playerDB[playerid][uzsisakegunus] || playerDB[playerid][uzsisakenarkus] || playerDB[playerid][uzsisakezole]) return SendClientMessage(playerid, RED, "Tu jau esi uþsisakæs kroviná! Vaþiuok ir nugabenk já, arba atðauk já.");
				    SetPlayerMapIcon( playerid, 2, -1937.1063, -1778.3123, 28.5099, 51, 0, MAPICON_GLOBAL );
				    SetPlayerCheckpointEx(playerid, 12, -1882.8727,-1726.0092,22.3576,4);
				    SendClientMessage(playerid, -1, "{009999}* Uþsisakiai angliø kroviná.Vaþiuok pasiimk kroviná ir nuveþk kur tau liepia!(Krovinio pirkimo vieta paþymëta maðinele þemëlapyje)");
				    playerDB[playerid][uzsisakeanglis] = 1;
				    playerDB[playerid][prisikroves] = 0;
				}
				case 6:
				{
				    if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Krovinius uþsisakyti gali tik fûristai!.");
				    if(playerDB[playerid][rangas] < 4) return SendClientMessage(playerid, RED, "* Ðità kroviná gali veþti tik fûristo senbûvio rangà turintis darbuotojas!");
				    if(playerDB[playerid][uzsisakedviracius] == 1 || playerDB[playerid][uzsisakebaldus] == 1 || playerDB[playerid][uzsisakebuittech] == 1 || playerDB[playerid][uzsisakeanglis] == 1 || playerDB[playerid][uzsisakezvyra] == 1 || playerDB[playerid][uzsisakegunus] || playerDB[playerid][uzsisakenarkus] || playerDB[playerid][uzsisakezole]) return SendClientMessage(playerid, RED, "Tu jau esi uþsisakæs kroviná! Vaþiuok ir nugabenk já, arba atðauk já.");
				    SetPlayerMapIcon( playerid, 2, 812.1389, 845.2537, 10.1076, 51, 0, MAPICON_GLOBAL );
				    SetPlayerCheckpointEx(playerid, 13, 565.4406,857.5896,-42.2933,4);
				    SendClientMessage(playerid, -1, "{009999}* Uþsisakiai þvyro kroviná.Vaþiuok pasiimk kroviná ir nuveþk kur tau liepia!(Krovinio pirkimo vieta paþymëta maðinele þemëlapyje)");
				    playerDB[playerid][uzsisakezvyra] = 1;
				    playerDB[playerid][prisikroves] = 0;
				}
				
				case 7:
				{
				    if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Krovinius uþsisakyti gali tik fûristai!.");
				    if(playerDB[playerid][rangas] < 4) return SendClientMessage(playerid, RED, "* Ðità kroviná gali veþti tik fûristo senbûvio rangà turintis darbuotojas!");
				    if(playerDB[playerid][uzsisakedviracius] == 1 || playerDB[playerid][uzsisakebaldus] == 1 || playerDB[playerid][uzsisakebuittech] == 1 || playerDB[playerid][uzsisakeanglis] == 1 || playerDB[playerid][uzsisakezvyra] == 1 || playerDB[playerid][uzsisakegunus] || playerDB[playerid][uzsisakenarkus] || playerDB[playerid][uzsisakezole]) return SendClientMessage(playerid, RED, "Tu jau esi uþsisakæs kroviná! Vaþiuok ir nugabenk já, arba atðauk já.");
				    if(playerDB[playerid][KadaVeze] > gettime()) return SendClientMessage(playerid, RED, "* Nuo tavo praito veþto nelegalaus krovinio nepraëjo 3 valandos!");
				    SetPlayerMapIcon( playerid, 2, 867.2759,-1250.4971,14.9836, 51, 0, MAPICON_GLOBAL );
				    SetPlayerCheckpointEx(playerid, 18, 867.2759,-1250.4971,14.9836,4);
				    SendClientMessage(playerid, -1, "{009999}* Uþsisakiai ginklø kroviná.Vaþiuok pasiimk kroviná ir nuveþk kur tau liepia!(Krovinio pirkimo vieta paþymëta maðinele þemëlapyje)");
				    playerDB[playerid][uzsisakegunus] = 1;
				    playerDB[playerid][prisikroves] = 0;
				}
				case 8:
				{
				    if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Krovinius uþsisakyti gali tik fûristai!.");
				    if(playerDB[playerid][rangas] < 4) return SendClientMessage(playerid, RED, "* Ðità kroviná gali veþti tik fûristo senbûvio rangà turintis darbuotojas!");
				    if(playerDB[playerid][uzsisakedviracius] == 1 || playerDB[playerid][uzsisakebaldus] == 1 || playerDB[playerid][uzsisakebuittech] == 1 || playerDB[playerid][uzsisakeanglis] == 1 || playerDB[playerid][uzsisakezvyra] == 1 || playerDB[playerid][uzsisakegunus] || playerDB[playerid][uzsisakenarkus] || playerDB[playerid][uzsisakezole]) return SendClientMessage(playerid, RED, "Tu jau esi uþsisakæs kroviná! Vaþiuok ir nugabenk já, arba atðauk já.");
					if(playerDB[playerid][KadaVeze] > gettime()) return SendClientMessage(playerid, RED, "* Nuo tavo praito veþto nelegalaus krovinio nepraëjo 3 valandos!");
					SetPlayerMapIcon( playerid, 2, 798.9778,-609.0302,16.3432, 51, 0, MAPICON_GLOBAL );
				    SetPlayerCheckpointEx(playerid, 19, 798.9778,-609.0302,16.3432,4);
				    SendClientMessage(playerid, -1, "{009999}* Uþsisakiai narkotikø kroviná.Vaþiuok pasiimk kroviná ir nuveþk kur tau liepia!(Krovinio pirkimo vieta paþymëta maðinele þemëlapyje)");
				    playerDB[playerid][uzsisakenarkus] = 1;
				    playerDB[playerid][prisikroves] = 0;
				}
				case 9:
				{
				    if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Krovinius uþsisakyti gali tik fûristai!.");
				    if(playerDB[playerid][rangas] < 4) return SendClientMessage(playerid, RED, "* Ðità kroviná gali veþti tik fûristo senbûvio rangà turintis darbuotojas!");
				    if(playerDB[playerid][uzsisakedviracius] == 1 || playerDB[playerid][uzsisakebaldus] == 1 || playerDB[playerid][uzsisakebuittech] == 1 || playerDB[playerid][uzsisakeanglis] == 1 || playerDB[playerid][uzsisakezvyra] == 1 || playerDB[playerid][uzsisakegunus] || playerDB[playerid][uzsisakenarkus] || playerDB[playerid][uzsisakezole]) return SendClientMessage(playerid, RED, "Tu jau esi uþsisakæs kroviná! Vaþiuok ir nugabenk já, arba atðauk já.");
                    if(playerDB[playerid][KadaVeze] > gettime()) return SendClientMessage(playerid, RED, "* Nuo tavo praito veþto nelegalaus krovinio nepraëjo 3 valandos!");
					SetPlayerMapIcon( playerid, 2, 1666.4413,731.9531,10.8203, 51, 0, MAPICON_GLOBAL );
				    SetPlayerCheckpointEx(playerid, 20, 1666.4413,731.9531,10.8203,4);
				    SendClientMessage(playerid, -1, "{009999}* Uþsisakiai þolës kroviná.Vaþiuok pasiimk kroviná ir nuveþk kur tau liepia!(Krovinio pirkimo vieta paþymëta maðinele þemëlapyje)");
				    playerDB[playerid][uzsisakezole] = 1;
				    playerDB[playerid][prisikroves] = 0;
				}
				case 10:
				{
				    if(playerDB[playerid][specialybe] != 11) return SendClientMessage(playerid, RED, "* Krovinius uþsisakyti gali tik fûristai!.");
				    new str[150], strf[405];
				    str = "Krovinys | Kaina pirkti kroviná | Kaina priduoti kroviná\n \nDviraèiø perveþimas | 500 | 1000\nBaldø perveþimas | 500 | 1500\n", strcat(strf, str);
				    str = "Buitinës technikos perveþimas | 500 | 2000\nAngliø perveþimas | 500 | 2500\nÞvyro perveþimas | 500 | 3000\n", strcat(strf, str);
				    str = "Ginklø perveþimas | 500 | 4500\nNarkotikø perveþimas | 500 | 5000\nÞolës perveþimas | 500 | 5500\n{FF0000}Atðaukti uþsakymus.", strcat(strf, str);
				    ShowPlayerDialog(playerid,1547,DIALOG_STYLE_LIST,"Kroviniai", strf,"Pasirinkti","Atðaukti");
				    SendClientMessage(playerid, -1, "{009999}* Atðaukiai visus uþsakymus. Galite pasiimti naujà kroviná.");
				    RemovePlayerMapIcon( playerid, 2 );
				    playerDB[playerid][uzsisakedviracius] = 0;
				    playerDB[playerid][uzsisakebaldus] = 0;
				    playerDB[playerid][uzsisakebuittech] = 0;
				    playerDB[playerid][uzsisakeanglis] = 0;
				    playerDB[playerid][uzsisakezvyra] = 0;
				    playerDB[playerid][uzsisakegunus] = 0;
				    playerDB[playerid][uzsisakenarkus] = 0;
				    playerDB[playerid][uzsisakezole] = 0;
				    playerDB[playerid][prisikroves] = 0;
				}
			}
		}
		return 1;
	}
//JAILO DARBAS
	if(dialogid == 8574)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                playerDB[playerid][nesamaisa] = false;
	                DisableAllPlayerCheckpoints(playerid);
					SetPlayerCheckpointEx(playerid, 4, 2755.5071,2747.8848,14.5450, 2.0);
					SendClientMessage(playerid, RED, "* [KALËJIMAS] Pradëjai neðioti maiðus. Suneðiojus 10 maiðø pamaþës kalëjmo laikas.");
				}
				case 1:
				{
				    playerDB[playerid][nesamaisa] = false;
					DisableAllPlayerCheckpoints(playerid);
					playerDB[playerid][atnesemaisu] = 0;
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(playerid, 0);
					SendClientMessage(playerid, RED, "* [KALËJIMAS] Nutraukiai maiðø neðimà, tau teks sëdëti kalëjime kiek priklauso!");
				}
			}
		}
		return 1;
	}
//Kroviku darbas
	if(dialogid == 8575)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
	            {
	                if(playerDB[playerid][specialybe] != 25) return SendClientMessage(playerid, RED, "* Maiðus galima neðioti tik krovikams.");
	                playerDB[playerid][nesamaisadarbas] = false;
	                DisableAllPlayerCheckpoints(playerid);
					SetPlayerCheckpointEx(playerid, 6, 1081.2303,-344.8193,73.9807, 2.0);
					SendClientMessage(playerid, RED, "* [Krovikai] Eikite pasiimti maiðà, ir neðkite kur nurodys raudonas check point MINI MAPP'e .");
				}
				case 1:
				{
				    playerDB[playerid][nesamaisadarbas] = false;
					DisableAllPlayerCheckpoints(playerid);
					playerDB[playerid][atnesemaisud] = 0;
					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
					RemovePlayerAttachedObject(playerid, 0);
					SendClientMessage(playerid, RED, "* [Krovikai] Nutraukiai maiðø neðimà.");
				}
			}
		}
		return 1;
	}
// Pelno valdymas
    if(dialogid == PELNO_DIALOG1)
    {
        if(!response) return ShowPlayerDialog(playerid, 9800, DIALOG_STYLE_LIST, "Direktorio ofisas", "Priimti þaidëjà á darbà\nIðmesti darbuotojà ið darbo\nVisi darbuotojai\nPaskelbti praneðimà\nPelno valdymas\nUþdëti darbuotojui rangà\nNuiimti darbuotojui rangà\nÁspëti darbuotojà", "Rinktis", "Iðeiti");
        if(response)
        {
            if(GetPelnasIDFromLeader(playerid) == -1) return 1;
	        switch(listitem)
	        {
	            case 0:
				{
				    new str[30];
				    format(str, sizeof(str), "{ffffff}Pelne: %s", konvertuoti_pinigus(Pelnas[GetPelnasIDFromLeader(playerid)]));
				    ShowPlayerDialog(playerid, PELNO_DIALOG2, DIALOG_STYLE_MSGBOX, "{ffffff}Pelno valdymas.", str, "Atgal", "");//Karoè jo tas neveikia, poto pvz nori padeti ane, paspaudi ismeta input langa, irasai skaiciu nereguoja, su paimti tas pats, isdalinti paspaudi irgi nesuveikia o visiems kitiems darbams suveikia tik tiems
				}
				case 1: ShowPlayerDialog(playerid, PELNO_DIALOG3, DIALOG_STYLE_INPUT, "{ffffff}Pelno valdymas.", "Áveskite sumà kuria norite paimti:", "Paimti", "Atgal");
				case 2: ShowPlayerDialog(playerid, PELNO_DIALOG4, DIALOG_STYLE_INPUT, "{ffffff}Pelno valdymas.", "Áveskite sumà kuria norite padëti:", "Padeti", "Atgal");
				case 3:
				{
				    new darbuotojai = CountPlayerInFaction(GetJobFromFaction(playerDB[playerid][plead]));
				    if(darbuotojai < 1) return SendClientMessage(playerid, RED, "Nëra kam iðdalinti.");
					new kiekduoti = floatround(Pelnas[GetPelnasIDFromLeader(playerid)] / darbuotojai);
					for(new p = 0; p < MAX_PLAYERS; p++)
					{
					    if(IsPlayerNPC(p) || !IsPlayerConnected(p)) continue;
					    if(playerDB[p][specialybe] == GetJobFromFaction(playerDB[playerid][plead]))
					    {
					        GivePlayerMoneyA(p, kiekduoti);
						}
					}
					SendClientMessage(playerid, BALTA, "Sëkmingai, iðdalinote savo darbuotojams pinigus.");
					Pelnas[GetPelnasIDFromLeader(playerid)] = 0;
					SavePelnai();
				}
			}
        }
        return 1;
	}
	if(dialogid == PELNO_DIALOG2) return ShowPlayerDialog(playerid, PELNO_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Pelno valdymas.", "{ffffff} Balansas.\n Paimti.\n Padëti.\n Iðdalinti.", "Pasirinkti", "Uzdaryti");
	if(dialogid == PELNO_DIALOG3)
	{
	    if(!response) return ShowPlayerDialog(playerid, PELNO_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Pelno valdymas.", "{ffffff} Balansas.\n Paimti.\n Padëti.\n Iðdalinti.", "Pasirinkti", "Uzdaryti");
	    if(response)
	    {
	        if(GetPelnasIDFromLeader(playerid) == -1) return 1;
	        if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, PELNO_DIALOG3, DIALOG_STYLE_INPUT, "{ffffff}Pelno valdymas.", "Áveskite sumà kuria norite paimti:", "Paimti", "Atgal");
			if(strval(inputtext) < 1) return ShowPlayerDialog(playerid, PELNO_DIALOG3, DIALOG_STYLE_INPUT, "{ffffff}Pelno valdymas.", "Áveskite sumà kuria norite paimti:", "Paimti", "Atgal");
			if(Pelnas[GetPelnasIDFromLeader(playerid)] < strval(inputtext)) return ShowPlayerDialog(playerid, PELNO_DIALOG3, DIALOG_STYLE_INPUT, "{ffffff}Pelno valdymas.", "Pelne tiek nëra.\nÁveskite sumà kurià norite paimti:", "Paimti", "Atgal");
            Pelnas[GetPelnasIDFromLeader(playerid)] -= strval(inputtext);
            GivePlayerMoneyA(playerid, strval(inputtext));
            SavePelnai();
            SendClientMessage(playerid, YELLOW, "Pasiemiai pinigus is pelno.");
		}
		return 1;
	}
	if(dialogid == PELNO_DIALOG4)
	{
	    if(!response) return ShowPlayerDialog(playerid, PELNO_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Pelno valdymas.", "{ffffff} Balansas.\n Paimti.\n Padëti.\n Iðdalinti.", "Pasirinkti", "Uzdaryti");
	    if(response)
	    {
	        if(GetPelnasIDFromLeader(playerid) == -1) return 1;
	        if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, PELNO_DIALOG4, DIALOG_STYLE_INPUT, "{ffffff}Pelno valdymas.", "Áveskite sumà kurià norite padëti:", "Padeti", "Atgal");
            if(strval(inputtext) < 1) return ShowPlayerDialog(playerid, PELNO_DIALOG4, DIALOG_STYLE_INPUT, "{ffffff}Pelno valdymas.", "Áveskite sumà kurià norite padëti:", "Padeti", "Atgal");
			if(GetPlayerMoneyA(playerid) < strval(inputtext)) return ShowPlayerDialog(playerid, PELNO_DIALOG4, DIALOG_STYLE_INPUT, "{ffffff}Pelno valdymas.", "Su savimi jus tiek neturite.\nIveskite suma kuria norite padeti:", "Padeti", "Atgal");
            Pelnas[GetPelnasIDFromLeader(playerid)] += strval(inputtext);
            GivePlayerMoneyA(playerid, - strval(inputtext));
            SavePelnai();
            SendClientMessage(playerid, YELLOW, "Padëjote pinigus á pelnà.");
		}
		return 1;
	}
// Verslo valdymas
    if(dialogid == BUSINESS_DIALOG1)
	{
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0:
				{
				    new str[50];
				    format(str, sizeof(str), "Uzdirbta: %d\nAr noresite paimti pinigus?", bInfo[playerDB[playerid][VersloID]][bMoney]);
					ShowPlayerDialog(playerid, BUSINESS_DIALOG2, DIALOG_STYLE_MSGBOX, "{ffffff}Verslo meniu.", str, "Taip", "Ne");
				}
				case 1:
				{
				    new str[50];
				    format(str, sizeof(str), "Ar tikrai norite parduoti savo versla uz %d?", floatround(bInfo[playerDB[playerid][VersloID]][bCost]  * 0.4));
                    ShowPlayerDialog(playerid, BUSINESS_DIALOG3, DIALOG_STYLE_MSGBOX, "{ffffff}Verslo meniu.", str, "Taip", "Ne");
				}
				case 2: ShowPlayerDialog(playerid, BUSINESS_DIALOG4, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Noredami perleisti versla zmogui,\nirasykite jo Varda_Pavarde i si laukeli:", "Perleisti", "Atgal");
				case 3: ShowPlayerDialog(playerid, BUSINESS_DIALOG5, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Noredami parduoti versla zmogui,\nirasykite jo Varda_Pavarde i si laukeli:", "Toliau", "Atgal");
			}
		}
		return 1;
	}
	if(dialogid == BUSINESS_DIALOG2)
	{
	    if(!response) return ShowPlayerDialog(playerid, BUSINESS_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Verslo meniu.", "{ffffff}[V] Paimti uzdirbtu pinigus is verslo.\n[V] Parduoti versla savivaldybei.\n[V] Perleisti versla zmogui.\n[V] Parduoti versla zmogui.", "Rinktis", "Uzdaryti");
	    if(response)
	    {
	        if(bInfo[playerDB[playerid][VersloID]][bMoney] <= 0) return SendClientMessage(playerid, RED, "Jus dar nieko neuzdirbote.");
	        GivePlayerMoneyA(playerid, bInfo[playerDB[playerid][VersloID]][bMoney]);
	        bInfo[playerDB[playerid][VersloID]][bMoney] = 0;
	        ShowPlayerDialog(playerid, BUSINESS_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Verslo meniu.", "{ffffff}[V] Paimti uzdirbtu pinigus is verslo.\n[V] Parduoti versla savivaldybei.\n[V] Perleisti versla zmogui.\n[V] Parduoti versla zmogui.", "Rinktis", "Uzdaryti");
	    }
	    return 1;
	}
	if(dialogid == BUSINESS_DIALOG3)
	{
	    if(!response) return ShowPlayerDialog(playerid, BUSINESS_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Verslo meniu.", "{ffffff}[V] Paimti uzdirbtu pinigus is verslo.\n[V] Parduoti versla savivaldybei.\n[V] Perleisti versla zmogui.\n[V] Parduoti versla zmogui.", "Rinktis", "Uzdaryti");
	    if(response)
	    {
	        new b = playerDB[playerid][VersloID], str[42];
			GivePlayerMoneyA(playerid, floatround(bInfo[b][bCost]  * 0.4) + bInfo[b][bMoney]);
			bInfo[b][bBuyed] = false;
			format(bInfo[b][bOwner], 2, "-");
			bInfo[b][bMoney] = 0;
			UpdateBusiness(b);
			SaveBusiness(b);
			format(str, sizeof(str), "Verslas sekmingai parduotas uz %d", floatround(bInfo[b][bCost]  * 0.4));
			SendClientMessage(playerid, YELLOW, str);
		}
	    return 1;
	}
	if(dialogid == BUSINESS_DIALOG4)
	{
	    if(!response) return ShowPlayerDialog(playerid, BUSINESS_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Verslo meniu.", "{ffffff}[V] Paimti uzdirbtu pinigus is verslo.\n[V] Parduoti versla savivaldybei.\n[V] Perleisti versla zmogui.\n[V] Parduoti versla zmogui.", "Rinktis", "Uzdaryti");
	    if(response)
	    {
			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, BUSINESS_DIALOG4, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Zaidejo su tokiu vardu nera.\nNoredami perleisti versla zmogui,\nirasykite jo Varda_Pavarde i si laukeli:", "Perleisti", "Atgal");
            new pID = GetPlayeridMid(inputtext);
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, BUSINESS_DIALOG4, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Zaidejo su tokiu vardu nera.\nNoredami perleisti versla zmogui,\nirasykite jo Varda_Pavarde i si laukeli:", "Perleisti", "Atgal");
			new b = playerDB[playerid][VersloID], str[50];
			if(PlayerHaveBusiness(pID) != -1) return SendClientMessage(playerid, RED, "Zaidejas jau turi versla.");
			GivePlayerMoneyA(playerid, bInfo[b][bMoney]);
			format(bInfo[b][bOwner], 21, "%s", GetPlayerNameEx(pID));
			bInfo[b][bMoney] = 0;
			UpdateBusiness(b);
			SaveBusiness(b);
			format(str, sizeof(str), "Atidavete versla %s.", GetPlayerNameEx(pID));
			SendClientMessage(playerid, YELLOW, str);
			format(str, sizeof(str), "%s atidave jums savo versla.", GetPlayerNameEx(playerid));
			SendClientMessage(pID, YELLOW, str);
		}
	    return 1;
	}
	if(dialogid == BUSINESS_DIALOG5)
	{
	    if(!response) return ShowPlayerDialog(playerid, BUSINESS_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Verslo meniu.", "{ffffff}[V] Paimti uzdirbtu pinigus is verslo.\n[V] Parduoti versla savivaldybei.\n[V] Perleisti versla zmogui.\n[V] Parduoti versla zmogui.", "Rinktis", "Uzdaryti");
	    if(response)
	    {
			if(IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, BUSINESS_DIALOG5, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Zaidejo su tokiu vardu nera\nNoredami parduoti versla zmogui,\nirasykite jo Varda_Pavarde i si laukeli:", "Toliau", "Atgal");
            new pID = GetPlayeridMid(inputtext);
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, BUSINESS_DIALOG5, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Zaidejo su tokiu vardu nera\nNoredami parduoti versla zmogui,\nirasykite jo Varda_Pavarde i si laukeli:", "Toliau", "Atgal");
            if(PlayerHaveBusiness(playerid) == -1) return SendClientMessage(playerid, RED, "Neturite verslo.");
            if(PlayerHaveBusiness(pID) != -1) return SendClientMessage(playerid, RED, "Zaidejas jau turi versla.");
			new Float:pPos[3];
			GetPlayerPos(pID, pPos[0], pPos[1], pPos[2]);
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, pPos[0], pPos[1], pPos[2])) return SendClientMessage(playerid, RED, "Zaidejas per toli.");
			ShowPlayerDialog(playerid, BUSINESS_DIALOG6, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Noredami parduoti versla zmogui,\nirasykite kaina i si laukeli:", "Parduoti", "Atgal");
            playerDB[playerid][ChoosedPlayer] = pID;
		}
		return 1;
	}
	if(dialogid == BUSINESS_DIALOG6)
	{
	    if(!response) return ShowPlayerDialog(playerid, BUSINESS_DIALOG1, DIALOG_STYLE_LIST, "{ffffff}Verslo meniu.", "{ffffff}[V] Paimti uzdirbtu pinigus is verslo.\n[V] Parduoti versla savivaldybei.\n[V] Perleisti versla zmogui.\n[V] Parduoti versla zmogui.", "Rinktis", "Uzdaryti");
	    if(response)
	    {
			if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, BUSINESS_DIALOG6, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Suma neteisinga.\nNoredami parduoti versla zmogui,\nirasykite kaina i si laukeli:", "Toliau", "Atgal");
            if(strval(inputtext) < 1) return ShowPlayerDialog(playerid, BUSINESS_DIALOG6, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Suma neteisinga.\nNoredami parduoti versla zmogui,\nirasykite kaina i si laukeli:", "Toliau", "Atgal");
			if(strlen(inputtext) > 9) return ShowPlayerDialog(playerid, BUSINESS_DIALOG6, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Suma per didele.\nNoredami parduoti versla zmogui,\nirasykite kaina i si laukeli:", "Toliau", "Atgal");
            new pID = playerDB[playerid][ChoosedPlayer], str[80];
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, BUSINESS_DIALOG5, DIALOG_STYLE_INPUT, "{ffffff}Verslo meniu.", "Zaidejo su tokiu vardu nera.\nNoredami parduoti versla zmogui,\nirasykite jo Varda_Pavarde i si laukeli:", "Toliau", "Atgal");
            if(PlayerHaveBusiness(playerid) == -1) return SendClientMessage(playerid, RED, "Neturite verslo.");
            if(PlayerHaveBusiness(pID) != -1) return SendClientMessage(playerid, RED, "Zaidejas jau turi versla.");
            playerDB[pID][CanTakeBusiness] = playerid;
			playerDB[pID][BusinessCost] = strval(inputtext);
			SendClientMessage(playerid, YELLOW, "Pasiulyte zaidejui pirkti versla.");
			format(str, sizeof(str), "%s siulo jums pirkti versla uz %d\nAr sutinkate:", GetPlayerNameEx(playerid), strval(inputtext));
			ShowPlayerDialog(pID, BUSINESS_DIALOG7, DIALOG_STYLE_MSGBOX, "{ffffff}Verslo pirkimas.", str, "Taip", "Ne");
		}
		return 1;
	}
	if(dialogid == BUSINESS_DIALOG7)
	{
	    new pID = playerDB[playerid][CanTakeBusiness];
		new vKaina = playerDB[playerid][BusinessCost];
		if(!response)
		{
		    SendClientMessage(playerid, YELLOW, "Atsisakete pirkti versla.");
		    SendClientMessage(pID, YELLOW, "Atsisake pirkti versla.");
		}
		if(response)
		{
		    if(pID == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "Pardavejas atsijunges.");
		    if(PlayerHaveBusiness(pID) == -1) return SendClientMessage(playerid, RED, "Zaidejas jau nebeturi verslo.");
		    if(PlayerHaveBusiness(playerid) != -1) return SendClientMessage(playerid, RED, "Jus jau turite versla.");
		    if(GetPlayerMoneyA(playerid) < vKaina)
		    {
		        SendClientMessage(playerid, RED, "Jums neuztenka pinigu nupirkti versla.");
		        SendClientMessage(pID, RED, "Zaidejui neuzteko pinigu nupirkti versla.");
		        return 1;
		    }
		    new b = PlayerHaveBusiness(pID);
			GivePlayerMoneyA(playerid, - vKaina);
			GivePlayerMoneyA(pID, bInfo[b][bMoney] + vKaina);
			format(bInfo[b][bOwner], 21, "%s", GetPlayerNameEx(playerid));
			bInfo[b][bMoney] = 0;
			UpdateBusiness(b);
			SaveBusiness(b);
			SendClientMessage(playerid, YELLOW, "Nusipirkote versla.");
			SendClientMessage(pID, YELLOW, "Pardavete versla.");
		}
		return 1;
	}
	// Namø valdymas .
	if(dialogid == HOUSE_DIALOG)
	{
	    if(response)
	    {
	        new str[82];
	        switch(listitem)
	        {
	            case 0: ShowPlayerDialog(playerid, HOUSE_DIALOG1, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Norëdami padëti pinigus, áveskite sumà:", "Padëti", "Atgal");
				case 1:
				{
				    format(str, 82, "{ffffff}Namo seife turite %d.\nNorëdami pasiimti pinigus, áveskite sumà.", hInfo[playerDB[playerid][NamoID]][Money]);
                    ShowPlayerDialog(playerid, HOUSE_DIALOG2, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", str, "Paimti", "Atgal");
				}
				case 2:
				{
				    format(str, 60, "{ffffff}Ar tikrai norite parduoti savo namà uþ %d?", floatround(hInfo[playerDB[playerid][NamoID]][Cost]  * 0.5));
                    ShowPlayerDialog(playerid, HOUSE_DIALOG3, DIALOG_STYLE_MSGBOX, "{ffffff}Namo meniu", str, "Taip", "Ne");
				}
				case 3: ShowPlayerDialog(playerid, HOUSE_DIALOG4, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Norëdami perleisti namà þmogui,\náraðykite jo Varda_Pavarde arba ID á ðá laukelá:", "Perleisti", "Atgal");
				case 4: ShowPlayerDialog(playerid, HOUSE_DIALOG5, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Norëdami parduoti namà þmogui,\náraðykite jo Varda_Pavarde arba ID ir kaina á ðá laukelá:", "Parduoti", "Atgal");
			}
		}
		return 1;
	}
	if(dialogid == HOUSE_DIALOG1)
	{
	    if(!response) return ShowPlayerDialog(playerid, HOUSE_DIALOG, DIALOG_STYLE_LIST, "{ffffff}Namo meniu", "{ffffff}Padëti pinigus.\nPaimti pinigus.\nParduoti namà.\nPerleisti namà.\nParduoti namà þmogui.\nRemontuoti namà.", "Rinktis", "Uþdaryti");
	    if(response)
	    {
	        if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, HOUSE_DIALOG1, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Neteisingai ávesta suma.\nNorëdami padëti pinigus, áveskite sumà:", "Padëti", "Atgal");
			new kiek = strval(inputtext), house = playerDB[playerid][NamoID];
			if(kiek < 1) return ShowPlayerDialog(playerid, HOUSE_DIALOG1, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Neteisingai ávesta suma.\nNorëdami padëti pinigus, áveskite sumà:", "Padëti", "Atgal");
			if(GetPlayerMoneyA(playerid) < kiek) return ShowPlayerDialog(playerid, HOUSE_DIALOG1, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Jûs neturite tiek pinigø.\nNorëdami padëti pinigus, áveskite sumà:", "Padëti", "Atgal");
			hInfo[house][Money] += kiek;
			GivePlayerMoneyA(playerid, - kiek);
			SendClientMessage(playerid, -1, "Padëjote pinigus á seifà.");
			SaveHouse(house);
		}
	    return 1;
	}
	if(dialogid == HOUSE_DIALOG2)
	{
	    if(!response) return ShowPlayerDialog(playerid, HOUSE_DIALOG, DIALOG_STYLE_LIST, "{ffffff}Namo meniu", "{ffffff}Padëti pinigus.\nPaimti pinigus.\nParduoti namà.\nPerleisti namà.\nParduoti namà þmogui.\nRemontuoti namà.", "Rinktis", "Uþdaryti");
	    if(response)
	    {
	        if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, HOUSE_DIALOG2, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Neteisingai ávesta suma.\nNorëdami paimti pinigus, áveskite sumà:", "Paimti", "Atgal");
            new kiek = strval(inputtext), house = playerDB[playerid][NamoID];
			if(kiek < 1) return ShowPlayerDialog(playerid, HOUSE_DIALOG2, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Neteisingai ávesta suma.\nNorëdami paimti pinigus, áveskite sumà:", "Paimti", "Atgal");
			if(hInfo[house][Money] < kiek) return ShowPlayerDialog(playerid, HOUSE_DIALOG2, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Seife tiek pinigø nëra.\nNorëdami paimti pinigus, áveskite sumà:", "Paimti", "Atgal");
			hInfo[house][Money] -= kiek;
			GivePlayerMoneyA(playerid, kiek);
			SendClientMessage(playerid, -1, "Paemëte pinigus ið seifo.");
			SaveHouse(house);
		}
	    return 1;
	}
	if(dialogid == HOUSE_DIALOG3)
	{
	    if(!response) return ShowPlayerDialog(playerid, HOUSE_DIALOG, DIALOG_STYLE_LIST, "{ffffff}Namo meniu", "{ffffff}Padëti pinigus.\nPaimti pinigus.\nParduoti namà.\nPerleisti namà.\nParduoti namà þmogui.\nRemontuoti namà.", "Rinktis", "Uþdaryti");
	    if(response)
	    {
			new house = playerDB[playerid][NamoID], kiek = floatround(hInfo[playerDB[playerid][NamoID]][Cost]  * 0.5), str[130];
			GivePlayerMoneyA(playerid, kiek + hInfo[house][Money]);
			hInfo[house][Locked] = true;
			hInfo[house][Buyed] = false;
			format(hInfo[house][Owner], 5, "Nera");
			hInfo[house][Money] = 0;
			format(str, 150, "{66ffcc}Namo numeris:{1BB300} %d\n{66ffcc}Namas parduodamas\nNamo kaina:{1BB300} %d\n{66ffcc}Norint nusipirkti - spauskite ENTER", house + 1, hInfo[house][Cost]);
			Update3DTextLabelText(hInfo[house][House3D], -1, str);
			DestroyPickup(hInfo[house][HousePickup]);
			hInfo[house][HousePickup] = CreatePickup(1273, 1, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], 0);
			SaveHouse(house);
			RemovePlayersFromHouse(house);
			format(str, 42, "Namas sëkmingai parduotas uþ %d.", kiek);
			SendClientMessage(playerid, -1, str);
		}
	    return 1;
	}
	if(dialogid == HOUSE_DIALOG4)
	{
	    if(!response) return ShowPlayerDialog(playerid, HOUSE_DIALOG, DIALOG_STYLE_LIST, "{ffffff}Namo meniu", "{ffffff}Padëti pinigus.\nPaimti pinigus.\nParduoti namà.\nPerleisti namà.\nParduoti namà þmogui.\nRemontuoti namà.", "Rinktis", "Uþdaryti");
	    if(response)
	    {
	        new pID, house = playerDB[playerid][NamoID], str[130];
	        if(sscanf(inputtext, "u", pID)) return ShowPlayerDialog(playerid, HOUSE_DIALOG4, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Þaidëjo su tokiu vardu arba ID nëra.\nNorëdami perleisti namà þmogui,\náraðykite jo Varda_Pavarde arba ID á ðá laukelá:", "Perleisti", "Atgal");
			if(pID == playerid) return SendClientMessage(playerid, -1, "Klaida, sau namo perleisti negalite.");
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, HOUSE_DIALOG4, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu", "{ffffff}Þaidëjo su tokiu vardu arba ID nëra.\nNorëdami perleisti namà þmogui,\náraðykite jo Varda_Pavarde arba ID á ðá laukelá:", "Perleisti", "Atgal");
			if(PlayerHaveHouse(pID) != -1) return SendClientMessage(playerid, -1, "Klaida, þaidëjas jau turi namà.");
			GivePlayerMoneyA(playerid, hInfo[house][Money]);
			format(hInfo[house][Owner], 21, "%s", GetPlayerNameEx(pID));
			hInfo[house][Money] = 0;
			format(str, 104, "{66ffcc}Namo numeris: {1BB300}%d\n{66ffcc}Namas neparduodamas\nSavininkas: {1BB300}%s", house + 1, hInfo[house][Owner]);
			Update3DTextLabelText(hInfo[house][House3D], -1, str);
			SaveHouse(house);
			RemovePlayersFromHouse(house);
			format(str, 37, "Atidavëte namà %s.", GetPlayerNameEx(pID));
			SendClientMessage(playerid, -1, str);
			format(str, 45, "%s atidavë jums savo namà.", GetPlayerNameEx(playerid));
			SendClientMessage(pID, -1, str);
		}
	    return 1;
	}
	if(dialogid == HOUSE_DIALOG5)
	{
	    if(!response) return ShowPlayerDialog(playerid, HOUSE_DIALOG, DIALOG_STYLE_LIST, "{ffffff}Namo meniu", "{ffffff}Padëti pinigus.\nPaimti pinigus.\nParduoti namà.\nPerleisti namà.\nParduoti namà þmogui.\nRemontuoti namà", "Rinktis", "Uþdaryti");
	    if(response)
	    {
			if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, HOUSE_DIALOG5, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu.", "Neteisingai ávesta suma.\nNorëdami parduoti namà þmogui,\náraðykite kainà á ðá laukelà:", "Toliau", "Atgal");
            if(strval(inputtext) < 1) return ShowPlayerDialog(playerid, HOUSE_DIALOG5, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu.", "Neteisingai ávesta suma.\nNorëdami parduoti namà þmogui,\náraðykite kainà á ðá laukelà:", "Toliau", "Atgal");
			if(strlen(inputtext) > 9) return ShowPlayerDialog(playerid, HOUSE_DIALOG5, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu.", "Suma per didelë.\nNorëdami parduoti namà þmogui,\náraðykite kainà á ðá laukelà:", "Toliau", "Atgal");
			new pID = playerDB[playerid][ChoosedPlayer];
			if(pID == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, HOUSE_DIALOG5, DIALOG_STYLE_INPUT, "{ffffff}Namo meniu.", "Þaidëjo su tokiu vardu nëra.\nNorëdami parduoti namà þmogui,\náraðykite jo Varda_Pavarde á ðá laukelà:", "Toliau", "Atgal");
			new str[75];
			if(PlayerHaveHouse(pID) != -1) return SendClientMessage(playerid, RED, "Þaidëjas jau turi namà.");
			playerDB[pID][CanTakeHouse] = playerid;
			playerDB[pID][HouseCost] = strval(inputtext);
			SendClientMessage(playerid, YELLOW, "* Pasiûlëte þaidëjui pirkti jûsø namà.");
			format(str, sizeof(str), "%s siûlo jums pirkti namà uþ %s\nAr sutinkate:", GetPlayerNameEx(playerid), konvertuoti_pinigus(strval(inputtext)));
			ShowPlayerDialog(pID, HOUSE_DIALOG6, DIALOG_STYLE_MSGBOX, "{ffffff}Namo pirkimas.", str, "Taip", "Ne");
		}
	    return 1;
	}
	if(dialogid == HOUSE_DIALOG6)
	{
	    new pID = playerDB[playerid][CanTakeHouse];
	    new nKaina = playerDB[playerid][HouseCost];
	    if(!response)
		{
		    SendClientMessage(playerid, YELLOW, "Atsisakëte pirkti namà.");
		    SendClientMessage(pID, RED, "Þaidëjas atsisakë pirkti jûsø namà.");
		}
		else if(response)
	 	{
			new str[128];
	 	    if(pID == -1) return SendClientMessage(playerid, RED, "Þaidëjas atsijunges ir negali parduoti namo.");
	 	    new h = PlayerHaveHouse(pID);
	 	    if(h == -1) return SendClientMessage(playerid, RED, "Þaidëjas jau nebeturi namo.");
	 	    if(PlayerHaveHouse(playerid) != -1) return SendClientMessage(playerid, RED, "Jûs jau turite namà.");
	 	    if(GetPlayerMoneyA(playerid) < nKaina)
	 	    {
	 	        SendClientMessage(playerid, RED, "Jums neuþtenka pinigø namo pirkimui.");
	 	        SendClientMessage(pID, RED, "Þaidëjui neuþteko pinigø nupirkti jûsø namo.");
				return 1;
			}
			GivePlayerMoneyA(playerid, - nKaina);
			GivePlayerMoneyA(pID, hInfo[h][Money] + nKaina);
			format(hInfo[h][Owner], 21, "%s", GetPlayerNameEx(playerid));
			hInfo[h][Money] = 0;
			format(str, 104, "{66ffcc}Namo numeris:{1BB300} %d\n{66ffcc}Namas neparduodamas\nSavininkas:{1BB300} %s", h + 1, hInfo[h][Owner]);
			Update3DTextLabelText(hInfo[h][House3D], -1, str);
			SaveHouse(h);
			RemovePlayersFromHouse(h);
            SendClientMessage(playerid, YELLOW, "* Nupirkote namà.");
			SendClientMessage(pID, YELLOW, "* Pardavëte namà.");
		}
	    return 1;
	}
	 // Remonto namo sistema . Atjungta .
	if(dialogid == HOUSE_DIALOG7)
	{
	    if(!response) return ShowPlayerDialog(playerid, HOUSE_DIALOG, DIALOG_STYLE_LIST, "{ffffff}Namo meniu", "{ffffff}Padëti pinigus.\nPaimti pinigus.\nParduoti namà.\nPerleisti namà.\nParduoti namà þmogui.\nRemontuoti namà.", "Rinktis", "Uþdaryti");
	    if(response)
	    {
	        print("vykdoma");
	        new k = listitem, house = playerDB[playerid][NamoID];
	        if(GetPlayerMoneyA(playerid) < hInterior[k][Price]) return SendClientMessage(playerid, -1, "Jums neuþtenka pinigø");
			GivePlayerMoneyA(playerid,  -hInterior[k][Price]);
			hInfo[house][hInt] = hInterior[k][Int];
			hInfo[house][IntX] = hInterior[k][IntX];
			hInfo[house][IntY] = hInterior[k][IntY];
			hInfo[house][IntZ] = hInterior[k][IntZ];
			hInfo[house][IntAngle] = hInterior[k][IntAngle];
			SaveHouse(house);
			RemovePlayersFromHouse(house);
			SendClientMessage(playerid, GREEN, "* Atnaujinote namà.");
		}
	    return 1;
	}
	
	// Maðinos valdymas
	if(dialogid == vCAR_CONTROL)
	{
	    if(response)
	    {
	        new vehicleid = playerDB[playerid][vCarID];
	        if(vehicleid == -1) return 1;
	        switch(listitem)
	        {
				case 0:
				{
    				if(vehicleDB[vehicleid][vLocked])
    				{
                        vehicleDB[vehicleid][vLocked] = false;
                        SendClientMessage(playerid, C_YELLOW, " Atrakinote transporto priemonæ.");
					}
					else
					{
                        vehicleDB[vehicleid][vLocked] = true;
                        SendClientMessage(playerid, C_YELLOW, " Uþrakinote transporto priemonæ.");
					}
					SavePlayerVehicle(playerid);
				}
				case 1:
				{
					new msg[128],Float:coo[6];
					GetVehiclePos(vehicleid,coo[0],coo[1],coo[2]);
					GetPlayerPos(playerid,coo[3],coo[4],coo[5]);
					new Float:atstumas = ((floatabs(coo[0]-coo[3])+floatabs(coo[1]-coo[4])+floatabs(coo[2]-coo[5]))/3)/100;
					SetPlayerCheckpointEx(playerid, 0, coo[0],coo[1],coo[2],2);
					format(msg,sizeof(msg),"* Dabartine masinos vieta rodoma GPS. Ji yra %f KM",atstumas);
					SendClientMessage(playerid,GREEN,msg);
				}
				case 2:
				{
				    ShowPlayerDialog(playerid, vCAR_GIVE_DIALOG1, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Norëdami atiduoti transportà þmogui,\náraðykite þmogaus vardà:", "Atiduoti", "Atgal");
				}
				case 3:
				{
				    ShowPlayerDialog(playerid, vCAR_SELL_DIALOG1, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Norëdami parduoti transportà þmogui,\náraðykite þmogaus vardà:", "Toliau", "Atgal");
				}
				case 4:
				{
				    new str[75];
					format(str, sizeof(str), "{ffffff}Ar tikrai norite parduoti savo transporto priemonæ uþ %s.", konvertuoti_pinigus(GetVehicleCost(vehicleid)));
                    ShowPlayerDialog(playerid, vCAR_SELL_DIALOG4, DIALOG_STYLE_MSGBOX, "{ffffff}Transporto valdymas.", str, "Parduoti", "Atgal");
				}
				case 5:
				{
				    for(new p = 0; p < MAX_PLAYERS; p++)
				    {
				        if(p == playerid) continue;
						if(IsPlayerInVehicle(p, vehicleid))
						{
						    RemovePlayerFromVehicle(p);
						}
				    }
				    SendClientMessage(playerid, C_YELLOW, "Visi iðmesti ið jûsø transporto priemonës.");
				    return 1;
				}
				case 6:
				{
                    ShowPlayerDialog(playerid, vCAR_INFO_DIALOG, DIALOG_STYLE_MSGBOX, "{ffffff}Transporto informacija.", ShowVehicleInfo(vehicleid), "Atgal", "");
				}
			}
		}
		return 1;
	}
// Masinos perdavimo dialogas 1.
	if(dialogid == vCAR_GIVE_DIALOG1)
	{
		if(!response) return ShowPlayerDialog(playerid, vCAR_CONTROL, DIALOG_STYLE_LIST, "{ffffff}Transporto priemonës valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		new id = GetPlayeridMid(inputtext);
		if(id == INVALID_PLAYER_ID || IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, vCAR_GIVE_DIALOG1, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Tokio þaidëjo nëra.\nNorëdami atiduoti transportà þmogui,\náraðykite þmogaus vardà:", "Atiduoti", "Atgal");
		if(GetPlayerScore(id) < 2500) return SendClientMessage(playerid, RED, "* Þaidëjas yra naujokas!");
        new vehicleid = playerDB[playerid][vCarID];
		if(vehicleid == -1) return 1;
		if(playerDB[id][vCarID] != -1)
		{
		    SendClientMessage(playerid, C_RED, "Zaidejas jau turi transporto priemone.");
		    ShowPlayerDialog(playerid, vCAR_CONTROL, DIALOG_STYLE_LIST, "{ffffff}Transporto priemones valdymas.", "{ffffff} Atrakinti/Uzrakinti.\n Surasti.\n Atiduoti zmogui.\n Parduoti zmogui.\n Parduoti i turgu.\n Ismesti zmones is transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		    return 1;
		}
		new str[265];
		format(str, sizeof(str), "{ffffff}%s atiduoda jums transporto priemone.\nInformacija:\n%s\n\nAr paimsite?:", GetPlayerNameEx(playerid), ShowVehicleInfo(vehicleid));
		ShowPlayerDialog(id, vCAR_GIVE_DIALOG2, DIALOG_STYLE_MSGBOX, " ", str, "Taip", "Ne");
		playerDB[id][CanTakeCar] = playerid;
		return 1;
	}
// Masinos perdavimo dialogas 2.
	if(dialogid == vCAR_GIVE_DIALOG2)
	{
	    new id = playerDB[playerid][CanTakeCar];
	    if(response)
	    {
		    if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, C_RED, "Klaida, transporto priemonës savininkas atsijunges.");
			playerDB[playerid][vCarID] = playerDB[id][vCarID];
	        playerDB[id][vCarID] = -1;
	        SendClientMessage(playerid, C_YELLOW, "* Sutikote paimti transporto priemonæ.");
	        SendClientMessage(id, C_YELLOW, "* Atidavëte transporto priemonæ.");
	        SavePlayerVehicle(playerid);
	        SavePlayerVehicle(id);
	        playerDB[playerid][CanTakeCar] = -1;
		}
		else
		{
		    SendClientMessage(playerid, C_YELLOW, "Nesutikote paimti transporto priemonës.");
		    playerDB[playerid][CanTakeCar] = -1;
		    if(id == INVALID_PLAYER_ID) return 1;
	        SendClientMessage(id, C_RED, "Þaidëjas nesutiko imti transporto priemonës.");
		}
		return 1;
	}
// Masinos pardavimo dialogas 1.
	if(dialogid == vCAR_SELL_DIALOG1)
	{
		if(!response) return ShowPlayerDialog(playerid, vCAR_CONTROL, DIALOG_STYLE_LIST, "{ffffff}Transporto priemonës valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		new id = GetPlayeridMid(inputtext);
		if(id == INVALID_PLAYER_ID || IsNumeric(inputtext) || !strlen(inputtext)) return ShowPlayerDialog(playerid, vCAR_SELL_DIALOG1, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Tokio þaidëjo nëra.\nNorëdami parduoti transporta þmogui,\náraðykite þmogaus vardà:", "Toliau", "Atgal");
		if(GetPlayerScore(playerid) < 500) return SendClientMessage(playerid, RED, "* Jûs per maþai patyræs, todël pinigø duoti negalite! (500XP)");
        new vehicleid = playerDB[playerid][vCarID];
		if(vehicleid == -1) return 1;
		if(playerDB[id][vCarID] != -1)
		{
		    SendClientMessage(playerid, C_RED, "Þaidëjas jau turi transporto priemonæ.");
		    ShowPlayerDialog(playerid, vCAR_CONTROL, DIALOG_STYLE_LIST, "{ffffff}Transporto priemonës valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		    return 1;
		}
		ShowPlayerDialog(playerid, vCAR_SELL_DIALOG2, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Áveskite sumà uþ kiek norite parduoti transporto priemonæ:", "Siulyti", "Atgal");
		playerDB[playerid][ChoosedPlayer] = id;
		return 1;
	}
// Masinos pardavimo dialogas 2.
	if(dialogid == vCAR_SELL_DIALOG2)
	{
		if(!response) return ShowPlayerDialog(playerid, vCAR_SELL_DIALOG1, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Norëdami parduoti transporta þmogui,\náraðykite þmogaus vardà:", "Toliau", "Atgal");
		new id = playerDB[playerid][ChoosedPlayer];
		if(id == INVALID_PLAYER_ID) return ShowPlayerDialog(playerid, vCAR_SELL_DIALOG1, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Tokio þaidëjo nëra.\nNorëdami parduoti transportà þmogui,\náraðykite þmogaus vardà:", "Toliau", "Atgal");
		if(GetPlayerScore(playerid) < 500) return SendClientMessage(playerid, RED, "* Jûs per maþai patyræs, todël pinigø duoti negalite! (500XP)");
		if(!IsNumeric(inputtext) || strval(inputtext) < 1) return ShowPlayerDialog(playerid, vCAR_SELL_DIALOG2, DIALOG_STYLE_INPUT, "{ffffff}Transporto valdymas.", "{ffffff}Klaida, suma per maþa arba neteisingai ávesta.\nÁveskite sumà uþ kiek norite parduoti transporto priemonæ:", "Siulyti", "Atgal");
		new vehicleid = playerDB[playerid][vCarID];
		if(vehicleid == -1) return 1;
		if(playerDB[id][vCarID] != -1)
		{
		    SendClientMessage(playerid, C_RED, "Þaidëjas jau turi transporto priemonæ.");
		    ShowPlayerDialog(playerid, vCAR_CONTROL, DIALOG_STYLE_LIST, "{ffffff}Transporto priemonës valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		    return 1;
		}
		new str[280];
		format(str, sizeof(str), "{ffffff}%s siûlo jums transporto priemonæ uþ %s.\nInformacija:\n%s\n\nAr paimsite?:", GetPlayerNameEx(playerid), konvertuoti_pinigus(strval(inputtext)), ShowVehicleInfo(vehicleid));
		ShowPlayerDialog(id, vCAR_SELL_DIALOG3, DIALOG_STYLE_MSGBOX, " ", str, "Taip", "Ne");
		playerDB[id][CanTakeCar] = playerid;
		playerDB[id][CarCost] = strval(inputtext);
		return 1;
	}
// Masinos pardavimo dialogas 3.
    if(dialogid == vCAR_SELL_DIALOG3)
	{
		new id = playerDB[playerid][CanTakeCar];
		new cost = playerDB[playerid][CarCost];
	    if(response)
	    {
		    if(id == INVALID_PLAYER_ID)
			{
				playerDB[playerid][CanTakeCar] = -1;
				playerDB[playerid][CarCost] = -1;
				SendClientMessage(playerid, C_RED, "Klaida, transporto priemonës savininkas atsijunges.");
				return 1;
			}
			if(GetPlayerMoneyA(playerid) < cost)
			{
			    SendClientMessage(playerid, C_RED, "Jums neuþtenka pinigø.");
			    SendClientMessage(id, C_RED, "Þaidëjui neuþteko pinigø nusipirkti jûsø transporto priemonæ.");
			    playerDB[playerid][CanTakeCar] = -1;
				playerDB[playerid][CarCost] = -1;
			    return 1;
			}
			if(GetPlayerScore(playerid) < 1500)
			{
			    SendClientMessage(playerid, C_RED, "Jums neuþtenka patirties taðkø. Reikia 1.500.");
			    SendClientMessage(id, C_RED, "Þaidëjas neturi 1.500 patirties, kad ið jûsø nusipirktø transportà.");
			    playerDB[playerid][CanTakeCar] = -1;
				playerDB[playerid][CarCost] = -1;
			}
			if(playerDB[id][vCarID] == -1)
			{
			    playerDB[playerid][CanTakeCar] = -1;
				playerDB[playerid][CarCost] = -1;
			    SendClientMessage(playerid, C_RED, "Pardavëjas jau nebeturi transporto priemonës.");
				return 1;
			}
			playerDB[playerid][vCarID] = playerDB[id][vCarID];
	        playerDB[id][vCarID] = -1;
	        GivePlayerMoneyA(playerid, - cost);
	        GivePlayerMoneyA(id, cost);
	        SavePlayerVehicle(playerid);
	        SavePlayerVehicle(id);
			SendClientMessage(playerid, C_YELLOW, "Nusipirkote transporto priemonæ.");
	        SendClientMessage(id, C_YELLOW, "Pardavëte transporto priemonæ.");
	        playerDB[playerid][CanTakeCar] = -1;
			playerDB[playerid][CarCost] = -1;
		}
		else
		{
		    SendClientMessage(playerid, C_YELLOW, "Atsisakëte pirkti transporto priemonæ.");
		    if(id == INVALID_PLAYER_ID) return 1;
	        SendClientMessage(id, C_RED, "Þaidëjas nesutiko pirkti jûsø transporto priemonës.");
		}
		return 1;
	}
	if(dialogid == vCAR_SELL_DIALOG4)
	{
	    if(!response) return ShowPlayerDialog(playerid, vCAR_CONTROL, DIALOG_STYLE_LIST, "{ffffff}Transporto priemonës valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
		new vehicleid = playerDB[playerid][vCarID], str[60];
		if(vehicleid == -1) return 1;
		new cost = GetVehicleCost(vehicleid);
		GivePlayerMoneyA(playerid, cost);
		format(str, sizeof(str), "* Pardavëte savo transporto priemonæ uþ {ffffff}%s.", konvertuoti_pinigus(cost));
		SendClientMessage(playerid, C_YELLOW, str);
		DestroyVehicle(vehicleid);
	    format(vehicleDB[vehicleid][vOwner], 21, "-");
	    format(vehicleDB[vehicleid][vNumberPlate], 9, "-");
	    for(new tune = 0; tune < 13; tune++) vehicleDB[vehicleid][vTune][tune] = 0;
        for(new color = 0; color < 2; color++) vehicleDB[vehicleid][vColor][color] = 0;
		vehicleDB[vehicleid][vPaintjob] = -1;
		vehicleDB[vehicleid][Rida] = 0.0;
		vehicleDB[vehicleid][gas] = 0;
		vehicleDB[vehicleid][vLocked] = false;
		vehicleDB[vehicleid][vOwned] = false;
		playerDB[playerid][vCarID] = -1;
		SavePlayerVehicle(playerid);
		return 1;
	}
	if(dialogid == vCAR_INFO_DIALOG) return ShowPlayerDialog(playerid, vCAR_CONTROL, DIALOG_STYLE_LIST, "{ffffff}Transporto priemones valdymas.", "{ffffff} Atrakinti/Uþrakinti.\n Surasti.\n Atiduoti þmogui.\n Parduoti þmogui.\n Parduoti á turgø.\n Iðmesti þmones ið transporto.\n Transporto informacija.", "Rinktis", "Iseiti");
	
	if(dialogid == 500)
	{
	    if(response)
	    {
	        if(GetPlayerMoneyA(playerid) < 0) return SendClientMessage(playerid, COLOR_RED, "Neturite pakankamai pinigø.");
            GivePlayerMoneyA(playerid, - 0);
            playerDB[playerid][SusikuresKorta] = true;
            ShowPlayerDialog(playerid, 501, DIALOG_STYLE_LIST, "{ffffff}SweedBank", "{ffffff} Balansas.\n Pasiimti pinigus.\n Padeti pinigus.", "Pasirinkti", "Iseiti");
		}
		return 1;
	}
	if(dialogid == 501)
	{
	    if(response)
		{
			switch(listitem)
			{
			    case 0:
			    {
					new msg[40];
			        format(msg, sizeof(msg), "{ffffff}Jûsø saskaitoje yra: %s", konvertuoti_pinigus(playerDB[playerid][banke]));
			        ShowPlayerDialog(playerid, 502, DIALOG_STYLE_MSGBOX, "{ffffff}SweedBank", msg, "Atgal", "");
			    }
			    case 1: ShowPlayerDialog(playerid, 503, DIALOG_STYLE_INPUT, "{ffffff}SweedBank", "{ffffff}Norëdami paimti pinigus, áveskite sumà.", "Paimti", "Atgal");
			    case 2: ShowPlayerDialog(playerid, 504, DIALOG_STYLE_INPUT, "{ffffff}SweedBank", "{ffffff}Norëdami padëti pinigus, áveskite sumà.", "Padeti", "Atgal");
			}
		}
		return 1;
	}
	if(dialogid == 502) return ShowPlayerDialog(playerid, 501, DIALOG_STYLE_LIST, "{ffffff}SweedBank", "{ffffff} Balansas.\n Pasiimti pinigus.\n Padëti pinigus.", "Pasirinkti", "Iseiti");
    if(dialogid == 503)
	{
	    if(!response) return ShowPlayerDialog(playerid, 501, DIALOG_STYLE_LIST, "{ffffff}SweedBank", "{ffffff} Balansas.\n Pasiimti pinigus.\n Padëti pinigus.", "Pasirinkti", "Iseiti");
	    if(response)
	    {
	        if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, 503, DIALOG_STYLE_INPUT, "{ffffff}SweedBank", "{ffffff}Norëdami paimti pinigus, áveskite sumà.", "Paimti", "Atgal");
			if(strval(inputtext) < 1) return ShowPlayerDialog(playerid, 503, DIALOG_STYLE_INPUT, "{ffffff}SweedBank", "{ffffff}Norëdami paimti pinigus, áveskite sumà.", "Paimti", "Atgal");
			if(playerDB[playerid][banke] < strval(inputtext)) return ShowPlayerDialog(playerid, 503, DIALOG_STYLE_INPUT, "{ffffff}SweedBank", "{ffffff}Banke jûs tiek neturite\nÁveskite sumà norëdami paimti pinigus.", "Paimti", "Atgal");
            playerDB[playerid][banke] -= strval(inputtext);
			GivePlayerMoneyA(playerid, strval(inputtext));
			ShowPlayerDialog(playerid, 501, DIALOG_STYLE_LIST, "{ffffff}SweedBank", "{ffffff} Balansas.\n Pasiimti pinigus.\n Padëti pinigus.", "Pasirinkti", "Iseiti");
		}
		return 1;
	}
	if(dialogid == 504)
	{
	    if(!response) return ShowPlayerDialog(playerid, 501, DIALOG_STYLE_LIST, "{ffffff}SweedBank", "{ffffff} Balansas.\n Pasiimti pinigus.\n Padëti pinigus.", "Pasirinkti", "Iseiti");
	    if(response)
	    {
	        if(!IsNumeric(inputtext)) return ShowPlayerDialog(playerid, 504, DIALOG_STYLE_INPUT, "{ffffff}SweedBank", "{ffffff}Norëdami padëti pinigus, áveskite sumà.", "Padeti", "Atgal");
            if(strval(inputtext) < 1) return ShowPlayerDialog(playerid, 504, DIALOG_STYLE_INPUT, "{ffffff}SweedBank", "{ffffff}Norëdami padëti pinigus, áveskite sumà.", "Padeti", "Atgal");
			if(GetPlayerMoneyA(playerid) < strval(inputtext)) return ShowPlayerDialog(playerid, 504, DIALOG_STYLE_INPUT, "{ffffff}SweedBank", "{ffffff}Su savimi jûs tiek neturite\nÁveskite sumà norëdami padëti pinigus.", "Padeti", "Atgal");
            GivePlayerMoneyA(playerid, - strval(inputtext));
			playerDB[playerid][banke] += strval(inputtext);
			ShowPlayerDialog(playerid, 501, DIALOG_STYLE_LIST, "{ffffff}SweedBank", "{ffffff} Balansas.\n Pasiimti pinigus.\n Padëti pinigus.", "Pasirinkti", "Iseiti");
		}
	    return 1;
	}

    if(dialogid == 1341)
	{
		if(response)
	    {
	        new vehicleid = GetPlayerVehicleID(playerid);
	        switch(listitem)
	        {
	            case 0:  PlayAudioStreamForVehicle(playerid, vehicleid, "http://www.radijas.fm/media/_catalog/www.radijas.fm-radijo-stotis-power-hit-radio.pls", "PWH");
	          //  case 1:  PlayAudioStreamForVehicle(playerid, vehicleid, "http://ts.NRMG.LT:8000/listen.pls", "TEST Radija");
	            case 1:  PlayAudioStreamForVehicle(playerid, vehicleid, "http://www.radijas.fm/media/_catalog/www.radijas.fm-radijo-stotis-rap-.pls", "RAP.LT");
	            case 2:  PlayAudioStreamForVehicle(playerid, vehicleid, "http://www.radijas.fm/media/_catalog/www.radijas.fm-radijo-stotis-ruskoje-radio-baltija.pls", "Ruskoje Radio");
	            case 3:  PlayAudioStreamForVehicle(playerid, vehicleid, "http://www.radijas.fm/media/_catalog/www.radijas.fm-radijo-stotis-m-1-plius.pls", "M-1 Plius");
			}
		}
		else
		{
			cmd_radijas(playerid, "");
		}
	}
	if(dialogid == 1340)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(response)
	    {
	        switch(listitem)
	        {
	            case 0: return ShowPlayerDialog(playerid, 1341, DIALOG_STYLE_LIST, "Pasirinkite radijà", "Power Hit Radio\nRAP.LT\nRuskoje Radio\nM-1 Plius", "Rinktis", "Atgal");
				case 1:
				{
				    if(isnull(RadijosURL[vehicleid])) return SendClientMessage(playerid, 0xFF0000FF, "» Automobilio radijas ir taip yra iðjungta!");
					StopAudioStreamForVehicle(vehicleid);
				}
				default:
				{
				    if(GetPlayerVehicleSeat(playerid) != 0 && GetPlayerVehicleSeat(playerid) != 1) return SendClientMessage(playerid, 0xFF0000FF, "» Jûs turite sëdëti tr. priemonës priekyje!");
					new szRadio[145];
					format(szRadio, sizeof(szRadio), "Paleisti radijà\nIðjungti radijà\n \nDabar groja: {FF0000}%s", (isnull(RadijosURL[vehicleid])) ? ("Niekas") : (RadijosPavadinimas[vehicleid]));
					ShowPlayerDialog(playerid, 1340, DIALOG_STYLE_LIST, "Pasirinkite skilti", szRadio, "Rinktis", "Uþdaryti");
		        }
			}
			return 1;
		}
	}



	// MECHANIKO VEIKSMAI SU /MECHANIKAS
    if(dialogid == 1045) //
    {
	    if(response) 
	    {
		    if(listitem == 0) 
		    {
    			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,RED,"* Tu esi ne maðinoje! Norint sutvarkyti jà turi bûti joje.");
 				if(GetPlayerMoneyA(playerid) < 150) return SendClientMessage(playerid,RED,"* Neturi 150 detalëm!");
                new vehicleid = GetPlayerVehicleID(playerid);
				new Float:vHP;
			    GetVehicleHealth(vehicleid, vHP);
			  	if(vHP > 999.9) return SendClientMessage(playerid, RED, "* Maðina ir taip pilnai sutvarkyta");
				GivePlayerMoneyA(playerid,-50);
				SendClientMessage(playerid,GREEN,"* Suremontavai maðinà!");
		 		if(IsPlayerInAnyVehicle(playerid)) RepairVehicle(GetPlayerVehicleID(playerid));
		 		return 1;
	  		}
    		else if(listitem == 1)
    		{
    			new vehicleid = GetPlayerVehicleID(playerid);
    			if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,RED,"* Tu esi ne maðinoje! Norint pripilti degalø turi bûti joje.");
			    if(GetPlayerMoneyA(playerid)<50) return SendClientMessage(playerid,RED,"* Neturi 50 degalams.!");
			    if(vehicleDB[vehicleid][gas] > 60) return SendClientMessage(playerid, RED, "* Maðinoje jau pilnas bakas degalø.");
			 	GivePlayerMoneyA(playerid,-50);
			 	SendClientMessage(playerid,GREEN,"* Pripildei á maðinà 20 LITRØ degalø.");
			 	vehicleDB[GetPlayerVehicleID(playerid)][gas]+=20;
			 	return 1;
  			}
  			else if(listitem == 2)
  			{
  			    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,RED,"* Tu esi ne maðinoje!");
  			    if(vehicleDB[GetPlayerVehicleID(playerid)][vOwned]) return SendClientMessage(playerid, RED, "* Nuosavø maðinø sprogdinti negali!");
  			    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
  			    return 1;
			}
   		}
   		return 1;
 }

//Gerimø sistema .
    if(dialogid == 1980)
  	{
  		if(response)
 		{
	 	    switch(listitem)
			{
				case 0:
				{
				    new girtas;
	                if(GetPlayerMoneyA(playerid) < 10) return SendClientMessage(playerid, RED, "» Neturite 10  Utenos alui !");
					girtas = GetPlayerDrunkLevel(playerid);
	                GivePlayerMoneyA(playerid, -10);
	                girtas = GetPlayerDrunkLevel(playerid);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"{37f467}» Nusipirkote Utenos alaus uþ {ccff66}10 {37f467}.");
                 	ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1);
					SetPlayerDrunkLevel(playerid, girtas + 5000);
				}
				case 1:
				{
				    new girtas;
	                if(GetPlayerMoneyA(playerid) < 20) return SendClientMessage(playerid, RED, "» Neturite 20  Kalnapilio alui !");
					girtas = GetPlayerDrunkLevel(playerid);
	                GivePlayerMoneyA(playerid, -20);
	                girtas = GetPlayerDrunkLevel(playerid);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"{37f467}» Nusipirkote Kalnapilio alaus uþ {ccff66}20 {37f467}.");
                 	ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1);
					SetPlayerDrunkLevel(playerid, girtas + 5000);
				}
				case 2:
				{
				    new girtas;
	                if(GetPlayerMoneyA(playerid) < 40) return SendClientMessage(playerid, RED, "» Neturite 40  Ðkotiðkam viskiui !");
					girtas = GetPlayerDrunkLevel(playerid);
	                GivePlayerMoneyA(playerid, -40);
	                girtas = GetPlayerDrunkLevel(playerid);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"{37f467}» Nusipirkote Ðkotiðko viskio uþ {ccff66}40 {37f467}.");
                 	ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1);
					SetPlayerDrunkLevel(playerid, girtas + 5000);
				}
				case 3:
				{
				    new girtas;
	                if(GetPlayerMoneyA(playerid) < 50) return SendClientMessage(playerid, RED, "» Neturite 50  brendþiui Gloria !");
					girtas = GetPlayerDrunkLevel(playerid);
	                GivePlayerMoneyA(playerid, -50);
	                girtas = GetPlayerDrunkLevel(playerid);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"{37f467}» Nusipirkote Gloria brendá uþ {ccff66}50 {37f467}.");
                 	ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.1, 1, 1, 1, 1, 1);
					SetPlayerDrunkLevel(playerid, girtas + 5000);
				}
			}
		}
		return 1;
	}

//Be pakvietimø


    if(dialogid == 63)
    {
        if(response)
        {
            if(GetPlayerMoneyA(playerid) < 300) return SendClientMessage(playerid,0xFF000090,"Teorijos testo kaina 300 euru, o tu tiek neturi.");
            GivePlayerMoneyA(playerid, -300);
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    ShowPlayerDialog(playerid,64,DIALOG_STYLE_MSGBOX,"[1] KLAUSIMAS","1. Kuria kelio puse reikia vaþiuoti? \nA) Kaire\nB) Deðine","A","B");
		}
		return 1;
	}

	if(dialogid == 64)
   	{
	    if(!response)
	    {
		    ShowPlayerDialog(playerid,70,DIALOG_STYLE_MSGBOX,"[2] KLAUSIMAS","2. Kà reiðkia k.e.t?\nA) Keliø patrulio taisyklës\nB) Keliø eismo taisyklës","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]+=1;
    	}
    	else
    	{
		    ShowPlayerDialog(playerid,70,DIALOG_STYLE_MSGBOX,"[2] KLAUSIMAS","2. Kà reiðkia k.e.t?\nA) Keliø patrulio taisyklës\nB) Keliø eismo taisyklës","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]-=1;
    	}
    	return 1;
   	}

    if(dialogid == 70)
   	{
	    if(!response)
	    {
		    ShowPlayerDialog(playerid,71,DIALOG_STYLE_MSGBOX,"[3] KLAUSIMAS","3. Koks mieste leidþiamas greitis?\nA) 90 km/h\nB) 120 km/h","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]+=1;
    	}
    	else
    	{
		    ShowPlayerDialog(playerid,71,DIALOG_STYLE_MSGBOX,"[3] KLAUSIMAS","3. Koks mieste leidþiamas greitis?\nA) 90 km/h\nB) 120 km/h","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]-=1;
    	}
    	return 1;
   	}
   	
   	if(dialogid == 71)
   	{
	    if(!response)
	    {
		    ShowPlayerDialog(playerid,72,DIALOG_STYLE_MSGBOX,"[4] KLAUSIMAS","4.Kaip álipi i transporto priemonæ , kà pirmà darai?\nA) Uþsisegi saugos dirþà arba ðalmà.\nB) Uþsivedi varikli.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]-=1;
    	}
    	else
    	{
		    ShowPlayerDialog(playerid,72,DIALOG_STYLE_MSGBOX,"[4] KLAUSIMAS","4.Kaip álipi i transporto priemonæ , kà pirmà darai?\nA) Uþsisegi saugos dirþà arba ðalmà.\nB) Uþsivedi varikli.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]+=1;
    	}
    	return 1;
   	}
   	
   	if(dialogid == 72)
   	{
	    if(!response)
	    {
		    ShowPlayerDialog(playerid,73,DIALOG_STYLE_MSGBOX,"[5] KLAUSIMAS","5.Uþsidega raudona ðviesa , kà tu darai ?\nA) Vaþiuoji nemaþindamas greièio.\nB) Sustoji ir lauki kol uþsidegs þalia ðviesa.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]-=1;
    	}
    	else
    	{
		    ShowPlayerDialog(playerid,73,DIALOG_STYLE_MSGBOX,"[5] KLAUSIMAS","5.Uþsidega raudona ðviesa , kà tu darai ?\nA) Vaþiuoji nemaþindamas greièio.\nB) Sustoji ir lauki kol uþsidegs þalia ðviesa.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]+=1;
    	}
    	return 1;
   	}
   	
   	if(dialogid == 73)
   	{
	    if(!response)
	    {
		    ShowPlayerDialog(playerid,74,DIALOG_STYLE_MSGBOX,"[6] KLAUSIMAS","6. Padarai avarijà kà tu tada darai?\nA) Atsipraðai þaidëjo ir kvieti policijà.\nB) Iðvadini já kaltu ir nuvaþiuoji.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]+=1;
    	}
    	else
    	{
		    ShowPlayerDialog(playerid,74,DIALOG_STYLE_MSGBOX,"[6] KLAUSIMAS","6. Padarai avarijà kà tu tada darai?\nA) Atsipraðai þaidëjo ir kvieti policijà.\nB) Iðvadini já kaltu ir nuvaþiuoji.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]-=1;
    	}
    	return 1;
   	}
   	
   	if(dialogid == 74)
   	{
	    if(!response)
	    {
		    ShowPlayerDialog(playerid,75,DIALOG_STYLE_MSGBOX,"[7] KLAUSIMAS","7.Vaþiuoji per miestelá ir netyèia nutrenki þmogø , kà darai?\nA) Nuvaþiuoji net neatsigreþdamas.\nB) Atsipraðai iðkvieti medikus ir policijà ir iðsiaiðkinate.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]-=1;
    	}
    	else
    	{
		    ShowPlayerDialog(playerid,75,DIALOG_STYLE_MSGBOX,"[7] KLAUSIMAS","7.Vaþiuoji per miestelá ir netyèia nutrenki þmogø , kà darai?\nA) Nuvaþiuoji net neatsigreþdamas.\nB) Atsipraðai iðkvieti medikus ir policijà ir iðsiaiðkinate.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]+=1;
    	}
    	return 1;
   	}
   	
   	if(dialogid == 75)
   	{
	    if(!response)
	    {
		    ShowPlayerDialog(playerid,76,DIALOG_STYLE_MSGBOX,"[8] KLAUSIMAS","8.Nori lenkti maðinà , bet kitoje pusëje vaþiuoja fûra. Kà tuomet darai?\nA) Pradedi spausti iki dugno ir lenki ið deðinës pusës.\nB) Privaþiuoji arèiau tos maðinos ið lauki kol pravaþiuos kitoje gatvës pusëje vaþiuojenti maðina.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]+=1;
    	}
    	else
    	{
		    ShowPlayerDialog(playerid,76,DIALOG_STYLE_MSGBOX,"[8] KLAUSIMAS","8.Nori lenkti maðinà , bet kitoje pusëje vaþiuoja fûra. Kà tuomet darai?\nA) Pradedi spausti iki dugno ir lenki ið deðinës pusës.\nB) Privaþiuoji arèiau tos maðinos ið lauki kol pravaþiuos kitoje gatvës pusëje vaþiuojenti maðina.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]-=1;
    	}
    	return 1;
   	}
   	
   	if(dialogid == 76)
   	{
	    if(!response)
	    {
		    ShowPlayerDialog(playerid,77,DIALOG_STYLE_MSGBOX,"[9] KLAUSIMAS","9.Kaip nori lenkti ar neturi ásitikinti ar uþ tavës kitas automobilis nepradëjo lenkimo manevro.\nA) Turi ásitikinti.\nB) Neturi ásitikinti.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]+=1;
    	}
    	else
    	{
		    ShowPlayerDialog(playerid,77,DIALOG_STYLE_MSGBOX,"[9] KLAUSIMAS","9.Kaip nori lenkti ar neturi ásitikinti ar uþ tavës kitas automobilis nepradëjo lenkimo manevro.\nA) Turi ásitikinti.\nB) Neturi ásitikinti.","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]-=1;
    	}
    	return 1;
   	}
   	
   	if(dialogid == 77)
   	{
	    if(!response)
	    {
		    ShowPlayerDialog(playerid,78,DIALOG_STYLE_MSGBOX,"[10] KLAUSIMAS","10.Koks þenklas rodo , kad netoli yra piesèiøjø perëja?.\nA) Ðviesaforas.\nB) Þenklas kur paraðyta piesèøjø perëja ir ant kelio baltos linijos..","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]-=1;
    	}
    	else
    	{
		    ShowPlayerDialog(playerid,78,DIALOG_STYLE_MSGBOX,"[10] KLAUSIMAS","10.Koks þenklas rodo , kad netoli yra piesèiøjø perëja?.\nA) Ðviesaforas.\nB) Þenklas kur paraðyta piesèøjø perëja ir ant kelio baltos linijos..","A","B");
		    PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]+=1;
    	}
    	return 1;
   	}
   	
   	if(dialogid == 78)
   	{
   	    if(!response)
   	    {
   	        PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]+=1;
		    if(playerDB[playerid][taskaimed] < 7)
			{
			    SendClientMessage(playerid, RED, "* Neiðlaikei teorijos nes neatsakei 8 klausimø ið 10");
				playerDB[playerid][taskaimed] = 0;
				return 1;
			}
			playerDB[playerid][taskaimed] = 0;
            playerDB[playerid][teorija] = true;
            SendClientMessage(playerid, GREEN, "* Iðlaikei teorijà nes atsakei beveik visus tau pateiktus klausimus");
		}
		else
		{
			PlayerPlaySound(playerid, 1057,0.0,0.0,0.0);
		    playerDB[playerid][taskaimed]-=1;
		    if(playerDB[playerid][taskaimed] < 7)
			{
			    SendClientMessage(playerid, RED, "* Neiðlaikei teorijos nes neatsakei 8 klausimø ið 10");
				playerDB[playerid][taskaimed] = 0;
				return 1;
			}
            playerDB[playerid][taskaimed] = 0;
            playerDB[playerid][teorija] = true;
            SendClientMessage(playerid, GREEN, "* Iðlaikei teorijà nes atsakei beveik visus tau pateiktus klausimus");
		}
		return 1;
  	}
   	//Ginklinës responsas
   	if(dialogid == 1412) //
    {
    	if(response) //Jei paspaudë mygtukà \"Sutinku\"
    	{
			switch(listitem)
			{
				case 0, 1, 6: ShowPlayerDialog(playerid,1412,DIALOG_STYLE_LIST,"Ginklinë","{FFFFFF}Ginklo pavadinimas/kiekis/kaina\n \nBeisbolkë 1 60\n9mm 100 500\nShotGun 100 1000\nCountry Rifle 100 800\n \nGinklu licenzija 5000","Rinktis","Iðeiti");
				case 2:
				{
                    if(GetPlayerMoneyA(playerid) < 60) return SendClientMessage(playerid, RED, "* Jûs neturite tiek pinigø.");
					GivePlayerWeaponEx(playerid, 5, 1);
				    GivePlayerMoneyA(playerid, -60);
				    ShowPlayerDialog(playerid,1412,DIALOG_STYLE_LIST,"Ginklinë","{FFFFFF}Ginklo pavadinimas/kiekis/kaina\n \nBeisbolkë 1 60\n9mm 100 500\nShotGun 100 1000\nCountry Rifle 100 800\n \nGinklu licenzija 5000","Rinktis","Iðeiti");
	    		}
	    		case 3:
			    {
			        if(!playerDB[playerid][gLicenzija]) return SendClientMessage(playerid, RED, "* Negalite nusipirkti ginklo nes neturite ginklø licenzijos.");
                    if(GetPlayerMoneyA(playerid) < 900) return SendClientMessage(playerid, RED, "* Jûs neturite tiek pinigø.");
					GivePlayerWeaponEx(playerid, 22, 100);
				    GivePlayerMoneyA(playerid, -500);
				    ShowPlayerDialog(playerid,1412,DIALOG_STYLE_LIST,"Ginklinë","{FFFFFF}Ginklo pavadinimas/kiekis/kaina\n \nBeisbolkë 1 60\n9mm 100 500\nShotGun 100 1000\nCountry Rifle 100 800\n \nGinklu licenzija 5000","Rinktis","Iðeiti");
			    }
			    case 4:
			    {
			        if(!playerDB[playerid][gLicenzija]) return SendClientMessage(playerid, RED, "* Negalite nusipirkti ginklo nes neturite ginklø licenzijos.");
                    if(GetPlayerMoneyA(playerid) < 1400) return SendClientMessage(playerid, RED, "* Jûs neturite tiek pinigø.");
					GivePlayerWeaponEx(playerid, 25, 100);
				    GivePlayerMoneyA(playerid, -1000);
				    ShowPlayerDialog(playerid,1412,DIALOG_STYLE_LIST,"Ginklinë","{FFFFFF}Ginklo pavadinimas/kiekis/kaina\n \nBeisbolkë 1 60\n9mm 100 500\nShotGun 100 1000\nCountry Rifle 100 800\n \nGinklu licenzija 5000","Rinktis","Iðeiti");
			    }
			    case 5:
			    {
			        if(!playerDB[playerid][gLicenzija]) return SendClientMessage(playerid, RED, "* Negalite nusipirkti ginklo nes neturite ginklø licenzijos.");
					if(GetPlayerMoneyA(playerid) < 1200) return SendClientMessage(playerid, RED, "* Jûs neturite tiek pinigø.");
					GivePlayerWeaponEx(playerid, 33, 100);
				    GivePlayerMoneyA(playerid, -800);
				    ShowPlayerDialog(playerid,1412,DIALOG_STYLE_LIST,"Ginklinë","{FFFFFF}Ginklo pavadinimas/kiekis/kaina\n \nBeisbolkë 1 60\n9mm 100 500\nShotGun 100 1000\nCountry Rifle 100 800\n \nGinklu licenzija 5000","Rinktis","Iðeiti");
			    }
			    case 7:
			    {
			        if(playerDB[playerid][gLicenzija]) return SendClientMessage(playerid, RED, "* Jûs jau turite ginklø licenzijà.");
					if(GetPlayerMoneyA(playerid) < 5000) return SendClientMessage(playerid, RED, "* Jûs neturite tiek pinigø.(5.000)");
					if(GetPlayerScore(playerid) < 1000) return SendClientMessage(playerid, RED, "* Jums neuþtenka patirties(reikia 1000xp).");
					GivePlayerMoneyA(playerid, - 5000);
					playerDB[playerid][gLicenzija] = true;
					SendClientMessage(playerid, GREEN, "Nusipirkote ginklø licenzijà.");
					ShowPlayerDialog(playerid,1412,DIALOG_STYLE_LIST,"Ginklinë","{FFFFFF}Ginklo pavadinimas/kiekis/kaina\n \nBeisbolkë 1 60\n9mm 100 500\nShotGun 100 1000\nCountry Rifle 100 800\n \nGinklu licenzija 5000","Rinktis","Iðeiti");
				}
			}
		}
		return 1;
	}
    // Kiosko responsas
    if(dialogid == 1543)
    {
    	if(response) 
    	{
    		switch(listitem)
			{
				case 0:
			    {
				    if(GetPlayerMoneyA(playerid) < 10) return SendClientMessage(playerid,RED,"* Neturi 10 gëlëms.");
				    ApplyAnimation(playerid,"ped","phone_out",3.0,0,0,0,0,0);
					GivePlayerWeaponEx(playerid,14,1);
					GivePlayerMoneyA(playerid, -10);
				 	SendClientMessage(playerid,RED," Sëkmingai nusipirkote gëlës. {FF8C00}Sëkmës!");
				 	ShowPlayerDialog(playerid,1543,DIALOG_STYLE_LIST,"Pasirinkite prekæ","{FFFFFF}Gëlës 10 []\nKastuvas 30 []\nKrepðelis grybavimui 50 []\n{FF0000}PAPILDYMAI\nPapildymas 20 []\nPapildymas 50 []\nPapildymas 100 []","Rinktis","Iðeiti");
			    }
			    case 1:
			    {
				    if(GetPlayerMoneyA(playerid) < 30) return SendClientMessage(playerid,RED,"* Neturite 30 kastuvui.");
				    GivePlayerWeaponEx(playerid,6,1);
					GivePlayerMoneyA(playerid, -30);
				 	SendClientMessage(playerid,RED," Sëkmingai nusipirkote kastuvà. {FF8C00}Sëkmës!");
      				ShowPlayerDialog(playerid,1543,DIALOG_STYLE_LIST,"Pasirinkite prekæ","{FFFFFF}Gëlës 10 []\nKastuvas 30 []\nKrepðelis grybavimui 50 []\n{FF0000}PAPILDYMAI\nPapildymas 20 []\nPapildymas 50 []\nPapildymas 100 []","Rinktis","Iðeiti");
			    }
			    case 2:
			    {
			    	if(GetPlayerMoneyA(playerid) < 50) return SendClientMessage(playerid,RED,"* Neturite 50 krepðeliui.");
					GivePlayerMoneyA(playerid, 50);
					playerDB[playerid][krepselis] = true;
				 	SendClientMessage(playerid,RED," Sëkmingai nusipirkote krepðelá. {FF8C00}Sëkmës!");
        			ShowPlayerDialog(playerid,1543,DIALOG_STYLE_LIST,"Pasirinkite prekæ","{FFFFFF}Gëlës 10 []\nKastuvas 30 []\nKrepðelis grybavimui 50 []\n{FF0000}PAPILDYMAI\nPapildymas 20 []\nPapildymas 50 []\nPapildymas 100 []","Rinktis","Iðeiti");
			    }
			    case 3:
			    {
        			ShowPlayerDialog(playerid,1543,DIALOG_STYLE_LIST,"Pasirinkite prekæ","{FFFFFF}Gëlës 10 []\nKastuvas 30 []\nKrepðelis grybavimui 50 []\n{FF0000}PAPILDYMAI\nPapildymas 20 []\nPapildymas 50 []\nPapildymas 100 []","Rinktis","Iðeiti");
			    }
			    case 4:
			    {
				    if(GetPlayerMoneyA(playerid) < 20) return SendClientMessage(playerid,RED," Jums neuþtenka pinigø, reikia {FF8C00}20 .");
				    if(playerDB[playerid][papildimas] > 400) return SendClientMessage(playerid,RED,"* Negalite turëti papildymo didesnës nei 500 vertës.");
				    ApplyAnimation(playerid,"ped","phone_out",3.0,0,0,0,0,0);
					playerDB[playerid][papildimas]+=20;
					GivePlayerMoneyA(playerid, -20);
				 	SendClientMessage(playerid,RED," Nusipirkote papildymà uþ {FF8C00}20{FF0000}, sëkmës. Papildymui naudok {FF8C00}/papildyti [suma]");
      				ShowPlayerDialog(playerid,1543,DIALOG_STYLE_LIST,"Pasirinkite prekæ","{FFFFFF}Gëlës 10 []\nKastuvas 30 []\nKrepðelis grybavimui 50 []\n{FF0000}PAPILDYMAI\nPapildymas 20 []\nPapildymas 50 []\nPapildymas 100 []","Rinktis","Iðeiti");
			    }
			    case 5:
			    {
			    	if(GetPlayerMoneyA(playerid) < 50) return SendClientMessage(playerid,RED," Jums neuþtenka pinigø, reikia {FF8C00}50 .");
				    if(playerDB[playerid][papildimas] > 400) return SendClientMessage(playerid,RED,"* Negalite turëti papildymo didesnës nei 500 vertës.");
				    ApplyAnimation(playerid,"ped","phone_out",3.0,0,0,0,0,0);
					playerDB[playerid][papildimas]+=50;
					GivePlayerMoneyA(playerid, -50);
				 	SendClientMessage(playerid,RED," Nusipirkote papildymà uþ {FF8C00}50{FF0000}, sëkmës. Papildymui naudok {FF8C00}/papildyti [suma]");
      				ShowPlayerDialog(playerid,1543,DIALOG_STYLE_LIST,"Pasirinkite prekæ","{FFFFFF}Gëlës 10 []\nKastuvas 30 []\nKrepðelis grybavimui 50 []\n{FF0000}PAPILDYMAI\nPapildymas 20 []\nPapildymas 50 []\nPapildymas 100 []","Rinktis","Iðeiti");
			    }
			    case 6:
			    {
			        if(GetPlayerMoneyA(playerid) < 100) return SendClientMessage(playerid,RED," Jums neuþtenka pinigø, reikia {FF8C00}100 .");
				    if(playerDB[playerid][papildimas] > 400) return SendClientMessage(playerid,RED,"* Negalite turëti papildymo didesnës nei 500 vertës.");
				    ApplyAnimation(playerid,"ped","phone_out",3.0,0,0,0,0,0);
					playerDB[playerid][papildimas]+=100;
					GivePlayerMoneyA(playerid, -100);
				 	SendClientMessage(playerid,RED," Nusipirkote papildymà uþ {FF8C00}100{FF0000}, sëkmës. Papildymui naudok {FF8C00}/papildyti [suma]");
      				ShowPlayerDialog(playerid,1543,DIALOG_STYLE_LIST,"Pasirinkite prekæ","{FFFFFF}Gëlës 10 []\nKastuvas 30 []\nKrepðelis grybavimui 50 []\n{FF0000}PAPILDYMAI\nPapildymas 20 []\nPapildymas 50 []\nPapildymas 100 []","Rinktis","Iðeiti");
			    }
			}
		}
		return 1;
	}
	//Pasiimti auto alga responsas
	if(dialogid == 5424)
	{
		if(response)
		{
		    new h,m,s;
	   		gettime(h,m,s);
		    if(h < 19 || h > 22) return SendClientMessage(playerid, GREEN, "{ff7f00}* Atsipraðome, bet algà tegalite pasiimti nuo {ffcc00}19:00 {ff7f00}iki {ffcc00}22:00 {ff7f00}valandos!");
		    if(playerDB[playerid][alga] < 1) return SendClientMessage(playerid, RED, "* Neturi ko atsiimti, eik dirbti!");
			new msg[42];
			format(msg, sizeof(msg), "* Atsiëmete savo uþdirbtà algà: %s ", konvertuoti_pinigus(playerDB[playerid][alga]));
			SendClientMessage(playerid, COLOR, msg);
			GivePlayerMoneyA(playerid, playerDB[playerid][alga]);
			playerDB[playerid][alga] = 0;
		}
		return 1;
	}
//pavalgom
	if(dialogid == 5785)
	{
		if(response)
		{
			switch(listitem)
	  		{
	    		case 0:
	            {
	                if(GetPlayerMoneyA(playerid) < 15) return SendClientMessage(playerid, RED, "* Neturite 15 cepelinams!");
	                playerDB[playerid][alkis] += 30;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -15);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,RED,"{FEF280}Suvalgëte cepelinø kuriø kaina 15. Dabar jûs nebesate alkanas");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
	           	case 1:
	            {
	                if(GetPlayerMoneyA(playerid) < 15) return SendClientMessage(playerid, RED, "* Neturite 8 euru picai!");
	                playerDB[playerid][alkis] += 30;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -15);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,RED,"{FEF280}Suvalgëte pica kurios kaina 8 eurai. Dabar jûs nebesate alkanas");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
	            case 2:
	            {
	                if(GetPlayerMoneyA(playerid) < 30) return SendClientMessage(playerid, RED, "* Neturite 30 kepsniui!");
	                playerDB[playerid][alkis] += 60;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -30);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,RED,"{FEF280}Suvalgëte kepsná kurio kaina 30. Dabar jûs nebesate alkanas");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
	            case 3:
	            {
	                if(GetPlayerMoneyA(playerid) < 7) return SendClientMessage(playerid, RED, "* Neturite 7 sriubai!");
	                playerDB[playerid][alkis] += 15;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -7);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,RED,"{FEF280}Suvalgëte sriubà kurios kaina 7. Dabar jûs nebesate alkanas");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
			}
        }
        return 1;
	}
//Miesteliø - MAXIMOS valgis.
	if(dialogid == 5786)
	{
		if(response)
		{
			switch(listitem)
	  		{
	    		case 0:
	            {
	                if(GetPlayerMoneyA(playerid) < 200) return SendClientMessage(playerid, RED, "* Neturite 200 dideliam kebabui!");
	                playerDB[playerid][alkis] += 50;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -200);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"Nusipirkote didelá kebabà ir ji suvalgëte! Ir padidëjo {FF8C00}50 {808080}procentø jûsø alkis.");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
	            case 1:
	            {
	                if(GetPlayerMoneyA(playerid) < 100) return SendClientMessage(playerid, RED, "* Neturite 100 maþam kebabui!");
	                playerDB[playerid][alkis] += 40;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -100);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"Nusipirkote maþà kebabà ir ji suvalgëte! Ir padidëjo {FF8C00}40 {808080}procentø jûsø alkis.");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
	            case 2:
	            {
	                if(GetPlayerMoneyA(playerid) < 80) return SendClientMessage(playerid, RED, "* Neturite 80 picai!");
	                playerDB[playerid][alkis] += 35;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -80);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"Nusipirkote picà ir ja suvalgëte! Ir padidëjo {FF8C00}35 {808080}procentø jûsø alkis.");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
	            case 3:
	            {
	                if(GetPlayerMoneyA(playerid) < 50) return SendClientMessage(playerid, RED, "* Neturite 50 skrûdintoms bulvytëms!");
	                playerDB[playerid][alkis] += 30;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -50);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"Nusipirkote skrûdintø bulvyèiø ir jas suvalgëte! Ir padidëjo {FF8C00}30 {808080}procentø jûsø alkis.");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
	            case 4:
	            {
	                if(GetPlayerMoneyA(playerid) < 50) return SendClientMessage(playerid, RED, "* Neturite 50 ledams!");
	                playerDB[playerid][alkis] += 30;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -50);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"Nusipirkote ledø ir juos suvalgëte! Ir padidëjo {FF8C00}30 {808080}procentø jûsø alkis.");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
	            case 5:
	            {
	                if(GetPlayerMoneyA(playerid) < 30) return SendClientMessage(playerid, RED, "* Neturite 30 jogurtui!");
	                playerDB[playerid][alkis] += 25;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -30);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"Nusipirkote jogurtà ir já suvalgëte! Ir padidëjo {FF8C00}25 {808080}procentø jûsø alkis.");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
	            case 6:
	            {
	                if(GetPlayerMoneyA(playerid) < 80) return SendClientMessage(playerid, RED, "* Neturite 80 makaronø sriubai!");
	                playerDB[playerid][alkis] += 35;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -80);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"Nusipirkote makaronø sriubos ir jà suvalgëte! Ir padidëjo {FF8C00}35 {808080}procentø jûsø alkis.");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
	            case 7:
	            {
	                if(GetPlayerMoneyA(playerid) < 10) return SendClientMessage(playerid, RED, "* Neturite 10 Coca Colai!");
	                playerDB[playerid][alkis] += 10;
	                if(playerDB[playerid][alkis] > 100) playerDB[playerid][alkis] = 100;
	                UpdateAlkanasTextdraw( playerid );
	                GivePlayerMoneyA(playerid, -10);
	                SetPlayerDrunkLevel(playerid, 0);
	                SendClientMessage(playerid,PLAYCOL_HIDDEN,"Nusipirkote Coca Colà ir jà iðgerëte! Ir padidëjo {FF8C00}10 {808080}procentø jûsø alkis.");
	                SetPlayerHealthEx(playerid, 100);
	                ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
	            }
			}
        }
        return 1;
	}
//Zonos valgiai
	if(dialogid == 5788)
	{
		if(response)
		{
		    switch(listitem)
      		{
				case 0:
				{
					playerDB[playerid][alkis]=100;
					UpdateAlkanasTextdraw( playerid );
					SetPlayerDrunkLevel(playerid, 0);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
					SendClientMessage(playerid, RED,"[KALËJIMAS] Suvalgiai þirnynës ið zonos nemokamai.");
				}
				case 1:
				{
					playerDB[playerid][alkis]=100;
					UpdateAlkanasTextdraw( playerid );
					SetPlayerDrunkLevel(playerid, 0);
					ApplyAnimation(playerid, "FOOD", "EAT_Burger",4.1,0,1,1,0,0);
					SendClientMessage(playerid, RED,"[KALËJIMAS] Suvalgiai bundelio ið zonos nemokamai.");
				}
			}
		}
		return 1;
	}
//MASINU VM DIALOGAS
	if(dialogid == 1)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(!response)
		{
			RemovePlayerFromVehicle(playerid);
			SetVehicleToRespawn(vehicleid);
			return 1;
		}
  		if(response)
		{
		    if(GetPlayerMoneyA(playerid) < 500)
			{
				SendClientMessage(playerid, RED, "* Neturi 500  vairavimo egzaminui.");
				DisableAllPlayerCheckpoints(playerid);
				RemovePlayerFromVehicle(playerid);
				SetVehicleToRespawn(vehicleid);
				return 1;
			}
			new str[130];
 			format(str,sizeof(str),"[AdminChat] [Serveris]: Þaidëjas pradëjo laikytis vairavimo egzaminà. Padëkite jam : /pzu {FF9900}%s",GetPlayerNameEx(playerid));
    		SendMessageToAdmins(BLUE, str);
			GivePlayerMoneyA(playerid, -500);
			DisableAllPlayerCheckpoints(playerid);
			SetPlayerCheckpointEx(playerid, 16, 2461.6194,81.9312,26.1069, 4.0);
			playerDB[playerid][kelintasCPVM] = 1;
			playerDB[playerid][kelintasCPVM] ++;
			SendClientMessage(playerid, RED, "* Instruktorius: Pradëjote laikyti praktikos aikðtelæ. Sëkmës! Naudokite {FF8C00}/dirzas /autopilotas");
			SendClientMessage(playerid,0xFF000090,"* Sëkmës laikant vairavimo egzaminà. Laikykis K.E.T taisykliø, ir nesudauþyk transporto!");
			return 1;
		}
	}

	if(dialogid == 3)
	{
		new lQuery[140];
	    if(!response) return Kick(playerid);
		if(response)
		{
		    if ( strlen ( inputtext)> 20) return Kick(playerid);
		    if ( strfind ( inputtext , "'" , true ) != -1 ) return Kick ( playerid );
		    else if ( strfind ( inputtext , "_" , true ) != -1 ) return Kick ( playerid ) ;
			format(lQuery, sizeof(lQuery), "SELECT * FROM `players` WHERE `Vardas` = '%s' AND `Slaptazodis` = '%s'", GetPlayerNameEx(playerid),inputtext);
			mysql_query(lQuery);
			mysql_store_result();
			if ( mysql_num_rows () ) {
				playerDB [ playerid ] [ authstate ] = 2;
				SpawnPlayer ( playerid ) ;
				new msg[100] ;
   				SendClientMessage(playerid, -1, "{0caf35} Jûs sëkmingai prisijungëte prie savo paskyros.");
				format(msg, sizeof(msg), "{00E1E1}Sveiki atvykæ á {00FF00}NRMG.LT {00E1E1}serverá {FFFFFF}%s!", GetPlayerNameEx(playerid));
				SendClientMessage(playerid, RED, msg);
   				SendClientMessage(playerid, RED, "{00E1E1}Pagrindines komandas galite suþinoti paraðë {FFFFFF}/komandos");
   				SendClientMessage(playerid, RED, "{00E1E1}Informacijà apie savo paskyrà galite suþinoti paraðë {FFFFFF}/info");
   				SendClientMessage(playerid, RED, "{00E1E1}Visas perkamas paslaugas rasite - /paslaugos, informacija apie jûsø vartotojà - {FFFFFF}/info");
   				SendClientMessage ( playerid , -1 , "{00E1E1}Norëdami apsaugoti savo vartotojà naudokite: {FFFFFF}/apsaugos" ) ;
				//Uþðaldomas þaidëjas, kad uþkrautu serverio parametrus.
				TogglePlayerControllable(playerid, false);
				SetTimerEx("zprisijungia", 3000, 0, "i", playerid);
			}
			else
			{
				if ( bandymai [ playerid ] >= 3 ) {
				    Kick ( playerid ) ;
				}
				bandymai [ playerid ] ++;
				format ( lQuery , sizeof ( lQuery ) , "{FF5454}[KLAIDA]: {ffffff}Neteisingai ávestas slaptaþodis, bandymas {FF5454}%d{ffffff}/{FF5454}%d{ffffff}." , bandymai [ playerid ] , MAX_BANDYMAI );
				SendClientMessage ( playerid , -1 , lQuery ) ;
				ShowPlayerDialog(playerid, 3, DIALOG_STYLE_PASSWORD, "Prisijungimas",
				"{2ED0B5}Norëdami prisijungti á serverá jus turite ávesti savo slaptaþodá.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudojote prisiregistruojant á serverá á serverá:",
				"Prisijungti", "Iðeiti");
			}
			mysql_free_result () ;
		}
	}
	
	if(dialogid == 4)
	{
		if(response)
		{
		    new lQuery[256], file[130], zin[90] , regDatas [ 40 ] , data [ 6 ];
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
	 		if(strlen(inputtext) > 32) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
            if(strfind(inputtext, "%", true) != -1) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
            if(strfind(inputtext, "'", true) != -1) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
            if(strlen(inputtext) < 6) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
			if(strlen(inputtext) > 24) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
			gettime ( data [ 0 ] , data [ 1 ] , data [ 2 ] ) ;
			getdate ( data [ 3 ] , data [ 4 ] , data [ 5 ] ) ;
			format ( regDatas , sizeof ( regDatas ) , "%d-%.02d-%.02d %.02d:%.02d:%.02d" , data [ 3 ] , data [ 4 ] , data [ 5 ] , data [ 0 ] , data [ 1 ] , data [ 2 ] ) ;
			format(lQuery, sizeof(lQuery), "INSERT INTO `players` (Vardas, Slaptazodis, TikrasSlaptazodis,regDate,regIP) VALUES ('%s', '%s', '%s','%s','%s')", GetPlayerNameEx(playerid), inputtext,inputtext , regDatas , GetPlayerIpEx ( playerid ) );
			mysql_query(lQuery);

			SendClientMessage(playerid, COLOR_WHITE, "{37f467}Sveikiname prisidëjus prie {C9FFAB}NRMG.LT{F3FF02} serverio!");
			SendClientMessage(playerid, COLOR_WHITE, "{37f467}Bûtinai apsilankykite mûsø svetainëje {00FF40}www.NRMG.LT");
			SendClientMessage(playerid, COLOR_WHITE, "{37f467}Ten jûs galite rasti mûsø forumà.");
			SendClientMessage(playerid, COLOR_WHITE, "{37f467}Visas perkamas paslaugas rasite {00FF40}/paslaugos");
			format(file,sizeof(file),"{37f467}Jûsø slaptaþodis yra: {00FF40}%s", inputtext);
			format(zin, sizeof(zin), "{37f467}Jûsø vartotojas uþregistruotas ant ðio IP adreso: {FF8000}%s", GetPlayerIpEx(playerid));
			SendClientMessage(playerid,YELLOW,file);
			SendClientMessage(playerid,0xFFFF00AA, zin);
			SendClientMessage ( playerid , -1 , "{37f467}Norëdami apsaugoti savo vartotoja naudokite: {00FF40}/apsaugos" ) ;
            playerDB[playerid][DeleteAcc] = true;
			//ShowPlayerDialog(playerid, 18, DIALOG_STYLE_MSGBOX, "Registracija", "{2ED0B5}Dabar pasirinkite jûsø veikëjo lytá:", "Vyras", "Moteris");

			PlayerTextDrawShow(playerid, LytiesPasirinkimoTextDraw[playerid][0]);
			PlayerTextDrawShow(playerid, LytiesPasirinkimoTextDraw[playerid][1]);
			PlayerTextDrawShow(playerid, LytiesPasirinkimoTextDraw[playerid][2]);
			PlayerTextDrawShow(playerid, LytiesPasirinkimoTextDraw[playerid][3]);

			SelectTextDraw(playerid, 0xAEB404FF);
		}
		return 1;
	}

	if(dialogid == 9845)
	{
		if(response)
		{
		    new lQuery[256], file[130], zin[90] , regDatas [ 40 ] , data [ 6 ];
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
	 		if(strlen(inputtext) > 32) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
            if(strfind(inputtext, "%", true) != -1) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
            if(strfind(inputtext, "'", true) != -1) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
            if(strlen(inputtext) < 6) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
			if(strlen(inputtext) > 24) return ShowPlayerDialog(playerid, 4, DIALOG_STYLE_PASSWORD, "Registracija", "{2ED0B5}Norëdami pradëti þaisti mûsø serveryje jus bûtinai turite uþsiregistruoti.\n{2ED0B5}Jums tai uþims tik 1 minute.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudosite kiekvienà kartà prisijungiant á serverá:", "Registruotis", "Iðeiti");
			gettime ( data [ 0 ] , data [ 1 ] , data [ 2 ] ) ;
			getdate ( data [ 3 ] , data [ 4 ] , data [ 5 ] ) ;
			format ( regDatas , sizeof ( regDatas ) , "%d-%.02d-%.02d %.02d:%.02d:%.02d" , data [ 3 ] , data [ 4 ] , data [ 5 ] , data [ 0 ] , data [ 1 ] , data [ 2 ] ) ;
			format(lQuery, sizeof(lQuery), "INSERT INTO `players` (Vardas, Slaptazodis, TikrasSlaptazodis,regDate,regIP) VALUES ('%s', '%s', '%s','%s','%s')", GetPlayerNameEx(playerid), inputtext,inputtext , regDatas , GetPlayerIpEx ( playerid ) );
			mysql_query(lQuery);

			SendClientMessage(playerid, COLOR_WHITE, "{37f467}Sveikiname prisidëjus prie {C9FFAB}NRMG.LT{F3FF02} serverio!");
			SendClientMessage(playerid, COLOR_WHITE, "{37f467}Bûtinai apsilankykite mûsø svetainëje {00FF40}www.NRMG.LT");
			SendClientMessage(playerid, COLOR_WHITE, "{37f467}Ten jûs galite rasti mûsø forumà.");
			SendClientMessage(playerid, COLOR_WHITE, "{37f467}Visas perkamas paslaugas rasite {00FF40}/paslaugos");
			format(file,sizeof(file),"{37f467}Jûsø slaptaþodis yra: {00FF40}%s", inputtext);
			format(zin, sizeof(zin), "{37f467}Jûsø vartotojas uþregistruotas ant ðio IP adreso: {FF8000}%s", GetPlayerIpEx(playerid));
			SendClientMessage(playerid,YELLOW,file);
			SendClientMessage(playerid,0xFFFF00AA, zin);
			SendClientMessage ( playerid , -1 , "{37f467}Norëdami apsaugoti savo vartotoja naudokite: {00FF40}/apsaugos" ) ;
            playerDB[playerid][DeleteAcc] = true;
			//ShowPlayerDialog(playerid,18,DIALOG_STYLE_MSGBOX,"Lytis","Jûsø lytis?","Vyras","Moteris");

			PlayerTextDrawShow(playerid, LytiesPasirinkimoTextDraw[playerid][0]);
			PlayerTextDrawShow(playerid, LytiesPasirinkimoTextDraw[playerid][1]);
			PlayerTextDrawShow(playerid, LytiesPasirinkimoTextDraw[playerid][2]);
			PlayerTextDrawShow(playerid, LytiesPasirinkimoTextDraw[playerid][3]);

			SelectTextDraw(playerid, 0xAEB404FF);
		}
		return 1;
	}
	
	if(dialogid == 18)
	{
	    if(!response) playerDB[playerid][lytis] = 0; 
		else if(response) playerDB[playerid][lytis] = 1;
		SendClientMessage(playerid, RED, "{84FBFB}Jûs pasirinkote lytá.");
		Logged[playerid] = true;
		playerDB[playerid][authstate] = 1;
		playerDB[playerid][DeleteAcc] = true;
		SendClientMessage(playerid, RED, "{00E1E1}Pagrindines komandas galite suþinoti paraðæ {FFFFFF}/komandos");
		SendClientMessage(playerid, RED, "{00E1E1}Informacijà apie savo paskyrà galite suþinoti paraðæ {FFFFFF}/info");
		SendClientMessage(playerid, RED, "{00E1E1}Visas perkamas paslaugas rasite - /paslaugos, informacija apie jûsø vartotojà - {FFFFFF}/info");
	}
	return 1;
}

public GlobalOneSecTimer()
{
	foreach(Player, i)
	{
		if(IsPlayerInZoneEx(i, SafetyZoneID[0]))
		{
			//Rodom Textdrawà
		}
		else
		{
			//Slepiam Textdrawà
		}
	}

	return 1;
}

public Gasup(vehicleid,curgass,kof,mokejo,playerid)
{
	if(playerDB[playerid][pila])
	{
		if(GetPlayerMoneyA(playerid) >= kof)
		{
		    if(vehicleDB[vehicleid][gas] < aBakai[GetVehicleModel(vehicleid)-400])
		    {
	 			SetTimerEx("Gasup",1000,false,"iiiii",vehicleid,curgass+1,kof,mokejo+kof,playerid);
	 			vehicleDB[vehicleid][gas]++;
	 			GivePlayerMoneyA(playerid,-kof);
	 			new msg[128];
	 			format(msg,sizeof(msg),"~n~ Ipilta: %iL.~n~Tarifas: %i/l.~n~Suma: %i .~n~Baigti: ~k~~VEHICLE_ENTER_EXIT~",curgass,kof,mokejo);
	 			GameTextForPlayer(playerid,msg,1100,5);
			}else{
				TogglePlayerControllable(playerid,true);
				GameTextForPlayer(playerid,"Bakas pilnas",2000,5);
				playerDB[playerid][pila]=false;
				EndGasup(playerid,vehicleid,curgass,kof,mokejo);
			}
		}else{
		    TogglePlayerControllable(playerid,true);
			GameTextForPlayer(playerid,"Jums nebeuztenka pinigu",2000,5);
			playerDB[playerid][pila]=false;
			EndGasup(playerid,vehicleid,curgass,kof,mokejo);
		}
	}else{
	    TogglePlayerControllable(playerid,true);
	    EndGasup(playerid,vehicleid,curgass,kof,mokejo);
	}
}
stock GetClosestPlayerToPlayer(playerid)
{
    new Float:dist = 5.0;
    new targetid = INVALID_PLAYER_ID;
    new Float:x1,Float:y1,Float:z1;
    new Float:x2,Float:y2,Float:z2;
    new Float:tmpdis;
    GetPlayerPos(playerid,x1,y1,z1);
    for(new i=0;i<MAX_PLAYERS;i++)
    {
        if(i == playerid) continue;
        GetPlayerPos(i,x2,y2,z2);
        tmpdis = floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
        if(tmpdis < dist)
        {
            dist = tmpdis;
            targetid = i;
        }
    }
    return targetid;
}


stock CreateZone(Title[], Float: MinX, Float: MinY, Float: MaxX, Float: MaxY, bool: ShowZone = false, ZoneCol = 0)
{
    HowMuchZonesIs++;

	if(ShowZone)
	{
		ZonesSystem[HowMuchZonesIs - 1][ZoneID] = GangZoneCreate(MinX, MinY, MaxX, MaxY); //- Sukuriam gaujos zona!
	}
	
	
	strdel(ZonesSystem[HowMuchZonesIs - 1][ZoneTitle], 0,     64);
	strcat(ZonesSystem[HowMuchZonesIs - 1][ZoneTitle], Title, 64);
	
	
	ZonesSystem[HowMuchZonesIs - 1][ZoneColor] = ZoneCol;
  	ZonesSystem[HowMuchZonesIs - 1][ZoneMinX]  = MinX;
  	ZonesSystem[HowMuchZonesIs - 1][ZoneMinY]  = MinY;
  	ZonesSystem[HowMuchZonesIs - 1][ZoneMaxX]  = MaxX;
  	ZonesSystem[HowMuchZonesIs - 1][ZoneMaxY]  = MaxY;
  	
  	return HowMuchZonesIs - 1;
}

stock IsPlayerInZoneEx(playerid, GZoneID)
{
	new Float: P_Pos[3]; GetPlayerPos(playerid, P_Pos[0], P_Pos[1], P_Pos[2]);

  	if(P_Pos[0] >= ZonesSystem[GZoneID][ZoneMinX] && P_Pos[0] <= ZonesSystem[GZoneID][ZoneMaxX] && P_Pos[1] >= ZonesSystem[GZoneID][ZoneMinY] && P_Pos[1] <= ZonesSystem[GZoneID][ZoneMaxY]) return 1;

  	return 0;
}

stock GetPlayerZone(playerid)
{
	new String[64] = "N/A";
   	for(new i = 0; i < MAX_ZONES_IN_SERVER; i ++)
   	{
   	    if(IsPlayerInZone(playerid, i))
   	    {
        	strdel(String, 0, 64);
            strcat(String, ZonesSystem[i][ZoneTitle], 64);

			return String;
        }
    }
    return String;
}

stock RodomZaidejuiTextDraw(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		LytiesPasirinkimoTextDraw[playerid][0] = CreatePlayerTextDraw(playerid, 404.000000, 160.000000, "             ");
		PlayerTextDrawBackgroundColor(playerid, LytiesPasirinkimoTextDraw[playerid][0], 255);
		PlayerTextDrawFont(playerid, LytiesPasirinkimoTextDraw[playerid][0], 1);
		PlayerTextDrawLetterSize(playerid, LytiesPasirinkimoTextDraw[playerid][0], 1.830000, 1.000000);
		PlayerTextDrawColor(playerid, LytiesPasirinkimoTextDraw[playerid][0], -1);
		PlayerTextDrawSetOutline(playerid, LytiesPasirinkimoTextDraw[playerid][0], 0);
		PlayerTextDrawSetProportional(playerid, LytiesPasirinkimoTextDraw[playerid][0], 1);
		PlayerTextDrawSetShadow(playerid, LytiesPasirinkimoTextDraw[playerid][0], 1);
		PlayerTextDrawUseBox(playerid, LytiesPasirinkimoTextDraw[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, LytiesPasirinkimoTextDraw[playerid][0], 16711935);
		PlayerTextDrawTextSize(playerid, LytiesPasirinkimoTextDraw[playerid][0], 221.000000, 0.000000);
		PlayerTextDrawSetSelectable(playerid, LytiesPasirinkimoTextDraw[playerid][0], 0);

		LytiesPasirinkimoTextDraw[playerid][1] = CreatePlayerTextDraw(playerid, 227.000000, 161.000000, "New Textdraw");
		PlayerTextDrawBackgroundColor(playerid, LytiesPasirinkimoTextDraw[playerid][1], 255);
		PlayerTextDrawFont(playerid, LytiesPasirinkimoTextDraw[playerid][1], 5);
		PlayerTextDrawLetterSize(playerid, LytiesPasirinkimoTextDraw[playerid][1], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, LytiesPasirinkimoTextDraw[playerid][1], -1);
		PlayerTextDrawSetOutline(playerid, LytiesPasirinkimoTextDraw[playerid][1], 0);
		PlayerTextDrawSetProportional(playerid, LytiesPasirinkimoTextDraw[playerid][1], 1);
		PlayerTextDrawSetShadow(playerid, LytiesPasirinkimoTextDraw[playerid][1], 1);
		PlayerTextDrawUseBox(playerid, LytiesPasirinkimoTextDraw[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, LytiesPasirinkimoTextDraw[playerid][1], 255);
		PlayerTextDrawTextSize(playerid, LytiesPasirinkimoTextDraw[playerid][1], 84.000000, 106.000000);
		PlayerTextDrawSetPreviewModel(playerid, LytiesPasirinkimoTextDraw[playerid][1], 7);
		PlayerTextDrawSetPreviewRot(playerid, LytiesPasirinkimoTextDraw[playerid][1], -16.000000, 0.000000, 0.000000, 1.000000);
		PlayerTextDrawSetSelectable(playerid, LytiesPasirinkimoTextDraw[playerid][1], 1);

		LytiesPasirinkimoTextDraw[playerid][2] = CreatePlayerTextDraw(playerid, 314.000000, 161.000000, "New Textdraw");
		PlayerTextDrawBackgroundColor(playerid, LytiesPasirinkimoTextDraw[playerid][2], 255);
		PlayerTextDrawFont(playerid, LytiesPasirinkimoTextDraw[playerid][2], 5);
		PlayerTextDrawLetterSize(playerid, LytiesPasirinkimoTextDraw[playerid][2], 0.500000, 1.000000);
		PlayerTextDrawColor(playerid, LytiesPasirinkimoTextDraw[playerid][2], -1);
		PlayerTextDrawSetOutline(playerid, LytiesPasirinkimoTextDraw[playerid][2], 0);
		PlayerTextDrawSetProportional(playerid, LytiesPasirinkimoTextDraw[playerid][2], 1);
		PlayerTextDrawSetShadow(playerid, LytiesPasirinkimoTextDraw[playerid][2], 1);
		PlayerTextDrawUseBox(playerid, LytiesPasirinkimoTextDraw[playerid][2], 1);
		PlayerTextDrawBoxColor(playerid, LytiesPasirinkimoTextDraw[playerid][2], 255);
		PlayerTextDrawTextSize(playerid, LytiesPasirinkimoTextDraw[playerid][2], 84.000000, 106.000000);
		PlayerTextDrawSetPreviewModel(playerid, LytiesPasirinkimoTextDraw[playerid][2], 12);
		PlayerTextDrawSetPreviewRot(playerid, LytiesPasirinkimoTextDraw[playerid][2], -16.000000, 0.000000, 0.000000, 1.000000);
		PlayerTextDrawSetSelectable(playerid, LytiesPasirinkimoTextDraw[playerid][2], 1);

		LytiesPasirinkimoTextDraw[playerid][3] = CreatePlayerTextDraw(playerid, 222.000000, 129.000000, "Pasirinkite savo veikejo lyti");
		PlayerTextDrawBackgroundColor(playerid, LytiesPasirinkimoTextDraw[playerid][3], 255);
		PlayerTextDrawFont(playerid, LytiesPasirinkimoTextDraw[playerid][3], 2);
		PlayerTextDrawLetterSize(playerid, LytiesPasirinkimoTextDraw[playerid][3], 0.280000, 2.900000);
		PlayerTextDrawColor(playerid, LytiesPasirinkimoTextDraw[playerid][3], -1);
		PlayerTextDrawSetOutline(playerid, LytiesPasirinkimoTextDraw[playerid][3], 0);
		PlayerTextDrawSetProportional(playerid, LytiesPasirinkimoTextDraw[playerid][3], 1);
		PlayerTextDrawSetShadow(playerid, LytiesPasirinkimoTextDraw[playerid][3], 1);
		PlayerTextDrawSetSelectable(playerid, LytiesPasirinkimoTextDraw[playerid][3], 0);

		RegLogTextDraw[playerid][0] = CreatePlayerTextDraw(playerid, 423.000000, 110.000000, "      ");
		PlayerTextDrawBackgroundColor(playerid, RegLogTextDraw[playerid][0], 255);
		PlayerTextDrawFont(playerid, RegLogTextDraw[playerid][0], 1);
		PlayerTextDrawLetterSize(playerid, RegLogTextDraw[playerid][0], 0.720000, 4.999997);
		PlayerTextDrawColor(playerid, RegLogTextDraw[playerid][0], -1);
		PlayerTextDrawSetOutline(playerid, RegLogTextDraw[playerid][0], 0);
		PlayerTextDrawSetProportional(playerid, RegLogTextDraw[playerid][0], 1);
		PlayerTextDrawSetShadow(playerid, RegLogTextDraw[playerid][0], 1);
		PlayerTextDrawUseBox(playerid, RegLogTextDraw[playerid][0], 1);
		PlayerTextDrawBoxColor(playerid, RegLogTextDraw[playerid][0], -943208534);
		PlayerTextDrawTextSize(playerid, RegLogTextDraw[playerid][0], 229.000000, 0.000000);
		PlayerTextDrawSetSelectable(playerid, RegLogTextDraw[playerid][0], 0);

		RegLogTextDraw[playerid][1] = CreatePlayerTextDraw(playerid, 419.000000, 115.000000, "  ");
		PlayerTextDrawBackgroundColor(playerid, RegLogTextDraw[playerid][1], 255);
		PlayerTextDrawFont(playerid, RegLogTextDraw[playerid][1], 1);
		PlayerTextDrawLetterSize(playerid, RegLogTextDraw[playerid][1], 0.740000, 7.300000);
		PlayerTextDrawColor(playerid, RegLogTextDraw[playerid][1], -1);
		PlayerTextDrawSetOutline(playerid, RegLogTextDraw[playerid][1], 0);
		PlayerTextDrawSetProportional(playerid, RegLogTextDraw[playerid][1], 1);
		PlayerTextDrawSetShadow(playerid, RegLogTextDraw[playerid][1], 1);
		PlayerTextDrawUseBox(playerid, RegLogTextDraw[playerid][1], 1);
		PlayerTextDrawBoxColor(playerid, RegLogTextDraw[playerid][1], 842150570);
		PlayerTextDrawTextSize(playerid, RegLogTextDraw[playerid][1], 233.000000, 0.000000);
		PlayerTextDrawSetSelectable(playerid, RegLogTextDraw[playerid][1], 0);

		RegLogTextDraw[playerid][2] = CreatePlayerTextDraw(playerid, 419.000000, 190.000000, "  ");
		PlayerTextDrawBackgroundColor(playerid, RegLogTextDraw[playerid][2], 255);
		PlayerTextDrawFont(playerid, RegLogTextDraw[playerid][2], 1);
		PlayerTextDrawLetterSize(playerid, RegLogTextDraw[playerid][2], 0.740000, 7.300000);
		PlayerTextDrawColor(playerid, RegLogTextDraw[playerid][2], -1);
		PlayerTextDrawSetOutline(playerid, RegLogTextDraw[playerid][2], 0);
		PlayerTextDrawSetProportional(playerid, RegLogTextDraw[playerid][2], 1);
		PlayerTextDrawSetShadow(playerid, RegLogTextDraw[playerid][2], 1);
		PlayerTextDrawUseBox(playerid, RegLogTextDraw[playerid][2], 1);
		PlayerTextDrawBoxColor(playerid, RegLogTextDraw[playerid][2], 842150570);
		PlayerTextDrawTextSize(playerid, RegLogTextDraw[playerid][2], 233.000000, 0.000000);
		PlayerTextDrawSetSelectable(playerid, RegLogTextDraw[playerid][2], 0);

		RegLogTextDraw[playerid][3] = CreatePlayerTextDraw(playerid, 419.000000, 265.000000, "  ");
		PlayerTextDrawBackgroundColor(playerid, RegLogTextDraw[playerid][3], 255);
		PlayerTextDrawFont(playerid, RegLogTextDraw[playerid][3], 1);
		PlayerTextDrawLetterSize(playerid, RegLogTextDraw[playerid][3], 0.740000, 7.300000);
		PlayerTextDrawColor(playerid, RegLogTextDraw[playerid][3], -1);
		PlayerTextDrawSetOutline(playerid, RegLogTextDraw[playerid][3], 0);
		PlayerTextDrawSetProportional(playerid, RegLogTextDraw[playerid][3], 1);
		PlayerTextDrawSetShadow(playerid, RegLogTextDraw[playerid][3], 1);
		PlayerTextDrawUseBox(playerid, RegLogTextDraw[playerid][3], 1);
		PlayerTextDrawBoxColor(playerid, RegLogTextDraw[playerid][3], 842150570);
		PlayerTextDrawTextSize(playerid, RegLogTextDraw[playerid][3], 233.000000, 0.000000);
		PlayerTextDrawSetSelectable(playerid, RegLogTextDraw[playerid][3], 0);

		RegLogTextDraw[playerid][4] = CreatePlayerTextDraw(playerid, 256.000000, 131.000000, "REGISTRACIJA");
		PlayerTextDrawBackgroundColor(playerid, RegLogTextDraw[playerid][4], 255);
		PlayerTextDrawFont(playerid, RegLogTextDraw[playerid][4], 2);
		PlayerTextDrawLetterSize(playerid, RegLogTextDraw[playerid][4], 0.500000, 3.099999);
		PlayerTextDrawColor(playerid, RegLogTextDraw[playerid][4], -1);
		PlayerTextDrawSetOutline(playerid, RegLogTextDraw[playerid][4], 0);
		PlayerTextDrawSetProportional(playerid, RegLogTextDraw[playerid][4], 1);
		PlayerTextDrawSetShadow(playerid, RegLogTextDraw[playerid][4], 1);
		PlayerTextDrawSetSelectable(playerid, RegLogTextDraw[playerid][4], 10);

		RegLogTextDraw[playerid][5] = CreatePlayerTextDraw(playerid, 252.000000, 207.000000, "PRISIJUNGIMAS");
		PlayerTextDrawBackgroundColor(playerid, RegLogTextDraw[playerid][5], 255);
		PlayerTextDrawFont(playerid, RegLogTextDraw[playerid][5], 2);
		PlayerTextDrawLetterSize(playerid, RegLogTextDraw[playerid][5], 0.500000, 3.099999);
		PlayerTextDrawColor(playerid, RegLogTextDraw[playerid][5], -1);
		PlayerTextDrawSetOutline(playerid, RegLogTextDraw[playerid][5], 0);
		PlayerTextDrawSetProportional(playerid, RegLogTextDraw[playerid][5], 1);
		PlayerTextDrawSetShadow(playerid, RegLogTextDraw[playerid][5], 1);
		PlayerTextDrawSetSelectable(playerid, RegLogTextDraw[playerid][5], 10);

		RegLogTextDraw[playerid][6] = CreatePlayerTextDraw(playerid, 297.000000, 280.000000, "ISEITI");
		PlayerTextDrawBackgroundColor(playerid, RegLogTextDraw[playerid][6], 255);
		PlayerTextDrawFont(playerid, RegLogTextDraw[playerid][6], 2);
		PlayerTextDrawLetterSize(playerid, RegLogTextDraw[playerid][6], 0.500000, 3.099999);
		PlayerTextDrawColor(playerid, RegLogTextDraw[playerid][6], -1);
		PlayerTextDrawSetOutline(playerid, RegLogTextDraw[playerid][6], 0);
		PlayerTextDrawSetProportional(playerid, RegLogTextDraw[playerid][6], 1);
		PlayerTextDrawSetShadow(playerid, RegLogTextDraw[playerid][6], 1);
		PlayerTextDrawSetSelectable(playerid, RegLogTextDraw[playerid][6], 10);

		RegLogTextDraw[playerid][7] = CreatePlayerTextDraw(playerid, 290.000000, 341.000000, "~w~NR~y~MG~w~.LT");
		PlayerTextDrawBackgroundColor(playerid, RegLogTextDraw[playerid][7], 255);
		PlayerTextDrawFont(playerid, RegLogTextDraw[playerid][7], 2);
		PlayerTextDrawLetterSize(playerid, RegLogTextDraw[playerid][7], 0.539999, 2.099999);
		PlayerTextDrawColor(playerid, RegLogTextDraw[playerid][7], -1);
		PlayerTextDrawSetOutline(playerid, RegLogTextDraw[playerid][7], 0);
		PlayerTextDrawSetProportional(playerid, RegLogTextDraw[playerid][7], 1);
		PlayerTextDrawSetShadow(playerid, RegLogTextDraw[playerid][7], 1);
		PlayerTextDrawSetSelectable(playerid, RegLogTextDraw[playerid][7], 0);
	}

	return 1;
}

stock EndGasup(playerid,vehicleid,ipilta,kof,mokejo)
{
	ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.000000, 0, 0, 0, 0, -1);
	new msg[70];
	SendClientMessage(playerid,BLUE,"* ===== Degalø èekis =====");
	format(msg,sizeof(msg),"* Maðina: %s", VehicleNames[GetVehicleModel(vehicleid)-400]);
	SendClientMessage(playerid,GREEN,msg);
	format(msg,sizeof(msg),"* Ásipilta degalø: %i l.",ipilta);
	SendClientMessage(playerid,GREEN,msg);
	format(msg,sizeof(msg),"* Tarifas: %i /l.",kof);
	SendClientMessage(playerid,GREEN,msg);
	SendClientMessage(playerid,BLUE,"* ___________");
	format(msg,sizeof(msg),"* Suma: %i ",mokejo);
	SendClientMessage(playerid,GREEN,msg);
}
stock PutPlayerInVehicleEx(playerid, vehicleid, seatid)
{
	playerDB[playerid][AntiHomeKint] = vehicleid;
	PutPlayerInVehicle(playerid, vehicleid, seatid);
}
stock KeiciamRangoApranga(pID)
{
	new spc = playerDB[pID][specialybe];
	new rang = playerDB[pID][rangas];
	switch(rang)
	{
		case 1:
		{
			switch(spc)
			{
 				case 1:
   				{
					SetPlayerSkin(pID,265);
					playerDB[pID][uniforma]=265;
					playerDB[pID][uniformd]=true;
				}
				case 2:
			    {
			    	SetPlayerSkin(pID,274);
					playerDB[pID][uniforma]=274;
					playerDB[pID][uniformd]=true;
			    }
			    case 3:
			    {
			        SetPlayerSkin(pID,171);
					playerDB[pID][uniforma]=171;
					playerDB[pID][uniformd]=true;
			    }
			    case 4:
			    {
					SetPlayerSkin(pID,8);
					playerDB[pID][uniforma]=8;
					playerDB[pID][uniformd]=true;
			    }
			    case 5:
			    {
			        SetPlayerSkin(pID,29);
					playerDB[pID][uniforma]=29;
					playerDB[pID][uniformd]=true;
			    }
			    case 11:
			    {
			        SetPlayerSkin(pID,125);
					playerDB[pID][uniforma]=125;
					playerDB[pID][uniformd]=true;
			    }
			    case 17:
			    {
			        SetPlayerSkin(pID,287);
					playerDB[pID][uniforma]=287;
					playerDB[pID][uniformd]=true;
			    }
				case 40:
				{
				    SetPlayerSkin(pID,126);
					playerDB[pID][uniforma]=126;
					playerDB[pID][uniformd]=true;
				}
				case 42:
				{
				    SetPlayerSkin(pID,117);
					playerDB[pID][uniforma]=117;
					playerDB[pID][uniformd]=true;
				}
			}
		}
		case 2:
		{
			switch(spc)
			{
			    case 1:
			    {
					SetPlayerSkin(pID,266);
					playerDB[pID][uniforma]=266;
					playerDB[pID][uniformd]=true;
			    }
			    case 2:
			    {
			    	SetPlayerSkin(pID,275);
					playerDB[pID][uniforma]=275;
					playerDB[pID][uniformd]=true;
			    }
			    case 3:
			    {
			        SetPlayerSkin(pID,240);
					playerDB[pID][uniforma]=240;
					playerDB[pID][uniformd]=true;
			    }
			    case 4:
			    {
					SetPlayerSkin(pID,42);
					playerDB[pID][uniforma]=42;
					playerDB[pID][uniformd]=true;
			    }
			    case 5:
			    {
			        SetPlayerSkin(pID,30);
					playerDB[pID][uniforma]=30;
					playerDB[pID][uniformd]=true;
			    }
			    case 11:
			    {
			        SetPlayerSkin(pID,111);
					playerDB[pID][uniforma]=111;
					playerDB[pID][uniformd]=true;
			    }
			    case 17:
			    {
			        SetPlayerSkin(pID,287);
					playerDB[pID][uniforma]=287;
					playerDB[pID][uniformd]=true;
			    }
				case 40:
				{
				    SetPlayerSkin(pID,124);
					playerDB[pID][uniforma]=124;
					playerDB[pID][uniformd]=true;
				}
				case 42:
				{
				    SetPlayerSkin(pID,120);
					playerDB[pID][uniforma]=120;
					playerDB[pID][uniformd]=true;
				}
			}
		}
		case 3:
		{
			switch(spc)
			{
			    case 1:
			    {
					SetPlayerSkin(pID,284);
					playerDB[pID][uniforma]=284;
					playerDB[pID][uniformd]=true;
			    }
			    case 2:
			    {
			    	SetPlayerSkin(pID,276);
					playerDB[pID][uniforma]=276;
					playerDB[pID][uniformd]=true;
			    }
			    case 3:
			    {
			        SetPlayerSkin(pID,187);
					playerDB[pID][uniforma]=187;
					playerDB[pID][uniformd]=true;
			    }
			    case 4:
			    {
					SetPlayerSkin(pID,50);
					playerDB[pID][uniforma]=50;
					playerDB[pID][uniformd]=true;
			    }
			    case 5:
			    {
			        SetPlayerSkin(pID,28);
					playerDB[pID][uniforma]=28;
					playerDB[pID][uniformd]=true;
			    }
			    case 11:
			    {
			        SetPlayerSkin(pID,272);
					playerDB[pID][uniforma]=127;
					playerDB[pID][uniformd]=true;
			    }
			    case 17:
			    {
			        SetPlayerSkin(pID,287);
					playerDB[pID][uniforma]=287;
					playerDB[pID][uniformd]=true;
			    }
				case 40:
				{
				    SetPlayerSkin(pID,127);
					playerDB[pID][uniforma]=127;
					playerDB[pID][uniformd]=true;
				}
				case 42:
				{
				    SetPlayerSkin(pID,107);
					playerDB[pID][uniforma]=107;
					playerDB[pID][uniformd]=true;
				}
			}
		}
		case 4:
		{
			switch(spc)
			{
			    case 1:
			    {
					SetPlayerSkin(pID,280);
					playerDB[pID][uniforma]=280;
					playerDB[pID][uniformd]=true;
			    }
			    case 4:
			    {
					SetPlayerSkin(pID,50);
					playerDB[pID][uniforma]=50;
					playerDB[pID][uniformd]=true;
			    }
			    case 5:
			    {
			        SetPlayerSkin(pID,249);
					playerDB[pID][uniforma]=249;
					playerDB[pID][uniformd]=true;
			    }
			    case 11:
			    {
			        SetPlayerSkin(pID,112);
					playerDB[pID][uniforma]=112;
					playerDB[pID][uniformd]=true;
			    }
			    case 17:
			    {
			        SetPlayerSkin(pID,287);
					playerDB[pID][uniforma]=287;
					playerDB[pID][uniformd]=true;
			    }
			}
		}
		case 5:
		{
			switch(spc)
			{
			    case 1:
			    {
					SetPlayerSkin(pID,281);
					playerDB[pID][uniforma]=281;
					playerDB[pID][uniformd]=true;
  				}
  				case 17:
			    {
			        SetPlayerSkin(pID,287);
					playerDB[pID][uniforma]=287;
					playerDB[pID][uniformd]=true;
			    }
			}
   		}
	}
}
 
stock konvertuoti_pinigus(pinigu_suma)
{
    new m_string[12];
    format(m_string, sizeof m_string, "%d", pinigu_suma);
    if(-1000 < pinigu_suma < 1000) return m_string;
    new _minusas = 0;
    if(pinigu_suma < 0) _minusas = 1;
    new m_ilgis = strlen(m_string);
    while((m_ilgis -= 3) > _minusas) strins(m_string, ".", m_ilgis);
    return m_string;
}
stock TogglePlayerControllableEx(playerid, bool:toggle)
{
     if(toggle)
     {
          TogglePlayerControllable(playerid, 1);
          SetCameraBehindPlayer(playerid);
     }
     else
     {
          new Float:pPos[6];
          TogglePlayerControllable(playerid, 0);
          GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);
          GetPlayerCameraPos(playerid, pPos[3], pPos[4], pPos[5]);
          SetPlayerCameraPos(playerid, pPos[3], pPos[4], pPos[5]);
          SetPlayerCameraLookAt(playerid, pPos[0], pPos[1], pPos[2]);
     }
     return 1;
}

stock GetPlayersOnServer()
{
	new count;
	for(new x=0; x< MAX_PLAYERS; x++)
 	{
	  if(IsPlayerConnected(x))
	  {
			count++;
		}
	}
	return count;
}

stock SetPlayerCheckpointEx(playerid, cpid, Float:x, Float:y, Float:z, Float:size)
{
	if(cpid < 0 || cpid > MAX_PLAYER_CPS - 1)
	{
		printf("Klaida, jûs negalite sukurti CP su %d ID.", cpid);
		return 1;
	}
	pCPPosX[playerid][cpid] = x;
	pCPPosY[playerid][cpid] = y;
	pCPPosZ[playerid][cpid] = z;
	pCPSize[playerid][cpid] = size;
	pCPShow[playerid][cpid] = true;
	pCPID[playerid] = cpid;
	SetPlayerCheckpoint(playerid, x, y, z, size);
	return 1;
}

stock DisablePlayerCheckpointEx(playerid, cpid)
{
        if(cpid < 0 || cpid > MAX_PLAYER_CPS - 1)
        {
                printf("Klaida, jûs negalite iðtrinti CP su %d ID.", cpid);
                return 1;
        }
        pCPID[playerid] = -1;
        pCPPosX[playerid][cpid] = 0.0;
        pCPPosY[playerid][cpid] = 0.0;
        pCPPosZ[playerid][cpid] = 0.0;
        pCPSize[playerid][cpid] = 0.0;
        pCPShow[playerid][cpid] = false;
        DisablePlayerCheckpoint(playerid);
        for(new cp; cp < MAX_PLAYER_CPS; cp++)
        {
                if(pCPShow[playerid][cp])
                {
                        pCPID[playerid] = cp;
                        SetPlayerCheckpoint(playerid, pCPPosX[playerid][cp], pCPPosY[playerid][cp], pCPPosZ[playerid][cp], pCPSize[playerid][cp]);
                        break;
                }
        }
        return 1;
}

stock DisableAllPlayerCheckpoints(playerid)
{
	pCPID[playerid] = -1;
	DisablePlayerCheckpoint(playerid);
	for(new cp; cp < MAX_PLAYER_CPS; cp++)
	{
		if(pCPShow[playerid][cp])
		{
			pCPPosX[playerid][cp] = 0.0;
			pCPPosY[playerid][cp] = 0.0;
			pCPPosZ[playerid][cp] = 0.0;
			pCPSize[playerid][cp] = 0.0;
			pCPShow[playerid][cp] = false;
		}
	}
	return 1;
}

stock IsPlayerInCheckpointEx(playerid, cpid)
{
	if(cpid < 0 || cpid > MAX_PLAYER_CPS)
	{
		printf("Error, you can't check cp with %d ID.", cpid);
		return false;
	}
	if(!pCPShow[playerid][cpid]) return false;
	if(!IsPlayerInRangeOfPoint(playerid, pCPSize[playerid][cpid] + PLUS_CP_SIZE, pCPPosX[playerid][cpid], pCPPosY[playerid][cpid], pCPPosZ[playerid][cpid])) return false;
	return true;
}

//Daþasvaidþio stockai
stock UpdatePBInfo(playerid)
{
	new msg[40];
	format(msg, sizeof(msg), "~y~%d/~g~%d", ZaidejaiPasY, ZaidejaiPasG);
	TextDrawSetString(PBTD3[playerid], msg);

	format(msg, sizeof(msg), "~y~%d/~g~%d", NuzudymaiY, NuzudymaiG);
	TextDrawSetString(PBTD4[playerid], msg);

	format(msg, sizeof(msg), "~y~%d/~g~%d", MirtysY, MirtysG);
	TextDrawSetString(PBTD5[playerid], msg);

	format(msg, sizeof(msg), "~r~%d", playerDB[playerid][NuzudesPB]);
	TextDrawSetString(PBTD0[playerid], msg);

	format(msg, sizeof(msg), "~r~%d", playerDB[playerid][MiresPB]);
	TextDrawSetString(PBTD1[playerid], msg);

	format(msg, sizeof(msg), "~r~%s", konvertuoti_pinigus(playerDB[playerid][TaskaiPB]));
	TextDrawSetString(PBTD2[playerid], msg);

	format(msg, sizeof(msg), "~r~%d ~p~min", KitasRoundasPo);
	TextDrawSetString(PBTD6[playerid], msg);
}

stock IjungiamPbTd(playerid)
{
    TextDrawShowForPlayer(playerid,PBTD0[playerid]);
    TextDrawShowForPlayer(playerid,PBTD1[playerid]);
    TextDrawShowForPlayer(playerid,PBTD2[playerid]);
    TextDrawShowForPlayer(playerid,PBTD3[playerid]);
    TextDrawShowForPlayer(playerid,PBTD4[playerid]);
    TextDrawShowForPlayer(playerid,PBTD5[playerid]);
    TextDrawShowForPlayer(playerid,PBTD6[playerid]);
    TextDrawShowForPlayer(playerid,PBTD7);
    TextDrawShowForPlayer(playerid,PBTD8);
    TextDrawShowForPlayer(playerid,PBTD9);
    TextDrawShowForPlayer(playerid,PBTD10);
    TextDrawShowForPlayer(playerid,PBTD11);
    TextDrawShowForPlayer(playerid,PBTD12);
    TextDrawShowForPlayer(playerid,PBTD13);
    TextDrawShowForPlayer(playerid,PBTD14);
    TextDrawShowForPlayer(playerid,PBTD15);
    TextDrawShowForPlayer(playerid,PBTD16);
}

stock IsjungiamPbTd(playerid)
{
    TextDrawHideForPlayer(playerid,PBTD0[playerid]);
    TextDrawHideForPlayer(playerid,PBTD1[playerid]);
    TextDrawHideForPlayer(playerid,PBTD2[playerid]);
    TextDrawHideForPlayer(playerid,PBTD3[playerid]);
    TextDrawHideForPlayer(playerid,PBTD4[playerid]);
    TextDrawHideForPlayer(playerid,PBTD5[playerid]);
    TextDrawHideForPlayer(playerid,PBTD6[playerid]);
    TextDrawHideForPlayer(playerid,PBTD7);
    TextDrawHideForPlayer(playerid,PBTD8);
    TextDrawHideForPlayer(playerid,PBTD9);
    TextDrawHideForPlayer(playerid,PBTD10);
    TextDrawHideForPlayer(playerid,PBTD11);
    TextDrawHideForPlayer(playerid,PBTD12);
    TextDrawHideForPlayer(playerid,PBTD13);
    TextDrawHideForPlayer(playerid,PBTD14);
    TextDrawHideForPlayer(playerid,PBTD15);
    TextDrawHideForPlayer(playerid,PBTD16);
}
stock TelefonValdymDialog(playerid)
{
	new KoksTlf[50];
	if(playerDB[playerid][KoksTelefonas] == 0) KoksTlf = "{FF0000}Neturi telefono";
	else if(playerDB[playerid][KoksTelefonas] == 1) KoksTlf = "{00CC00}Siemens";
	else if(playerDB[playerid][KoksTelefonas] == 2) KoksTlf = "{00CC00}Nokia";
	else if(playerDB[playerid][KoksTelefonas] == 3) KoksTlf = "{00CC00}Sony Ericson";
	else if(playerDB[playerid][KoksTelefonas] == 4) KoksTlf = "{00CC00}Samsung";
	else if(playerDB[playerid][KoksTelefonas] == 5) KoksTlf = "{00CC00}Iphone";

	new KiekSaskej = playerDB[playerid][mobsas];

	new Telefonstat[30];
    if(playerDB[playerid][telefonostat] == 1) Telefonstat = "{00CC00}Ájungtas";
    else if(playerDB[playerid][telefonostat] == 0) Telefonstat = "{FF0000}Iðjungtas";

    new Telefonstat1[30];
    if(playerDB[playerid][telefonostat] == 1) Telefonstat1 = "{FF0000}Iðjungti";
    else if(playerDB[playerid][telefonostat] == 0) Telefonstat1 = "{00CC00}Ájungti";

    new strf[440], str[110];
    format(str, 80, "{FFFFFF}Turimas telefonas: [{00CC00}%s{FFFFFF}]\n", KoksTlf); strcat(strf, str);
    format(str, 80, "Saskaitos likutis: [{00CC00}%s{FFFFFF}%]\n", konvertuoti_pinigus(KiekSaskej)); strcat(strf, str);
    format(str, 80, "Telefonas: [%s{FFFFFF}]\n\n", Telefonstat); strcat(strf, str);
	str = " \n", strcat(strf, str);

    format(str, 80, "%s {FFFFFF}telefonà\n", Telefonstat1); strcat(strf, str);
    str = "Ákrauti telefonà\n", strcat(strf, str);
	str = "Pasitikrinti saskaità\n", strcat(strf, str);
	str = "Telefono naudojimas\n", strcat(strf, str);

	ShowPlayerDialog(playerid, 5720, DIALOG_STYLE_LIST, "{ffffff}Telefonas", strf,"Pasirinkti", "Iðeiti");
	return 1;
}

stock KoksRangas(playerid, pID)
{
	new rangaz[60];
	switch(playerDB[pID][specialybe]) // pagal darbo id rangai
	{
		case 1: //PD RANGAI | Vietoi sito case rasai darbo id
		{
			switch(playerDB[pID][rangas])
			{
				case 1: rangaz = "Pirminë grandis";
				case 2: rangaz = "Antrinë grandis";
				case 3: rangaz = "Vidurinë grandis";
				case 4: rangaz = "Aukðtesnioji grandis";
				case 5: rangaz = "Aukðèiausioji grandis";
				default: rangaz = "Nëra";
			}
		}
		case 2: //MEDIKU RANGAI | Vietoi sito case rasai darbo id
		{
	        switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Naujoko mediko";
			    case 2: rangaz = "Patyrusio mediko";
			    case 3: rangaz = "Daktaro";
			    default: rangaz = "Nëra";
			}
		}
		case 3: //TAXI RANGAI | Vietoi sito case rasai darbo id
		{
		    switch(playerDB[pID][rangas])
			{
		    	case 1: rangaz = "Taxisto naujoko";
		    	case 2: rangaz = "Patyrusio taxisto";
		    	case 3: rangaz = "Transporterio";
		    	default: rangaz = "Nëra";
			}
		}
		case 4: //Mechaniku rangai | Vietoi sito case rasai darbo id
		{
		    switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Pasiuntinuko";
			    case 2: rangaz = "Mechaniko";
			    case 3: rangaz = "Kostë";
			    case 4: rangaz = "Valdþia";
			    default: rangaz = "Nëra";
			}
		}
		case 5: //Dyleriu rangai | Vietoi sito case rasai darbo id
		{
		    switch(playerDB[pID][rangas])
			{
	    		case 1: rangaz = "Naujoko";
	    		case 2: rangaz = "Apsipratusio";
	    		case 3: rangaz = "Senbûvio";
	    		case 4: rangaz = "Profesionalaus dylerio";
	    		default: rangaz = "Nëra";
			}
		}
		case 10: //SWAT rangai | Vietoi sito case rasai darbo id
		{
			switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Eilinio";
			    case 2: rangaz = "Leitenanto";
			    case 3: rangaz = "Virðilos";
			    case 4: rangaz = "Majoro";
			    case 5: rangaz = "Generolo";
			    default: rangaz = "Nëra";
			}
		}
	    case 11: //Furistø ragai | Vietoi sito case rasai darbo id
		{
		    switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Naujoko fûristo";
			    case 2: rangaz = "Iðtikimo fûristo";
			    case 3: rangaz = "Fûristo profesionalo";
			    case 4: rangaz = "Fûristo senbûvio";
			    default: rangaz = "Nëra";
			}
		}
		case 13:
		{
			switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Fotografas";
				case 2: rangaz = "Þurnalistas";
				case 3: rangaz = "Redaktorius";
				case 4: rangaz = "Eterio paþiba";
			}
		}
		case 14:
		{
			switch(playerDB[pID][rangas])
			{
				case 1: rangaz = "Baikeris";
				case 2: rangaz = "Senbuvis";
				case 3: rangaz = "Pro.Baikeris";
				default: rangaz = "Neturintis rango";
			}
		}
		case 17: //ARMIJOS rangai | Vietoi sito case rasai darbo id
		{
			switch(playerDB[pID][rangas])
			{
				case 1: rangaz = "Eilinio";
				case 2: rangaz = "Leitenanto";
				case 3: rangaz = "Virðilos";
				case 4: rangaz = "Majoro";
				case 5: rangaz = "Generolo";
				default: rangaz = "Nëra";
			}
		}
	    case 40: //Russian rangai | Vietoi sito case rasai darbo id
	    {
	        switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Kento";
			    case 2: rangaz = "Vyresnysiojo mafijos nario";
			    case 3: rangaz = "Mafijos senbûvio";
			    default: rangaz = "Nëra";
			}
		}
	    case 42: //Yakuza rangai | Vietoi sito case rasai darbo id
	    {
	        switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Kento";
			    case 2: rangaz = "Vyresnysiojo mafijos nario";
			    case 3: rangaz = "Mafijos senbûvio";
			    default: rangaz = "Nëra";
			}
		}
    }
	new msg[145];
 	format(msg, sizeof(msg), " * Direktorius %s jums pakëlë rangà iki %s!", GetPlayerNameEx(playerid) , rangaz);
 	SendClientMessage(pID, GREEN, msg);
 	format(msg, sizeof(msg), " * Darbuotojui %s pakëlëte rangà iki %s!", GetPlayerNameEx(pID) , rangaz);
 	SendClientMessage(playerid, GREEN, msg);
	return 1;
}

stock KoksRangasMinus(playerid,pID)
{
	new rangaz[40];
	switch(playerDB[pID][specialybe]) // pagal darbo id rangai
	{
		case 1: //PD RANGAI | Vietoi sito case rasai darbo id
		{
			switch(playerDB[pID][rangas])
			{
				case 1: rangaz = "Pirminë grandis";
				case 2: rangaz = "Antrinë grandis";
				case 3: rangaz = "Vidurinë grandis";
				case 4: rangaz = "Aukðtesnioji grandis";
				case 5: rangaz = "Aukðèiausioji grandis";
				default: rangaz = "Nëra";
			}
		}
		case 2: //MEDIKU RANGAI | Vietoi sito case rasai darbo id
		{
	        switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Naujoko mediko";
			    case 2: rangaz = "Patyrusio mediko";
			    case 3: rangaz = "Daktaro";
			    default: rangaz = "Nëra";
			}
		}
		case 3: //TAXI RANGAI | Vietoi sito case rasai darbo id
		{
		    switch(playerDB[pID][rangas])
			{
		    	case 1: rangaz = "Taxisto naujoko";
		    	case 2: rangaz = "Patyrusio taxisto";
		    	case 3: rangaz = "Transporterio";
		    	default: rangaz = "Nëra";
			}
		}
		case 4: //Mechaniku rangai | Vietoi sito case rasai darbo id
		{
		    switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Pasiuntinuko";
			    case 2: rangaz = "Mechaniko";
			    case 3: rangaz = "Kostë";
			    case 4: rangaz = "Valdþia";
			    default: rangaz = "Nëra";
			}
		}
		case 5: //Dyleriu rangai | Vietoi sito case rasai darbo id
		{
		    switch(playerDB[pID][rangas])
			{
	    		case 1: rangaz = "Naujoko";
	    		case 2: rangaz = "Apsipratusio";
	    		case 3: rangaz = "Senbûvio";
	    		case 4: rangaz = "Profesionalaus dylerio";
	    		default: rangaz = "Nëra";
			}
		}
		case 10: //SWAT rangai | Vietoi sito case rasai darbo id
		{
			switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Eilinio";
			    case 2: rangaz = "Leitenanto";
			    case 3: rangaz = "Virðilos";
			    case 4: rangaz = "Majoro";
			    case 5: rangaz = "Generolo";
			    default: rangaz = "Nëra";
			}
		}
	    case 11: //Furistø ragai | Vietoi sito case rasai darbo id
		{
		    switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Naujoko fûristo";
			    case 2: rangaz = "Iðtikimo fûristo";
			    case 3: rangaz = "Fûristo profesionalo";
			    case 4: rangaz = "Fûristo senbûvio";
			    default: rangaz = "Neturintis rango";
			}
		}
		case 13:
		{
			switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Fotografas";
				case 2: rangaz = "Þurnalistas";
				case 3: rangaz = "Redaktorius";
				case 4: rangaz = "Eterio paþiba";
			}
		}
		case 14:
		{
			switch(playerDB[pID][rangas])
			{
				case 1: rangaz = "Baikeris";
				case 2: rangaz = "Senbuvis";
				case 3: rangaz = "Pro.Baikeris";
				default: rangaz = "Neturintis rango";
			}
		}
		case 17: //ARMIJOS rangai | Vietoi sito case rasai darbo id
			{
			switch(playerDB[pID][rangas])
				{
				    case 1: rangaz = "Eilinio";
				    case 2: rangaz = "Leitenanto";
				    case 3: rangaz = "Virðilos";
				    case 4: rangaz = "Majoro";
				    case 5: rangaz = "Generolo";
				    default: rangaz = "Nëra";
				}
			}
	    case 40: //Russian rangai | Vietoi sito case rasai darbo id
	    {
	        switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Kento";
			    case 2: rangaz = "Vyresnysiojo mafijos nario";
			    case 3: rangaz = "Mafijos senbûvio";
			    default: rangaz = "Nëra";
			}
		}
	    case 42: //Yakuza rangai | Vietoi sito case rasai darbo id
	    {
	        switch(playerDB[pID][rangas])
			{
			    case 1: rangaz = "Kento";
			    case 2: rangaz = "Vyresnysiojo mafijos nario";
			    case 3: rangaz = "Mafijos senbûvio";
			    default: rangaz = "Nëra";
			}
		}
    }
	new msg[145];
 	format(msg, sizeof(msg), " * Direktorius %s jums paþemino rangà iki %s!", GetPlayerNameEx(playerid) , rangaz);
 	SendClientMessage(pID, GREEN, msg);
 	format(msg, sizeof(msg), " * Darbuotojui %s paþeminote rangà iki %s!", GetPlayerNameEx(pID) , rangaz);
 	SendClientMessage(playerid, GREEN, msg);
	return 1;
}

public Putimas(playerid)
{
	new Float:giv, girtas;
	girtas=GetPlayerDrunkLevel(playerid) - 5000;
	if(girtas <0){girtas = 0;}
	GetPlayerHealth(playerid, giv);
	SetPlayerHealthEx(playerid, giv += 50);
	SetPlayerDrunkLevel(playerid, girtas);
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	if(pickupid < 0 || pickupid > MAX_PICKUPS) Kick(playerid);
	printf("Imam pickupà kurio ID: %d",pickupid);
	
	if ( pickupid == swatPickup )
	{
	    if ( playerDB [ playerid ] [ specialybe ] != 1 || playerDB [ playerid ] [ specialybe ] != 10 ) return SendClientMessage ( playerid , RED , "* Jûs neesate teisësaugos darbuotojas!" ) ;
		if ( GetPVarInt ( playerid , "paemeAgun" ) <= gettime ( ) )
		{
		    GivePlayerWeaponEx ( playerid , 3 , 1 );
		    GivePlayerWeaponEx ( playerid , 17 , 15 );
		    GivePlayerWeaponEx ( playerid , 24 , 200 );
		    GivePlayerWeaponEx ( playerid , 25 , 100 );
		    GivePlayerWeaponEx ( playerid , 31 , 300 );
		    GivePlayerWeaponEx ( playerid , 41 , 500 );
		    SetPlayerHealthEx ( playerid , 100 ) ;
		    SetPlayerArmourEx ( playerid , 100 ) ;
		    SetPVarInt ( playerid , "paemeAgun" , gettime ( ) + 60*1 ) ;
		    SendClientMessage ( playerid , -1 , "[ {009999}TRENIRUOÈIØ ZONA {ffffff}] : Sëkmingai paemet ginklus!" ) ;
		    SendClientMessage ( playerid , -1 , "[ {009999}TRENIRUOÈIØ ZONA {ffffff}] : Jûsø gyvybës ir ðarvai nustatytá á {009999}100.0!" ) ;
		}
		else
		{
		    return SendClientMessage ( playerid , RED , "* Negalite dar imti ginklø! ( {ffffff}Kas 1min! {ff0000})" ) ;
		}
	    return 1;
	}
	
	if ( pickupid == dmPickup )
	{
		if(GetPlayerMoneyA(playerid) < 2500) return SendClientMessage(playerid, -1 , "[ {009999}DM ZONA {ffffff}] : Kad nusipirktumete DM zonos ginklus reikia {009999}2.500 ");
		if ( GetPVarInt ( playerid , "paemeDgun" ) <= gettime ( ) )
		{
		    GivePlayerWeaponEx ( playerid , 24 , 100 );
		    GivePlayerWeaponEx ( playerid , 30 , 100 );
		    GivePlayerMoneyA ( playerid , -2500 );
		    SetPVarInt ( playerid , "paemeDgun" , gettime ( ) + 60*1 ) ;
		    SendClientMessage ( playerid , -1 , "[ {009999}DM ZONA {ffffff}] : Sëkmingai nusipirkote ginklus uþ 2.500  !" ) ;
		}
		else
		{
		    return SendClientMessage ( playerid , RED , "* Negalite dar pirkti ginklø! ( {ffffff}Kas 1min! {ff0000})" ) ;
		}
		return 1;
	}
	
	if(pickupid == pickupKMA)
	{
		if(GetPlayerScore(playerid) < 500) return SendClientMessage(playerid, RED, "* Jûs per maþai patyræs, todël atidaryti KMA negalite! (500XP)");
		ShowPlayerDialog ( playerid , 13595 , DIALOG_STYLE_MSGBOX , "{ffffff}KMA - {ff9000}Maðinos atsiemimas" , "{ffffff}Maðinos atsiemimas, ar tikrai norite atsiimti?\n{ff9000}Atsiemimo kaina: {ffffff}4000" , "Taip" , "Ne" ) ;
		return 1;
	}
	if(pickupid == Paremimas)
	{
		if(GetPlayerScore(playerid) < 500) return SendClientMessage(playerid, RED, "* Jûs per maþai patyræs, todël pinigø duoti negalite! (500XP)");
		ShowPlayerDialog(playerid, DIALOG_DARBU_PAREMIMAS, DIALOG_STYLE_LIST, "Paremimas", "Paremti Policijos departamentà\nParemti Medikus\nParemti Taksistus\nParemti Mechanikus\nParemti Dylerius\nParemti SWAT\nParemti Fûristus\nParemti Radistus\nParemti Russian mafija\nParemti Yakuza mafija\nParemti Baikerius\nParemti Armijos", "Rinktis", "Iðeiti");
		return true;
	}
	if(pickupid == vsPickup[0])
	{
		mTurguje[playerid]=true;
		if(GetPlayerScore(playerid) < 500) return SendClientMessage(playerid,0xFFFFFFA,"{FF0000}Jûs naujokas! Maðina pirkti galite tik nuo {FF8C00}500 {FF0000}XP !");
		ShowPlayerDialog(playerid, vSHOP_DIALOGID1, DIALOG_STYLE_LIST, "{ff9000}Maðinø {ffffff}turgus", "{bebebe}Iðrinkite maðinø tipa kuri norite þiûrëtá\n{ffffff}» {00aa46}Paprastos maðinos\n{ffffff}» {00aa46}Sportinës maðinos\n{ffffff}» {00aa46}Motociklai", "Rinktis", "Iðeiti");
  		return 1;
    }
	
	if(pickupid == pickups [0] [amfa] )
  	{

    	if(playerDB[playerid][specialybe] == 1 || playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 17) return SetTimerEx("NaikinaAMFA", 7000, true, "d", playerid);
    	else if(playerDB[playerid][specialybe] == 40 || playerDB[playerid][specialybe] == 42 ) return SetTimerEx("ImaAMFA", 7000, true, "d", playerid);
   		new masyvas [ 100 ] ;
		format(masyvas,sizeof(masyvas),"[RACIJA]: Neatpaþintas asmuo pamatytas prie narkotikø ! Skubëkite pasiþiûrëti." );
		SendMessageToRifa(GREEN,masyvas ) ;
		format(masyvas,sizeof(masyvas),"[RACIJA]: Neatpaþintas asmuo pamatytas prie narkotikø ! Skubëkite pasiþiûrëti." );
		SendMessageToGstreet(GREEN,masyvas ) ;
 		format(masyvas,sizeof(masyvas),"[T-RACIJA]: Neatpaþintas asmuo pamatytas prie narkotikø ! Skubëkite pasiþiûrëti." );
		SendMessageToBendraTeisesauga(GREEN,masyvas ) ;
    	return true;
  	}
  	
  	if(pickupid == pickups [0] [lsd] )
  	{
  		if(playerDB[playerid][specialybe] == 1 || playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 17) return SetTimerEx("NaikinaLSD", 7000, true, "d", playerid);
    	else if(playerDB[playerid][specialybe] == 40 || playerDB[playerid][specialybe] == 42 ) return SetTimerEx("ImaLSD", 7000, true, "d", playerid);
   		new masyvas [ 100 ] ;
		format(masyvas,sizeof(masyvas),"[RACIJA]: Neatpaþintas asmuo pamatytas prie narkotikø ! Skubëkite pasiþiûrëti." );
		SendMessageToRifa(GREEN,masyvas ) ;
		format(masyvas,sizeof(masyvas),"[RACIJA]: Neatpaþintas asmuo pamatytas prie narkotikø ! Skubëkite pasiþiûrëti." );
		SendMessageToGstreet(GREEN,masyvas ) ;
 		format(masyvas,sizeof(masyvas),"[T-RACIJA]: Neatpaþintas asmuo pamatytas prie narkotikø ! Skubëkite pasiþiûrëti." );
		SendMessageToBendraTeisesauga(GREEN,masyvas ) ;
    	return true;
  	}
  	
  	if(pickupid == pickups [0] [zole] )
  	{
    	if(playerDB[playerid][specialybe] == 1 || playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 17) return SetTimerEx("NaikinaZOLE", 7000, true, "d", playerid);
    	else if(playerDB[playerid][specialybe] == 40 || playerDB[playerid][specialybe] == 42 ) return SetTimerEx("ImaZOLE", 7000, true, "d", playerid);
   		new masyvas [ 100 ] ;
		format(masyvas,sizeof(masyvas),"[RACIJA]: Neatpaþintas asmuo pamatytas prie narkotikø ! Skubëkite pasiþiûrëti." );
		SendMessageToRifa(GREEN,masyvas ) ;
		format(masyvas,sizeof(masyvas),"[RACIJA]: Neatpaþintas asmuo pamatytas prie narkotikø ! Skubëkite pasiþiûrëti." );
		SendMessageToGstreet(GREEN,masyvas ) ;
 		format(masyvas,sizeof(masyvas),"[T-RACIJA]: Neatpaþintas asmuo pamatytas prie narkotikø ! Skubëkite pasiþiûrëti." );
		SendMessageToBendraTeisesauga(GREEN,masyvas ) ;
    	return true;
  	}
  	
	if(pickupid == Kazino)
	{
	    if(playerDB[playerid][Zetonai] == 0) return SendClientMessage(playerid, RED, "Jûs neturite þetonø. Nusipirkti jø galite prie kasos.");
	    ShowPlayerDialog(playerid,24,DIALOG_STYLE_LIST,"{ffffff}Iðsirinkite kokià sumà þetonø statote","{ffffff}1 þetonas\n2 þetonai\n5 þetonai\n10 þetonø\n20 þetonø\n40 þetonø","Rinktis","Uþdaryti");
	    return true;
	}
	
	if(pickupid == Kazinoo)
	{
	    if(playerDB[playerid][Zetonai] == 0) return SendClientMessage(playerid, RED, "Jûs neturite þetonø. Nusipirkti jø galite prie kasos.");
	    ShowPlayerDialog(playerid,26,DIALOG_STYLE_LIST,"{ffffff}Iðsirinkite kokià sumà þetonø statote","{ffffff}4 þetonai\n5 þetonai\n8 þetonai\n10 þetonø","Rinktis","Uþdaryti");
	    return true;
	}
	
	if(pickupid == Kazinooo)
	{
	    ShowPlayerDialog(playerid,27,DIALOG_STYLE_INPUT,"{ffffff}Þetonø pirkimas","{ffffff}Áveskite uþ kokià sumà pirksite þetonus.\n{ffff00}KURSAS:{ffffff} 1þetonas = 1.","Pirkti","Uþdaryti");
	    return true;
	}
	
	if(pickupid == IsKalejimo)
	{
	    if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] !=10 && playerDB[playerid][specialybe] !=17) return 1;
	    SetPlayerTWanted(playerid, 0);
	    SetPlayerColor(playerid,PLAYCOL_HIDDEN);
	    UnjailPlayer(playerid);
	    return true;
	}
	
	if(pickupid == HealTreniruotese)
	{
	    if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] !=10) return 1;
	    SetPlayerHealthEx(playerid, 100);
	    SetPlayerArmourEx(playerid, 100);
	    return true;
	}
	
	if(pickupid == baudap)
	{
		if(GetPlayerTWanted(playerid) < 1) return SendClientMessage(playerid, RED,"* Tu nesi nusikaltes");
		if(GetPlayerTWanted(playerid) > 101) return SendClientMessage(playerid, RED,"* Daugiau negu 100 lygiø neiðsiteisinsi");
		new masyvas[140];
		new bauda = GetPlayerTWanted(playerid)*300;
		format(masyvas, 140, "\t{FF9900}Baudos mokëjimas\n\n{C0C0C0}Uþ vienà átarima gaunte: 300 baudos\nTurite átarimo: %d(star)\nJums reikës mokëti: %d",GetPlayerTWanted(playerid),bauda);
		ShowPlayerDialog(playerid, DIALOG_BAUDOS_MOKEJIMAS_PASTATE, DIALOG_STYLE_MSGBOX, "Bauda",masyvas, "Mokëti", "Iðeiti");
		return 1;
	}
	
	if(pickupid == pickups[0][investicijos])
	{
		ShowPlayerDialog(playerid, DIALOG_INVESTICIJOS, DIALOG_STYLE_LIST, "Investicijos", "Investvaimo informacija\n{FF9900}100.000 {C0C0C0}- {FF9900}10{C0C0C0}\n{FF9900}200.000 {C0C0C0}- {FF9900}20\n{FF9900}300.000 {C0C0C0}- {FF9900}30{C0C0C0}\n{FF9900}500.000 {C0C0C0}- {FF9900}40{C0C0C0}\n{FF9900}750.000 {C0C0C0}- {FF9900}50{C0C0C0}\nAtsisakyti investavimo(Pinigai nebus graþinami)", "Pradëti", "Iðeiti");
		return 1;
	}

	if(pickupid == pickups[0][grybusupirkimas])
	{
		new String[400];
		format(String, sizeof(String),
		"{2ED0B5}Ar esate ásitikinæs jog norite parduoti visus savo turimus grybus?\n \n\t{2ED0B5} Vieno grybo kaina - {42F17F}6 {2ED0B5}, o jus turite {42F17F}%i {2ED0B5}grybà (-us, -ø)\n \n\t{2ED0B5} Ið viso uþ parduotus grybus gausite {42F17F}%i ", playerDB[playerid][grybas], playerDB[playerid][grybas] * 6);
		ShowPlayerDialog(playerid, DIALOG_GRYBU_PARDAVIMAS, DIALOG_STYLE_MSGBOX, "Grybø supirkimas", String, "Parduoti", "Uþdaryti");
		return 1;
	}
	
	if(pickupid == pickups[0][ofisoinformacija])
	{
	    new masyvas[1024];
	    format(masyvas, 1024, "\t{FF0000}Ofisas yra geras bûdas uþdirbti pinigø!\n\n{C0C0C0}Kas 1 minutæ jus gausite 1 EXP ir 2 .\nO viskà kà jum reikës daryti, tai stovëti vietoje!\nPradëti/Baigti darbà galite su /ofisas stovëdami OFISE.\nBûti èia galite betkada!\nKodël mes leidþiame tokius dalykus?\nTodël kad norime suteikti visiems kitoká/lengvesná bûda uþsidirbti !");
		ShowPlayerDialog(playerid, 200, DIALOG_STYLE_MSGBOX, "OFISAS",masyvas, "Supratau", "");
		return 1;
	}
	
    if(pickupid == skinshoppickup[0] || pickupid == skinshoppickup[1])
    {
        ShowPlayerDialog(playerid, 10789, DIALOG_STYLE_INPUT, "{ffffff}Skin'ai", "{ffffff}Aprangos keitimas. Áraðykite norimà ID á lentelæ ir gausite skina kaip pagrindiná.\nSkinai ir jø ID'ai suraðyti http://wiki.sa-mp.com/wiki/Skins:All\n\nKaina: {00CC00}1.500 {FFFFFF}.", "Pirkti", "Atgal");
        return 1;
    }
    
    if(pickupid == pazymanomedik)
    {
        if(GetPlayerScore(playerid) < 50) return SendClientMessage(playerid, RED, "{37f467} Jûs per maþai patyræs, pirkti paþymà galite tik nuo :{ccff66} 50 {37f467}XP {ccff66}.");
        ShowPlayerDialog(playerid, 10719, DIALOG_STYLE_MSGBOX, "{ffffff}Paþyma", "{ffffff}Ar norësite pirkti sveikatos paþymëjimà 3 dienom uþ {00CC00}1.000 {FFFFFF}.\nKaina perkant ið medikø yra daug maþesnë.", "Pirkti", "Iðeiti");
        return 1;
    }
    
    if(pickupid == draudimas)
    {
        if(GetPlayerScore(playerid) < 100) return SendClientMessage(playerid, RED, "{37f467} Jûs per maþai patyræs, draustis galite tik nuo :{ccff66} 100 {37f467}XP {ccff66}.");
        ShowPlayerDialog(playerid, 10721, DIALOG_STYLE_MSGBOX, "Draudimas", "{ffffff}Sveiki!\nÈia galite apsidrausti savo gyvybë.\nDraudimo kainà : {FF8C00}2.000 {ffffff}.\nDraudimas galios : {FF8C00}3 {ffffff}dienas !\nJeigu norite apsidrausti spauskite {FF8C00}Draustis", "Draustis", "Iðeiti");
        return 1;
    }
    
	if(pickupid == pickups[0][ZvejuTurgus])
    {
        ShowPlayerDialog(playerid, 8651, DIALOG_STYLE_LIST, "Þvejybos turgus","{ffffff}[>]Informacija apie þvejybà\n \n[>]Pirkti meðkeræ {FF9D00}250{ffffff}\n[>]Pirkti valà {FF9D00}80{ffffff}\n[>]Pirkti masalà {FF9D00}50{ffffff}/25vnt\n{FF0000}[>]Parduoti þuvá", "Pasirinkti", "Iðeiti");
        return 1;
    }
    
   	//Draudimo áëjimas.
	if(pickupid == pickups[0][ivejimasdraudimas])
    {
    	SetPlayerInterior(playerid, 1);
    	SetPlayerPos(playerid, -2166.4373,641.8905,1052.3750);
        return 1;
    }

   	//Draudimo iðëjimas.
	if(pickupid == pickups[0][isejimasdraudimas])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2273.7327,86.5166,26.4844);
        return 1;
    }
    
   	//Dyleriø áëjimas.
	if(pickupid == pickups[0][ivejimasdyleriu])
    {
    	SetPlayerInterior(playerid, 3);
    	SetPlayerPos(playerid, 2496.0112,-1696.1046,1014.7422);
        return 1;
    }

   	//Dyleriø iðëjimas.
	if(pickupid == pickups[0][isejimasdyleriu])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 917.0336,407.8837,20.6773);
        return 1;
    }
    
   	//Klubo  - PATRIOTAI -  áëjimas.
	if(pickupid == pickups[0][ivejimasklubasp])
    {
    	SetPlayerInterior(playerid, 2);
    	SetPlayerPos(playerid, 221.8449,1240.0171,1082.1406);
        return 1;
    }

   	//Klubo  - PATRIOTAI -  iðëjimas.
	if(pickupid == pickups[0][isejimasklubasp])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, -1508.1112,2521.1382,56.8512);
        return 1;
    }
    
   	//Klubo  Costello  áëjimas.
	if(pickupid == pickups[0][ivejimasklubasc])
    {
    	SetPlayerInterior(playerid, 3);
    	SetPlayerPos(playerid, 234.8928,1191.1980,1080.2578);
        return 1;
    }

   	//Klubo  Costello  iðëjimas.
	if(pickupid == pickups[0][isejimasklubasc])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, -547.3150,2602.4849,54.5311);
        return 1;
    }
	
	//Picerijos medikø áëjimas.
	if(pickupid == pickups[0][ivejimaspicam])
    {
    	SetPlayerInterior(playerid, 9);
    	SetPlayerPos(playerid, 365.8422,-7.3851,1001.8516);
        return 1;
    }
    
   	//Picerijos medikø iðëjimas.
	if(pickupid == pickups[0][isejimaspicam])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1361.8616,250.9210,19.6349);
        return 1;
    }
	
	//Stadiono áëjimas.
	if(pickupid == pickups[0][ivejimasstadionas])
    {
    	SetPlayerInterior(playerid, 15);
    	SetPlayerPos(playerid, -1460.9771,942.5823,1036.6726);
        return 1;
    }
    
   	//Stadiono iðëjimas.
	if(pickupid == pickups[0][isejimasstadionas])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1311.8514,323.3726,19.5547);
        return 1;
    }
	
	//Ðratasvaidþio áëjimas.
	if(pickupid == pickups[0][ivejimasdazasv])
    {
    	SetPlayerInterior(playerid, 7);
    	SetPlayerPos(playerid, 310.5682,-141.9437,1004.0625);
        return 1;
    }
    
   	//Ðratasvaidþio iðëjimas.
	if(pickupid == pickups[0][isejimasdazasv])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 279.9577,-217.0569,1.6349);
        return 1;
    }
	
	//Maximos áëjimas.
	if(pickupid == pickups[0][ivejimasmaximap])
    {
    	SetPlayerInterior(playerid, 18);
    	SetPlayerPos(playerid, -32.4836,-87.6366,1003.5469);
        return 1;
    }
    
   	//Maximos iðëjimas.
	if(pickupid == pickups[0][isejimasmaximap])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 686.9254,-546.4285,16.3749);
        return 1;
    }
	
	//Vairavimo mokyklos áëjimas.
	if(pickupid == pickups[0][ivejimasvm])
    {
    	SetPlayerInterior(playerid, 3);
    	SetPlayerPos(playerid, -2029.9329,-115.6621,1035.1719);
        return 1;
    }
    
   	//Vairavimo mokyklos iðëjimas.
	if(pickupid == pickups[0][isejimasvm])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2428.7209,118.4778,26.4900);
        return 1;
    }
	
	//Vyriausybës áëjimas.
	if(pickupid == pickups[0][ivejimasvyriausybe])
    {
    	SetPlayerInterior(playerid, 3);
    	SetPlayerPos(playerid, 385.5219,173.8795,1008.3828);
        return 1;
    }
    
   	//Vyriausybës iðëjimas.
	if(pickupid == pickups[0][isejimasvyriausybe])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2379.7649,-89.3441,26.8415);
        return 1;
    }
	
	//AFK zonos áëjimas.
	if(pickupid == pickups[0][ivejimasafk])
    {
    	SetPlayerInterior(playerid, 3);
    	SetPlayerPos(playerid, 363.9926,162.1502,1025.7891);
        return 1;
    }
    
   	//AFK zonos iðëjimas.
	if(pickupid == pickups[0][isejimasafk])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2235.9238,86.2139,26.4844);
        return 1;
    }
    
   	//Picerijos áëjimas.
	if(pickupid == pickups[0][ivejimaspica])
    {
    	SetPlayerInterior(playerid, 5);
    	SetPlayerPos(playerid, 371.0814,-128.1330,1001.4922);
        return 1;
    }
    
   	//Picerijos iðëjimas.
	if(pickupid == pickups[0][isejimaspica])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2338.4651,74.7218,26.4782);
        return 1;
    }
    
   	//Ginklinës áëjimas.
	if(pickupid == pickups[0][ivejimasginklu])
    {
    	SetPlayerInterior(playerid, 6);
    	SetPlayerPos(playerid, 316.3903,-165.6723,999.6010);
        return 1;
    }
    
   	//Ginklinës iðëjimas.
	if(pickupid == pickups[0][isejimasginklu])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2338.0393,61.2384,26.4844);
        return 1;
    }
    
   	//Kovos menø salës áëjimas.
	if(pickupid == pickups[0][ivejimaskovos])
    {
    	SetPlayerInterior(playerid, 6);
    	SetPlayerPos(playerid, 774.0350,-45.0138,1000.5859);
        return 1;
    }
    
   	//Kovos menø salës iðëjimas.
	if(pickupid == pickups[0][isejimaskovos])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2338.7490,51.3757,26.4844);
        return 1;
    }
    
   	//R.Þilinsko kontoros áëjimas.
	if(pickupid == pickups[0][ivejimaszilinsko])
    {
    	SetPlayerInterior(playerid, 12);
    	SetPlayerPos(playerid, 2324.4717,-1145.3456,1050.7101);
        return 1;
    }
    
   	//R.Þilinsko kontoros iðëjimas.
	if(pickupid == pickups[0][isejimaszilinsko])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 56.5488,-187.1070,1.6300);
        return 1;
    }
    
   	//Drabuþiø parduotuvës áëjimas.
	if(pickupid == pickups[0][ivejimasdrabuziu])
    {
    	SetPlayerInterior(playerid, 14);
    	SetPlayerPos(playerid, 204.1349,-166.9535,1000.5234);
        return 1;
    }
    
   	//Drabuþiø parduotuvës iðëjimas.
	if(pickupid == pickups[0][isejimasdrabuziu])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2336.7351,-48.7013,26.4844);
        return 1;
    }
    
   	//Tech parduotuvës áëjimas.
	if(pickupid == pickups[0][ivejimastechparduotuve])
    {
    	SetPlayerInterior(playerid, 6);
    	SetPlayerPos(playerid, -2237.7593,136.7849,1035.4141);
        return 1;
    }
    
   	//Tech parduotuvës iðëjimas.
	if(pickupid == pickups[0][isejimastechparduotuve])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2335.9268,-67.3436,26.4844);
        return 1;
    }
    
   	//Maisto parduotuvës áëjimas.
	if(pickupid == pickups[0][ivejimasparduotuvepgr])
    {
    	SetPlayerInterior(playerid, 6);
    	SetPlayerPos(playerid, -27.3027,-54.2059,1003.5469);
        return 1;
    }
    
   	//Maisto parduotuvës iðëjimas.
	if(pickupid == pickups[0][isejimasparduotuvepgr])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2331.3428,-35.2120,26.4844);
        return 1;
    }
    
   	//Vieðbuèio áëjimas.
	if(pickupid == pickups[0][ivejimasviesbutis])
    {
    	SetPlayerInterior(playerid, 15);
    	SetPlayerPos(playerid, 2217.6724,-1150.6348,1025.7969);
        return 1;
    }
    
   	//Vieðbuèio iðëjimas.
	if(pickupid == pickups[0][isejimasviesbutis])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1369.5023,337.0789,19.6959);
        return 1;
    }
    
   	//Kazino áëjimas.
	if(pickupid == pickups[0][ivejimaskazino])
    {
    	SetPlayerInterior(playerid, 10);
    	SetPlayerPos(playerid, 2016.9733,1017.8651,996.8750);
        return 1;
    }
    
   	//Kazino iðëjimas.
	if(pickupid == pickups[0][isejimaskazino])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2277.7686,48.5630,26.4844);
        return 1;
    }
    
   	//Maximos PGR áëjimas.
	if(pickupid == pickups[0][ivejimasmaximapgr])
    {
    	SetPlayerInterior(playerid, 4);
    	SetPlayerPos(playerid, -27.4050,-27.3853,1003.5573);
        return 1;
    }
    
   	//Maximos PGR iðëjimas.
	if(pickupid == pickups[0][isejimasmaximapgr])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2247.0056,52.8679,26.6671);
        return 1;
    }
    
   	//Loterijos áëjimas.
	if(pickupid == pickups[0][ivejimasloterija])
    {
    	SetPlayerInterior(playerid, 3);
    	SetPlayerPos(playerid, 832.3712,7.5739,1004.1797);
        return 1;
    }
    
   	//Loterijos iðëjimas.
	if(pickupid == pickups[0][isejimasloterija])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2300.6040,56.3693,26.4844);
        return 1;
    }
    
   	//Klubo áëjimas.
	if(pickupid == pickups[0][ivejimasklubas])
    {
    	SetPlayerInterior(playerid, 17);
    	SetPlayerPos(playerid, 493.3582,-20.5078,1000.6797);
        return 1;
    }
    
   	//Klubo iðëjimas.
	if(pickupid == pickups[0][isejimasklubas])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 681.4219,-479.4503,16.3359);
        return 1;
    }

    //Radistø iëjimas.
	if(pickupid == pickups[0][ivejimasradistai])
    {
    	if(playerDB[playerid][specialybe] != 13) return SendClientMessage(playerid,RED,"* Jus ne {FF8C00}Radistas {FF0000}!");
    	SendClientMessage(playerid, RED, "» Atsikelëte á virðu!");
    	SetPlayerPos(playerid, 302.6515,-196.3815,5.9832);
        return 1;
    }
   	//Radistø grybavimo.
	if(pickupid == pickups[0][isejimasradistai])
    {
    	if(playerDB[playerid][specialybe] != 13) return SendClientMessage(playerid,RED,"* Jus ne {FF8C00}Radistas {FF0000}!");
    	SendClientMessage(playerid, RED, "» Atsikelëte á apaèia!");
		SetPlayerPos(playerid, 299.7781,-180.4277,1.4100);
        return 1;
    }
    
   	//Policijos áëjimas.
	if(pickupid == pickups[0][ivejimaspd])
    {
    	SetPlayerInterior(playerid, 10);
    	SetPlayerPos(playerid, 246.4797,109.4683,1003.2188);
        return 1;
    }
    
   	//Policijos iðëjimas.
	if(pickupid == pickups[0][isejimaspd])
    {
    	SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 638.6272,-511.0448,16.3734);
        return 1;
    }
    
   	//Kalëjimo áëjimas.
	if(pickupid == pickups[0][ivejimasjail])
    {
    	SetPlayerPos(playerid, 2787.1194,2750.1321,14.2870);
        return 1;
    }

   	//Kalëjimo iðëjimas.
	if(pickupid == pickups[0][isejimasjail])
    {
		SetPlayerPos(playerid, 1775.0513,-1575.7511,1734.9430);
        return 1;
    }
    
   	//Banko áëjimas.
	if(pickupid == pickups[0][ivejimasbankas])
    {
    	SetPlayerPos(playerid, -554.9927,1789.0834,1393.2959);
        return 1;
    }
    
   	//Banko iðëjimas.
	if(pickupid == pickups[0][isejimasbankas])
    {
		SetPlayerPos(playerid, 2299.8665,-15.8549,26.4844);
        return 1;
    }
    
   	//Baþnyèios áëjimas.
	if(pickupid == pickups[0][ivejimasbaznycios])
    {
        SetPlayerInterior(playerid, 10);
  		TogglePlayerControllable(playerid,false);
		SetTimerEx("iejimas", 3000, 0, "i", playerid);
    	SetPlayerPos(playerid, 385.0738,2324.4670,1890.5736);
        return 1;
    }
    
   	//Baþnyèios iðëjimas.
	if(pickupid == pickups[0][isejimasbaznycios])
    {
        SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 2256.8635,-42.2595,26.4787);
        return 1;
    }
    
   	//Restorano áëjimas.
	if(pickupid == pickups[0][ivejimasrestoranas])
    {
		TogglePlayerControllable(playerid,false);
		SetTimerEx("iejimas", 3000, 0, "i", playerid);
    	SetPlayerPos(playerid, 536.2510,1560.7533,1067.1365);
        return 1;
    }
    
   	//Restorano iðëjimas.
	if(pickupid == pickups[0][isejimasrestoranas])
    {
		SetPlayerPos(playerid, 1396.5753,399.3219,19.7578);
        return 1;
    }
    
   	//Baikeriø áëjimas.
	if(pickupid == pickups[0][ivejimasbaikeriu])
    {
        SetPlayerInterior(playerid, 11);
    	SetPlayerPos(playerid, 501.8887,-70.3616,999.2870);
        return 1;
    }
    
   	//Baikeriø iðëjimas.
	if(pickupid == pickups[0][isejimasbaikeriu])
    {
        SetPlayerInterior(playerid, 0);
		SetPlayerPos(playerid, 1900.6165,583.9276,10.8800);
        return 1;
    }
    
   	//Bokso áëjimas.
	if(pickupid == pickups[0][ivejimasboksas])
    {
		TogglePlayerControllable(playerid,false);
		SetTimerEx("iejimas", 3000, 0, "i", playerid);
    	SetPlayerPos(playerid, 1399.4507,1786.4536,4004.4558);
        return 1;
    }
    
   	//Bokso iðëjimas.
	if(pickupid == pickups[0][isejimasboksas])
    {
		SetPlayerPos(playerid, 2337.5833,42.7853,26.4844);
        return 1;
    }
    
   	//Naru áëjimas.
	if(pickupid == pickups[0][ivejimasnaru])
    {
        if(playerDB[playerid][specialybe] !=28) return SendClientMessage(playerid, RED , " Áeiti á narø teritorijà gali tik {FF8C00}Narai !" ) ;
  		TogglePlayerControllable(playerid,false);
		SetTimerEx("iejimas", 3000, 0, "i", playerid);
    	SetPlayerPos(playerid, 2023.1414,-221.0643,2.6401);
        return 1;
    }
    
   	//Naru iðëjimas.
	if(pickupid == pickups[0][isejimasnaru])
    {
        if(playerDB[playerid][specialybe] !=28) return SendClientMessage(playerid, RED , " Iðeiti ið narø teritorijos gali tik {FF8C00}Narai !" ) ;
		SetPlayerPos(playerid, 2109.1826,-99.7390,1.9514);
        return 1;
    }
    
   	//Kontoros informacijà.
	if(pickupid == pickups[0][infokontora])
    {
        SendClientMessage(playerid, GREEN, "* Skelbimø kontoroje galite paraðyti skelbimà kurá matys visi þaidëjai.");
        SendClientMessage(playerid, GREEN, "* Skelbimo kainà 1000 , bûtina turëti 500 XP.");
        SendClientMessage(playerid, GREEN, "* Skelbimui raðyti naudokities: /x [skelbimas]");
        return 1;
    }
    
	//Ðratasvaidþio.
    if(pickupid == pickups[0][DazasvaidzioInfo])
    {
        ShowPlayerDialog(playerid,7461,DIALOG_STYLE_MSGBOX,"{ffffff}Daþasvaidþio informacija", "{ffffff}Sveiki norëdami pradëti þaisti daþasvaidá jûs turite turëti:\n1.{FF0000}1000 {ffffff}kiðenëje.\n2.Ginklø licenzijà\nÞaidimà galite pradëti þaisti nuëjà á paèia apaèia\nGalite pasirinkti dvi komandas {FFCC00}geltonuosius {ffffff}ir {00CC00}þaliuosius{ffffff}!","Supratau","");
        return 1;
	}
	
	//Kaþkas
    if(pickupid == pickups[0][DazasvaidzioPickup])
    {
        new msg[160];
		format(msg, sizeof(msg), "{FFCC00}Prisijungti prie geltonøjø komandos dabar jø yra: {FF0000}%d\n{00CC00}Prisijungti prie þaliøjø komandos dabar jø yra: {FF0000}%d", ZaidejaiPasY, ZaidejaiPasG);
		ShowPlayerDialog(playerid,12345,DIALOG_STYLE_LIST,"{ffffff}Dazasvaidis", msg,"Prisijungti","Iðeiti");
        return 1;
	}
    if(pickupid > pickups[0][LeaveDazasvaidisPickup]-1 && pickupid < pickups[1][LeaveDazasvaidisPickup]+1)
    {
        ShowPlayerDialog(playerid,12346,DIALOG_STYLE_LIST,"{ffffff}Dazasvaidis", "PALIKTI ÞAIDIMÀ\nTÆSTI ÞAIDIMÀ","Prisijungti","Iðeiti");
        return 1;
	}
	
	//Kaþkas
    if(pickupid == pickups[0][sandelisls])
    {
        if(SanNupirktas[0] == false) return ShowPlayerDialog(playerid, 7811, DIALOG_STYLE_MSGBOX, "{ffffff}Sandelis", "{ffffff}Grobti sandelius gali tik gaujø lyderiai\nPradëjus grobimà jûs turësite sandelio vietoje prabûti 10 minuèiø neatsijunges!\nJei atsijungsite grobimas nusitrauks ir sandelá galës pradëti grobti bet kas.\nNorint pradëti grobti spauskite 'Grobti'", "Grobti", "Iðeiti");
        ShowPlayerDialog(playerid, 7812, DIALOG_STYLE_LIST, "{ffffff}Sandelis", "Sandelio balansas\nIðtuðtinti sandelá.", "Pasirinkti", "Iðeiti");
        return 1;
    }
    
    // Armijos liftai.
	if(pickupid == pickups[0][armijosliftask]) // kairej
    {
    	SetPlayerInterior(playerid, 1);
    	SetPlayerPos(playerid, 2267.7383,2446.0532,3.5313);
        return 1;
    }
    if(pickupid == pickups[0][armijosliftasd])// desinej
    {
    	SetPlayerInterior(playerid, 1);
    	SetPlayerPos(playerid, 2267.7383,2446.0532,3.5313);
        return 1;
    }
    if(pickupid == pickups[0][armijosliftasa])// liftas apacioj
    {
    	SetPlayerInterior(playerid, 1);
    	SetPlayerPos(playerid, 2293.4482,2450.9976,10.8250);
        return 1;
    }
//--------------------------2 SANDELIOPICKUP------------------------------------
	if(pickupid == pickups[0][sandelisbb])
    {
        if(SanNupirktas[1] == false) return ShowPlayerDialog(playerid, 7817, DIALOG_STYLE_MSGBOX, "{ffffff}Sandelis", "{ffffff}Grobti sandelius gali tik gaujø lyderiai\nPradëjus grobimà jûs turësite sandelio vietoje prabûti 10 minuèiø neatsijunges!\nJei atsijungsite grobimas nusitrauks ir sandelá galës pradëti grobti bet kas.\nNorint pradëti grobti spauskite 'Grobti'", "Grobti", "Iðeiti");
        ShowPlayerDialog(playerid, 7818, DIALOG_STYLE_LIST, "{ffffff}Sandelis", "Sandelio balansas\nIðtuðtinti sandelá.", "Pasirinkti", "Iðeiti");
        return 1;
    }
    
    if(pickupid == pGaujomHP[0]) // Russian pasigydyti
    {
        if(playerDB[playerid][specialybe] != 40) return SendClientMessage(playerid,GREEN,"* Tu ne Russian mafijos narys!");
        SetPlayerHealthEx(playerid, 100);
        SetPlayerArmourEx(playerid, 100);
		return 1;
	}
	if(pickupid == pGaujomHP[1]) // Grove pasigydyti
    {
        if(playerDB[playerid][specialybe] != 42) return SendClientMessage(playerid,GREEN,"* Tu ne Yakuza mafijos narys!");
        SetPlayerHealthEx(playerid, 100);
        SetPlayerArmourEx(playerid, 100);
		return 1;
	}
	
 	//Naujokø namai - Gydymas.
    if(pickupid == naujokugydymas[0] || pickupid == naujokugydymas[1] || pickupid == naujokugydymas[2])
    {
        if(playerDB[playerid][NaujokuLaikas] < gettime()) return SendClientMessage(playerid, RED, "{37f467} [ {ccff66}SERVERIS {37f467}] Jûs nebe naujokas {ccff66}!");
		SetPlayerHealthEx(playerid, 100);
		GameTextForPlayer(playerid, "~G~ PASIGYDETE", 3000, 5);
        return 1;
    }
    
   	//Miesteliø - Degaliniø bakeliø pirkimas .
    if(pickupid == bakeliop[0] || pickupid == bakeliop[1] || pickupid == bakeliop[2])
    {
    	ShowPlayerDialog(playerid, 10720, DIALOG_STYLE_MSGBOX, "Bakelio pirkimas.", "{ffffff}Ar norite pirkti bakelá, kuriame yra {FF8C00}40 {ffffff}litrø degalø.\nNusipirkæ bakelá, galësite já panaudoti savo tr.priemonëj baigusiai degalus.\nSu komanda - {FF8C00}/bakelis{ffffff}\nTr.priem galësite pripildyti degalø kai bus maþiau nei {FF8C00}20 {ffffff}litrø degalø.\nAr norite pirkti bakelá uþ {FF8C00}200 {ffffff}.", "Pirkti", "Nepirkti");
        return 1;
    }

    if(pickupid == pickups[0][pBanko] && pickupid < pickups[1][pBanko]+1)
    {
        if(!playerDB[playerid][SusikuresKorta])
        {
            ShowPlayerDialog(playerid, 500, DIALOG_STYLE_MSGBOX, "{ffffff}SweedBank", "{ffffff}Laba diena,\nJûs nesate atsidares banko saskaitos.\nAr norësite atsidaryti?:", "Labai", "Ne");
        }
        else
        {
            ShowPlayerDialog(playerid, 501, DIALOG_STYLE_LIST, "{ffffff}SweedBank", "{ffffff} Balansas.\n Pasiimti pinigus.\n Padëti pinigus.", "Pasirinkti", "Iðeiti");
        }
        return 1;
    }

	if(pickupid > pickups[0][degaline]-1 && pickupid < pickups[1][degaline]+1) //Degalines
	{
	    new Float:cpo[3], kof, Float:angle;
		if(playerDB[playerid][masina] == -1) return SendClientMessage(playerid,RED,"* Jûs neturite maðinos.");
		new modelis = GetVehicleModel(playerDB[playerid][masina]);
		if(modelis == 481 || modelis == 510 || modelis == 509 || modelis == 462) return SendClientMessage(playerid,RED,"* Jûs neturite maðinos.");
		GetVehiclePos(playerDB[playerid][masina], cpo[0], cpo[1], cpo[2]);
		if(!IsPlayerInRangeOfPoint(playerid, 7.0,cpo[0],cpo[1],cpo[2])) return SendClientMessage(playerid,RED,"* Jûsø maðina per toli");
		new station = pickupid - pickups[0][degaline];
		switch(station)
	    {
			case 0: {kof=5; angle=40;} //Docke
	        case 1: {kof=5; angle=337;} //Kaime
	        case 2: {kof=5; angle=90;} //Cj
	        case 3: {kof=5; angle=90;} //Prie tilto
	        case 4: {kof=5; angle=90;} //Prie tilto
	        case 5: {kof=5; angle=90;} //prie tilto
	        case 6: {kof=5; angle=320;} //oro uoste
	        case 7: {kof=5; angle=225;} //uoste
	        case 8: {kof=5; angle=90;} //uoste
	        case 9: {kof=5; angle=90;} //uoste
	        case 10: {kof=5; angle=90;} //uoste
            case 11: {kof=5; angle=90;} //uoste
	        case 12: {kof=5; angle=90;} //uoste
	        case 13: {kof=5; angle=90;} //uoste
	        case 14: {kof=5; angle=90;} //uoste
	        case 15: {kof=5; angle=225;} //lv
   	        case 16: {kof=5; angle=225;} //ls furose
   	        case 17: {kof=5; angle=225;} //lv
   	        case 18: {kof=5; angle=225;} //lv
   	        case 19: {kof=5; angle=225;} //lv
   	        case 20: {kof=5; angle=225;} //lv
   	        case 21: {kof=5; angle=225;} //lv
   	        case 22: {kof=5; angle=225;} //lv
		}
		SetPlayerFacingAngle(playerid, angle);
		SetPlayerPos(playerid,PickupIDs[pickupid][0], PickupIDs[pickupid][1], PickupIDs[pickupid][2]);
		playerDB[playerid][pila] = true;
		TogglePlayerControllable(playerid, false);
		Gasup(playerDB[playerid][masina], 0, kof, 0, playerid);
		ApplyAnimation(playerid, "HEIST9", "Use_SwipeCard", 4.000000, 0, 0, 0, 0, -1);
  	    return 1;
	}
	
	if(pickupid > pickups[0][atm]-1 && pickupid < pickups[1][atm]+1) return ShowPlayerDialog(playerid, 50, DIALOG_STYLE_LIST, "Bankomatas", "Balansas\nNuimti pinigus", "Pasirinkti", "Baigti");
	if(pickupid == pickups[0][jaildarbas]) return ShowPlayerDialog(playerid, 8574, DIALOG_STYLE_LIST, "DARBAS", "Dirbti darbà\nNedirbti darbo", "Pasirinkti", "Atðaukti");
	if(pickupid == pickups[0][krovikudarbas]) return ShowPlayerDialog(playerid, 8575, DIALOG_STYLE_LIST, "Krovikai", "Dirbti darbà\nNedirbti darbo", "Pasirinkti", "Atðaukti");
	
	if(pickupid > pickups[0][narkotikai]-1 && pickupid < pickups[1][narkotikai]+1)
	{
 		if(playerDB[playerid][specialybe] != 5) return SendClientMessage(playerid,RED,"* Jei norite paimti narkotikus, turite bûti narkotikø dyleris!!.");
 		if(playerDB[playerid][rangas] < 4) return SendClientMessage(playerid, RED, "* Norint paimti narkotikus, tavo rangas turi bûti dylerio profesionalo!");
		if(GetPlayerMoneyA(playerid) < 500) return SendClientMessage(playerid,BLUE,"* Narkotikai kainuoja 500");
		ApplyAnimation(playerid, "MISC", "pickup_box", 4.000000, 0, 0, 0, 0, -1);
		playerDB[playerid][narkotikai]++;
	    SendClientMessage(playerid,GREEN,"* Narkotikai paimti! (500)");
	    GivePlayerMoneyA(playerid,-500);
	    return 1;
	}
	
	if(pickupid > pickups[0][ginkline]-1 && pickupid < pickups[1][ginkline]+1) return ShowPlayerDialog(playerid,1412,DIALOG_STYLE_LIST,"Ginklinë","{FFFFFF}Ginklo pavadinimas/kiekis/kaina\n \nBeisbolkë 1vnt 60\n9mm 100vnt 900\nShotGun 100vnt 1400\nCountry Rifle 100vnt 1200\n \nGinklu licenzija 5000","Rinktis","Iðeiti");

	//Boxininko skin
	if(pickupid == pickups[0][boxininkoskin]) return SetPlayerSkin(playerid, 80);
	if(pickupid == pickups[1][boxininkoskin]) return SetPlayerSkin(playerid, 81);
	//Furistai pasijema krovinius
	if(pickupid == FuristuPasikrovimas)
	{
		SendClientMessage(playerid,RED," Iðsirinkus norimà uþsakymà, priekabà reikia pasiimti ið Fûristø pasikrovimo vietos : {FF8C00}/furp");
	    new str[150], strf[405];
	    str = "Krovinys | Kaina pirkti kroviná | Kaina priduoti kroviná\n \nDviraèiø perveþimas | 500 | 1000\nBaldø perveþimas | 500 | 1500\n", strcat(strf, str);
	    str = "Buitinës technikos perveþimas | 500 | 2000\nAngliø perveþimas | 500 | 2500\nÞvyro perveþimas | 500 | 3000\n", strcat(strf, str);
	    str = "Ginklø perveþimas | 500 | 4500\nNarkotikø perveþimas | 500 | 5000\nÞolës perveþimas | 500 | 5500\n{FF0000}Atðaukti uþsakymus.", strcat(strf, str);
	    ShowPlayerDialog(playerid,1547,DIALOG_STYLE_LIST,"Kroviniai", strf,"Pasirinkti","Atðaukti");
	    return 1;
	}
	//Dviraèiø krovinys
	if(pickupid == pickups[0][dviraciukrov]) return SendClientMessage(playerid, GREEN, "* Ðioje teritorijoje fûristai gali uþsisakyti dviraèius.");
	//Baldu krovinys
	if(pickupid == pickups[0][baldukrov]) return SendClientMessage(playerid, GREEN, "* Ðioje teritorijoje fûristai gali uþsisakyti baldus.");
	//Buitinës technikos krovinys
	if(pickupid == pickups[0][buittechkrov]) return SendClientMessage(playerid, GREEN, "* Ðioje teritorijoje fûristai gali uþsisakyti buitinæ technikà.");
	//angliu krovinys
	if(pickupid == pickups[0][angliukrov]) return SendClientMessage(playerid, GREEN, "* Ðioje teritorijoje fûristai gali uþsisakyti anglis.");
	//Zvyro krovinys
	if(pickupid == pickups[0][zvyrokrov]) return SendClientMessage(playerid, GREEN, "* Ðioje teritorijoje fûristai gali uþsisakyti þvyrà.");
 	//Kioskelis
	if(pickupid > pickups[0][kioskas]-1 && pickupid < pickups[1][kioskas]+1)
	{
  		ShowPlayerDialog(playerid,1543,DIALOG_STYLE_LIST,"Pasirinkite prekæ","{FFFFFF}Gëlës 10 []\nKastuvas 30 []\nKrepðelis grybavimui 50 []\n{FF0000}PAPILDYMAI\nPapildymas 20 []\nPapildymas 50 []\nPapildymas 100 []","Rinktis","Iðeiti");
        return 1;
	}
	//I kalejma pas mentus
	if(pickupid == mentujailas[0] ||  pickupid == mentujailas[1])
    {
	 	if(GetPlayerTWanted(playerid) > 0) return JailPlayer(playerid, GetPlayerTWanted(playerid) * 60);
	 	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17)
	 	{
	 		SendClientMessage(playerid,BLUE,"* Visa informacija apie teisësauga galite suþinoti mûsø forume.");
	 	}
	 	{
			//new msg[80];
		 	if(playerDB[playerid][specialybe] != 1) return 0;
			GivePlayerWeaponEx(playerid, 3, 1);
		    GivePlayerWeaponEx(playerid, 23, 50);
		    GivePlayerWeaponEx(playerid, 29, 500);
		    GivePlayerWeaponEx(playerid, 31, 500);
		    SetPlayerTWanted(playerid, 0);
		    SetPlayerArmourEx(playerid,100);
			SetPlayerHealthEx(playerid, 100);
			ServerioZinute(playerid,"Gavote ginklø paketà ir pasigydëte.");
			//format(msg,sizeof(msg),"[Policijos Racija] %s pasiemë ginklus ið dëþës", GetPlayerNameEx(playerid));
			//SendMessageToCops(BLUE,msg);
		 	return 1;
		}
    }

	//I kalejma pas SWAT
	if(pickupid == pickups[0][swatjail])
     {
	 	if(GetPlayerTWanted(playerid) > 0) return JailPlayer(playerid, GetPlayerTWanted(playerid) * 60);
	 	if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 1)
	 	{
	 		SendClientMessage(playerid,GREEN,"* Miesteliø Policija");
	 		SendClientMessage(playerid,BLUE,"* Visa informacija apie policijà galite suþinoti prie darbo durø.");
	 	}
	 	return 1;
	}
	//TEORIJA
	if(pickupid == pickups[0][teorija]) return ShowPlayerDialog(playerid,63,DIALOG_STYLE_MSGBOX,"{29e5ad}Regitra","{FFFFFF}Teorijos egzaminas kainuoja {29e5ad}100","Laikyti","Nelaikyti");

	//AutoAlgos pasijemimas
	if(pickupid == pickups[0][autoalga])
	{
	    new msg[335];
		format(msg,sizeof(msg),"{ffffff}Sveikas darbininke. Jûs jau esate uþdirbæs [{ffcc00}%s{ffffff}] .\nNorint atsiimti algà spauskite {ffcc00}''Atsiimti''{ffffff}, o jei norite dar pataupyti tiesiog atðaukite!\nAlgà gali atsiimti kiekvienà dienà nuo {ffcc00}19:00 {ffffff}iki {ffcc00}22:00 {ffffff}valandos!\n\n{008000}Sëkmës.",konvertuoti_pinigus(playerDB[playerid][alga]));
		ShowPlayerDialog(playerid,5424, DIALOG_STYLE_MSGBOX,"Alga",msg, "Atsiimti","Atðaukti");
		return 1;
	}
	//Valgis
	if(pickupid > pickups[0][valgis]-1 && pickupid < pickups[1][valgis]+1) return ShowPlayerDialog(playerid,5785,DIALOG_STYLE_LIST,"Valgiai","Cepelinai 15\nPica 8\nSriuba 7","Pasirinkti","Atðaukti");
	if(pickupid == pickups[0][zonosvalgis]) return ShowPlayerDialog(playerid, 5788, DIALOG_STYLE_LIST, "ZONOS VALGIAI","Zonos þirnynë\nZonos bundelis","Valgyti","Atðaukti");

    //Russian Ginklai
    if(pickupid == pickups[0][rifagunai])
	{
		if(playerDB[playerid][specialybe] != 40) return SendClientMessage(playerid,GREEN,"* Tu ne Russian mafijos narys!");
		if(!playerDB[playerid][gLicenzija])
		{
		    GivePlayerWeaponEx(playerid, 5, 1);
		    GivePlayerWeaponEx(playerid, 41, 500);
		    GivePlayerWeaponEx(playerid, 22, 500);
		    ServerioZinute(playerid,"Gavote blogesná ginklø paketà nes neturi ginklø licenzijos");
		}
		else
		{
		    GivePlayerWeaponEx(playerid, 5, 1); //
		    GivePlayerWeaponEx(playerid, 25, 100); //
		    GivePlayerWeaponEx(playerid, 33, 100); //
		    GivePlayerWeaponEx(playerid, 30, 100); //
		    GivePlayerWeaponEx(playerid, 24, 100);
			ServerioZinute(playerid,"Gavote ginklø paketà");
		}
 		return 1;
    }
    //G Street Ginklai
    if(pickupid == pickups[0][gstreetgunai])
	{
		if(playerDB[playerid][specialybe] !=42) return SendClientMessage(playerid,GREEN,"* Tu ne Yakuza mafijos narys!");
	    if(!playerDB[playerid][gLicenzija])
		{
	 		GivePlayerWeaponEx(playerid, 5, 1);
	   		GivePlayerWeaponEx(playerid, 41, 500);
		    GivePlayerWeaponEx(playerid, 22, 500);
		    ServerioZinute(playerid,"Gavote blogesná ginklø paketà nes neturi ginklø licenzijos");
		}
		else
		{
		    GivePlayerWeaponEx(playerid, 5, 1); //
		    GivePlayerWeaponEx(playerid, 25, 100); //
		    GivePlayerWeaponEx(playerid, 33, 100); //
		    GivePlayerWeaponEx(playerid, 30, 100); //
		    GivePlayerWeaponEx(playerid, 24, 100);
			ServerioZinute(playerid,"Gavote ginklø paketà");
		}
 		return 1;
	}
    //Mentu  ginklai
    if(pickupid == mentujailas[0] ||  pickupid == mentujailas[1])
	{
		new msg[80];
		if(playerDB[playerid][specialybe] != 1) return SendClientMessage(playerid,GREEN,"* Tu ne policininkas!");
		GivePlayerWeaponEx(playerid, 3, 1);
	    GivePlayerWeaponEx(playerid, 17, 500);
	    GivePlayerWeaponEx(playerid, 29, 500);
	    GivePlayerWeaponEx(playerid, 31, 500);
	    GivePlayerWeaponEx(playerid, 25, 500);
	    GivePlayerWeaponEx(playerid, 23, 100); //
	    SetPlayerTWanted(playerid, 0);
	    SetPlayerArmourEx(playerid,100);
		SetPlayerHealthEx(playerid, 100);
		ServerioZinute(playerid,"Gavote ginklø paketà ir pasigydëte.");
		format(msg,sizeof(msg),"[Policijos Racija] %s pasiemë ginklus ið dëþës", GetPlayerNameEx(playerid));
		SendMessageToCops(BLUE,msg);
	 	return 1;
    }
   	if(pickupid == Baikeriugunai)
	{
		new msg[80];
		if(playerDB[playerid][specialybe] != 14) return SendClientMessage(playerid,RED,"* Jus ne {FF8C00}Baikeris {FF0000}!");
		GivePlayerWeaponEx(playerid, 30, 100); // AK 47
		GivePlayerWeaponEx(playerid, 25, 100); // SG
		ServerioZinute(playerid,"Gavote baikeriø ginklø paketà.");
		format(msg,sizeof(msg),"[Baikeriø Racija] %s pasiemë ginklus ið dëþës", GetPlayerNameEx(playerid));
		SendMessageToBaikeriams(BLUE,msg);
	 	return 1;
    }
   	if(pickupid == SPDGunai)
	{
		new msg[80];
		if(playerDB[playerid][specialybe] != 17) return SendClientMessage(playerid,RED,"* Jus ne {FF8C00}Karininkas {FF0000}!");
		GivePlayerWeaponEx(playerid, 3, 1);
		GivePlayerWeaponEx(playerid, 17, 5);
		GivePlayerWeaponEx(playerid, 23, 100);
		GivePlayerWeaponEx(playerid, 29, 100);
		GivePlayerWeaponEx(playerid, 31, 100);
  		SetPlayerArmourEx(playerid,100);
		SetPlayerHealthEx(playerid, 100);
		ServerioZinute(playerid,"Gavote Armijos ginklø paketà ir gyvybës / ðarvus .");
		format(msg,sizeof(msg),"[Armijos Racija] %s pasiemë ginklus ið dëþës", GetPlayerNameEx(playerid));
		SendMessageToSPD(BLUE,msg);
	 	return 1;
    }
   	if(pickupid == Klubogunai)
	{
		new msg[90];
		if(playerDB[playerid][specialybe] != 15) return SendClientMessage(playerid,RED,"* Jus ne {FF8C00} Costello  {FF0000}klubo narys !");
		GivePlayerWeaponEx(playerid, 30, 100); // AK 47
		GivePlayerWeaponEx(playerid, 25, 100); // SG
		ServerioZinute(playerid,"Gavote klubo ginklø paketà.");
		format(msg,sizeof(msg),"[Klubo  Costello  Racija] %s pasiemë ginklus ið dëþës", GetPlayerNameEx(playerid));
		SendMessageToKlubui(BLUE,msg);
	 	return 1;
    }
   	if(pickupid == Kluboogunai)
	{
		new msg[90];
		if(playerDB[playerid][specialybe] != 16) return SendClientMessage(playerid,RED,"* Jus ne {FF8C00} -Patriotai-  {FF0000}klubo narys !");
		GivePlayerWeaponEx(playerid, 30, 100); // AK 47
		GivePlayerWeaponEx(playerid, 25, 100); // SG
		ServerioZinute(playerid,"Gavote klubo ginklø paketà.");
		format(msg,sizeof(msg),"[Klubo  -Patriotai-  Racija] %s pasiemë ginklus ið dëþës", GetPlayerNameEx(playerid));
		SendMessageToKlubuui(BLUE,msg);
	 	return 1;
    }
   	if(pickupid == KluboHeal)
	{
		new msg[90];
		if(playerDB[playerid][specialybe] != 15) return SendClientMessage(playerid,RED,"* Jus ne {FF8C00} Costello  {FF0000}klubo narys !");
		SetPlayerHealthEx(playerid, 100);
		ServerioZinute(playerid,"Pasigydëtë.");
		format(msg,sizeof(msg),"[Klubo  Costello  Racija] %s pasigydë klubo name.", GetPlayerNameEx(playerid));
		SendMessageToKlubui(BLUE,msg);
	 	return 1;
    }
   	if(pickupid == KlubooHeal)
	{
		new msg[90];
		if(playerDB[playerid][specialybe] != 16) return SendClientMessage(playerid,RED,"* Jus ne {FF8C00} Patriotai  {FF0000}klubo narys !");
		SetPlayerHealthEx(playerid, 100);
		ServerioZinute(playerid,"Pasigydëtë.");
		format(msg,sizeof(msg),"[Klubo  -Patriotai-  Racija] %s pasigydë klubo name.", GetPlayerNameEx(playerid));
		SendMessageToKlubuui(BLUE,msg);
	 	return 1;
    }
    //DYLERIU GINKLAI NAUJOKUI
    if(pickupid == pickups[0][dylgunnew])
	{
		if(playerDB[playerid][specialybe] != 5) return SendClientMessage(playerid,GREEN,"* Tu ne dyleris!");
  		if(playerDB[playerid][rangas] < 1) return SendClientMessage(playerid, RED, "Norint paimti ginklus tavo rangas turi bûti ne maþesnis uþ naujoko!");
		GivePlayerWeaponEx(playerid, 22, 100); // 9MM
		GivePlayerWeaponEx(playerid, 25, 100); // SG
		ServerioZinute(playerid,"Pasiëmëte naujoko ginklø paketà");
	 	return 1;
    }
    //DYLERIU GINKLAI NORMLIAM
    if(pickupid == pickups[0][dylgunnorm])
	{
		if(playerDB[playerid][specialybe] != 5) return SendClientMessage(playerid,GREEN,"* Tu ne dyleris!");
		if(playerDB[playerid][rangas] < 2) return SendClientMessage(playerid, RED, "Norint paimti ginklus tavo rangas turi bûti ne maþesnis uþ apsipratusio!");
		GivePlayerWeaponEx(playerid, 24, 100); // DEAGL
		GivePlayerWeaponEx(playerid, 29, 100); // SMG
		ServerioZinute(playerid,"Pasiëmëte apsipratusio dylerio ginklø paketà");
	 	return 1;
    }
	//DYLERIU GINKLAI SENBÛVIUI
    if(pickupid == pickups[0][dylgunbest])
	{
		if(playerDB[playerid][specialybe] != 5) return SendClientMessage(playerid,GREEN,"* Tu ne dyleris!");
		if(playerDB[playerid][rangas] < 3) return SendClientMessage(playerid, RED, "Norint paimti ginklus tavo rangas turi bûti ne maþesnis uþ senbûvio!");
		GivePlayerWeaponEx(playerid, 24, 100); // DEAGL
		GivePlayerWeaponEx(playerid, 34, 10); // AWP
		GivePlayerWeaponEx(playerid, 30, 100); // AK47
		ServerioZinute(playerid,"Pasiëmëte senbûvio ginklø paketà");
	 	return 1;
    }
    
   	//DYLERIØ GYVYBËS
    if(pickupid == DyleriuHeal)
	{
		if(playerDB[playerid][specialybe] != 5) return SendClientMessage(playerid,GREEN,"* Tu ne dyleris!");
		SetPlayerHealthEx(playerid, 100);
		SetPlayerArmourEx(playerid, 100);
		ServerioZinute(playerid,"Sëkmingai pasigydëte.");
	 	return 1;
    }
    
    //SWAT ginklai
    if(pickupid == SwatGinklai)
	{
		if(playerDB[playerid][specialybe] !=10) return SendClientMessage(playerid,GREEN,"* Tu ne SWAT pajëgø darbuotojas!");
		GivePlayerWeaponEx(playerid, 3, 1); //
	    GivePlayerWeaponEx(playerid, 17, 500); //
	    GivePlayerWeaponEx(playerid, 24, 500); //
	    GivePlayerWeaponEx(playerid, 29, 500); //
	    GivePlayerWeaponEx(playerid, 31, 500); //
	    GivePlayerWeaponEx(playerid, 25, 500); //
	    SetPlayerTWanted(playerid, 0);
	    SetPlayerArmourEx(playerid,100);
		SetPlayerHealthEx(playerid, 100);
		ServerioZinute(playerid,"Gavote ginklø paketà ir pasigydëte.");
	 	return 1;
    }
    
   	if(pickupid == arifa)
	{
 		if(playerDB[playerid][specialybe] == 40) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[Russian] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < RUSSIAN_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,0xFFFFFFA,"{400099}[Russian] {FFFFFF}Atsipraðome, jei norite ástoti á rifà mafijà, turite turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{400099}[Russian] {FFFFFF}Atsipraðome, jei norite ástoti á rifà mafijà, turite turëti sveikatos paþymëjimà.");
		if(!playerDB[playerid][gLicenzija]) return SendClientMessage(playerid, RED, "{400099}[Russian] {FFFFFF}Atsipraðome, jei norite ástoti á Russian mafijà, turite turëti ginklø licenzijà.");
		if(!playerDB[playerid][leanvited][5]) return SendClientMessage(playerid,0xFFFFFFA,"{400099}[Russian] {FFFFFF}Mûsø vadas neinformuotas apie jus, prieð ástojant, turite pasikalbëti su juo.");
		GameTextForPlayer(playerid, "~g~ISTOJOTE I Russian MAFIJA", 7000, 4);
		SendClientMessage(playerid,RED,"Mûsø firmos komandos: {FF8C00}/mafijosk");
		SendClientMessage(playerid,RED,"Vartus atsidaryti galite paspaudæ raidæ {FF8C00}Y");
		SendClientMessage(playerid,RED,"Angarà atsidaryti galite paspaudæ raidæ {FF8C00}Y");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][specialybe]=40;
		playerDB[playerid][rangas] = 1;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		if(playerDB[playerid][lytis]==1)
 		{
			SetPlayerSkin(playerid,126);
			playerDB[playerid][uniforma]=126;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
   			SetPlayerSkin(playerid,126);
		    playerDB[playerid][uniforma]=126;
		    playerDB[playerid][uniformd]=true;
		    ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
					
 	if(pickupid == yakuza)
	{
 		if(playerDB[playerid][specialybe] == 42) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[Yakuza] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < YAKUZA_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,0xFFFFFFA,"{400099}[Yakuza] {FFFFFF}Atsipraðome, jei norite ástoti á Yakuza mafijà, turite turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{400099}[Yakuza] {FFFFFF}Atsipraðome, jei norite ástoti á Yakuza mafijà, turite turëti sveikatos paþymëjimà.");
		if(!playerDB[playerid][gLicenzija]) return SendClientMessage(playerid, RED, "{400099}[Yakuza] {FFFFFF}Atsipraðome, jei norite ástoti á Yakuza mafijà, turite turëti ginklø licenzijà.");
		if(!playerDB[playerid][leanvited][7]) return SendClientMessage(playerid,0xFFFFFFA,"{400099}[Yakuza] {FFFFFF}Mûsø vadas neinformuotas apie jus, prieð ástojant, turite pasikalbëti su juo.");
		GameTextForPlayer(playerid, "~g~ISTOJOTE I Yakuza MAFIJA", 7000, 4);
		SendClientMessage(playerid,RED,"Mûsø firmos komandos: {FF8C00}/mafijosk");
	 	SendClientMessage(playerid,RED,"Vartus atsidaryti galite paspaudæ raidæ {FF8C00}Y");
	 	SendClientMessage(playerid,RED,"Angarà atsidaryti galite paspaudæ raidæ {FF8C00}Y");
	 	TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][specialybe]=42;
		playerDB[playerid][rangas] = 1;
	   	playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
	    if(playerDB[playerid][lytis]==1)
		{
		   	SetPlayerSkin(playerid,117);
		    playerDB[playerid][uniforma]=117;
		   	playerDB[playerid][uniformd]=true;
		    ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
    		SetPlayerSkin(playerid,117);
		    playerDB[playerid][uniforma]=117;
		    playerDB[playerid][uniformd]=true;
		    ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
 
 	if(pickupid == Furistas)
	{
 		if(playerDB[playerid][specialybe] == 11) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[FÛRISTAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < FUROS_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][FTeises]) return SendClientMessage(playerid, RED, "{00B366}[FÛRISTAI] {FFFFFF}Atsipraðome, jei norite dirbti fûristu, turite turëti fûros ir maðinø teisës.");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid, RED, "{00B366}[FÛRISTAI] {FFFFFF}Atsipraðome, jei norite dirbti fûristu, turite turëti fûros ir maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{00B366}[FÛRISTAI] {FFFFFF}Atsipraðome, jei norite dirbti fûristu, turite turëti sveikatos paþymëjimà.");
		if(!playerDB[playerid][leanvited][10])
		SendClientMessage(playerid,0xFFFFFFA,"{00B366}[FÛRISTAI] {FFFFFF}Mûsø direktorius neinformuotas apie jus, prieð ástojant, turite pasikalbeti su juo.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE FURISTU", 7000, 4);
 		SendClientMessage(playerid,RED,"Atidaryti/Uþdaryti vartus ir pasikrovimo vartus galite paspaudæ raidæ {FF8C00}Y");
 		TogglePlayerControllable ( playerid , true ) ;
	  	playerDB[playerid][specialybe]=11;
		playerDB[playerid][rangas] = 1;
   		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
    	if(playerDB[playerid][lytis]==1)
		{
    		SetPlayerSkin(playerid,125);
		    playerDB[playerid][uniforma]=125;
		    playerDB[playerid][uniformd]=true;
		    ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
	    }
		else
		{
			SetPlayerSkin(playerid,263);
 			playerDB[playerid][uniforma]=263;
	   		playerDB[playerid][uniformd]=true;
	   		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}

	if(pickupid == Mechanikai)
	{
 		if(playerDB[playerid][specialybe] == 4) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[MECHANIKAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < MECHANIKAI_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{0066B3}[MECHANIKAI] {FFFFFF}Norint dirbti reikia turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{0066B3}[MECHANIKAI] {FFFFFF}Atsipraðome, jei norite dirbti mechaniku, turite turëti sveikatos paþymëjimà.");
		if(!playerDB[playerid][leanvited][3]) return SendClientMessage(playerid,0xFFFFFFA,"{0066B3}[MECHANIKAI] {FFFFFF}Mûsø direktorius neinformuotas apie jus, prieð ástojant, turite pasikalbeti su juo.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE MECHANIKU", 7000, 4);
		SendClientMessage(playerid,RED,"Mûsø firmos komandos: {FF8C00}/mechanikas");
 		SendClientMessage(playerid,RED,"KMA vartus galite atsidaryti paspaudæ raidæ {FF8C00}Y");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][specialybe]=4;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
 		playerDB[playerid][rangas] = 1;
		if(playerDB[playerid][lytis]==1)
 		{
			SetPlayerSkin(playerid,8);
			playerDB[playerid][uniforma]=8;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
			SetPlayerSkin(playerid,191);
			playerDB[playerid][uniforma]=191;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
   	
	if(pickupid == Taksi)
	{
 		if(playerDB[playerid][specialybe] == 3) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[TAXISTAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < TAXI_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,0xFFFFFFA,"{FFE500}[TAXISTAI] {FFFFFF}Privalai turëti teises, kaip kitaip vairuosi taksi?");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{FFE500}[TAXISTAI] {FFFFFF}Atsipraðome, jei norite dirbti taxistu, turite turëti sveikatos paþymëjimà.");
		if(!playerDB[playerid][leanvited][2]) return SendClientMessage(playerid,0xFFFFFFA,"{FFE500}[TAXISTAI] {FFFFFF}Mûsø direktorius neinformuotas apie jus, prieð ástojant, turite pasikalbeti su juo.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE TAXISTU", 7000, 4);
		TogglePlayerControllable ( playerid , true ) ;
  		playerDB[playerid][specialybe]=3;
  		playerDB[playerid][rangas] = 1;
   		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
   		if(playerDB[playerid][lytis]==1)
  		{
	    	SetPlayerSkin(playerid,171);
			playerDB[playerid][uniforma]=171;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
  		}
		else
		{
			SetPlayerSkin(playerid,194);
	   		playerDB[playerid][uniforma]=194;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
   	
	if(pickupid == medikai)
	{
 		if(playerDB[playerid][specialybe] == 2) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[MEDIKAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < MEDIKAI_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,0xFFFFFFA,"{FF0000}[MEDIKAI] {FFFFFF}Atsipraðome, jei norite dirbti mediku, turite turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{FF0000}[MEDIKAI] {FFFFFF}Atsipraðome, jei norite dirbti mediku, turite turëti sveikatos paþymëjimà.");
		if(!playerDB[playerid][leanvited][1]) return SendClientMessage(playerid,0xFFFFFFA,"{FF0000}[MEDIKAI] {FFFFFF}Mûsø direktorius neinformuotas apie jus, prieð ástojant, turite pasikalbëti su juo.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE MEDIKU", 7000, 4);
		SendClientMessage(playerid,RED,"Mûsø firmos komandos: {FF8C00}/medikas");
		TogglePlayerControllable ( playerid , true ) ;
  		playerDB[playerid][specialybe]=2;
  		playerDB[playerid][rangas] = 1;
  		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
   		if(playerDB[playerid][lytis]==1)
   		{
	    	SetPlayerSkin(playerid,274);
		   	playerDB[playerid][uniforma]=274;
		   	playerDB[playerid][uniformd]=true;
		   	ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
			SetPlayerSkin(playerid,190);
    		playerDB[playerid][uniforma]=190;
		   	playerDB[playerid][uniformd]=true;
	   		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
   	
	if(pickupid == Dyleriai)
	{
 		if(playerDB[playerid][specialybe] == 5) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[DYLERIAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < GDYLERIAI_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,0xFFFFFFA,"{E60066}[DYLERIAI] {FFFFFF}Atsipraðome, jei norite dirbti dyleriu, turite turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{E60066}[DYLERIAI] {FFFFFF}Atsipraðome, jei norite dirbti dyleriu, turite turëti sveikatos paþymëjimà.");
		if(!playerDB[playerid][leanvited][4]) return SendClientMessage(playerid,0xFFFFFFA,"{E60066}[DYLERIAI] {FFFFFF}Mûsø direktorius neinformuotas apie jus, prieð ástojant, turite pasikalbëti su juo.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE DYLERIU", 7000, 4);
		SendClientMessage(playerid,RED,"Mûsø firmos komandos: {FF8C00}/dyleris");
		SendClientMessage(playerid,RED,"Atidaryti/Uþdaryti vartus galite paspaudæ raidæ {FF8C00}Y");
		TogglePlayerControllable ( playerid , true ) ;
 		playerDB[playerid][specialybe]=5;
 		playerDB[playerid][rangas] = 1;
 		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
  		if(playerDB[playerid][lytis]==1)
	   	{
	    	SetPlayerSkin(playerid,29);
			playerDB[playerid][uniforma]=29;
			playerDB[playerid][uniformd]=true;
	   		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
	    }
		else
		{
  			SetPlayerSkin(playerid,195);
	    	playerDB[playerid][uniforma]=195;
	    	playerDB[playerid][uniformd]=true;
	    	ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
   	
	if(pickupid == Swatas)
	{
 		if(playerDB[playerid][specialybe] == 10) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[SWAT] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[SWAT] {FFFFFF}Norint dirbti SWAT reikia turëti maðinø teisës.");
		if(!playerDB[playerid][Mteises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[SWAT] {FFFFFF}Norint dirbti SWAT reikia turëti motociklo teises.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[SWAT] {FFFFFF}Atsipraðome, jei norite dirbti SWAT, turite turëti sveikatos paþymëjimà.");
		if(GetPlayerScore(playerid) < SWAT_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][leanvited][9]) return SendClientMessage(playerid,0xFFFFFFA,"{009999}[SWAT] {FFFFFF}Mûsø direktorius neinformuotas apie jus, prieð ástojant, turite pasikalbeti su juo.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE SWAT PAJEGOSE", 7000, 4);
		SendClientMessage(playerid,RED,"Mûsø firmos komandos: {FF8C00}/SWAT");
		SendClientMessage(playerid,RED,"Atidaryti/Uþdaryti vartus galite paspaudæ raidæ {FF8C00}Y");
		TogglePlayerControllable ( playerid , true ) ;
 		playerDB[playerid][specialybe]=10;
 		playerDB[playerid][rangas] = 1;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
	    if(playerDB[playerid][lytis]==1)
		{
			SetPlayerSkin(playerid,285);
			playerDB[playerid][uniforma]=285;
		    playerDB[playerid][uniformd]=true;
		    ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
   		}
		else
		{
			SetPlayerSkin(playerid,285);
		    playerDB[playerid][uniforma]=285;
		    playerDB[playerid][uniformd]=true;
		    ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
	
	if(pickupid == Radistai)
	{
 		if(playerDB[playerid][specialybe] == 13) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{009999}[RADISTAI] {FFFFFF}Atsipraðome, jei norite dirbti radistu, turite palikti savo esamà darbà.");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid, RED, "{009999}[RADISTAI] {FFFFFF}Atsipraðome, jei norite dirbti radistu, turite turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[RADISTAI] {FFFFFF}Atsipraðome, jei norite dirbti radistu, turite turëti sveikatos paþymëjimà.");
   		if(GetPlayerScore(playerid) < RADISTU_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs!");
		if(!playerDB[playerid][leanvited][12]) return SendClientMessage(playerid, RED, "* Mûsø direktorius neinformuotas apie jus! Prieð ástojan turite pasikalbëti su juo!");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE RADISTU", 7000, 4);
		SendClientMessage(playerid,RED,"Mûsø firmos komandos: {FF8C00}/radistai");
		SendClientMessage(playerid,RED," Jûsø darbas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][specialybe] = 13;
		playerDB[playerid][rangas] = 1;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		if(playerDB[playerid][lytis]==1)
		{
			SetPlayerSkin(playerid, 119);
			playerDB[playerid][uniforma]= 119;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
			SetPlayerSkin(playerid,69);
			playerDB[playerid][uniforma]=69;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
	
	if(pickupid == Baikeris)
	{
 		if(playerDB[playerid][specialybe] == 14) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{009999}[BAIKERIAI] {FFFFFF}Atsipraðome, jei norite dirbti baikeriu, turite palikti savo esamà darbà.");
		if(!playerDB[playerid][Mteises]) return SendClientMessage(playerid, RED, "{009999}[BAIKERIAI] {FFFFFF}Atsipraðome, jei norite dirbti baikeriu, turite turëti motociklo teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[BAIKERIAI] {FFFFFF}Atsipraðome, jei norite dirbti baikeriu, turite turëti sveikatos paþymëjimà.");
		if(GetPlayerScore(playerid) < BAIKERIAI_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][leanvited][13]) return SendClientMessage(playerid, RED, "* Mûsø direktorius neinformuotas apie jus! Prieð ástojan turite pasikalbëti su juo!");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE BAIKERIU", 7000, 4);
		SendClientMessage(playerid,RED," Jûsø darbas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		SendClientMessage(playerid,RED,"Atidaryti/Uþdaryti vartus galite paspaudæ raidæ {FF8C00}Y");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][specialybe] = 14;
		playerDB[playerid][rangas] = 1;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		SetPlayerSkin(playerid, 181);
		playerDB[playerid][uniforma]= 181;
		playerDB[playerid][uniformd]=true;
		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		return true;
	}
	
	if(pickupid == farai)
	{
 		if(playerDB[playerid][specialybe] == 1) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[POLICIJA] {FFFFFF}Atsipraðome, jei norite dirbti pareigûnu, turite palikti savo esamà darbà.");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[POLICIJA] {FFFFFF}Norint dirbti pareigûnu reikia turëti maðinø teisës.");
		if(!playerDB[playerid][Mteises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[POLICIJA] {FFFFFF}Norint dirbti pareigûnu reikia turëti motociklo teises.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[POLICIJA] {FFFFFF}Atsipraðome, jei norite dirbti pareigûnu, turite turëti sveikatos paþymëjimà.");
		if(GetPlayerScore(playerid) < FARAI_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][leanvited][0]) return SendClientMessage(playerid,0xFFFFFFA,"{009999}[POLICIJA] {FFFFFF}Mûsø direktorius neinformuotas apie jus, prieð ástojant, turite pasikalbeti su juo.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE POLICININKU", 7000, 4);
		SendClientMessage(playerid,RED,"Mûsø firmos komandos: {FF8C00}/policija");
		SendClientMessage(playerid,RED,"Atidaryti/Uþdaryti vartus galite paspaudæ raidæ {FF8C00}Y");
		SendClientMessage(playerid,RED,"Treniruoèiø zonos vartus atsidaryti galite paspaudæ raidæ {FF8C00}Y");
		SendClientMessage(playerid,RED,"Ávaþiuoti / áeiti / iðeiti á poþeminá garaþà spauskite {FF8C00}N");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][specialybe]=1;
		playerDB[playerid][rangas] = 1;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
	    if(playerDB[playerid][lytis]==1)
		{
		   	SetPlayerSkin(playerid,265);
		    playerDB[playerid][uniforma]=265;
		    playerDB[playerid][uniformd]=true;
		    ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
    		SetPlayerSkin(playerid,306);
		    playerDB[playerid][uniforma]=306;
		    playerDB[playerid][uniformd]=true;
		    ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
			}
			
	if(pickupid == spdarbas)
	{
 		if(playerDB[playerid][specialybe] == 17) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[ARMIJA] {FFFFFF}Atsipraðome, jei norite dirbti karininku, turite palikti savo esamà darbà.");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[ARMIJA] {FFFFFF}Norint dirbti karininku reikia turëti maðinø teisës.");
		if(!playerDB[playerid][Mteises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[ARMIJA] {FFFFFF}Norint dirbti karininku reikia turëti motociklo teises.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[ARMIJA] {FFFFFF}Atsipraðome, jei norite dirbti karininku, turite turëti sveikatos paþymëjimà.");
		if(GetPlayerScore(playerid) < SPD_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][leanvited][16]) return SendClientMessage(playerid,0xFFFFFFA,"{009999}[ARMIJA] {FFFFFF}Mûsø direktorius neinformuotas apie jus, prieð ástojant, turite pasikalbeti su juo.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE KARININKU", 7000, 4);
		SendClientMessage(playerid,RED,"Mûsø firmos komandos: {FF8C00}/ARMIJA");
		SendClientMessage(playerid,RED,"Atidaryti/Uþdaryti vartus galite paspaudæ raidæ {FF8C00}Y");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][rangas] = 1;
		playerDB[playerid][specialybe]=17;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
	    if(playerDB[playerid][lytis]==1)
		{
		   	SetPlayerSkin(playerid,287);
		    playerDB[playerid][uniforma]=287;
		    playerDB[playerid][uniformd]=true;
		    ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
    		SetPlayerSkin(playerid,309);
		    playerDB[playerid][uniforma]=309;
		    playerDB[playerid][uniformd]=true;
		    ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
	
	if(pickupid == Klubas)
	{
 		if(playerDB[playerid][specialybe] == 15) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "* Jûs turite darbà ! Mûsø gretoj tokiø nereikia.");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[Costello Klubas] {FFFFFF}Norint èia patekti reikia turëti maðinø teisës.");
		if(!playerDB[playerid][Mteises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[Costello Klubas] {FFFFFF}Norint èia patekti reikia turëti motociklo teises.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[Costello Klubas] {FFFFFF}Atsipraðome, jei norite èia patekti turite turëti sveikatos paþymëjimà.");
		if(GetPlayerScore(playerid) < KLUBAS_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][leanvited][14]) return SendClientMessage(playerid, RED, "* Mûsø klubo vadas neinformuotas apie jus ! Prieð ástojant turite pasikalbëti su juo!");
		GameTextForPlayer(playerid, "~g~ISTOJOTE I Costello KLUBA", 7000, 4);
		SendClientMessage(playerid,RED,"» Jûsø klubas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		SendClientMessage(playerid,RED,"» Atidaryti/Uþdaryti vartus galite paspaudæ raidæ {FF8C00}Y");
		SendClientMessage(playerid,RED,"» Atidaryti/Uþdaryti angarà galite paspaudæ raidæ {FF8C00}Y");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][specialybe] = 15;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		SetPlayerSkin(playerid, 299);
		playerDB[playerid][uniforma]= 299;
		playerDB[playerid][uniformd]=true;
		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		return true;
	}

	if(pickupid == Klubass)
	{
 		if(playerDB[playerid][specialybe] == 16) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
  		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "* Jûs turite darbà !");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[- PATRIOTAI - Klubas] {FFFFFF}Norint èia patekti reikia turëti maðinø teisës.");
		if(!playerDB[playerid][Mteises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[- PATRIOTAI - Klubas] {FFFFFF}Norint èia patekti reikia turëti motociklo teises.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[- PATRIOTAI - Klubas] {FFFFFF}Atsipraðome, jei norite èia patekti turite turëti sveikatos paþymëjimà.");
		if(GetPlayerScore(playerid) < KLUBASS_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs! Reikalingas XP");
		if(!playerDB[playerid][leanvited][15]) return SendClientMessage(playerid, RED, "* Mûsø klubo vadas neinformuotas apie jus ! Prieð ástojant turite pasikalbëti su juo!");
		GameTextForPlayer(playerid, "~g~ISTOJOTE I - Patriotai - KLUBA", 7000, 4);
		SendClientMessage(playerid,RED,"» Jûsø klubas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		SendClientMessage(playerid,RED,"» Atidaryti/Uþdaryti vartus galite paspaudæ raidæ {FF8C00}Y");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][specialybe] = 16;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		SetPlayerSkin(playerid, 295);
		playerDB[playerid][uniforma]= 295;
		playerDB[playerid][uniformd]=true;
		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		return true;
 	}

	if(pickupid == Picerininkas)
	{
 		if(playerDB[playerid][specialybe] == 20) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[PICERININKAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(!playerDB[playerid][Mteises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[PICERININKAI] {FFFFFF}Norint èia dirbti, reikia turëti motociklo teises.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[PICERININKAI] {FFFFFF}Atsipraðome, jei norite èia dirbti, turite turëti sveikatos paþymëjimà.");
		if(GetPlayerScore(playerid) < PICERININKU_ISIDARBINIMO_XP) return SendClientMessage(playerid,RED,"* Atsipraðome, bet jûs dar nepakankamai patyræs!");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE PICERININKU", 7000, 4);
		SendClientMessage(playerid,RED,"Pardavinëk picà: {FF8C00}/pica");
		SendClientMessage(playerid,RED," Jûsø darbas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		playerDB[playerid][specialybe] = 20;
		if(playerDB[playerid][lytis]==1)
		{
  			SetPlayerSkin(playerid,155);
  			playerDB[playerid][uniforma]=155;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
			SetPlayerSkin(playerid,205);
			playerDB[playerid][uniforma]=205;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
	
	if(pickupid == Valytojas)
	{
 		if(playerDB[playerid][specialybe] == 22) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[VALYTOJAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < VALYTOJU_ISIDARBINIMO_XP) return SendClientMessage(playerid, RED, "{009999}[VALYTOJAI] {FFFFFF}Jûs nepakankamai patyræs ðiam darbui paþiûrëkite XP /darbai");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[VALYTOJAI] {FFFFFF}Norint èia dirbti, reikia turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[VALYTOJAI] {FFFFFF}Atsipraðome, jei norite èia dirbti, turite turëti sveikatos paþymëjimà.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE VALYTOJU", 7000, 4);
		SendClientMessage(playerid,RED," Jûsø darbas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		playerDB[playerid][specialybe] = 22;
		if(playerDB[playerid][lytis]==1)
		{
			SetPlayerSkin(playerid,156);
			playerDB[playerid][uniforma]=156;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
			SetPlayerSkin(playerid,41);
			playerDB[playerid][uniforma]=41;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
	
	if(pickupid == Medkirtis)
	{
 		if(playerDB[playerid][specialybe] == 24) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[MEDKIRÈIAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < MEDKIRCIU_ISIDARBINIMO_XP) return SendClientMessage(playerid, RED, "{009999}[MEDKIRÈIAI] {FFFFFF}Jûs nepakankamai patyræs ðiam darbui paþiûrëkite XP /darbai");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[MEDKIRÈIAI] {FFFFFF}Norint èia dirbti, reikia turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[MEDKIRÈIAI] {FFFFFF}Atsipraðome, jei norite èia dirbti, turite turëti sveikatos paþymëjimà.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE MEDKIRCIU", 7000, 4);
		SendClientMessage(playerid,RED," Jûsø darbas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		playerDB[playerid][specialybe] = 24;
		if(playerDB[playerid][lytis]==1)
		{
  			SetPlayerSkin(playerid,183);
  			playerDB[playerid][uniforma]=183;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
			SetPlayerSkin(playerid,76);
			playerDB[playerid][uniforma]=76;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
	
	if(pickupid == Naras)
	{
 		if(playerDB[playerid][specialybe] == 28) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[NARAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < NARU_ISIDARBINIMO_XP) return SendClientMessage(playerid, RED, "{009999}[NARAI] {FFFFFF}Jûs nepakankamai patyræs ðiam darbui paþiûrëkite XP /darbai");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[NARAI] {FFFFFF}Atsipraðome, jei norite èia dirbti, turite turëti sveikatos paþymëjimà.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE NARU", 7000, 4);
		SendClientMessage(playerid,RED," Jûsø darbas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		playerDB[playerid][specialybe] = 28;
		if(playerDB[playerid][lytis]==1)
		{
  			SetPlayerSkin(playerid,30);
  			playerDB[playerid][uniforma]=30;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
			SetPlayerSkin(playerid,30);
			playerDB[playerid][uniforma]=30;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
	
	if(pickupid == Kunigas)
	{
 		if(playerDB[playerid][specialybe] == 27) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[KUNIGAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < KUNIGU_ISIDARBINIMO_XP) return SendClientMessage(playerid, RED, "{009999}[KUNIGAI] {FFFFFF}Jûs nepakankamai patyræs ðiam darbui paþiûrëkite XP /darbai");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[KUNIGAI] {FFFFFF}Norint èia dirbti, reikia turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[KUNIGAI] {FFFFFF}Atsipraðome, jei norite èia dirbti, turite turëti sveikatos paþymëjimà.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE KUNIGU!", 7000, 4);
		SendClientMessage(playerid,RED," Jûsø darbas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		playerDB[playerid][specialybe] = 27;
		SetPlayerSkin(playerid,68);
  		playerDB[playerid][uniforma]=68;
		playerDB[playerid][uniformd]=true;
		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		return true;
	}
	
	if(pickupid == Krovikas)
	{
 		if(playerDB[playerid][specialybe] == 25) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[KROVIKAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[KROVIKAI] {FFFFFF}Atsipraðome, jei norite èia dirbti, turite turëti sveikatos paþymëjimà.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE KROVIKU", 7000, 4);
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		playerDB[playerid][specialybe] = 25;
		if(playerDB[playerid][lytis]==1)
		{
  			SetPlayerSkin(playerid,27);
  			playerDB[playerid][uniforma]=27;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		else
		{
			SetPlayerSkin(playerid,31);
			playerDB[playerid][uniforma]=31;
			playerDB[playerid][uniformd]=true;
			ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		}
		return true;
	}
	
	if(pickupid == Gaisrininkas)
	{
 		if(playerDB[playerid][specialybe] == 26) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[GAISRININKAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < GAISRINES_ISIDARBINIMO_XP) return SendClientMessage(playerid, RED, "{009999}[GAISRININKAI] {FFFFFF}Jûs nepakankamai patyræs ðiam darbui paþiûrëkite XP /darbai");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[GAISRININKAI] {FFFFFF}Norint èia dirbti, reikia turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[GAISRININKAI] {FFFFFF}Atsipraðome, jei norite èia dirbti, turite turëti sveikatos paþymëjimà.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE GAISRININKU!", 7000, 4);
		SendClientMessage(playerid,RED," Jûsø darbas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		playerDB[playerid][specialybe] = 26;
		SetPlayerSkin(playerid,277);
  		playerDB[playerid][uniforma]=277;
		playerDB[playerid][uniformd]=true;
		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		return true;
	}
	
	if(pickupid == Limuzinistas)
	{
 		if(playerDB[playerid][specialybe] == 29) return ShowPlayerDialog(playerid, 987,DIALOG_STYLE_MSGBOX,"{ffffff}Darbo palikimas","{ffffff}Ar tikrai norite palikti savo darbà?\nPaspaudus taip iðkarto bûsite paðalintas ið darbo.","Taip","Ne");
		if(playerDB[playerid][specialybe] !=0) return SendClientMessage(playerid, RED, "{400099}[LIMUZINININKAI] {FFFFFF}Atsipraðome, jûs dar nepakankamai patyræs! XP galite pasiþiûrëti /darbai");
		if(GetPlayerScore(playerid) < LIMUZININKU_ISIDARBINIMO_XP) return SendClientMessage(playerid, RED, "{009999}[LIMUZINININKAI] {FFFFFF}Jûs nepakankamai patyræs ðiam darbui paþiûrëkite XP /darbai");
		if(!playerDB[playerid][teises]) return SendClientMessage(playerid,COLOR_WHITE,"{009999}[LIMUZINININKAI] {FFFFFF}Norint èia dirbti, reikia turëti maðinø teisës.");
		if(playerDB[playerid][medicinospazyma] < gettime()) return SendClientMessage(playerid, RED, "{009999}[LIMUZINININKAI] {FFFFFF}Atsipraðome, jei norite èia dirbti, turite turëti sveikatos paþymëjimà.");
		GameTextForPlayer(playerid, "~g~ISIDARBINOTE LIMUZININKU!", 7000, 4);
		SendClientMessage(playerid,RED," Jûsø darbas turi racijà : {FF8C00}/r [ Jûsø Tekstas ]");
		TogglePlayerControllable ( playerid , true ) ;
		playerDB[playerid][drabuziai]=GetPlayerSkin(playerid);
		playerDB[playerid][specialybe] = 29;
		SetPlayerSkin(playerid,61);
  		playerDB[playerid][uniforma]=61;
		playerDB[playerid][uniformd]=true;
		ApplyAnimation(playerid,"PLAYIDLES","stretch",4.1,0,0,0,0,0);
		return true;
	}
	//Gerimai .
	if(pickupid == gerimai)
	{
		ShowPlayerDialog(playerid,1980,DIALOG_STYLE_LIST,"» Alkoholiniai Gerimai","» Utenos alus [ 10 ]\n» Kalnapilio alus [ 20 ]\n» Ðkotiðkas viskis [ 40 ]\n» Brendis Gloria [ 50 ]","Pirkti","Nepirkti");
 		return 1;
	}
	//Pirkti elektronikos prietaisus
	if(pickupid == pickups[0][elektronikospik])
	{
		ShowPlayerDialog(playerid,5722,DIALOG_STYLE_LIST,"El. Parduotuvë","Fotoparatas 90","Pirkti","Iðeiti");
 		return 1;
	}
	//Pirkti telefonus.
	if(pickupid == pickups[0][telefonupirkimas])
	{
		ShowPlayerDialog(playerid,5724,DIALOG_STYLE_LIST,"Telefonø Prekiø Parduotuvë","{FFFFFF}Siemens 200\nNokia 400\nSonyEriccson 800\nSamsung 1500\nIphone 3500\n \nParduoti turimà telefonà","Pirkti","Iðeiti");
 		return 1;
	}
	//Miesteliø - MAXIMOS valgis.
    if(pickupid == maximosvalgis[0] || pickupid == maximosvalgis[1])
    {
  		ShowPlayerDialog(playerid,5786,DIALOG_STYLE_LIST,"Maxima","{FFFFFF}Didelis Kebabas (200)\nMaþas Kebabas (100)\nPica (80)\nSkrûdintos Bulvytës (50)\nLedai (50)\nJogurtas (30)\nMakaronø Sriuba (80)\nCoca Cola (10)","Taip","Atðaukti");
	    return 1;
	}
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    BuyMenu(playerid,row,GetPlayerMenu(playerid));
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	TogglePlayerControllable(playerid,true);
	return 1;
}

public OnGameModeExit()
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
	    if(IsPlayerConnected(p))
	    {
		    if(Prisijunges[p])
		    {
				savePlayerCar1(p);
				savePlayerCar2(p);
				SavePlayerData(p, true);
			}
		}
	}
	KillTimer ( carTimer ) ;
	KillTimer ( laiminguValanduTimer ) ;
    SavePelnai();
   	SaveSandeliai();
   	//SaveAllOwnGarages ();
    mysql_close();
	return 1;
}

forward unfreeze(playerid);
public unfreeze(playerid)
{
	TogglePlayerControllable(playerid,true);
	return 1;
}

forward zprisijungia(playerid);
public zprisijungia(playerid)
{
	TogglePlayerControllable(playerid,true);
	return 1;
}

forward iejimas(playerid);
public iejimas(playerid)
{
	TogglePlayerControllable(playerid,true);
	return 1;
}

public OnPlayerUpdate(playerid)
{
	new Float:pX , Float:pY , Float:pZ;
	GetPlayerPos ( playerid , pX , pY , pZ ) ;
	if ( pX >= -7.8502 && pX <=53.8554 && pY >= 2472.3151 && pY <= 2538.2658 ) {
	    SetPVarInt ( playerid , "inTrainingZone" , 1 ) ;
	    PlayerTextDrawShow ( playerid , sTD [ playerid ] [ 0 ] );
	}
	else {
	    SetPVarInt ( playerid , "inTrainingZone" , 0 ) ;
	    PlayerTextDrawHide ( playerid , sTD [ playerid ] [ 0 ] );
	}
	if ( pX >= -72.0391 && pX <= -8.8472 && pY >= 2420.0917 && pY <= 2538.2658 ) {
	    SetPVarInt ( playerid , "inTrainingZone" , 1 ) ;
	    PlayerTextDrawShow ( playerid , sTD [ playerid ] [ 0 ] );
	}
	else {
	    SetPVarInt ( playerid , "inTrainingZone" , 0 ) ;
	    PlayerTextDrawHide ( playerid , sTD [ playerid ] [ 0 ] );
	}
	
	GetPlayerPos ( playerid , pX , pY , pZ ) ;
	if ( pX >= 383.8638 && pX <=425.7362 && pY >= 2433.9045 && pY <= 2475.7775 ) {
	    SetPVarInt ( playerid , "inDMZone" , 1 ) ;
	    PlayerTextDrawShow ( playerid , sTD [ playerid ] [ 2 ] );
	}
	else {
	    SetPVarInt ( playerid , "inDMZone" , 0 ) ;
	    PlayerTextDrawHide ( playerid , sTD [ playerid ] [ 2 ] );
	}
	
	if ( GetPVarInt ( playerid , "Groja" ) != 1 ) {
		if ( pX >= 342.9621 && pX <= 371.9415 && pY >= -104.1620 && pY <= -72.9514 ) {
		    SetPVarInt ( playerid , "Groja" , 1 ) ;
		    PlayAudioStreamForPlayer ( playerid , "http://www.radijas.fm/media/_catalog/www.radijas.fm-radijo-stotis-power-hit-radio.pls");
		}
	}
	else {
	    StopAudioStreamForPlayer ( playerid ) ;
	}
	
	if ( OfisoDarbas [ playerid ] ) {
		if ( !IsPlayerInRangeOfPoint ( playerid, 5, 355.4536,152.4572,1025.7891 ) && !IsPlayerInRangeOfPoint ( playerid, 5, 355.1064,171.7894,1025.7891 ) &&
		!IsPlayerInRangeOfPoint ( playerid, 5, 362.7188,171.6240,1025.7891 ) && !IsPlayerInRangeOfPoint ( playerid, 5, 362.6984,152.5808,1025.7891 ) ) {
	 		OfisoDarbas[playerid] = false;
		    TogglePlayerControllable(playerid,1);
		    KillTimer(OfisoTimer[playerid]);
		    SendClientMessage ( playerid , RED , "* AFK zonos reþimas iðjungtas! Nes jûs neesate AFK zonoje!" ) ;
		}
	}
	new
	    Keys , lr , rl
	;
	GetPlayerKeys ( playerid , Keys , lr , rl ) ;
	if ( Keys & KEY_SPRINT ) {
		bega [ playerid ] = true;
	}
	else {
	    bega [ playerid ] = false;
	}
    if(playerDB[playerid][AFK_Label] != Text3D:INVALID_3DTEXT_ID)
    {
  		Delete3DTextLabel(playerDB[playerid][AFK_Label]);
    	playerDB[playerid][AFK_Label] = Text3D:INVALID_3DTEXT_ID;
    }
    playerDB[playerid][AFK_Stat] = false;

	if(IsPlayerInAnyVehicle(playerid))
	{
		static s_iVehicle;
		if(g_fSpeedCap[playerid] != 0.0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			s_iVehicle = GetPlayerVehicleID(playerid);
			if (s_iVehicle)
			{
				static Float:s_fX, Float:s_fY, Float:s_fZ, Float:s_fVX, Float:s_fVY, Float:s_fVZ;
				GetVehiclePos(s_iVehicle, s_fX, s_fY, s_fZ);
	         	GetVehicleVelocity(s_iVehicle, s_fVX, s_fVY, s_fVZ);
	         	if(!IsPlayerInRangeOfPoint(playerid, g_fSpeedCap[playerid] + 0.05, s_fX + s_fVX, s_fY + s_fVY, s_fZ + s_fVZ))
	         	{
	            	static Float:s_fLength;
	            	s_fLength = floatsqroot((s_fVX * s_fVX) + (s_fVY * s_fVY) + (s_fVZ * s_fVZ));
	           	 	s_fVX = (s_fVX / s_fLength) * g_fSpeedCap[playerid];
	            	s_fVY = (s_fVY / s_fLength) * g_fSpeedCap[playerid];
	            	s_fVZ = (s_fVZ / s_fLength) * g_fSpeedCap[playerid];
	            	if(s_iVehicle)
	            	{
	               		SetVehicleVelocity(s_iVehicle, s_fVX, s_fVY, s_fVZ);
					}
	            	else
	            	{
	               		SetPlayerVelocity(playerid, s_fVX, s_fVY, s_fVZ);
					}
	         	}
	      	}
		}
	}
	
	if(playerDB[playerid][kalejimo_laikas] > 0)
	{
	    new	valandos, minutes, sekundes, msg[100], Hour, Minute, Second;
		gettime(Hour, Minute, Second);
		sekundes = playerDB[playerid][kalejimo_laikas];
		while(sekundes >= 60)
		{
			sekundes -= 60;
			minutes++;
		}
		while(minutes >= 60)
		{
			minutes -= 60;
			valandos++;
		}
		format(msg, sizeof(msg), "LIKO: %d:%d:%d", valandos, minutes, sekundes);
		TextDrawSetString(KalejimoLaikoTd[playerid], msg);
	}
	return 1;
}

stock Clear(playerid)
{
	TextDrawHideForPlayer(playerid, IeskomumasTD1 ) ;
	TextDrawHideForPlayer(playerid, IeskomumasTD2 [ playerid ] ) ;
    TextDrawHideForPlayer(playerid, Burger);
    TextDrawHideForPlayer(playerid, Burger1);
    TextDrawHideForPlayer(playerid, Burger2);
    TextDrawHideForPlayer(playerid, AlkTD[ playerid ]);
   	TextDrawHideForPlayer(playerid, laikiux);
	TextDrawHideForPlayer(playerid, datike);
    ResetPlayerMoneyA(playerid);
    Prisijunges[playerid] = false;
    playerDB[playerid][investicija] = 0;
    playerDB[playerid][PlayerHealth] = 100.0;
	playerDB[playerid][PlayerArmour] = 0.0;
	playerDB[playerid][pHealthCheck] = -5;
	format(playerDB[playerid][PlayerName], 21, "--");
	format(playerDB[playerid][PlayerIP], 16, "--");
	playerDB[playerid][FloodTime] = 0;
	playerDB[playerid][FloodWarns] = 0;
	Logged[playerid] = false;
	playerDB[playerid][pavdrk]=0;
	Tazed[playerid] = false;
	Tazer[playerid] = false;
	GreitiMatuoja[playerid] = 0;
	playerDB[playerid][DeleteAcc] = false;
	playerDB[playerid][gLicenzija] = false;
	playerDB[playerid][DalyvaujaPB] = false;
	playerDB[playerid][GreenPB] = false;
	playerDB[playerid][YellowPB] = false;
	playerDB[playerid][NuzudesPB] = 0;
	playerDB[playerid][MiresPB] = 0;
	playerDB[playerid][TaskaiPB] = 0;
	playerDB[playerid][ParaseAdminams] = 0;
	playerDB[playerid][ParasePriziuretojams] = 0;
	playerDB[playerid][ParaseSaugoti] = 0;
	playerDB[playerid][ParaseVipams] = 0;
	playerDB[playerid][ParasePavaduotojam] = 0;
	playerDB[playerid][ParaseDyrikas] = 0;
	playerDB[playerid][ParasePavas] = 0;
	playerDB[playerid][ParaseAdminas] = 0;
	playerDB[playerid][ParaseVipas] = 0;
	playerDB[playerid][ParaseRadistas] = 0;
	playerDB[playerid][ParaseRadistams] = 0;
	playerDB[playerid][Zetonai] = 0;
	playerDB[playerid][KazinoKintamasis] = 0;
	playerDB[playerid][uztvara] = INVALID_OBJECT_ID;
	playerDB[playerid][Nuskriaude] = INVALID_PLAYER_ID;
	playerDB[playerid][FakeKill] = 0;
    playerDB[playerid][vVeh] = -1;
    playerDB[playerid][vChoosedCategory] = -1;
    playerDB[playerid][vPressed] = -1;
	playerDB[playerid][vCarID] = -1;
	playerDB[playerid][vCarID2] = -1;
	playerDB[playerid][admin] = 0;
	playerDB[playerid][Muted] = 0;
	playerDB[playerid][medicinospazyma] = 0;
	playerDB[playerid][zaidejodraudimas] = 0;
	playerDB[playerid][BanLaikas] = 0;
	playerDB[playerid][CanTakeCar] = -1;
	playerDB[playerid][CarCost] = -1;
	playerDB[playerid][ChoosedPlayer] = -1;
	for(new td = 0; td < 10; td++) TextDrawHideForPlayer(playerid, vForPress[td]);
	for(new td = 0; td < 4; td++) TextDrawHideForPlayer(playerid, vNotForPress[td]);
	TextDrawHideForPlayer(playerid, playerDB[playerid][vCarInfo]);
	playerDB[playerid][authstate]=0;
    playerDB[playerid][admin]=false;
    playerDB[playerid][dpriziuretojas]=false;
    playerDB[playerid][epriziuretojas]=false;
    playerDB[playerid][apriziuretojas]=false;
    playerDB[playerid][banpriziuretojas]=false;
    playerDB[playerid][gpriziuretojas]=false;
    playerDB[playerid][telefonostat]=0;
    playerDB[playerid][vip]=false;
	playerDB[playerid][bakelis]=0;
    playerDB[playerid][telefonas]=0;
   	playerDB[playerid][prisikroves]=0;
	playerDB[playerid][uzsisakedviracius]=0;
    playerDB[playerid][uzsisakebaldus]=0;
    playerDB[playerid][uzsisakebuittech]=0;
    playerDB[playerid][uzsisakeanglis]=0;
    playerDB[playerid][uzsisakezvyra]=0;
    playerDB[playerid][uzsisakegunus]=0;
    playerDB[playerid][uzsisakenarkus]=0;
    playerDB[playerid][uzsisakezole]=0;
    playerDB[playerid][vezapica]=false;
	playerDB[playerid][teises]=false;
	playerDB[playerid][Mteises]=false;
	playerDB[playerid][FTeises]=false;
	for(new faction=0; faction < 15; faction++) playerDB[playerid][leanvited][faction]=false;
	playerDB[playerid][ikalintas]=false;
	playerDB[playerid][cuffed]=false;
	playerDB[playerid][masina]=-1;
	playerDB[playerid][banke]=0;
	playerDB[playerid][alga]=0;
	playerDB[playerid][stazasteisesaugos]=0;
	playerDB[playerid][stazastaxi]=0;
	playerDB[playerid][stazasmediku]=0;
	playerDB[playerid][stazasfuristu]=0;
	playerDB[playerid][stazasmechaniku]=0;
	playerDB[playerid][stazasdyleriu]=0;
	playerDB[playerid][stazasradistu] = 0;
	playerDB[playerid][stazasbaikeriu] = 0;
	playerDB[playerid][stazasklubu] = 0;
	playerDB[playerid][stazasgauju]=0;
	playerDB[playerid][stazaspaprastodarbo]=0;
	playerDB[playerid][radomcar]=0;
	playerDB[playerid][radomcar1]=0;
	playerDB[playerid][radomcar2]=0;
	playerDB[playerid][GreicioBalai]=0;
	playerDB[playerid][rangas]=0;
	playerDB[playerid][ispejimai]=0;
	playerDB[playerid][dispejimai]=0;
	playerDB[playerid][pispejimai]=0;
	playerDB[playerid][aispejimai]=0;
	playerDB[playerid][vispejimai]=0;
	playerDB[playerid][atnesemaisu]=0;
	playerDB[playerid][atnesemaisud]=0;
	playerDB[playerid][nesamaisa]=false;
	playerDB[playerid][nesamaisadarbas]=false;
	playerDB[playerid][grobia] = false;
	playerDB[playerid][textas]=0;
	playerDB[playerid][narkotikai]=0;
	playerDB[playerid][lsd]=0;
	playerDB[playerid][amfa]=0;
	playerDB[playerid][specialybe]=0;
	playerDB[playerid][kalejimo_laikas]=0;
	format(playerDB[playerid][NuoKadaDyrikas], 32, "-");
	format(playerDB[playerid][NuoKadaPavas], 32, "-");
	playerDB[playerid][alkis]=0;
	playerDB[playerid][lytis]=0;
	playerDB[playerid][uniforma]=-1;
	playerDB[playerid][drabuziai]=-1;
	playerDB[playerid][rid][6]=30;
	playerDB[playerid][skambutis]=-1;
	playerDB[playerid][lektuvas]=-1;
	playerDB[playerid][mobsas]=0;
	playerDB[playerid][KoksTelefonas]=0;
	playerDB[playerid][pradirbo]=0;
	playerDB[playerid][prazaide]=0;
	playerDB[playerid][pinigai] = 0;
	playerDB[playerid][uniformd]=false;
	playerDB[playerid][plead]=0;
	playerDB[playerid][pila]=false;
	playerDB[playerid][kills]=0;
	playerDB[playerid][SusikuresKorta] = false;
	playerDB[playerid][Dirzas] = false;
	Ribotuvas[playerid] = false;
    Warns[playerid] = 0;
    playerDB[playerid][NamoID] = -1;
    playerDB[playerid][VersloID] = -1;
    playerDB[playerid][CanTakeHouse] = -1;
    playerDB[playerid][HouseCost] = 0;
    playerDB[playerid][sPazKaina] = 0;
    playerDB[playerid][sGyvybiuKaina] = 0;
    playerDB[playerid][sArmoroKaina] = 0;
    playerDB[playerid][CanTakeBusiness] = -1;
    playerDB[playerid][BusinessCost] = 0;
	IsPlayerInZone[playerid] = false;
	//Þvejyba
	playerDB[playerid][ungurys] = 0;
	playerDB[playerid][karosas] = 0;
	playerDB[playerid][karpis] = 0;
	playerDB[playerid][karsis] = 0;
	playerDB[playerid][lydeka] = 0;
	playerDB[playerid][meskere] = false;
	playerDB[playerid][masalas] = 0;
	playerDB[playerid][valas] = false;
	playerDB[playerid][zvejoja] = false;
	playerDB[playerid][kiekistrauke] = 0;
	playerDB[playerid][laikastraukti] = false;
	//Banino
	playerDB[playerid][baninolaikui] = 0;
	playerDB[playerid][baninopaprastai] = 0;
	//AFK
	playerDB[playerid][AFK_Stat] = false;
 	playerDB[playerid][AFK_Label] = Text3D:INVALID_3DTEXT_ID;
 	//VM
 	playerDB[playerid][kelintasCPVM] = 0;
 	playerDB[playerid][KelintasVALCP] = 0;
 	//Ribotuvas
	playerDB[playerid][suautopilotu] = false;
	//Anti home
	playerDB[playerid][AntiHomeKint] = INVALID_VEHICLE_ID;
	//Ar emigruotas kint 0;
	playerDB[playerid][ArEmigruotas] = false;
	
	playerDB[playerid][VipLaikas] = 0;
	playerDB[playerid][NaujokuLaikas] = 0;
	playerDB[playerid][AdminLaikas] = 0;
	playerDB[playerid][AlgosLaikas] = 0;
	playerDB[playerid][pAlga] = false;
	playerDB[playerid][ADraudimas] = false;
	playerDB[playerid][VDraudimas] = false;
	playerDB[playerid][GDraudimas] = false;
	//
	playerDB[playerid][NaudojoTazeri] = 0;
	//Iðkvietimai
	playerDB[playerid][IskvietesPolicija] = false;
	playerDB[playerid][IskvietesMedikus] = false;
	playerDB[playerid][IskvietesTaxi] = false;
	playerDB[playerid][IskvietesDylerius] = false;
	playerDB[playerid][IskvietesSwat] = false;
	playerDB[playerid][Iskvietesmechanikus] = false;
	playerDB[playerid][IskvietesRadistus] = false;


	//Kita
	playerDB[playerid][KadaSuriso] = 0;
	playerDB[playerid][KadaVeze] = 0;
	playerDB[playerid][KiekKulku] = 0;
	playerDB[playerid][KainaKulku] = 0;
	playerDB[playerid][KadaGydes] = 0;
	playerDB[playerid][KadaGRase] = 0;
	playerDB[playerid][KadaMeldes] = 0;
	playerDB[playerid][KadaAdminGydes] = 0;
	playerDB[playerid][KadaVipGydes] = 0;
	playerDB[playerid][KadaGun] = 0;
	playerDB[playerid][KadaTaises] = 0;
	playerDB[playerid][KadaPute] = 0;
	playerDB[playerid][KadaKickino] = 0;
	playerDB[playerid][ParduotiAK] = 0;
	playerDB[playerid][ParduotiDGL] = 0;
	playerDB[playerid][ParduotiSG] = 0;
	playerDB[playerid][ParduotiSNP] = 0;
	playerDB[playerid][Parduoti9MM] = 0;
	playerDB[playerid][ParduotiTEC] = 0;
	playerDB[playerid][ParduotiSMG] = 0;
	playerDB[playerid][ParduotiSPAZ] = 0;

    SekamasZaidejas[playerid] = -1;
	playerDB[playerid][nickbanai] = 0;
	playerDB[playerid][AlgosKiekis] = 0;
	LaikrodzioStatus[playerid] = 1;
	UzrasasApacioje[playerid] = 1;
	Floodas[playerid] = 0;
	
	mTurguje[playerid]=false;
	CanBuyCar[playerid]=0;
	return 0;
}

stock LoadPlayerData(playerid)
{
    if(!IsPlayerConnected(playerid)) return 1;
	new Float:gpPos[3], kulka[10], lQuery[100],aaaaa[500];
 	format(lQuery, sizeof(lQuery), "SELECT * FROM `players` WHERE `Vardas` = '%s'", GetPlayerNameEx(playerid));
	mysql_query(lQuery);
	mysql_store_result();

	if(mysql_num_rows() != 0)
	{
	    mysql_fetch_row(aaaaa);
	    mysql_fetch_field_row ( lQuery , "regDate" ) ; format ( playerDB [ playerid ] [ regData ] , 50 , "%s" , lQuery ) ;
	    mysql_fetch_field_row ( lQuery , "lastCDate" ) ; format ( playerDB [ playerid ] [ lastCDate ] , 50 , "%s" , lQuery ) ;
	    mysql_fetch_field_row ( lQuery , "regIP" ) ; format ( playerDB [ playerid ] [ regIP ] , 17 , "%s" , lQuery ) ;
		mysql_fetch_field_row ( lQuery , "lastIP" ) ; format ( playerDB [ playerid ] [ lastIP ] , 17 , "%s" , lQuery ) ;
		mysql_fetch_field_row ( lQuery , "NuoKadaDyrikas" ) ; format ( playerDB [ playerid ] [ NuoKadaDyrikas ] , 32 , "%s" , lQuery ) ;
		mysql_fetch_field_row ( lQuery , "NuoKadaPavas" ) ; format ( playerDB [ playerid ] [ NuoKadaPavas ] , 32 , "%s" , lQuery ) ;
		mysql_fetch_field_row ( lQuery , "ipSecurity" ) ; if ( strval ( lQuery ) == 1 ) playerDB [ playerid ] [ ipSecurity ] = true;
		mysql_fetch_field_row ( lQuery , "gaujosID" ) ; playerDB [ playerid ] [ gaujosID ] = strval ( lQuery ) ;
		mysql_fetch_field_row(lQuery, "Xp"); SetPlayerScore(playerid, strval(lQuery));
		mysql_fetch_field_row(lQuery, "World"); SetPlayerVirtualWorld(playerid, strval(lQuery));
		mysql_fetch_field_row(lQuery, "Interior"); SetPlayerInterior(playerid, strval(lQuery));
		mysql_fetch_field_row(lQuery, "Wanted"); SetPlayerTWanted(playerid, strval(lQuery));
		mysql_fetch_field_row(lQuery, "MoneyPocket"); SetPlayerMoneyA(playerid, strval(lQuery));
		mysql_fetch_field_row(lQuery, "Admin"); playerDB[playerid][admin] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Muted"); playerDB[playerid][Muted] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "MedicinosPazyma"); playerDB[playerid][medicinospazyma] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "ZaidejoDraudimas"); playerDB[playerid][zaidejodraudimas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "BanLaikas"); playerDB[playerid][BanLaikas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Papildimas"); playerDB[playerid][papildimas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Telefonostat"); playerDB[playerid][telefonostat] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Bakelis"); playerDB[playerid][bakelis] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Telefonas"); playerDB[playerid][telefonas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "MoneyBank"); playerDB[playerid][banke] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Alga"); playerDB[playerid][alga] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Stazasteisesaugos"); playerDB[playerid][stazasteisesaugos] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Stazastaxi"); playerDB[playerid][stazastaxi] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Stazasmediku"); playerDB[playerid][stazasmediku] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Stazasfuristu"); playerDB[playerid][stazasfuristu] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Stazasmechaniku"); playerDB[playerid][stazasmechaniku] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Stazasdyleriu"); playerDB[playerid][stazasdyleriu] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "StazasRadistu"); playerDB[playerid][stazasradistu] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "StazasBaikeriu"); playerDB[playerid][stazasbaikeriu] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Stazasgauju"); playerDB[playerid][stazasgauju] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Stazasklubu"); playerDB[playerid][stazasklubu] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Stazaspaprastodarbo"); playerDB[playerid][stazaspaprastodarbo] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Radomcar"); playerDB[playerid][radomcar] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Radomcar1"); playerDB[playerid][radomcar1] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Radomcar2"); playerDB[playerid][radomcar2] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Vairavimobaud"); playerDB[playerid][GreicioBalai] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Rangas"); playerDB[playerid][rangas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Ispejimai"); playerDB[playerid][ispejimai] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Dispejimai"); playerDB[playerid][dispejimai] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Pispejimai"); playerDB[playerid][pispejimai] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Aispejimai"); playerDB[playerid][aispejimai] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Vispejimai"); playerDB[playerid][vispejimai] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Mobsas"); playerDB[playerid][mobsas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "KoksTelefonas"); playerDB[playerid][KoksTelefonas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Pradirbo"); playerDB[playerid][pradirbo] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Prazaide"); playerDB[playerid][prazaide] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Drugs"); playerDB[playerid][narkotikai] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Lsd"); playerDB[playerid][lsd] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Amfa"); playerDB[playerid][amfa] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Lytis"); playerDB[playerid][lytis] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Drabuziai"); playerDB[playerid][drabuziai] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Uniforma"); playerDB[playerid][uniforma] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Lead"); playerDB[playerid][plead] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Kalejime"); playerDB[playerid][kalejimo_laikas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Alkis"); playerDB[playerid][alkis] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Job"); playerDB[playerid][specialybe] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Zole"); playerDB[playerid][zole] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "NamoID"); playerDB[playerid][NamoID] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "pavdrk"); playerDB[playerid][pavdrk] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Zetonai"); playerDB[playerid][Zetonai] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "pos_X"); gpPos[0] = floatstr(lQuery);
		mysql_fetch_field_row(lQuery, "pos_Y"); gpPos[1] = floatstr(lQuery);
		mysql_fetch_field_row(lQuery, "pos_Z"); gpPos[2] = floatstr(lQuery);
  		mysql_fetch_field_row(lQuery, "DPriziuretojas"); playerDB[playerid][dpriziuretojas] = !!strval(lQuery);
    	mysql_fetch_field_row(lQuery, "EPriziuretojas"); playerDB[playerid][epriziuretojas] = !!strval(lQuery);
	    mysql_fetch_field_row(lQuery, "APriziuretojas"); playerDB[playerid][apriziuretojas] = !!strval(lQuery);
	    mysql_fetch_field_row(lQuery, "VPriziuretojas"); playerDB[playerid][vpriziuretojas] = !!strval(lQuery);
	    mysql_fetch_field_row(lQuery, "BANPriziuretojas"); playerDB[playerid][banpriziuretojas] = !!strval(lQuery);
	    mysql_fetch_field_row(lQuery, "GPriziuretojas"); playerDB[playerid][gpriziuretojas] = !!strval(lQuery);
		SetPlayerPos(playerid, gpPos[0], gpPos[1], gpPos[2]+1);

		//created by me
		mysql_fetch_field_row(lQuery, "Grybai"); playerDB[playerid][grybas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "KiekTuriRepTasku"); playerDB[playerid][KiekTuriRepTasku] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "KiekDaveRepTasku"); playerDB[playerid][KiekDaveRepTasku] = strval(lQuery);

		mysql_fetch_field_row(lQuery, "Ginklas0"); mysql_fetch_field_row(kulka, "Ammo0");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas1"); mysql_fetch_field_row(kulka, "Ammo1");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas2"); mysql_fetch_field_row(kulka, "Ammo2");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas3"); mysql_fetch_field_row(kulka, "Ammo3");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas4"); mysql_fetch_field_row(kulka, "Ammo4");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas5"); mysql_fetch_field_row(kulka, "Ammo5");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas6"); mysql_fetch_field_row(kulka, "Ammo6");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas7"); mysql_fetch_field_row(kulka, "Ammo7");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas8"); mysql_fetch_field_row(kulka, "Ammo8");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas9"); mysql_fetch_field_row(kulka, "Ammo9");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas10"); mysql_fetch_field_row(kulka, "Ammo10");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		mysql_fetch_field_row(lQuery, "Ginklas11"); mysql_fetch_field_row(kulka, "Ammo11");
		GivePlayerWeaponEx(playerid, strval(lQuery), strval(kulka));
		//BOOL KINT LOAD
		mysql_fetch_field_row(lQuery, "Krepselis"); playerDB[playerid][krepselis] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "Surakintas"); playerDB[playerid][cuffed] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "License"); playerDB[playerid][teises] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "LicenseBike"); playerDB[playerid][Mteises] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "LicenseFura"); playerDB[playerid][FTeises] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "Uniformd"); playerDB[playerid][uniformd] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "SusikuresKorta"); playerDB[playerid][SusikuresKorta] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "Ikalintas"); playerDB[playerid][ikalintas] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "gLicenzija"); playerDB[playerid][gLicenzija] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "Uzbanintas"); playerDB[playerid][Uzbanintas] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "ArEmigruotas"); playerDB[playerid][ArEmigruotas] = !!strval(lQuery);
		//Privilegijos
		mysql_fetch_field_row(lQuery, "Vip"); playerDB[playerid][vip] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "VipLaikas"); playerDB[playerid][VipLaikas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "NaujokuLaikas"); playerDB[playerid][NaujokuLaikas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "AdminLaikas"); playerDB[playerid][AdminLaikas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Admin"); playerDB[playerid][admin] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Investicija"); playerDB[playerid][investicija] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "pAlga"); playerDB[playerid][pAlga] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "ADraudimas"); playerDB[playerid][ADraudimas] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "VDraudimas"); playerDB[playerid][VDraudimas] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "GDraudimas"); playerDB[playerid][GDraudimas] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "AlgosLaikas"); playerDB[playerid][AlgosLaikas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "NickBanai"); playerDB[playerid][nickbanai] = strval(lQuery);
		//Þvejyba
		mysql_fetch_field_row(lQuery, "Meskere"); playerDB[playerid][meskere] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "Valas"); playerDB[playerid][valas] = !!strval(lQuery);
		mysql_fetch_field_row(lQuery, "Masalas"); playerDB[playerid][masalas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Ungurys"); playerDB[playerid][ungurys] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Karosas"); playerDB[playerid][karosas] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Karpis"); playerDB[playerid][karpis] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Karsis"); playerDB[playerid][karsis] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Lydeka"); playerDB[playerid][lydeka] = strval(lQuery);
		//Baninimo likes laikas
		mysql_fetch_field_row(lQuery, "BaninoPaprastai"); playerDB[playerid][baninopaprastai] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "BaninoLaikui"); playerDB[playerid][baninolaikui] = strval(lQuery);
		//Kita..
		mysql_fetch_field_row(lQuery, "KadaSuriso"); playerDB[playerid][KadaSuriso] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "KadaVeze"); playerDB[playerid][KadaVeze] = strval(lQuery);

		mysql_fetch_field_row(lQuery, "ParduotiAK"); playerDB[playerid][ParduotiAK] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "ParduotiDGL"); playerDB[playerid][ParduotiDGL] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "ParduotiSG"); playerDB[playerid][ParduotiSG] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "ParduotiSNP"); playerDB[playerid][ParduotiSNP] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "Parduoti9MM"); playerDB[playerid][Parduoti9MM] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "ParduotiTEC"); playerDB[playerid][ParduotiTEC] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "ParduotiSMG"); playerDB[playerid][ParduotiSMG] = strval(lQuery);
		mysql_fetch_field_row(lQuery, "ParduotiSPAZ"); playerDB[playerid][ParduotiSPAZ] = strval(lQuery);
	}
	mysql_free_result();
	Prisijunges[playerid] = true;
    if(playerDB[playerid][cuffed] && GetPlayerTWanted(playerid) > 0) { JailPlayer(playerid, (GetPlayerTWanted(playerid) * 60)); }
    if(playerDB[playerid][kalejimo_laikas] > 0) { MovePlayerToJail(playerid); }
    if(GetPlayerScore(playerid) < 70 || playerDB[playerid][zole] > 800) { playerDB[playerid][zole] = 0; }
	if(playerDB[playerid][uniformd]) { SetPlayerSkin(playerid,playerDB[playerid][uniforma]); } else { SetPlayerSkin(playerid,playerDB[playerid][drabuziai]); }

	if(playerDB[playerid][admin]>0)
	{
		new masyvas[128],vardas[MAX_PLAYER_NAME];
		GetPlayerName(playerid, vardas, sizeof(vardas));
		SendClientMessage(playerid, RED, "Jûsø turimi áspëjimai: {FF8C00}/ispejimai");
		format(masyvas, 128, "{6EF83C}Administratorius {C9FFAB}%s(%i) {6EF83C}prisijungë.",vardas, playerid);
		SendClientMessageToAll(BLUE, masyvas);
	}
	if(playerDB[playerid][vip])
	{
		if(playerDB[playerid][VipLaikas] < gettime())
		{
			SendClientMessage(playerid, GREEN, "* Praradai VIP narystæ nes tavo VIP galiojimo laikas pasibaigë !");
			playerDB[playerid][vip] = false;
			playerDB[playerid][VipLaikas] = 0;
			playerDB[playerid][NaujokuLaikas] = 0;
		}
		SetPlayerColor(playerid,PLAYCOL_HIDDEN);
	}
	if(playerDB[playerid][pAlga])
	{
		if(playerDB[playerid][AlgosLaikas] < gettime())
		{
			playerDB[playerid][pAlga] = false;
			playerDB[playerid][AlgosLaikas] = 0;
			SendClientMessage(playerid, RED, "* Jûsø paslaugai 'Algos padidinimas 20', baigësi laikas!");
		}
	}
	if(playerDB[playerid][admin] > 1)
	{
		SetPlayerColor(playerid, 0x33AA3300);
	}
	if(playerDB[playerid][vpriziuretojas] || playerDB[playerid][banpriziuretojas] || playerDB[playerid][dpriziuretojas] || playerDB[playerid][epriziuretojas] || playerDB[playerid][apriziuretojas] || playerDB[playerid][gpriziuretojas])
	{
		SetPlayerColor(playerid,0x33AA3330);
	}
	if(GetPlayerTWanted(playerid) > 1)
	{
		SetPlayerColor(playerid, 0x660099AA);
	}
	
	TextDrawShowForPlayer(playerid, Burger);
	TextDrawShowForPlayer(playerid, Burger1);
	TextDrawShowForPlayer(playerid, Burger2);
	TextDrawShowForPlayer(playerid, AlkTD[ playerid ]);
	UpdateAlkanasTextdraw( playerid );
	
	TextDrawShowForPlayer(playerid, laikiux);
	TextDrawShowForPlayer(playerid, datike);
 	
	playerDB[playerid][authstate] = 3;
	printf("Uþkraunamas %s þaidëjas",GetPlayerNameEx(playerid));
	return 1;
}
stock SavePlayerData(playerid, mode = false)
{
    new zQuery[350], Float:gpPos[3], weps[2][12] , data [ 6 ] , lastDat [ 50 ];
	GetPlayerPos(playerid, gpPos[0], gpPos[1], gpPos[2]);
	gettime ( data [ 0 ] , data [ 1 ] , data [ 2 ] ) ;
	getdate ( data [ 3 ] , data [ 4 ] , data [ 5 ] ) ;
	format ( lastDat , sizeof ( lastDat ) , "%0.2d-%0.2d-%0.2d %0.2d:%0.2d:%0.2d" , data [ 3 ] , data [ 4 ] , data [ 5 ] , data [ 0 ] , data [ 1 ] , data [ 2 ] );
	format ( zQuery , sizeof ( zQuery ) , "UPDATE players SET lastIP = '%s', lastCDate = '%s' WHERE Vardas = '%s'" , GetPlayerIpEx ( playerid ) , lastDat , GetPlayerNameEx ( playerid ) ) ;
	mysql_query ( zQuery ) ;
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `pos_X` = '%f', `pos_Y` = '%f', pos_Z = '%f', `Xp` = '%d', `MoneyPocket` = '%d', `MoneyBank` = '%d' WHERE `Vardas` = '%s'", gpPos[0], gpPos[1],gpPos[2],GetPlayerScore(playerid),playerDB[playerid][pinigai],playerDB[playerid][banke],GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE players SET Admin = '%d', AdminLaikas = '%d', Vip = '%d', VipLaikas = '%d', NaujokuLaikas = '%d', Aispejimai = '%d', Vispejimai = '%d' WHERE Vardas = '%s'",playerDB[playerid][admin],playerDB[playerid][AdminLaikas],playerDB[playerid][vip],playerDB[playerid][VipLaikas],playerDB[playerid][NaujokuLaikas],playerDB[playerid][aispejimai],playerDB[playerid][vispejimai], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE players SET Alga = '%d', Wanted = '%d', Lead = '%d', Kalejime = '%d', Alkis = '%d' WHERE `Vardas` = '%s'",playerDB[playerid][alga],GetPlayerDrunkLevel(playerid),playerDB[playerid][plead],playerDB[playerid][kalejimo_laikas],playerDB[playerid][alkis], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE players SET Muted = '%d', BanLaikas = '%d', Papildimas = '%d', Telefonostat = '%d',Telefonas = '%d', Bakelis = '%d' WHERE Vardas = '%s'",playerDB[playerid][Muted],playerDB[playerid][BanLaikas],playerDB[playerid][papildimas],playerDB[playerid][telefonostat],playerDB[playerid][telefonas], playerDB[playerid][bakelis], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE players SET Lytis = '%d', Interior = '%d', Drugs = '%d', Lsd = '%d', Amfa = '%d', World = '%d', Zole = '%d', NamoID = '%d' WHERE Vardas = '%s'",playerDB[playerid][lytis],GetPlayerInterior(playerid),playerDB[playerid][narkotikai],playerDB[playerid][lsd],playerDB[playerid][amfa],GetPlayerVirtualWorld(playerid),playerDB[playerid][zole],playerDB[playerid][NamoID], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `Drabuziai` = '%d' WHERE `Vardas` = '%s'", playerDB[playerid][drabuziai] , GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `Job` = '%d' WHERE `Vardas` = '%s'", playerDB[playerid][specialybe], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `Uniforma` = '%d' WHERE `Vardas` = '%s'", playerDB[playerid][uniforma], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `Pradirbo` = '%d' WHERE `Vardas` = '%s'", playerDB[playerid][pradirbo], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `Mobsas` = '%d', gaujosID = %d WHERE `Vardas` = '%s'", playerDB[playerid][mobsas] , playerDB [ playerid ] [ gaujosID ] , GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET ZaidejoDraudimas = '%d' WHERE Vardas = '%s'",playerDB[playerid][zaidejodraudimas], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `Surakintas` = '%d', `License` = '%d',`gLicenzija` = '%d',LicenseBike = '%d', LicenseFura = '%d' WHERE Vardas = '%s'",playerDB[playerid][cuffed],playerDB[playerid][teises],playerDB[playerid][gLicenzija], playerDB[playerid][Mteises], playerDB[playerid][FTeises], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET Uniformd = '%d', SusikuresKorta = '%d', Ikalintas = '%d', pavdrk = '%d', Investicija = '%d' WHERE Vardas = '%s'",playerDB[playerid][uniformd],playerDB[playerid][SusikuresKorta],playerDB[playerid][ikalintas],playerDB[playerid][pavdrk],playerDB[playerid][investicija], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `Meskere` = '%d', Valas = '%d', Masalas = '%d', Ungurys = '%d', Karosas = '%d', Karpis = '%d' WHERE Vardas = '%s'",playerDB[playerid][meskere],playerDB[playerid][valas], playerDB[playerid][masalas], playerDB[playerid][ungurys],playerDB[playerid][karosas],playerDB[playerid][karpis],GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `BaninoPaprastai` = '%d', BaninoLaikui = '%d', Uzbanintas = '%d', ArEmigruotas = '%d', KadaSuriso = '%d' WHERE Vardas = '%s'",playerDB[playerid][baninopaprastai],playerDB[playerid][baninolaikui],playerDB[playerid][Uzbanintas],playerDB[playerid][ArEmigruotas],playerDB[playerid][KadaSuriso],GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `Radomcar` = '%d', Radomcar1 = '%d', Radomcar2 = '%d' WHERE Vardas = '%s'",playerDB[playerid][radomcar],playerDB[playerid][radomcar1],playerDB[playerid][radomcar2],GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET Vairavimobaud = '%d', Rangas = '%d', Ispejimai = '%d', Dispejimai = '%d', KoksTelefonas = '%d',Prazaide = '%d',MedicinosPazyma = '%d' WHERE Vardas = '%s'",playerDB[playerid][GreicioBalai],playerDB[playerid][rangas],playerDB[playerid][ispejimai],playerDB[playerid][dispejimai],playerDB[playerid][KoksTelefonas], playerDB[playerid][prazaide],playerDB[playerid][medicinospazyma], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `Karpis` = '%d',`Karsis` = '%d', `Lydeka` = '%d'", playerDB[playerid][karpis],playerDB[playerid][karsis],playerDB[playerid][lydeka], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET KadaVeze = '%d', ParduotiAK = '%d', ParduotiDGL = '%d', ParduotiSG = '%d',ParduotiSNP = '%d' WHERE Vardas = '%s'",playerDB[playerid][KadaVeze],playerDB[playerid][ParduotiAK],playerDB[playerid][ParduotiDGL],playerDB[playerid][ParduotiSG], playerDB[playerid][ParduotiSNP], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET Stazasteisesaugos = '%d', Stazastaxi = '%d', Stazasmediku = '%d',Stazasfuristu ='%d',Stazasmechaniku='%d',Stazasgauju='%d' WHERE Vardas = '%s'",playerDB[playerid][stazasteisesaugos],playerDB[playerid][stazastaxi],playerDB[playerid][stazasmediku],playerDB[playerid][stazasfuristu],playerDB[playerid][stazasmechaniku],playerDB[playerid][stazasgauju], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET Stazasdyleriu = '%d',Stazaspaprastodarbo = '%d' WHERE Vardas = '%s'",playerDB[playerid][stazasdyleriu], playerDB[playerid][stazaspaprastodarbo],GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE players SET StazasRadistu = '%d' WHERE Vardas = '%s'",playerDB[playerid][stazasradistu],GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE players SET StazasBaikeriu = '%d' WHERE Vardas = '%s'",playerDB[playerid][stazasbaikeriu],GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE players SET StazasKlubu = '%d' WHERE Vardas = '%s'",playerDB[playerid][stazasklubu],GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET Parduoti9MM = '%d', ParduotiTEC = '%d', ParduotiSMG = '%d', ParduotiSPAZ = '%d' WHERE Vardas = '%s'",playerDB[playerid][Parduoti9MM], playerDB[playerid][ParduotiTEC],playerDB[playerid][ParduotiSMG],playerDB[playerid][ParduotiSPAZ], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET pAlga = '%d' , AlgosLaikas = '%d', NickBanai = '%d' WHERE Vardas = '%s'",playerDB[playerid][pAlga],playerDB[playerid][AlgosLaikas],playerDB[playerid][nickbanai],GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET ADraudimas = '%d' , VDraudimas = '%d' , GDraudimas = '%d' WHERE Vardas = '%s'",playerDB[playerid][ADraudimas],playerDB[playerid][VDraudimas],playerDB[playerid][GDraudimas],GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET Zetonai = '%d' WHERE Vardas = '%s'", playerDB[playerid][Zetonai], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE players SET Wanted = '%d' WHERE Vardas = '%s'", GetPlayerTWanted(playerid), GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `Krepselis` = '%d', `Grybai` = '%d'  WHERE Vardas = '%s'",playerDB[playerid][krepselis],playerDB[playerid][grybas], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	format(zQuery, sizeof(zQuery), "UPDATE `players` SET `KiekTuriRepTasku` = '%d', `KiekDaveRepTasku` = '%d'  WHERE Vardas = '%s'",playerDB[playerid][KiekTuriRepTasku], playerDB[playerid][KiekDaveRepTasku], GetPlayerNameEx(playerid));
	mysql_query(zQuery);
	
	new gQuerry[450];
	for(new tmp = 0; tmp < 12; tmp++) GetPlayerWeaponData(playerid, tmp, weps[0][tmp], weps[1][tmp]);
	format(gQuerry, sizeof(gQuerry), "UPDATE players SET \
	Ginklas0 = %d, Ammo0 = %d, \
	Ginklas1 = %d, Ammo1 = %d, \
	Ginklas2 = %d, Ammo2 = %d, \
	Ginklas3 = %d, Ammo3 = %d, \
	Ginklas4 = %d, Ammo4 = %d, \
	Ginklas5 = %d, Ammo5 = %d, \
	Ginklas6 = %d, Ammo6 = %d, \
	Ginklas7 = %d, Ammo7 = %d, \
	Ginklas8 = %d, Ammo8 = %d, \
	Ginklas9 = %d, Ammo9 = %d, \
	Ginklas10 = %d, Ammo10 = %d, \
	Ginklas11 = %d, Ammo11 = %d \
	WHERE Vardas = '%s'",
	weps[0][0], weps[1][0], weps[0][1], weps[1][1], weps[0][2], weps[1][2], weps[0][3],
	weps[1][3], weps[0][4], weps[1][4], weps[0][5], weps[1][5], weps[0][6], weps[1][6],
	weps[0][7], weps[1][7], weps[0][8], weps[1][8], weps[0][9], weps[1][9], weps[0][10],
	weps[1][10], weps[0][11], weps[1][11], GetPlayerNameEx(playerid));
	mysql_query(gQuerry);
	if(mode)
	{
		if(playerDB[playerid][vChoosedCategory] != -1)
		{
		    for(new td = 0; td < 10; td++) TextDrawHideForPlayer(playerid, vForPress[td]);
			for(new td = 0; td < 4; td++) TextDrawHideForPlayer(playerid, vNotForPress[td]);
			TextDrawHideForPlayer(playerid, playerDB[playerid][vCarInfo]);
			CancelSelectTextDraw(playerid);
			DestroyVehicle(playerDB[playerid][vVeh]);
			playerDB[playerid][vChoosedCategory] = -1;
			playerDB[playerid][vPressed] = -1;
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerPos(playerid, -218.3141, 1187.4152, 19.8000);
			SetPlayerFacingAngle(playerid, 320.0);
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			format(zQuery, sizeof(zQuery), "UPDATE `players` SET `pos_X` = '-218.3141', `pos_Y` = '1187.4152', `pos_Z` = '19.8000', `World` = '0' WHERE `Vardas` = '%s'", GetPlayerNameEx(playerid));
			mysql_query(zQuery);
		}
		if(playerDB[playerid][DalyvaujaPB])
		{
      		playerDB[playerid][NuzudesPB] = 0;
			playerDB[playerid][MiresPB] = 0;
			playerDB[playerid][TaskaiPB] = 0;
			playerDB[playerid][DalyvaujaPB] = false;
			playerDB[playerid][GreenPB] = false;
			playerDB[playerid][YellowPB] = false;
			IsjungiamPbTd(playerid);
			ResetPlayerWeapons(playerid);
		    format(zQuery, sizeof(zQuery), "UPDATE `players` SET `pos_X` = '283.2020', `pos_Y` = '-220.0911', `pos_Z` = '1.5781' WHERE `Vardas` = '%s'", GetPlayerNameEx(playerid));
			mysql_query(zQuery);
		}
	}
	printf("Saugojimas %s þaidëjas",GetPlayerNameEx(playerid));
	return 1;
}

stock CreateNewOwnGarage(Float: GarageBuyPickup_X, Float: GarageBuyPickup_Y, Float: GarageBuyPickup_Z, Float: GarageGatesPos_X, Float: GarageGatesPos_Y, Float: GarageGatesPos_Z, Float: GarageGatesPos_RX, Float: GarageGatesPos_RY, Float: GarageGatesPos_RZ, GatesObjectID = -1, bool: SpecialOwnGarage = false)
{
	HowMuchOwnGaragesIs ++;

	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garIndeficationID] = HowMuchOwnGaragesIs - 1;

	strdel(OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garOwnerName], 0,      MAX_PLAYER_NAME);
	strcat(OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garOwnerName], "Nera", MAX_PLAYER_NAME);

	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garBuyPickupPos][0] = GarageBuyPickup_X;
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garBuyPickupPos][1] = GarageBuyPickup_Y;
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garBuyPickupPos][2] = GarageBuyPickup_Z;
	
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garGatesPos]    [0] = GarageGatesPos_X;
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garGatesPos]    [1] = GarageGatesPos_Y;
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garGatesPos]    [2] = GarageGatesPos_Z;
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garGatesPos]    [3] = GarageGatesPos_RX;
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garGatesPos]    [4] = GarageGatesPos_RY;
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garGatesPos]    [5] = GarageGatesPos_RZ;
	
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garGatesOpened]      = 0;
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garLeftDays]         = 0;
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garSpecialOwnGarage] = SpecialOwnGarage;

	new String[160];
	format(String, sizeof(String), "{5FB404}Garaþas {AEB404}%d{5FB404}\nSavininkas: {FF0000}%s{5FB404}\n[Spauskite ENTER]\n", HowMuchOwnGaragesIs - 1, OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garOwnerName]);
	OwnGaragesSystem[HowMuchOwnGaragesIs - 1][gar3DTextLabel] = CreateDynamic3DTextLabel(String, -1, GarageBuyPickup_X, GarageBuyPickup_Y, GarageBuyPickup_Z, 10.0);

	//OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garBuyPickupID]   = CreatePickup(1274, 2, GarageBuyPickup_X, GarageBuyPickup_Y, GarageBuyPickup_Z, -1);

    if(GatesObjectID > -1)
    {
        OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garGatesObjectID] = CreateObject(GatesObjectID, GarageGatesPos_X, GarageGatesPos_Y, GarageGatesPos_Z, GarageGatesPos_RX, GarageGatesPos_RY, GarageGatesPos_RZ);
    }
	else
	{
		OwnGaragesSystem[HowMuchOwnGaragesIs - 1][garGatesObjectID] = CreateObject(11313, GarageGatesPos_X, GarageGatesPos_Y, GarageGatesPos_Z, GarageGatesPos_RX, GarageGatesPos_RY, GarageGatesPos_RZ);
	}


	return HowMuchOwnGaragesIs - 1;
}

/*stock LoadAllOwnGarages()
{
	new TickCount = GetTickCount(), LoadedGarages = 0;
	print("[OwnGarages System]: OwnGarages system is now loading..");


	new String[24];
	if(INI_Exist("/files/OwnGarages.ini"))
	{
	    INI_Open("/files/OwnGarages.ini");

	    strdel(OwnGaragesSystem[GarageID][garOwnerName], 0, MAX_PLAYER_NAME);
	    	
	    format(String, sizeof(String), "oGarageOwner_%d", GarageID);
	   	strcat(OwnGaragesSystem[GarageID][garOwnerName], INI_ReadStr(String), MAX_PLAYER_NAME);

	   	INI_WriteInt("garIndeficationID", OwnGaragesSystem[GarageID][garIndeficationID]);

		INI_Close();
	}

	printf("[OwnGarages System]: OwnGarages system loaded in %dms (%d garages)\n", GetTickCount() - TickCount, LoadedGarages);

	return 1;
}

stock SaveAllOwnGarages()
{
	new String[24];
    if(!INI_Exist("/files/OwnGarages.ini"))
	{
		INI_Open("/files/OwnGarages.ini");
		INI_Save();
		INI_Close();
	}

	INI_Open("/files/OwnGarages.ini");

    format(String, sizeof(String), "oGarageOwner_%d", GarageID);
	INI_WriteString(String, OwnGaragesSystem[GarageID][garOwnerName]);

	OwnGaragesSystem[GarageID][garIndeficationID] = INI_ReadInt("garIndeficationID");

	INI_Save();
	INI_Close();
	return 1;
}*/

stock OpenOwnGarageGates(OwnGarageID)
{
	MoveObject(OwnGaragesSystem[OwnGarageID][garGatesObjectID], OwnGaragesSystem[OwnGarageID][garGatesPos][0], OwnGaragesSystem[OwnGarageID][garGatesPos][1], OwnGaragesSystem[OwnGarageID][garGatesPos][2] + 1.8000, 0.8, OwnGaragesSystem[OwnGarageID][garGatesPos][3], OwnGaragesSystem[OwnGarageID][garGatesPos][4] + 270.6000, OwnGaragesSystem[OwnGarageID][garGatesPos][5]);

    OwnGaragesSystem[OwnGarageID][garGatesOpened] = 1;
    
	return 1;
}

stock CloseOwnGarageGates(OwnGarageID)
{
	MoveObject(OwnGaragesSystem[OwnGarageID][garGatesObjectID], OwnGaragesSystem[OwnGarageID][garGatesPos][0], OwnGaragesSystem[OwnGarageID][garGatesPos][1], OwnGaragesSystem[OwnGarageID][garGatesPos][2], 0.8, OwnGaragesSystem[OwnGarageID][garGatesPos][3], OwnGaragesSystem[OwnGarageID][garGatesPos][4], OwnGaragesSystem[OwnGarageID][garGatesPos][5]);

    OwnGaragesSystem[OwnGarageID][garGatesOpened] = 0;

	return 1;
}

stock InvalidNickKick(playerid)
{
    new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid,name,sizeof(name));
    new where = strfind(name,"_",true);
    new lenght = strlen(name)-1;
    new invalid = strfind(name,"[",true);
    if(invalid == -1) invalid = strfind(name,"]",true);

	if(name[0] < 65 || name[0] > 90)
    {
        new msg[128];
	    SendClientMessage(playerid,RED,"* Jûsø slapyvardis netinkamas. Vardas_Pavardë raðomi ið didþiosios raidës!");
	    SendClientMessage(playerid,RED,"* Teisinga slapyvardþio forma bûtø.");
	    SendClientMessage(playerid,RED,"* Vardas_Pavardë");
	    format(msg,sizeof(msg),"* ]]] %s  [[ ]] %i [[[ *", name[0], name[0]);
	    SendClientMessage(playerid, RED, msg);
	    SetTimerEx("KickEx", 100, false, "d", playerid);
	    return 1;
	}

	if(name[where+1] < 65 || name[where+1] > 90)
	{
    	SendClientMessage(playerid,RED,"* Jûsø slapyvardis netinkamas. Vardas_Pavardë raðomi ið didþiosios raidës!");
	    SendClientMessage(playerid,RED,"* Teisinga slapyvardþio forma bûtø.");
	    SendClientMessage(playerid,RED,"* Vardas_Pavardë");
	    SetTimerEx("KickEx", 100, false, "d", playerid);
	    return 1;
	}

	for(new i = 1; i < where-1; i++)
	{
		if(name[i] < 97 || name[i] > 122)
		{
			SendClientMessage(playerid,RED,"* Jûsø slapyvardis netinkamas dël: (didþiosios raidës arba skaièiaius vardo viduryje)");
		    SendClientMessage(playerid,RED,"* Teisinga slapyvardþio forma bûtø:");
		    SendClientMessage(playerid,RED,"* Vardas_Pavardë");
		    SetTimerEx("KickEx", 100, false, "d", playerid);
		    return 1;
		}
	}
    if(where == 0 || where == lenght || where==-1)
    {
	    SendClientMessage(playerid,RED,"* Jûsø slapyvardis netinkamas.");
	    SendClientMessage(playerid,RED,"* Teisinga slapyvardþio forma bûtø:");
	    SendClientMessage(playerid,RED,"* Vardas_Pavardë");
	    SetTimerEx("KickEx", 100, false, "d", playerid);
	    return 1;
	 }

	if(strlen(name[where])< 4)
	{
	   SendClientMessage(playerid,RED,"* Jûsø pavardë per trumpa");
	   SendClientMessage(playerid,RED,"* Teisinga slapyvardþio forma bûtø:");
	   SendClientMessage(playerid,RED,"* Vardas_Pavardë");
	   SetTimerEx("KickEx", 100, false, "d", playerid);
	   return 1;
	}

	if(where<3)
	{
	   SendClientMessage(playerid,RED,"* Jûsø vardas per trumpas");
	   SendClientMessage(playerid,RED,"* Teisinga slapyvardþio forma bûtø:");
	   SendClientMessage(playerid,RED,"* Vardas_Pavardë");
	   SetTimerEx("KickEx", 100, false, "d", playerid);
	   return 1;
	}


	if(invalid != -1)
	{
	   SendClientMessage(playerid,RED,"* Varde rastà netinkamø raidþiø.");
	   SendClientMessage(playerid,RED,"* Teisinga slapyvardþio forma bûtø:");
	   SendClientMessage(playerid,RED,"* Vardas_Pavardë");
	   SetTimerEx("KickEx", 100, false, "d", playerid);
	   return 1;
	}

	for(new i = where+2; i < MAX_PLAYER_NAME; i++)
	{
		if(name[i] < 97 || name[i] > 122)
		{
			if(name[i] == 0){i = MAX_PLAYER_NAME; return 0;}
			SendClientMessage(playerid,RED,"* Jûsø slapyvardis netinkamas dël: (didþiosios raidës arba skaièiai pavardës viduryje)");
	    	SendClientMessage(playerid,RED,"* Teisinga slapyvardþio forma bûtø:");
	    	SendClientMessage(playerid,RED,"* Vardas_Pavardë");
		    SetTimerEx("KickEx", 100, false, "d", playerid);
		    return 1;
		}
	}
	return 0;
}

public Zaidimas()
{
    new Valandos,Minutes,Sekundes;
    gettime(Valandos,Minutes,Sekundes);
    SetWorldTime(Valandos);
    new money, msg[90], vehicleid, model;
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(Prisijunges[p])
 	    {
	        if(playerDB[p][pCashCheck] < gettime())
			{
				money = GetPlayerMoney(p);
				if(money < playerDB[p][pinigai] && money > -1) playerDB[p][pinigai] = money;
				ResetPlayerMoney(p);
				GivePlayerMoney(p, playerDB[p][pinigai]);
			}
			if(playerDB[p][pAlga])
			{
			    playerDB[p][alga]+=20;
			}
			if(playerDB[p][Dirzas])
			{
			    playerDB[p][alga]+=1;
			}
	        if(!playerDB[p][AFK_Stat])
			{
				if ( Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00 ) {
					SetPlayerScore(p, GetPlayerScore(p) + 4);
					if(playerDB[p][vip]) SetPlayerScore(p, GetPlayerScore(p) + 6);
					if(playerDB[p][admin]) SetPlayerScore(p, GetPlayerScore(p) + 8);
				}
    			else
    			{
					SetPlayerScore(p, GetPlayerScore(p) + 2);
					if(playerDB[p][vip]) SetPlayerScore(p, GetPlayerScore(p) + 3);
					if(playerDB[p][admin]) SetPlayerScore(p, GetPlayerScore(p) + 4);
   				}
				playerDB[p][prazaide] ++;

				if(playerDB[p][investicija] == 1)
				{
					playerDB[p][alga]+=10;
				}
				if(playerDB[p][investicija] == 2)
				{
					playerDB[p][alga]+=20;
				}
				if(playerDB[p][investicija] == 3)
				{
					playerDB[p][alga]+=30;
				}
				if(playerDB[p][investicija] == 4)
				{
					playerDB[p][alga]+=40;
				}
				if(playerDB[p][investicija] == 5)
				{
					playerDB[p][alga]+=50;
				}
				if(playerDB[p][alkis] > 0)
				{
					playerDB[p][alkis] --;
					UpdateAlkanasTextdraw( p );
				}
				if(playerDB[p][alkis] < 10)
				{
					SendClientMessage(p, YELLOW, "Numirëte ið bado, po ligoninës eikite pavalgyti!");
					playerDB[p][alkis] = 45;
					UpdateAlkanasTextdraw( p );
					SetPlayerDrunkLevel(p, 0);
		          	SetPlayerHealthEx(p, 0);
				}
				else if(playerDB[p][alkis] < 15)
				{
					SendClientMessage(p, YELLOW, "Jei tuè tuoj nepavalgysite, galite numirti ið alkio!");
					SetPlayerDrunkLevel(p, 10000);
				}
				else if(playerDB[p][alkis] < 20)
				{
					SendClientMessage(p, YELLOW, "Jûsø pilvas gurgia jûs norite valgyti, bëkite pavalgyti!");
					SetPlayerDrunkLevel(p, 7000);
				}
				else if(playerDB[p][alkis] < 25)
				{
					SendClientMessage(p, YELLOW, "Jau norite pavalgyti, ir pradëjo suktis galva");
					SetPlayerDrunkLevel(p, 6000);
				}
				else if(playerDB[p][alkis] < 30)
				{
					SendClientMessage(p, YELLOW, "Jau ilgokai nevalgëte, bûtø neproðal uþkrimsti.");
		   		}
			}

			//Iðmokam verslø litus
			if(!playerDB[p][AFK_Stat])
			{
				new biz = PlayerHaveBusiness(p);
			    if(biz != -1)
			    {
			        if(bInfo[biz][bBuyed])
		     		{
		     		    bInfo[biz][bMoney] += bInfo[biz][bProfit];
					}
				}
			}

		 	if(playerDB[p][vip])
		 	{
				if(playerDB[p][VipLaikas] < gettime())
				{
					SendClientMessage(p, GREEN, "* Praradai VIP narystæ nes tavo VIP galiojimo laikas pasibaigë !");
					playerDB[p][vip] = false;
	    			playerDB[p][VipLaikas] = 0;
	    			playerDB[p][NaujokuLaikas] = 0;
	    			SetPlayerColor(p,PLAYCOL_HIDDEN);
  				}
			}
			if(GetPlayerSpecialAction(p) == SPECIAL_ACTION_USEJETPACK)
			{
				if(playerDB[p][admin] < 5)
				{
					format(msg, sizeof(msg), "[Serveris][2] %s uþblokuotas 1 val uþ Jet-Pack naudojimà.", GetPlayerNameEx(p));
					SendClientMessageToAll(0x0080C0FF, msg);
      				playerDB[p][BanLaikas] = gettime() + 3600;
        			SavePlayerData(p);
       				SetTimerEx("KickEx", 100, false, "d", p);
				}
	 		}
	        if(KitasRoundasPo > 0) KitasRoundasPo --;
			else if(KitasRoundasPo <= 0)
			{
				ZaidejaiPasY = 0;
				ZaidejaiPasG = 0;
				NuzudymaiY = 0;
				NuzudymaiG = 0;
				MirtysY = 0;
				MirtysG = 0;
				KitasRoundasPo = 15;
				if(playerDB[p][DalyvaujaPB])
				{
					SetPlayerPos(p, 309.7628, -139.8774, 1004.0625);
					SendClientMessage(p, GREEN, "* Baigësi þaidimo laikas, jei nori þaisti eik ir uþsisakyk ið naujo þaidima");
					playerDB[p][DalyvaujaPB] = false;
					IsjungiamPbTd(p);
					playerDB[p][TaskaiPB] = 0;
					playerDB[p][NuzudesPB] = 0;
					playerDB[p][MiresPB] = 0;
					playerDB[p][GreenPB] = false;
					playerDB[p][YellowPB] = false;
					SetPlayerSkin(p,playerDB[p][drabuziai]);
					SetPlayerInterior(p, 7);
				}
			}

			if(GetPlayerState(p) != PLAYER_STATE_DRIVER) continue; // Toliau jeigu zaidejas masinoje

	    	vehicleid = GetPlayerVehicleID(p);
			model = GetVehicleModel(vehicleid);

			if(!playerDB[p][AFK_Stat])
			{
				if(playerDB[p][suautopilotu]) playerDB[p][alga]+=2;
				//Policija
				if(model == 523 || model == 599 || model == 596 || model == 427 || model == 497)
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[0] += I_PD_PELNA;

					playerDB[p][stazasteisesaugos] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Picerija
				else if(model == 448)
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					playerDB[p][stazaspaprastodarbo] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Mechanikai
				else if(model == 525)
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[1] += I_MECHANIKU_PELNA;

					playerDB[p][stazasmechaniku] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Medikai
				else if(vehicleid >= medcar[0] && vehicleid <= medcar[10])
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}
					Pelnas[3] += I_MEDIKU_PELNA;

					playerDB[p][stazasmediku] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Taxistai
				else if(vehicleid >= taxcar[0] && vehicleid <= taxcar[4])
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[2] += I_TAXI_PELNA;

					playerDB[p][stazastaxi] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Dyleriai
				else if(vehicleid >= dylcar[0] && vehicleid <= dylcar[11])
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[4] += I_DYLERIU_PELNA;

					playerDB[p][stazasdyleriu] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Radistai
				else if(vehicleid >= RadistuCar[0] && vehicleid <= RadistuCar[8])
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[9] += I_RADISTU_PELNA;

					playerDB[p][stazasradistu] +=5;

					playerDB[p][pradirbo] ++;
				}
				//Baikeriai
				else if(vehicleid >= BaikeriuCar[0] && vehicleid <= BaikeriuCar[9])
				{
					if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[10] += I_BAIKERIU_PELNA;

					playerDB[p][stazasbaikeriu] +=5;

					playerDB[p][pradirbo] ++;
				}
				//Klubas.
				else if(vehicleid >= KluboCar[0] && vehicleid <= KluboCar[5])
				{
					Pelnas[11] += I_KLUBO_PELNA;
					playerDB[p][stazasklubu] +=5;
					playerDB[p][pradirbo] ++;
				}
				//Klubas 2.
				else if(vehicleid >= Klubo2Car[0] && vehicleid <= Klubo2Car[5])
				{
					Pelnas[12] += I_KLUBOO_PELNA;
					playerDB[p][stazasklubu] +=5;
					playerDB[p][pradirbo] ++;
				}
				//SPD.
				else if(vehicleid >= spdcar[0] && vehicleid <= spdcar[26])
				{
					if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[13] += I_SPD_PELNA;

					playerDB[p][stazasteisesaugos] +=5;

					playerDB[p][pradirbo] ++;
				}
				//SWAT
				else if(model == 490 || model == 528)
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[7] += I_SWAT_PELNA;

					playerDB[p][stazasteisesaugos] += 5;

					playerDB[p][pradirbo] ++;
				}
				else if(vehicleid >= RifosCar[0] && vehicleid <= RifosCar[8])
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[5] += I_RIFA_PELNA;

					playerDB[p][stazasgauju] += 5;

					playerDB[p][pradirbo] ++;
				} //Russian
				else if(vehicleid >= gstreetcar[0] && vehicleid <= gstreetcar[8])
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[6] += I_GROOVE_PELNA;

					playerDB[p][stazasgauju] += 5;

					playerDB[p][pradirbo] ++;
				} //Yakuza
				else if(vehicleid >= furistucar[0] && vehicleid <= furistucar[9])
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					Pelnas[8] += I_FURU_PELNA;

					playerDB[p][stazasfuristu] += 5; playerDB[p][pradirbo] ++;
				}

				//Valytojai
				else if(model == 574 || model == 552)
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					playerDB[p][stazaspaprastodarbo] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Medkirèio
				else if(model == 600)
				{
				    if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					playerDB[p][stazaspaprastodarbo] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Kunigai.
				else if(model == 442)
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					playerDB[p][stazaspaprastodarbo] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Naras.
				else if(model == 472 || model == 473)
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					playerDB[p][stazaspaprastodarbo] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Gaisrinë
				else if(model == 407)
				{
    				if(Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					playerDB[p][stazaspaprastodarbo] += 5;

					playerDB[p][pradirbo] ++;
				}
				//Limuzininkai
				else if(model == 409)
				{
    				if(Valandos == 11 && Valandos <= 00 || Valandos == 00 && Valandos <= 1)
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] * 2;
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10 * 2;
                        }
    				}
    				else
    				{
    					if(playerDB[p][vip] == false || playerDB[p][admin] == 0)
    					{
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis];
                        }
                        else
                        {
                        	playerDB[p][alga] += playerDB[p][AlgosKiekis] + 10;
                        }
    				}

					playerDB[p][stazaspaprastodarbo] += 5;

					playerDB[p][pradirbo] ++;

					Pelnas[2] += I_TAXI_PELNA;
				}
			}
			if(GetWeekDay() == 3 || GetWeekDay() == 6)
			{
		 		new valandos,minutes,sekundes;
		 		gettime(valandos,minutes,sekundes);
		   		if(valandos == 00)
		   		{
		   		    mysql_query("UPDATE `players` SET `Pradirbo` = '0'");
		   		    playerDB[p][pradirbo] = 0;
		   		}
			}
			if(Valandos == 00)
			{
			    mysql_query("UPDATE `players` SET `Prazaide` = '0'");
			    playerDB[p][prazaide] = 0;
			}
			if(model != 481 && model != 510 && model != 509)
			{
				if(vehicleDB[vehicleid][gas] > aEda[model-400])
				{
				    new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
					GetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
					if(Engine)
					{
						if(!IsABike(vehicleid)) { vehicleDB[vehicleid][gas] -= aEda[model-400]; }
					}
				}
				else
				{
				    if(vehicleDB[vehicleid][gas] > 0)
					{
						vehicleDB[vehicleid][gas] = 0;
					}
					else
					{
	    				new Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
	                    GetVehicleParamsEx(vehicleid, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective);
	                    SetVehicleParamsEx(vehicleid, false, Lights, Alarm, Doors, Bonnet, Boot, Objective);
	                    GameTextForPlayer(p,"~R~VARIKLIS UZGESO",2000,4);
					}
				}
			}
		}
	}
	
	return 1;
}
public ServerioPranesimai()
{
    KelintasTekstas ++;
    if(KelintasTekstas > 8) KelintasTekstas = 0;
    switch(KelintasTekstas)
	{
		case 0:
		{
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Serverio atnaujinimus galite pamatyti mûsø forume WWW.NRMG.LT {33ccff}»");
			//SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Perþiûrëkite juos neiðëjæ ið serverio - {3399ff}/atnaujinimai {33ccff}»");
		}
		case 1:
		{
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Radus serverio klaidà, ar norite pasiûlyti idëjø? {33ccff}»");
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Bûtinai paraðykite mûsø svetainëje: {3399ff}www.NRMG.LT > Klaidos, Pasiûlymai {33ccff}»");
		}
		case 2:
		{
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Norint iðjungti/ájungti serverio tekstûras. {33ccff}»");
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Raðykite komandà - {3399ff}/nustatymai {33ccff}»");
		}
		case 3:
		{
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Mûsø svetainë: {3399ff}WWW.NRMG.LT {33ccff}»");
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Mûsø TS adresas: {3399ff}TS.NRMG.LT {33ccff}»");
		}
		case 4:
		{
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Norite pasiþiûrëti serverio TOP? {3399ff}/top {33ccff}»");
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Norite nusipirkti kreditø, kad uþsisakytumete paslaugà? {3399ff}/paslaugos {33ccff}»");
		}
		case 5:
		{
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Radus serverio klaidu praðome praneðti PGR Administracijai naudojant komanda /pranesti {33ccff}»");
			//SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Mûsø serverio rekordas yra: {3399ff}31 {33ccff}»");
		}
		case 6:
		{
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Gero þaidimo Jums linki {3399ff}NRMG Administracija {33ccff}»");
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Mes esame dëkingi, jog renkates {3399ff}MUS! {33ccff}»");
		}
/* iðjunga nes reikia iðimti		case 7:
		{
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Mûsø serveryje yra {3399ff}laimingos valandos ! {33ccff}»");
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Laimingø valandø sàraðas: {33ccff}»");
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Nuo {3399ff}7:00 {33ccff}iki {3399ff}12:00 {33ccff}»");
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Nuo {3399ff}20:00 {33ccff}iki {3399ff}00:00 {33ccff}»");
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Laimingø valandø progà gausite {3399ff}2x EXP ir 2x ALGOS ! {33ccff}»");
		}
		case 7:
		{
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Mûsø serveryje yra grybavimo sistema! {33ccff}»");
			SendClientMessageToAll(0xDEEE20FF, "{33ccff}« Plaèiau apie jà - {3399ff}/grybavimas {33ccff}»");
		}*/
	}
	return 1;
}

public Grobiamsandeli1 (playerid)
{
    if(!PlayerInZone(playerid, SANDELIS_POS_MINX, SANDELIS_POS_MINY, SANDELIS_POS_MAXX, SANDELIS_POS_MAXY))
    {
		SendClientMessage(playerid, RED, "* Negausi sandelio nes nebuvai sandelio zonoje, paþymëtoje mini mape!");
		playerDB[playerid][grobia][0] = false;
		GrobiamasSandelis[0] = false;
		return 1;
	}
	format(SanSavininkas[0], 20, "%s", GetPlayerNameEx(playerid));
	SanNupirktas[0] = true;
	playerDB[playerid][grobia][0] = false;
	GrobiamasSandelis[0] = false;
	SaveSandeliai();
	new msg[90], kokiagauja[17];
	if(playerDB[playerid][plead] == 6) kokiagauja = "Russian";
	else if(playerDB[playerid][plead] == 8) kokiagauja = "Yakuza";
    format(msg, sizeof(msg), "* Sveikiname %s kuris uþgrobë LS sandelá %s gaujai!", GetPlayerNameEx(playerid), kokiagauja);
	SendClientMessageToAll(GREEN, msg);
	UpdateSandeliuLabel();
	return 1;
}

public Grobiamsandeli2 (playerid)
{
    if(!PlayerInZone(playerid, SANDELIS2_POS_MINX, SANDELIS2_POS_MINY, SANDELIS2_POS_MAXX, SANDELIS2_POS_MAXY))
	{
		SendClientMessage(playerid, RED, "* Negausi sandelio nes nebuvai sandelio zonoje, paþymëtoje mini mape!");
		playerDB[playerid][grobia][1] = false;
		GrobiamasSandelis[1] = false;
		return 1;
	}
	format(SanSavininkas[1], 20, "%s", GetPlayerNameEx(playerid));
	SanNupirktas[1] = true;
	playerDB[playerid][grobia][1] = false;
	GrobiamasSandelis[1] = false;
    SaveSandeliai();
    new msg[90], kokiagauja[17];
    if(playerDB[playerid][plead] == 6) kokiagauja = "Russian";
	else if(playerDB[playerid][plead] == 8) kokiagauja = "Yakuza";
    format(msg, sizeof(msg), "* Sveikiname %s kuris uþgrobë BB sandelá %s gaujai!", GetPlayerNameEx(playerid), kokiagauja);
	SendClientMessageToAll(GREEN, msg);
	UpdateSandeliuLabel();
	return 1;
}

public PapildomSandelius()
{
    if(SanNupirktas[0] == true)
    {
		LSD[0] += 20; //Papildom sandelius +20 LSD jeigu sandelis yra nupirktas.
		AMFA[0] += 15; //Papoldom Sandelius +15 AMFOS jeigu sandelis yra nupirktas.
	}
	if(SanNupirktas[1] == true)
    {
		LSD[1] += 5; //Papildom sandelius +5 LSD jeigu  sandelis yra nupirktas.
		AMFA[1] += 2; //Papoldom Sandelius +2 AMFOS jeigu sandelis yra nupirktas.
	}
	SaveSandeliai(); //Papildþius iðsaugom sandelius, kad nebûtø bûgø.
	UpdateSandeliuLabel();
    return 1;
}

public PBTimer()
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(!playerDB[p][DalyvaujaPB]) return 1;
		UpdatePBInfo(p);
	}
	return 1;
}

/*public AFKTikrinimoTimeris()
{
	for(new p = 0; p < MAX_PLAYERS; p++)
 	{
  		if(IsPlayerConnected(p))
  		{
  		    if(Prisijunges[p])
  		    {
		    	if(playerDB[p][AFK_Stat] && playerDB[p][AFK_Label] == Text3D:INVALID_3DTEXT_ID)
		     	{
		      		playerDB[p][AFK_Label] = Create3DTextLabel("AFK", 0x339900FF, 0.0, 0.0, 0.0, 15.0, 0, 1);
		      		Attach3DTextLabelToPlayer(playerDB[p][AFK_Label], p, 0.0, 0.0, 0.5);
		        }
			}
	        playerDB[p][AFK_Stat] = true;
		}
     }
     return 1;
}
*/

public AFKTikrinimoTimeris()
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(IsPlayerConnected(p))
		{
			if(Prisijunges[p])
			{
				if(playerDB[p][AFK_Stat] && playerDB[p][AFK_Label] == Text3D:INVALID_3DTEXT_ID)
				{
				    ShowPlayerDialog(p, 4354, DIALOG_STYLE_MSGBOX, "{f0f0f0}AFK sistema", "{f0f0f0}Jûs dabar esate AFK bûsenoje!\nJeigu norite tæsti þaidimà, tiesiog paspauskite mygtukà 'Tæsti'!\n", "Tæsti", "");
					playerDB[p][AFK_Label] = Create3DTextLabel("Þaidëjas AFK bûsenoje!", 0x66ff00FF, 0.0, 0.0, 0.0, 15.0, 0, 1);
					Attach3DTextLabelToPlayer(playerDB[p][AFK_Label], p, 0.0, 0.0, 0.5);

					RemovePlayerFromVehicle(p);

				}
			}
			playerDB[p][AFK_Stat] = true;
		}
	}
	return 1;
}
public OnEnterExitModShop(playerid, enterexit, interiorid)
{
	if(enterexit == 0)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(vehicleDB[vehicleid][vOwned])
		{
		    for(new tune = 0; tune < 13; tune++)
			{
		    	vehicleDB[vehicleid][vTune][tune] = GetVehicleComponentInSlot(vehicleid, tune);
			}
		}
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
    vehicleDB[vehicleid][vPaintjob] = paintjobid;
	ChangeVehiclePaintjob(vehicleid, paintjobid);
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
    vehicleDB[vehicleid][vColor][0] = color1; vehicleDB[vehicleid][vColor][1] = color2;
	ChangeVehicleColor(vehicleid, color1, color2);
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	// Declare the array of bits.
	// Each of the first dimensions are
	// the information for a given mode.
	// The BITS in the second dimension
	// represent which vehicle has it.
	static const
		cs_bMods[194][7] =
		{
			// 1000 - Spoiler Pro - Certain Transfender cars
			{
				ANTI_V(404) | ANTI_V(405) | ANTI_V(421),
				0,
				ANTI_V(489) | ANTI_V(492),
				ANTI_V(505) | ANTI_V(516),
				ANTI_V(547),
				ANTI_V(589),
				0
			},
			// 1001 - Spoiler Win - Certain Transfender cars
			{
				ANTI_V(401) | ANTI_V(405) | ANTI_V(410) | ANTI_V(415) | ANTI_V(420) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(439),
				0,
				ANTI_V(496) | ANTI_V(518) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(540) | ANTI_V(546) | ANTI_V(549) | ANTI_V(550),
				ANTI_V(580) | ANTI_V(585),
				ANTI_V(603)
			},
			// 1002 - Spoiler Drag - Certain Transfender cars
			{
				ANTI_V(404) | ANTI_V(418),
				0,
				ANTI_V(489),
				ANTI_V(496) | ANTI_V(505) | ANTI_V(516) | ANTI_V(517),
				ANTI_V(546) | ANTI_V(551),
				0,
				0
			},
			// 1003 - Spoiler Alpha - Certain Transfender cars
			{
				ANTI_V(401) | ANTI_V(410) | ANTI_V(415) | ANTI_V(420) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(439),
				ANTI_V(491),
				ANTI_V(496) | ANTI_V(517) | ANTI_V(518),
				ANTI_V(529) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551),
				ANTI_V(585),
				0
			},
			// 1004 - Hood Champ Scoop - Certain Transfender cars
			{
				ANTI_V(401) | ANTI_V(420) | ANTI_V(426),
				0,
				ANTI_V(478) | ANTI_V(489) | ANTI_V(492),
				ANTI_V(505) | ANTI_V(516),
				ANTI_V(540) | ANTI_V(546) | ANTI_V(550),
				ANTI_V(589),
				ANTI_V(600)
			},
			// 1005 - Hood Fury Scoop - Certain Transfender cars
			{
				ANTI_V(401) | ANTI_V(420) | ANTI_V(426),
				0,
				ANTI_V(478) | ANTI_V(489) | ANTI_V(492),
				ANTI_V(505) | ANTI_V(518),
				ANTI_V(550) | ANTI_V(551),
				ANTI_V(589),
				ANTI_V(600)
			},
			// 1006 - Roof Roof Scoop - Certain Transfender cars
			{
				ANTI_V(401) | ANTI_V(418) | ANTI_V(426),
				ANTI_V(436),
				ANTI_V(477) | ANTI_V(489) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(505) | ANTI_V(518),
				ANTI_V(529) | ANTI_V(540) | ANTI_V(546) | ANTI_V(550) | ANTI_V(551),
				ANTI_V(580) | ANTI_V(585) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(603)
			},
			// 1007 - Sideskirt Right Sideskirt - Certain Transfender cars
			{
				ANTI_V(401) | ANTI_V(404) | ANTI_V(410) | ANTI_V(415) | ANTI_V(422),
				ANTI_V(436) | ANTI_V(439),
				ANTI_V(477) | ANTI_V(491),
				ANTI_V(496) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(540) | ANTI_V(546) | ANTI_V(549),
				ANTI_V(580) | ANTI_V(585) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(603)
			},
			// 1008 - Nitro 5 times - Most cars, Most planes and Most Helicopters
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1009 - Nitro 2 times - Most cars, Most planes and Most Helicopters
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1010 - Nitro 10 times - Most cars, Most planes and Most Helicopters
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1011 - Hood Race Scoop - Certain Transfender cars
			{
				0,
				0,
				0,
				ANTI_V(496),
				ANTI_V(529) | ANTI_V(549),
				0,
				0
			},
			// 1012 - Hood Worx Scoop - Certain Transfender cars
			{
				0,
				0,
				ANTI_V(478),
				0,
				ANTI_V(529) | ANTI_V(549),
				0,
				0
			},
			// 1013 - Lamps Round Fog - Certain Transfender cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(404) | ANTI_V(410) | ANTI_V(422),
				ANTI_V(436) | ANTI_V(439),
				ANTI_V(478) | ANTI_V(489),
				ANTI_V(500) | ANTI_V(505) | ANTI_V(518),
				0,
				ANTI_V(585) | ANTI_V(589),
				ANTI_V(600)
			},
			// 1014 - Spoiler Champ - Certain Transfender cars
			{
				ANTI_V(405) | ANTI_V(421),
				0,
				ANTI_V(491),
				ANTI_V(527),
				ANTI_V(542),
				0,
				0
			},
			// 1015 - Spoiler Race - Certain Transfender cars
			{
				0,
				0,
				0,
				ANTI_V(516) | ANTI_V(527),
				ANTI_V(542),
				0,
				0
			},
			// 1016 - Spoiler Worx - Certain Transfender cars
			{
				ANTI_V(404) | ANTI_V(418) | ANTI_V(421),
				0,
				ANTI_V(489) | ANTI_V(492),
				ANTI_V(505) | ANTI_V(516) | ANTI_V(517),
				ANTI_V(547) | ANTI_V(551),
				ANTI_V(589),
				0
			},
			// 1017 - Sideskirt Left Sideskirt - Certain Transfender cars
			{
				ANTI_V(401) | ANTI_V(404) | ANTI_V(410) | ANTI_V(415) | ANTI_V(422),
				ANTI_V(436) | ANTI_V(439),
				ANTI_V(477) | ANTI_V(491),
				ANTI_V(496) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(540) | ANTI_V(546) | ANTI_V(549),
				ANTI_V(580) | ANTI_V(585) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(603)
			},
			// 1018 - Exhaust Upswept - Certain Transfender cars
			{
				ANTI_V(400) | ANTI_V(405) | ANTI_V(415) | ANTI_V(421),
				0,
				ANTI_V(477) | ANTI_V(489) | ANTI_V(491),
				ANTI_V(505) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(540) | ANTI_V(542) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551),
				ANTI_V(580) | ANTI_V(585) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(603)
			},
			// 1019 - Exhaust Twin - Certain Transfender cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(404) | ANTI_V(405) | ANTI_V(410) | ANTI_V(415) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(426),
				ANTI_V(436),
				ANTI_V(477) | ANTI_V(489) | ANTI_V(491),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(516) | ANTI_V(517),
				ANTI_V(529) | ANTI_V(540) | ANTI_V(542) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551),
				ANTI_V(585),
				ANTI_V(603)
			},
			// 1020 - Exhaust Large - Certain Transfender cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(404) | ANTI_V(405) | ANTI_V(410) | ANTI_V(418) | ANTI_V(421) | ANTI_V(422),
				ANTI_V(436),
				ANTI_V(477) | ANTI_V(478) | ANTI_V(489) | ANTI_V(491),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(540) | ANTI_V(542) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551),
				ANTI_V(580) | ANTI_V(585) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(603)
			},
			// 1021 - Exhaust Medium - Certain Transfender cars
			{
				ANTI_V(400) | ANTI_V(404) | ANTI_V(405) | ANTI_V(410) | ANTI_V(418) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(426),
				ANTI_V(436),
				ANTI_V(477) | ANTI_V(478) | ANTI_V(491),
				ANTI_V(500) | ANTI_V(516) | ANTI_V(527),
				ANTI_V(542) | ANTI_V(547) | ANTI_V(551),
				0,
				0
			},
			// 1022 - Exhaust Small - Certain Transfender cars
			{
				0,
				ANTI_V(436),
				ANTI_V(478),
				0,
				0,
				0,
				ANTI_V(600)
			},
			// 1023 - Spoiler Fury - Certain Transfender cars
			{
				ANTI_V(405) | ANTI_V(410) | ANTI_V(415) | ANTI_V(421),
				ANTI_V(439),
				ANTI_V(491),
				ANTI_V(496) | ANTI_V(517) | ANTI_V(518),
				ANTI_V(529) | ANTI_V(540) | ANTI_V(546) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551),
				ANTI_V(580) | ANTI_V(585),
				ANTI_V(603)
			},
			// 1024 - Lamps Square Fog - Certain Transfender cars
			{
				ANTI_V(400) | ANTI_V(410),
				0,
				ANTI_V(478) | ANTI_V(489),
				ANTI_V(500) | ANTI_V(505),
				ANTI_V(540) | ANTI_V(546),
				ANTI_V(589),
				ANTI_V(603)
			},
			// 1025 - Wheels Offroad - Certain Transfender cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1026 - Sideskirt Right Alien Sideskirt - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1027 - Sideskirt Left Alien Sideskirt - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1028 - Exhaust Alien - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1029 - Exhaust X-Flow - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1030 - Sideskirt Left X-Flow Sideskirt - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1031 - Sideskirt Right X-Flow Sideskirt - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1032 - Roof Alien Roof Vent - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1033 - Roof X-Flow Roof Vent - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1034 - Exhaust Alien - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1035 - Roof X-Flow Roof Vent - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1036 - SideSkirt Right Alien Sideskirt - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1037 - Exhaust X-Flow - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1038 - Roof Alien Roof Vent - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1039 - SideSkirt Left X-Flow Sideskirt - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1040 - SideSkirt Left Alien Sideskirt - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1041 - SideSkirt Right X-Flow Sideskirt - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1042 - SideSkirt Right Chrome Sideskirt - Broadway
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(575),
				0
			},
			// 1043 - Exhaust Slamin - Broadway
			{
				ANTI_V(401),
				ANTI_V(439),
				ANTI_V(491),
				ANTI_V(496) | ANTI_V(517) | ANTI_V(518),
				ANTI_V(540) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550),
				ANTI_V(585),
				ANTI_V(603)
			},
			// 1044 - Exhaust Chrome - Broadway
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(575),
				0
			},
			// 1045 - Exhaust X-Flow - Flash
			{
				ANTI_V(401),
				ANTI_V(439),
				ANTI_V(491),
				ANTI_V(517) | ANTI_V(518),
				ANTI_V(540) | ANTI_V(542) | ANTI_V(546) | ANTI_V(549) | ANTI_V(550),
				ANTI_V(585) | ANTI_V(589),
				ANTI_V(603)
			},
			// 1046 - Exhaust Alien - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1047 - SideSkirt Right Alien Sideskirt - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1048 - SideSkirt Right X-Flow Sideskirt - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1049 - Spoiler Alien - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1050 - Spoiler X-Flow - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1051 - SideSkirt Left Alien Sideskirt - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1052 - SideSkirt Left X-Flow Sideskirt - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1053 - Roof X-Flow - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1054 - Roof Alien - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1055 - Roof Alien - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1056 - Sideskirt Right Alien Sideskirt - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1057 - Sideskirt Right X-Flow Sideskirt - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1058 - Spoiler Alien - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1059 - Exhaust X-Flow - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1060 - Spoiler X-Flow - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1061 - Roof X-Flow - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1062 - Sideskirt Left Alien Sideskirt - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1063 - Sideskirt Left X-Flow Sideskirt - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1064 - Exhaust Alien - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1065 - Exhaust Alien - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1066 - Exhaust X-Flow - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1067 - Roof Alien - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1068 - Roof X-Flow - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1069 - Sideskirt Right Alien Sideskirt - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1070 - Sideskirt Right X-Flow Sideskirt - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1071 - Sideskirt Left Alien Sideskirt - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1072 - Sideskirt Left X-Flow Sideskirt - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1073 - Wheels Shadow - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1074 - Wheels Mega - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1075 - Wheels Rimshine - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1076 - Wheels Wires - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1077 - Wheels Classic - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1078 - Wheels Twist - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1079 - Wheels Cutter - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1080 - Wheels Switch - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1081 - Wheels Grove - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1082 - Wheels Import - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1083 - Wheels Dollar - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1084 - Wheels Trance - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1085 - Wheels Atomic - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1086 - Stereo - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1087 - Hydraulics - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1088 - Roof Alien - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1089 - Exhaust X-Flow - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1090 - Sideskirt Right Alien Sideskirt - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1091 - Roof X-Flow - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1092 - Exhaust Alien - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1093 - Sideskirt Left X-Flow Sideskirt - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1094 - Sideskirt Left Alien Sideskirt - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1095 - Sideskirt Right X-Flow Sideskirt - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1096 - Wheels Ahab - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1097 - Wheels Virtual - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1098 - Wheels Access - Most cars
			{
				ANTI_V(400) | ANTI_V(401) | ANTI_V(402) | ANTI_V(404) | ANTI_V(405) | ANTI_V(409) | ANTI_V(410) | ANTI_V(411) | ANTI_V(412) | ANTI_V(415) | ANTI_V(418) | ANTI_V(419) | ANTI_V(420) | ANTI_V(421) | ANTI_V(422) | ANTI_V(424) | ANTI_V(426),
				ANTI_V(436) | ANTI_V(438) | ANTI_V(439) | ANTI_V(442) | ANTI_V(445) | ANTI_V(451) | ANTI_V(458),
				ANTI_V(466) | ANTI_V(467) | ANTI_V(474) | ANTI_V(475) | ANTI_V(477) | ANTI_V(478) | ANTI_V(479) | ANTI_V(480) | ANTI_V(489) | ANTI_V(491) | ANTI_V(492),
				ANTI_V(496) | ANTI_V(500) | ANTI_V(505) | ANTI_V(506) | ANTI_V(507) | ANTI_V(516) | ANTI_V(517) | ANTI_V(518) | ANTI_V(526) | ANTI_V(527),
				ANTI_V(529) | ANTI_V(533) | ANTI_V(534) | ANTI_V(535) | ANTI_V(536) | ANTI_V(540) | ANTI_V(541) | ANTI_V(542) | ANTI_V(545) | ANTI_V(546) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550) | ANTI_V(551) | ANTI_V(555) | ANTI_V(558) | ANTI_V(559),
				ANTI_V(560) | ANTI_V(561) | ANTI_V(562) | ANTI_V(565) | ANTI_V(566) | ANTI_V(567) | ANTI_V(575) | ANTI_V(576) | ANTI_V(579) | ANTI_V(580) | ANTI_V(585) | ANTI_V(587) | ANTI_V(589),
				ANTI_V(600) | ANTI_V(602) | ANTI_V(603)
			},
			// 1099 - Sideskirt Left Chrome Sideskirt - Broadway
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(575),
				0
			},
			// 1100 - Bullbar Chrome Grill - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1101 - Sideskirt Left `Chrome Flames` Sideskirt - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1102 - Sideskirt Left `Chrome Strip` Sideskirt - Savanna
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(567),
				0
			},
			// 1103 - Roof Covertible - Blade
			{
				0,
				0,
				0,
				0,
				ANTI_V(536),
				0,
				0
			},
			// 1104 - Exhaust Chrome - Blade
			{
				0,
				0,
				0,
				0,
				ANTI_V(536),
				0,
				0
			},
			// 1105 - Exhaust Slamin - Blade
			{
				0,
				0,
				0,
				0,
				ANTI_V(536),
				0,
				0
			},
			// 1106 - Sideskirt Right `Chrome Arches` - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1107 - Sideskirt Left `Chrome Strip` Sideskirt - Blade
			{
				0,
				0,
				0,
				0,
				ANTI_V(536),
				0,
				0
			},
			// 1108 - Sideskirt Right `Chrome Strip` Sideskirt - Blade
			{
				0,
				0,
				0,
				0,
				ANTI_V(536),
				0,
				0
			},
			// 1109 - Rear Bullbars Chrome - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1110 - Rear Bullbars Slamin - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1111 - Front Sign? Little Sign? - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1112 - Front Sign? Little Sign? - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1113 - Exhaust Chrome - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1114 - Exhaust Slamin - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1115 - Front Bullbars Chrome - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1116 - Front Bullbars Slamin - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1117 - Front Bumper Chrome - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1118 - Sideskirt Right `Chrome Trim` Sideskirt - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1119 - Sideskirt Right `Wheelcovers` Sideskirt - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1120 - Sideskirt Left `Chrome Trim` Sideskirt - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1121 - Sideskirt Left `Wheelcovers` Sideskirt - Slamvan
			{
				0,
				0,
				0,
				0,
				ANTI_V(535),
				0,
				0
			},
			// 1122 - Sideskirt Right `Chrome Flames` Sideskirt - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1123 - Bullbars Bullbar Chrome Bars - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1124 - Sideskirt Left `Chrome Arches` Sideskirt - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1125 - Bullbars Bullbar Chrome Lights - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1126 - Exhaust Chrome Exhaust - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1127 - Exhaust Slamin Exhaust - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1128 - Roof Vinyl Hardtop - Blade
			{
				0,
				0,
				0,
				0,
				ANTI_V(536),
				0,
				0
			},
			// 1129 - Exhaust Chrome - Savanna
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(567),
				0
			},
			// 1130 - Roof Hardtop - Savanna
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(567),
				0
			},
			// 1131 - Roof Softtop - Savanna
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(567),
				0
			},
			// 1132 - Exhaust Slamin - Savanna
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(567),
				0
			},
			// 1133 - Sideskirt Right `Chrome Strip` Sideskirt - Savanna
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(567),
				0
			},
			// 1134 - SideSkirt Right `Chrome Strip` Sideskirt - Tornado
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(576),
				0
			},
			// 1135 - Exhaust Slamin - Tornado
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(576),
				0
			},
			// 1136 - Exhaust Chrome - Tornado
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(576),
				0
			},
			// 1137 - Sideskirt Left `Chrome Strip` Sideskirt - Tornado
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(576),
				0
			},
			// 1138 - Spoiler Alien - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1139 - Spoiler X-Flow - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1140 - Rear Bumper X-Flow - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1141 - Rear Bumper Alien - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1142 - Vents Left Oval Vents - Certain Transfender Cars
			{
				ANTI_V(401),
				ANTI_V(439),
				ANTI_V(491),
				ANTI_V(496) | ANTI_V(517) | ANTI_V(518),
				ANTI_V(540) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550),
				ANTI_V(585),
				ANTI_V(603)
			},
			// 1143 - Vents Right Oval Vents - Certain Transfender Cars
			{
				ANTI_V(401),
				ANTI_V(439),
				ANTI_V(491),
				ANTI_V(496) | ANTI_V(517) | ANTI_V(518),
				ANTI_V(540) | ANTI_V(547) | ANTI_V(549) | ANTI_V(550),
				ANTI_V(585),
				ANTI_V(603)
			},
			// 1144 - Vents Left Square Vents - Certain Transfender Cars
			{
				ANTI_V(401),
				ANTI_V(439),
				ANTI_V(491),
				ANTI_V(517) | ANTI_V(518),
				ANTI_V(540) | ANTI_V(542) | ANTI_V(549) | ANTI_V(550),
				ANTI_V(585) | ANTI_V(589),
				ANTI_V(603)
			},
			// 1145 - Vents Right Square Vents - Certain Transfender Cars
			{
				ANTI_V(401),
				ANTI_V(439),
				ANTI_V(491),
				ANTI_V(517) | ANTI_V(518),
				ANTI_V(540) | ANTI_V(542) | ANTI_V(549) | ANTI_V(550),
				ANTI_V(585) | ANTI_V(589),
				ANTI_V(603)
			},
			// 1146 - Spoiler X-Flow - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1147 - Spoiler Alien - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1148 - Rear Bumper X-Flow - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1149 - Rear Bumper Alien - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1150 - Rear Bumper Alien - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1151 - Rear Bumper X-Flow - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1152 - Front Bumper X-Flow - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1153 - Front Bumper Alien - Flash
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(565),
				0
			},
			// 1154 - Rear Bumper Alien - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1155 - Front Bumper Alien - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1156 - Rear Bumper X-Flow - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1157 - Front Bumper X-Flow - Stratum
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(561),
				0
			},
			// 1158 - Spoiler X-Flow - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1159 - Rear Bumper Alien - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1160 - Front Bumper Alien - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1161 - Rear Bumper X-Flow - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1162 - Spoiler Alien - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1163 - Spoiler X-Flow - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1164 - Spoiler Alien - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1165 - Front Bumper X-Flow - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1166 - Front Bumper Alien - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1167 - Rear Bumper X-Flow - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1168 - Rear Bumper Alien - Uranus
			{
				0,
				0,
				0,
				0,
				ANTI_V(558),
				0,
				0
			},
			// 1169 - Front Bumper Alien - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1170 - Front Bumper X-Flow - Sultan
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(560),
				0
			},
			// 1171 - Front Bumper Alien - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1172 - Front Bumper X-Flow - Elegy
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(562),
				0
			},
			// 1173 - Front Bumper X-Flow - Jester
			{
				0,
				0,
				0,
				0,
				ANTI_V(559),
				0,
				0
			},
			// 1174 - Front Bumper Chrome - Broadway
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(575),
				0
			},
			// 1175 - Rear Bumper Slamin - Broadway
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(575),
				0
			},
			// 1176 - Front Bumper Chrome - Broadway
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(575),
				0
			},
			// 1177 - Rear Bumper Slamin - Broadway
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(575),
				0
			},
			// 1178 - Rear Bumper Slamin - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1179 - Front Bumper Chrome - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1180 - Rear Bumper Chrome - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1181 - Front Bumper Slamin - Blade
			{
				0,
				0,
				0,
				0,
				ANTI_V(536),
				0,
				0
			},
			// 1182 - Front Bumper Chrome - Blade
			{
				0,
				0,
				0,
				0,
				ANTI_V(536),
				0,
				0
			},
			// 1183 - Rear Bumper Slamin - Blade
			{
				0,
				0,
				0,
				0,
				ANTI_V(536),
				0,
				0
			},
			// 1184 - Rear Bumper Chrome - Blade
			{
				0,
				0,
				0,
				0,
				ANTI_V(536),
				0,
				0
			},
			// 1185 - Front Bumper Slamin - Remington
			{
				0,
				0,
				0,
				0,
				ANTI_V(534),
				0,
				0
			},
			// 1186 - Rear Bumper Slamin - Savanna
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(567),
				0
			},
			// 1187 - Rear Bumper Chrome - Savanna
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(567),
				0
			},
			// 1188 - Front Bumper Slamin - Savanna
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(567),
				0
			},
			// 1189 - Front Bumper Chrome - Savanna
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(567),
				0
			},
			// 1190 - Front Bumper Slamin - Tornado
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(576),
				0
			},
			// 1191 - Front Bumper Chrome - Tornado
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(576),
				0
			},
			// 1192 - Rear Bumper Chrome - Tornado
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(576),
				0
			},
			// 1193 - Rear Bumper Slamin - Tornado
			{
				0,
				0,
				0,
				0,
				0,
				ANTI_V(576),
				0
			}
		};
	// Check if the componentid is in range
	if (1000 <= componentid <= 1193)
	{
		new
			model = GetVehicleModel(vehicleid);
		// Check the model is in range
		// We are dealing with cheaters after all
		if (400 <= model <= 603)
		{
			// Adjust the model to the range of our array
			model -= 400;
			// This is the line that does all the work.
			// Should be very fast and efficient.
			// Uses bit manipulation instead of
			// divisions and mods of 32.
			// The other way of doing it would be:
			// return cs_bMods[((componentid - 1000) * 7) + (model >> 5)]
			// But this is probably better as it's all native.
			// Could run tests if you really wanted, but
			// that would require compressing the array
			// above into a 1d array (saving no space).
			return cs_bMods[componentid - 1000][model >> 5] & (1 << (model & 0x1F));
		}
	}

	if(!(IsPlayerInRangeOfPoint(playerid, 15.0, 616.7820, -74.8151, 997.6350) || IsPlayerInRangeOfPoint(playerid, 15.0, 615.2851, -124.2390, 997.6350) ||
	IsPlayerInRangeOfPoint(playerid, 15.0, 617.5380, -1.9900, 1000.6829)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	    new str[75];
		if(vehicleDB[vehicleid][vOwned])
		{
			SetVehiclePos(vehicleid, vehicleDB[vehicleid][vLastPos][0], vehicleDB[vehicleid][vLastPos][1], vehicleDB[vehicleid][vLastPos][2]);
	    	SetVehicleZAngle(vehicleid, vehicleDB[vehicleid][vLastPos][3]);
	    }
	    else
	    {
	        SetVehicleToRespawn(vehicleid);
	    }
		format(str, sizeof(str), "[ANTI-CHEAT] %s iðmestas, prieþastis, [CarUpgradeHack].", GetPlayerNameEx(playerid));
		SendClientMessageToAll(RED, str);
		SetTimerEx("KickEx", 100, false, "d", playerid);
	}
	return 1;
}

public StabdytiAnim(playerid)
{
	ApplyAnimation( playerid, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0 );
}

//Krauname dviracius
public Kraunamdviracius(playerid)
{
    if(playerDB[playerid][masina] == -1) return SendClientMessage(playerid,RED,"* Jûs neturite atsivaræs fûros.");
	new vehicleid = playerDB[playerid][masina];
    if(vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] > 99)
    {
          TogglePlayerControllable(playerid, true);
		  GivePlayerMoneyA(playerid, -500);
          GameTextForPlayer(playerid,"Pakrauta 100/100 dviraciu galite vaziuoti",4000,5);
          SendClientMessage(playerid, -1, "{009999}* Jûsø priekaba pilnai pakrauta. Veðkite dviraèius kur parodyta þemëlapyje raudonu taðkeliu.");
          playerDB[playerid][prisikroves] = 1;
          RemovePlayerMapIcon( playerid, 2 );
          switch(random(7))
			{
	    		case 0: SetPlayerCheckpointEx(playerid, 8, 2768.6919, -2485.8022, 13.6484, 7.0);//ls
	    		case 1: SetPlayerCheckpointEx(playerid, 8, 1770.8429, -2040.6345, 13.5280, 7.0);//LS
	    		case 2: SetPlayerCheckpointEx(playerid, 8, -2648.4946, -41.6739, 4.3359, 7.0);//SF
	    		case 3: SetPlayerCheckpointEx(playerid, 8, -1837.3319, 112.8140, 15.1172, 7.0);//SF
	    		case 4: SetPlayerCheckpointEx(playerid, 8, -545.7399, -492.3549, 25.5234, 7.0);//SF
	    		case 5: SetPlayerCheckpointEx(playerid, 8, 1457.0074, 982.2772, 10.8203, 7.0);//LV
	    		case 6: SetPlayerCheckpointEx(playerid, 8, 2299.4133, 2754.5151, 10.8203, 7.0); //LV
			}
          return 1;
    }
    TogglePlayerControllable(playerid, false);
    vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] += 10;
    new stringas[18];
    format(stringas, sizeof(stringas), "Pakrauta %i/100 %", vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta]);
    GameTextForPlayer(playerid, stringas, 1000, 5);
    KraunamdviraciusEx[playerid] = SetTimerEx("Kraunamdviracius", 1000, false, "d", playerid);
    return 1;
}
//Kraunam baldus
public Kraunambaldus(playerid)
{
    if(playerDB[playerid][masina] == -1) return SendClientMessage(playerid,RED,"* Jûs neturite atsivaræs fûros.");
	new vehicleid = playerDB[playerid][masina];
    if(vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] > 99)
    {
          TogglePlayerControllable(playerid, true);
          GivePlayerMoneyA(playerid, -500);
          GameTextForPlayer(playerid,"Pakrauta 100/100 baldu galite vaziuoti",4000,5);
          SendClientMessage(playerid, -1, "{009999}* Jûsø priekaba pilnai pakrauta. Veðkite baldus kur parodyta þemëlapyje raudonu taðkeliu.");
          playerDB[playerid][prisikroves] = 1;
          RemovePlayerMapIcon( playerid, 2 );
          switch(random(6))
			{
	    		case 0: SetPlayerCheckpointEx(playerid, 8, -2648.4946, -41.6739, 4.3359, 7.0);//SF
	    		case 1: SetPlayerCheckpointEx(playerid, 8, -1837.3319, 112.8140, 15.1172, 7.0);//SF
	    		case 2: SetPlayerCheckpointEx(playerid, 8, -545.7399, -492.3549, 25.5234, 7.0);//SF
	    		case 3: SetPlayerCheckpointEx(playerid, 8, 1457.0074, 982.2772, 10.8203, 7.0);//LV
	    		case 4: SetPlayerCheckpointEx(playerid, 8, 2299.4133, 2754.5151, 10.8203, 7.0); //LV
	    		case 5: SetPlayerCheckpointEx(playerid, 8, -116.6872,-321.3778,1.4219, 7.0); //LV
			}
          return 1;
    }
    TogglePlayerControllable(playerid, false);
    vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] += 10;
    new stringas[18];
    format(stringas, sizeof(stringas), "Pakrauta %i/100 %", vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta]);
    GameTextForPlayer(playerid, stringas, 1000, 5);
    KraunambaldusEx[playerid] = SetTimerEx("Kraunambaldus", 1000, false, "d", playerid);
    return 1;
}
//Kraunam buitine technika
public Kraunambuittech(playerid)
{
    if(playerDB[playerid][masina] == -1) return SendClientMessage(playerid,RED,"* Jûs neturite atsivaræs fûros.");
	new vehicleid = playerDB[playerid][masina];
    if(vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] > 99)
    {
          TogglePlayerControllable(playerid, true);
          GivePlayerMoneyA(playerid, -500);
          GameTextForPlayer(playerid,"Pakrauta 100/100 buitines tenchinkos galite vaziuoti",4000,5);
          SendClientMessage(playerid, -1, "{009999}* Jûsø priekaba pilnai pakrauta. Veðkite buitinæ technikà kur parodyta þemëlapyje raudonu taðkeliu.");
          playerDB[playerid][prisikroves] = 1;
          RemovePlayerMapIcon( playerid, 2 );
          switch(random(1))
			{
	    		case 0: SetPlayerCheckpointEx(playerid, 8, 2787.0178,2005.4915,10.8102, 7.0);//ls
			}
          return 1;
    }
    TogglePlayerControllable(playerid, false);
    vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] += 10;
    new stringas[18];
    format(stringas, sizeof(stringas), "Pakrauta %i/100 %", vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta]);
    GameTextForPlayer(playerid, stringas, 1000, 5);
    KraunambuittechEx[playerid] = SetTimerEx("Kraunambuittech", 1000, false, "d", playerid);
    return 1;
}
//Kraunam anglis
public Kraunamanglis(playerid)
{
    if(playerDB[playerid][masina] == -1) return SendClientMessage(playerid,RED,"* Jûs neturite atsivaræs fûros.");
	new vehicleid = playerDB[playerid][masina];
    if(vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] > 99)
    {
          TogglePlayerControllable(playerid, true);
          GivePlayerMoneyA(playerid, -500);
          GameTextForPlayer(playerid,"Pakrauta 100/100 angliu galite vaziuoti",4000,5);
          SendClientMessage(playerid, -1, "{009999}* Jûsø priekaba pilnai pakrauta. Veðkite anglis kur parodyta þemëlapyje raudonu taðkeliu.");
          playerDB[playerid][prisikroves] = 1;
          RemovePlayerMapIcon( playerid, 2 );
          switch(random(5))
			{
	    		case 0: SetPlayerCheckpointEx(playerid, 8, 2768.6919, -2485.8022, 13.6484, 7.0);//ls
	    		case 1: SetPlayerCheckpointEx(playerid, 8, 1770.8429, -2040.6345, 13.5280, 7.0);//LS
	    		case 2: SetPlayerCheckpointEx(playerid, 8, 1457.0074, 982.2772, 10.8203, 7.0);//LV
	    		case 3: SetPlayerCheckpointEx(playerid, 8, 2299.4133, 2754.5151, 10.8203, 7.0); //LV
	    		case 4: SetPlayerCheckpointEx(playerid, 8, -116.6872,-321.3778,1.4219, 7.0); //LV
			}
          return 1;
    }
    TogglePlayerControllable(playerid, false);
    vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] += 10;
    new stringas[18];
    format(stringas, sizeof(stringas), "Pakrauta %i/100 %", vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta]);
    GameTextForPlayer(playerid, stringas, 1000, 5);
    KraunamanglisEx[playerid] = SetTimerEx("Kraunamanglis", 1000, false, "d", playerid);
    return 1;
}
//Kraunam zvyra
public Kraunamzvyra(playerid)
{
    if(playerDB[playerid][masina] == -1) return SendClientMessage(playerid,RED,"* Jûs neturite atsivaræs fûros.");
	new vehicleid = playerDB[playerid][masina];
    if(vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] > 99)
    {
          TogglePlayerControllable(playerid, true);
          GivePlayerMoneyA(playerid, -500);
          GameTextForPlayer(playerid,"Pakrauta 100/100 zvyro galite vaziuoti",4000,5);
          SendClientMessage(playerid, -1, "{009999}* Jûsø priekaba pilnai pakrauta. Veðkite þvyrà kur parodyta þemëlapyje raudonu taðkeliu.");
          playerDB[playerid][prisikroves] = 1;
          RemovePlayerMapIcon( playerid, 2 );
          switch(random(5))
			{
	    		case 0: SetPlayerCheckpointEx(playerid, 8, 2768.6919, -2485.8022, 13.6484, 7.0);//ls
	    		case 1: SetPlayerCheckpointEx(playerid, 8, 1770.8429, -2040.6345, 13.5280, 7.0);//LS
	    		case 2: SetPlayerCheckpointEx(playerid, 8, -2648.4946, -41.6739, 4.3359, 7.0);//SF
	    		case 3: SetPlayerCheckpointEx(playerid, 8, -1837.3319, 112.8140, 15.1172, 7.0);//SF
	    		case 4: SetPlayerCheckpointEx(playerid, 8, -545.7399, -492.3549, 25.5234, 7.0);//SF
			}
          return 1;
    }
    TogglePlayerControllable(playerid, false);
    vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] += 10;
    new stringas[18];
    format(stringas, sizeof(stringas), "Pakrauta %i/100 %", vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta]);
    GameTextForPlayer(playerid, stringas, 1000, 5);
    KraunamzvyraEx[playerid] = SetTimerEx("Kraunamzvyra", 1000, false, "d", playerid);
    return 1;
}
//Kraunam gunus
public Kraunamgunus(playerid)
{
    if(playerDB[playerid][masina] == -1) return SendClientMessage(playerid,RED,"* Jûs neturite atsivaræs fûros.");
	new vehicleid = playerDB[playerid][masina];
    if(vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] > 99)
    {
          TogglePlayerControllable(playerid, true);
          GivePlayerMoneyA(playerid, -500);
          GameTextForPlayer(playerid,"Pakrauta 100/100 ginklu galite vaziuoti",4000,5);
          SendClientMessage(playerid, -1, "{009999}* Jûsø priekaba pilnai pakrauta. Veðkite ginklus kur parodyta þemëlapyje raudonu taðkeliu.");
          playerDB[playerid][prisikroves] = 1;
          RemovePlayerMapIcon( playerid, 2 );
          SetPlayerCheckpointEx(playerid, 8, 662.1930,325.2514,20.3119, 7.0);
          return 1;
    }
    TogglePlayerControllable(playerid, false);
    vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] += 10;
    new stringas[18];
    format(stringas, sizeof(stringas), "Pakrauta %i/100 %", vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta]);
    GameTextForPlayer(playerid, stringas, 1000, 5);
    KraunamgunusEx[playerid] = SetTimerEx("Kraunamgunus", 1000, false, "d", playerid);
    return 1;
}
//Kraunam narkus
public Kraunamnarkus(playerid)
{
    if(playerDB[playerid][masina] == -1) return SendClientMessage(playerid,RED,"* Jûs neturite atsivaræs fûros.");
	new vehicleid = playerDB[playerid][masina];
    if(vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] > 99)
    {
          TogglePlayerControllable(playerid, true);
          GivePlayerMoneyA(playerid, -500);
          GameTextForPlayer(playerid,"Pakrauta 100/100 narkotiku galite vaziuoti",4000,5);
          SendClientMessage(playerid, -1, "{009999}* Jûsø priekaba pilnai pakrauta. Veðkite narkotikus kur parodyta þemëlapyje raudonu taðkeliu.");
          playerDB[playerid][prisikroves] = 1;
          RemovePlayerMapIcon( playerid, 2 );
          SetPlayerCheckpointEx(playerid, 8, 662.1930,325.2514,20.3119, 7.0);
          return 1;
    }
    TogglePlayerControllable(playerid, false);
    vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] += 10;
    new stringas[18];
    format(stringas, sizeof(stringas), "Pakrauta %i/100 %", vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta]);
    GameTextForPlayer(playerid, stringas, 1000, 5);
    KraunamnarkusEx[playerid] = SetTimerEx("Kraunamnarkus", 1000, false, "d", playerid);
    return 1;
}
//Kraunam zole
public Kraunamzole(playerid)
{
    if(playerDB[playerid][masina] == -1) return SendClientMessage(playerid,RED,"* Jûs neturite atsivaræs fûros.");
	new vehicleid = playerDB[playerid][masina];
    if(vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] > 99)
    {
          TogglePlayerControllable(playerid, true);
          GivePlayerMoneyA(playerid, -500);
          GameTextForPlayer(playerid,"Pakrauta 100/100 zoles galite vaziuoti",4000,5);
          SendClientMessage(playerid, -1, "{009999}* Jûsø priekaba pilnai pakrauta. Veðkite þolæ kur parodyta þemëlapyje raudonu taðkeliu.");
          playerDB[playerid][prisikroves] = 1;
          RemovePlayerMapIcon( playerid, 2 );
          SetPlayerCheckpointEx(playerid, 8, -63.1904,-1111.2084,1.0781, 7.0);
          return 1;
    }
    TogglePlayerControllable(playerid, false);
    vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta] += 10;
    new stringas[18];
    format(stringas, sizeof(stringas), "Pakrauta %i/100 %", vehicleDB[GetVehicleTrailer(vehicleid)][ikrauta]);
    GameTextForPlayer(playerid, stringas, 1000, 5);
    KraunamzoleEx[playerid] = SetTimerEx("Kraunamzole", 1000, false, "d", playerid);
    return 1;
}
///Iskrauname kà atveþë
public Iskraunamviskaisfuros (playerid)
{
	if(vehicleDB[GetVehicleTrailer(GetPlayerVehicleID(playerid))][ikrauta] < 1)
    {
        if(playerDB[playerid][uzsisakedviracius] == 1)
		{
			SendClientMessage(playerid, YELLOW, "Dviraèiai iðkrauti, gavote 1000 á bankà");
			playerDB[playerid][banke] +=1000;
			TogglePlayerControllable(playerid, true);
			GameTextForPlayer(playerid,"Iskrauta 100/100 dviraciu galite vaziuoti",4000,5);
			SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
			playerDB[playerid][uzsisakedviracius] = 0;
			playerDB[playerid][prisikroves] = 0;
		}
		if(playerDB[playerid][uzsisakebaldus] == 1)
		{
			SendClientMessage(playerid, YELLOW, "Baldai iðkrauti, gavote 1500 á bankà");
			playerDB[playerid][banke] +=1500;
			TogglePlayerControllable(playerid, true);
			GameTextForPlayer(playerid,"Iskrauta 100/100 baldu galite vaziuoti",4000,5);
			SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
			playerDB[playerid][uzsisakebaldus] = 0;
			playerDB[playerid][prisikroves] = 0;
		}
		if(playerDB[playerid][uzsisakebuittech] == 1)
		{
			SendClientMessage(playerid, YELLOW, "Buitinë technika iðkrauta, gavote 2000 á bankà");
			playerDB[playerid][banke] +=2000;
			TogglePlayerControllable(playerid, true);
			GameTextForPlayer(playerid,"Iskrauta 100/100 buitines technikos galite vaziuoti",4000,5);
			SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
			playerDB[playerid][uzsisakebuittech] = 0;
			playerDB[playerid][prisikroves] = 0;
		}
		if(playerDB[playerid][uzsisakeanglis] == 1)
		{
			SendClientMessage(playerid, YELLOW, "Anglys iðkrautos, gavote 2500 á bankà");
			playerDB[playerid][banke] +=2500;
			TogglePlayerControllable(playerid, true);
			GameTextForPlayer(playerid,"Iskrauta 100/100 angliu galite vaziuoti",4000,5);
			SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
			playerDB[playerid][uzsisakeanglis] = 0;
			playerDB[playerid][prisikroves] = 0;
		}
		if(playerDB[playerid][uzsisakezvyra] == 1)
		{
			SendClientMessage(playerid, YELLOW, "Þvyras iðkrautas, gavote 3000 á bankà");
			playerDB[playerid][banke] +=3000;
			TogglePlayerControllable(playerid, true);
			GameTextForPlayer(playerid,"Iskrauta 100/100 zvyro galite vaziuoti",4000,5);
			SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
			playerDB[playerid][uzsisakezvyra] = 0;
			playerDB[playerid][prisikroves] = 0;
   		}
   		//Nelegal
   		if(playerDB[playerid][uzsisakegunus] == 1)
		{
			SendClientMessage(playerid, YELLOW, "Ginklai iðkrauti, gavote 4500 á bankà");
			playerDB[playerid][banke] +=4500;
			TogglePlayerControllable(playerid, true);
			GameTextForPlayer(playerid,"Iskrauta 100/100 ginklu galite vaziuoti",4000,5);
			SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
			playerDB[playerid][uzsisakegunus] = 0;
			playerDB[playerid][prisikroves] = 0;
			playerDB[playerid][KadaVeze] = gettime() + 10800;
   		}
   		if(playerDB[playerid][uzsisakenarkus] == 1)
		{
			SendClientMessage(playerid, YELLOW, "Narkotikai iðkrauti, gavote 5000 á bankà");
			playerDB[playerid][banke] +=5000;
			TogglePlayerControllable(playerid, true);
			GameTextForPlayer(playerid,"Iskrauta 100/100 narkotiku galite vaziuoti",4000,5);
			SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
			playerDB[playerid][uzsisakenarkus] = 0;
			playerDB[playerid][prisikroves] = 0;
			playerDB[playerid][KadaVeze] = gettime() + 10800;
   		}
   		if(playerDB[playerid][uzsisakezole] == 1)
		{
			SendClientMessage(playerid, YELLOW, "Þolë iðkrauta, gavote 5500 á bankà");
			playerDB[playerid][banke] +=5500;
			TogglePlayerControllable(playerid, true);
			GameTextForPlayer(playerid,"Iskrauta 100/100 zoles galite vaziuoti",4000,5);
			SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
			playerDB[playerid][uzsisakezole] = 0;
			playerDB[playerid][prisikroves] = 0;
			playerDB[playerid][KadaVeze] = gettime() + 10800;
   		}
   		return 1;
	}
	TogglePlayerControllable(playerid, false);
    vehicleDB[GetVehicleTrailer(GetPlayerVehicleID(playerid))][ikrauta] -= 10;
    new stringas[35];
    format(stringas, sizeof(stringas), "Priekaboje liko krovinio %i/100 %", vehicleDB[GetVehicleTrailer(GetPlayerVehicleID(playerid))][ikrauta]);
    GameTextForPlayer(playerid, stringas, 1000, 5);
    IskraunamviskaisfurosEx[playerid] = SetTimerEx("Iskraunamviskaisfuros", 1000, false, "d", playerid);
    return 1;
}

public KickEx(playerid, pID)
{
	Kick(playerid);
}

public MatuojaGreiti()
{
	new pSpeed , msg [ 140 ] , masyvas [ 120 ] ;
	for(new playerid; playerid < MAX_PLAYERS; playerid++) // reikalinga
	{
	    if(!IsPlayerConnected(playerid) || IsPlayerNPC(playerid)) continue;
		if(IsPlayerInRangeOfPoint(playerid, 20.0, 609.3229980,-421.7030029,17.9139996)
		|| IsPlayerInRangeOfPoint(playerid, 20.0, 879.6562500,-565.4863281,18.4860001)
		|| IsPlayerInRangeOfPoint(playerid, 20.0, 676.1539917,-637.9180298,15.3360004)
		|| IsPlayerInRangeOfPoint(playerid, 20.0, 1278.1999512,210.4570007,18.5550003)
		|| IsPlayerInRangeOfPoint(playerid, 20.0, 2490.4929199,36.4609985,25.4839993)
		|| IsPlayerInRangeOfPoint(playerid, 20.0, 1362.9843750,222.4619141,18.5550003)
		|| IsPlayerInRangeOfPoint(playerid, 20.0, 2338.6120605,161.2530060,25.4839993)
		|| IsPlayerInRangeOfPoint(playerid, 20.0, 2349.1962891,35.6718750,25.4839993))
		{
		    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    {
		        new vehicleid = GetPlayerVehicleID(playerid);
			    if(!IsABike(vehicleid))
	     		{
			        if(!playerDB[playerid][suautopilotu])
			        {
			            if(playerDB[playerid][specialybe] != 1 && playerDB[playerid][specialybe] != 2 && playerDB[playerid][specialybe] != 10 && playerDB[playerid][specialybe] != 17 && playerDB[playerid][admin] != 5)
			            {
						    pSpeed = GetPlayerSpeed(playerid);
							if(pSpeed > 90)
							{
								if(GreitiMatuoja[playerid] <= gettime())
								{
									GreitiMatuoja[playerid] = gettime() + 4;
									if(playerDB[playerid][pinigai] > 999) GivePlayerMoneyA(playerid, -1000);
									SetPlayerTWanted(playerid, GetPlayerTWanted(playerid) + 0);
									if(playerDB[playerid][teises]) playerDB[playerid][GreicioBalai] ++;
									format(msg, sizeof(msg),"[Greièio Matuoklis] Jûs virðijote greitá! Leistinas greitis 90 KM/H, o jûsø buvo %d KM/H.", pSpeed);
									SendClientMessage(playerid, RED, msg);
						 			//format(masyvas,sizeof(masyvas),"[T-RACIJA]: Þaidëjas %s virðijo greitá. Jo greitis buvo : %d KM/H." , GetPlayerNameEx ( playerid ) , pSpeed );
									SendMessageToBendraTeisesauga(GREEN,masyvas ) ;
         							//SetPlayerColor(playerid, 0x660099AA);
									format(msg, sizeof(msg), "{F4D274}* Gavai {009999}%i{F4D274}/{009999}10 {F4D274}vairavimo baudos balà-(us), {009999}1000{F4D274} baudos", playerDB[playerid][GreicioBalai]);
									if(playerDB[playerid][teises]) SendClientMessage(playerid, YELLOW, msg);
									GameTextForPlayer(playerid, "~W~Virsijote leistina ~R~90KM/H ~W~greiti", 5000, 4);
									FadeScreenForPlayer(playerid, FADE_OUT, 0xFFFFFFFF);
									if(playerDB[playerid][GreicioBalai] > 9 && playerDB[playerid][teises])
									{
										SendClientMessage(playerid,RED, "* Praradote teises nes surinkote 10/10 vairavimo nuobaudas");
										playerDB[playerid][teises] = false;
										playerDB[playerid][GreicioBalai] = 0;
									}
								}
							}
						}
					}
				}
			}
		}
	}
	return 1;
}

public count2()
{
	for(new i; i < MAX_PLAYERS; i++)
	{
		GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~g~ 2 ~g~-",1000,3);
		PlaySound(i, 1056);
	}
}

////////////////////////////////////////////////////////////////////////////////
public count1()
{
	for(new i; i < MAX_PLAYERS; i++)
	{
		GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~r~ 1 ~g~-",1000,3);
		PlaySound(i, 1056);
	}
}

////////////////////////////////////////////////////////////////////////////////
public countgo()
{
	for(new i; i < MAX_PLAYERS; i++)
	{
		GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~b~ Pirmyn ~g~-",1000,3);
   		PlaySound(i, 1057);
	}
}
public stop()
{
   Skaicevimas = false;
}

stock ShowPlayerStats(playerid, clickedid)
{
	new xlytis[128];
	if(playerDB[clickedid][lytis] == 0) xlytis = "Moteris";
	if(playerDB[clickedid][lytis] == 1) xlytis = "Vyras";

	new darbas[128];
	if(playerDB[clickedid][specialybe] == 0) darbas = "Nedirbate";
	else if(playerDB[clickedid][specialybe] == 1) darbas = "Policijos Dapartamentas";
	else if(playerDB[clickedid][specialybe] == 2) darbas = "Medikai";
	else if(playerDB[clickedid][specialybe] == 3) darbas = "Taxi";
	else if(playerDB[clickedid][specialybe] == 4) darbas = "Mechanikai";
	else if(playerDB[clickedid][specialybe] == 5) darbas = "Dyleriai";
	else if(playerDB[clickedid][specialybe] == 10) darbas = "SWAT";
	else if(playerDB[clickedid][specialybe] == 11) darbas = "Fûristai";
	else if(playerDB[clickedid][specialybe] == 12) darbas = "Tyrinëtojai";
	else if(playerDB[clickedid][specialybe] == 13) darbas = "Radistai";
	else if(playerDB[clickedid][specialybe] == 14) darbas = "Baikeriai";
	else if(playerDB[clickedid][specialybe] == 15) darbas = "Klubas  Costello ";
	else if(playerDB[clickedid][specialybe] == 16) darbas = "Klubas  -Patriotai- ";
	else if(playerDB[clickedid][specialybe] == 17) darbas = "ARMIJA";
	else if(playerDB[clickedid][specialybe] == 40) darbas = "Russian Mafija";
	else if(playerDB[clickedid][specialybe] == 42) darbas = "Yakuza Mafija";
	else if(playerDB[clickedid][specialybe] == 20) darbas = "Picerija";
	else if(playerDB[clickedid][specialybe] == 22) darbas = "Valytojai";
	else if(playerDB[clickedid][specialybe] == 24) darbas = "Medkirèiai";
	else if(playerDB[clickedid][specialybe] == 25) darbas = "Krovikai";
	else if(playerDB[clickedid][specialybe] == 26) darbas = "Gaisrininkas";
	else if(playerDB[clickedid][specialybe] == 27) darbas = "Kunigas";
	else if(playerDB[clickedid][specialybe] == 28) darbas = "Naras";
	else if(playerDB[clickedid][specialybe] == 29) darbas = "Limuzininkas";

    new dyrikaz[25];
	if(playerDB[clickedid][plead] == 0) dyrikaz = "Neturi";
	else if(playerDB[clickedid][plead] == 1) dyrikaz = "Policijos Departamento";
	else if(playerDB[clickedid][plead] == 2) dyrikaz = "Mediku";
	else if(playerDB[clickedid][plead] == 3) dyrikaz = "Taksistu";
	else if(playerDB[clickedid][plead] == 4) dyrikaz = "Mechaniku";
	else if(playerDB[clickedid][plead] == 5) dyrikaz = "Dyleriu";
	else if(playerDB[clickedid][plead] == 6) dyrikaz = "Russian Mafijos";
	else if(playerDB[clickedid][plead] == 8) dyrikaz = "Yakuzos Mafijos";
	else if(playerDB[clickedid][plead] == 10) dyrikaz = "SWAT";
	else if(playerDB[clickedid][plead] == 11) dyrikaz = "Furistu";
	else if(playerDB[clickedid][plead] == 13) dyrikaz = "Radistu";
	else if(playerDB[clickedid][plead] == 14) dyrikaz = "Baikeriai";
	else if(playerDB[clickedid][plead] == 17) dyrikaz = "ARMIJOS";

    new pavaz[25];
	if(playerDB[clickedid][pavdrk] == 0) pavaz = "Neturi";
	else if(playerDB[clickedid][pavdrk] == 1) pavaz = "Policijos Departamento";
	else if(playerDB[clickedid][pavdrk] == 2) pavaz = "Mediku";
	else if(playerDB[clickedid][pavdrk] == 3) pavaz = "Taksistu";
	else if(playerDB[clickedid][pavdrk] == 4) pavaz = "Mechaniku";
	else if(playerDB[clickedid][pavdrk] == 5) pavaz = "Dyleriu";
	else if(playerDB[clickedid][pavdrk] == 6) pavaz = "Russian Mafijos";
	else if(playerDB[clickedid][pavdrk] == 8) pavaz = "Yakuzos Mafijos";
	else if(playerDB[clickedid][pavdrk] == 10) pavaz = "SWAT";
	else if(playerDB[clickedid][pavdrk] == 11) pavaz = "Furistu";
	else if(playerDB[clickedid][pavdrk] == 13) pavaz = "Radistu";
	else if(playerDB[clickedid][pavdrk] == 14) pavaz = "Baikeriai";
	else if(playerDB[clickedid][pavdrk] == 17) dyrikaz = "ARMIJOS";

	new licenzija[128];
	if(playerDB[clickedid][teises]) licenzija = "turite";
	else if(!playerDB[clickedid][teises]) licenzija = "neturite";

	new licenzijaf[128];
	if(playerDB[clickedid][FTeises]) licenzijaf = "turite";
	else if(!playerDB[clickedid][FTeises]) licenzijaf = "neturite";

	new licenzijax[128];
	if(playerDB[clickedid][Mteises]) licenzijax = "turite";
	else if(!playerDB[clickedid][Mteises]) licenzijax = "neturite";

	new telefonass[128];
    if(playerDB[clickedid][telefonas] == 1) telefonass = "Turite";
    else if(playerDB[clickedid][telefonas] == 0) telefonass = "Neturite";

	new telefonasstat[128];
    if(playerDB[clickedid][telefonostat] == 1) telefonasstat = "Ájungtas";
    else if(playerDB[clickedid][telefonostat] == 0) telefonasstat = "Iðjungtas";

	new laikrodiss[128];
    if(playerDB[clickedid][Muted] == 1) laikrodiss = "Uþtyldytas";
    else if(playerDB[clickedid][Muted] == 0) laikrodiss = "Kalbus";

	new vips[128];
    if(playerDB[clickedid][vip]) vips = "Turite";
    else if(!playerDB[clickedid][vip]) vips = "Neturite";

    new investicijas[40];
    if(playerDB[clickedid][investicija] == 0) investicijas = "Neturi";
    else if(playerDB[clickedid][investicija] == 1) investicijas = "NR 1";
    else if(playerDB[clickedid][investicija] == 2) investicijas = "NR 2";
    else if(playerDB[clickedid][investicija] == 3) investicijas = "NR 3";
    else if(playerDB[clickedid][investicija] == 4) investicijas = "NR 4";
    else if(playerDB[clickedid][investicija] == 5) investicijas = "NR 5";

    new adminaz[40];
    if(playerDB[clickedid][admin] == 0) adminaz = "Neturi";
    else if(playerDB[clickedid][admin] == 1) adminaz = "I lygio";
    else if(playerDB[clickedid][admin] == 2) adminaz = "II lygio";
    else if(playerDB[clickedid][admin] == 3) adminaz = "III lygio";
    else if(playerDB[clickedid][admin] == 4) adminaz = "IV lygio";
    else if(playerDB[clickedid][admin] == 5) adminaz = "Savininkas";

	new pinigaii = playerDB[clickedid][pinigai];
	new bankee = playerDB[clickedid][banke];
	new XPe = GetPlayerScore(clickedid);
	new praa = playerDB[clickedid][prazaide];
	new zolee = playerDB[clickedid][zole];
	new gaudomas = GetPlayerTWanted(clickedid);
	new sedeti = playerDB[clickedid][kalejimo_laikas];
	new Float:thealth, Float:armo;
	new alkisinfo = playerDB[clickedid][alkis];
	GetPlayerHealth(clickedid,thealth);
	GetPlayerArmour(clickedid,armo);

	new vLaikas = playerDB[clickedid][VipLaikas];

	new strf[2000], str[120];
	format(str, 2000, "Vardas_Pavardë: %s\n", GetPlayerNameEx(clickedid)); strcat(strf, str);
	format(str, 2000, "Lytis: %s \n", xlytis); strcat(strf, str);
	format(str, 2000, "Patirtis ( XP ): %s\n", konvertuoti_pinigus(XPe)); strcat(strf, str);
	format(str, 100, "\n", pavaz); strcat(strf, str);
	format(str, 2000, "Pinigai kiðenëje: %s\n", konvertuoti_pinigus(pinigaii)); strcat(strf, str);
	format(str, 2000, "Pinigai banko sàskaitoje: %s\n", konvertuoti_pinigus(bankee)); strcat(strf, str);
	format(str, 2000, "Sveikata/Armour : %i/%i \n", floatround(thealth),floatround(armo)); strcat(strf, str);
	format(str, 100, "\n", pavaz); strcat(strf, str);
	format(str, 2000, "Ákalintas kalëjime: %i \n", sedeti); strcat(strf, str);
	format(str, 2000, "Ieðkomumas: %i\n", gaudomas); strcat(strf, str);
	format(str, 2000, "Þolë: %s\n", konvertuoti_pinigus(zolee)); strcat(strf, str);
	format(str, 2000, "Darbas: %s\n", darbas); strcat(strf, str);
	format(str, 100, "\n", pavaz); strcat(strf, str);
	format(str, 2000, "Jûs %s lengvøjø tr. priemoniø teises\n", licenzija); strcat(strf, str);
	format(str, 2000, "Jûs %s lengvøjø motociklo teises\n", licenzijax); strcat(strf, str);
	format(str, 100, "\n", pavaz); strcat(strf, str);
	format(str, 2000, "Telefonas: %s\n", telefonass, telefonasstat); strcat(strf, str);
	format(str, 2000, "Uþtyldytas: %s\n", laikrodiss); strcat(strf, str);
	format(str, 2000, "Alkis: %i%/100%\n", alkisinfo); strcat(strf, str);
	format(str, 100, "\n", pavaz); strcat(strf, str);
    format(str, 100, "Direktorius: %s\n", dyrikaz); strcat(strf, str);
    format(str, 100, "Pavaduotojas: %s\n", pavaz); strcat(strf, str);
    format(str, 100, "\n", pavaz); strcat(strf, str);
	format(str, 2000, "VIP: %s - %s\n", vips, ConvertSeconds(vLaikas - gettime())); strcat(strf, str);
	format(str, 2000, "Administratorius: %s \n", adminaz); strcat(strf, str);
	format(str, 100, "\n", pavaz); strcat(strf, str);
	format(str, 100, "\n", pavaz); strcat(strf, str);
	format(str, 2000, "Ðiandien þaidime prabuvo: %s minuèiø !\n", konvertuoti_pinigus(praa)); strcat(strf, str);
	format(str, 2000, "Investicijos numeris: %s\n", investicijas); strcat(strf, str);
	ShowPlayerDialog(playerid, 857, DIALOG_STYLE_MSGBOX, "{FFC401}Þaidëjo informacija", strf, "Aiðku", "");
	return 1;
}
stock RemoveObjectsForPlayer(playerid)
{
	 //Gaisrine
	RemoveBuildingForPlayer(playerid, 13245, 666.710, -565.132, 17.335, 0.250);
	RemoveBuildingForPlayer(playerid, 12854, 666.492, -571.179, 17.312, 0.250);
	RemoveBuildingForPlayer(playerid, 1510, 664.203, -567.695, 16.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1512, 664.210, -567.414, 16.414, 0.250);
	RemoveBuildingForPlayer(playerid, 2362, 662.921, -567.054, 16.203, 0.250);
	RemoveBuildingForPlayer(playerid, 1514, 665.289, -567.281, 16.429, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, 655.664, -571.210, 15.359, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, 655.664, -569.601, 15.359, 0.250);
	RemoveBuildingForPlayer(playerid, 1691, 665.750, -566.304, 20.031, 0.250);
	RemoveBuildingForPlayer(playerid, 12853, 666.710, -565.132, 17.335, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, 655.664, -558.929, 15.359, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, 655.664, -560.546, 15.359, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 673.570, -565.078, 19.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1687, 670.101, -558.406, 20.429, 0.250);
	RemoveBuildingForPlayer(playerid, 956, 662.429, -552.164, 15.710, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 670.109, -550.656, 15.273, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 671.781, -539.914, 15.664, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 662.148, -538.546, 19.851, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 663.375, -541.625, 15.289, 0.250);
	RemoveBuildingForPlayer(playerid, 13137, 646.164, -527.898, 28.070, 0.250);

	 // Nauja taxi baze BY KENTAS

	RemoveBuildingForPlayer(playerid, 3314, 2194.760, -92.359, 26.468, 0.250);
	RemoveBuildingForPlayer(playerid, 3329, 2194.760, -92.359, 26.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1408, 2205.659, -83.343, 26.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1408, 2200.030, -83.343, 26.718, 0.250);
	RemoveBuildingForPlayer(playerid, 781, 2207.379, -97.601, 25.992, 0.250);
	RemoveBuildingForPlayer(playerid, 1408, 2213.739, -92.710, 26.054, 0.250);
	RemoveBuildingForPlayer(playerid, 1408, 2213.739, -98.117, 26.054, 0.250);
	RemoveBuildingForPlayer(playerid, 1408, 2211.199, -83.343, 26.140, 0.250);
	RemoveBuildingForPlayer(playerid, 781, 2211.689, -84.648, 25.578, 0.250);
	RemoveBuildingForPlayer(playerid, 3408, 2213.770, -83.960, 25.484, 0.250);
	//Miesteliø hotelis.
	RemoveBuildingForPlayer(playerid, 3299, 1404.5313, 351.6172, 18.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 3301, 1433.5781, 338.3594, 19.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3297, 1404.5938, 337.4141, 19.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 3298, 1417.2188, 327.6484, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 13217, 1354.5547, 340.7734, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 13220, 1384.0234, 304.2891, 22.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 13441, 1338.0625, 198.7344, 30.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1690, 1355.9375, 312.5234, 24.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 13011, 1357.4766, 318.1484, 20.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1362.7031, 307.0156, 24.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 1397.0938, 291.8516, 23.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 1387.5156, 291.5156, 23.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 13013, 1384.0234, 304.2891, 22.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 1691, 1381.9375, 299.7500, 24.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1380.4141, 307.4063, 25.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 1385.9063, 302.9609, 22.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 1390.2266, 301.5469, 18.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 1368.9766, 314.4688, 22.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 1393.8672, 325.1328, 17.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 782, 1393.8672, 325.1328, 17.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1410.6484, 281.1172, 18.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 1414.6484, 303.6875, 18.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 1418.6719, 285.3359, 18.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 3241, 1417.2188, 327.6484, 18.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1404.0000, 329.9922, 17.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1421.8359, 321.8594, 18.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 3284, 1433.5781, 338.3594, 19.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3242, 1404.5938, 337.4141, 19.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 13440, 1282.2422, 369.1406, 28.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 12988, 1354.5547, 340.7734, 17.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1361.9219, 365.8438, 20.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1438, 1373.8281, 365.7344, 19.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 1396.5703, 356.4531, 19.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1410, 1395.9688, 350.9766, 18.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1398.3750, 357.0469, 17.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 766, 1389.4688, 360.5078, 18.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3283, 1404.5313, 351.6172, 18.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 617, 1409.6406, 341.8516, 17.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1370, 1399.9219, 341.4766, 18.4844, 0.25);



	//Iðtrinta ir padaryti radistai
	RemoveBuildingForPlayer(playerid, 13133, 299.2031, -193.6250, 3.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 13203, 308.0938, -168.7266, 4.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 13398, 307.8047, -176.8438, 0.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 12814, 307.8047, -176.8438, 0.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 13190, 308.0938, -168.7266, 4.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 13132, 299.2031, -193.6250, 3.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 303.9375, -194.9297, 4.3672, 0.25);

	 
	//Banko INT
	RemoveBuildingForPlayer(playerid, 13007, 2312.7031, -9.0625, 27.5313, 0.25);
	// policija nauja
	RemoveBuildingForPlayer(playerid, 13244, 642.203, -508.078, 19.085, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 614.906, -521.789, 19.851, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 641.804, -522.132, 19.851, 0.250);
	RemoveBuildingForPlayer(playerid, 13137, 646.164, -527.898, 28.070, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 652.007, -520.320, 15.664, 0.250);
	RemoveBuildingForPlayer(playerid, 1503, 638.835, -517.476, 15.546, 0.250);
	RemoveBuildingForPlayer(playerid, 1688, 649.554, -516.742, 21.179, 0.250);
	RemoveBuildingForPlayer(playerid, 1689, 660.445, -515.406, 23.000, 0.250);
	RemoveBuildingForPlayer(playerid, 1691, 643.648, -515.960, 20.585, 0.250);
	RemoveBuildingForPlayer(playerid, 12862, 642.203, -508.078, 19.085, 0.250);
	RemoveBuildingForPlayer(playerid, 1687, 614.523, -511.617, 20.125, 0.250);
	RemoveBuildingForPlayer(playerid, 1688, 667.437, -506.789, 22.835, 0.250);
	RemoveBuildingForPlayer(playerid, 1691, 629.039, -509.476, 19.703, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, 642.718, -511.054, 15.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 673.578, -517.851, 19.851, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 611.476, -504.687, 15.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1690, 614.468, -499.914, 20.773, 0.250);
	RemoveBuildingForPlayer(playerid, 1345, 652.742, -496.515, 16.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1345, 652.812, -499.320, 16.046, 0.250);
	RemoveBuildingForPlayer(playerid, 1438, 660.539, -496.882, 15.304, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 652.078, -494.882, 15.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 610.101, -494.421, 19.851, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 670.976, -493.445, 19.851, 0.250);
	RemoveBuildingForPlayer(playerid, 1498, 671.664, -497.640, 15.328, 0.250);
	RemoveBuildingForPlayer(playerid, 14650, 681.476, -456.414, -24.562, 0.250);
	RemoveBuildingForPlayer(playerid, 14651, 686.414, -462.851, -24.492, 0.250);
	RemoveBuildingForPlayer(playerid, 14652, 681.429, -456.046, -24.562, 0.250);
	RemoveBuildingForPlayer(playerid, 14653, 681.445, -455.171, -25.945, 0.250);
	RemoveBuildingForPlayer(playerid, 14654, 681.453, -457.617, -23.796, 0.250);
	RemoveBuildingForPlayer(playerid, 14655, 681.445, -460.632, -24.562, 0.250);
	RemoveBuildingForPlayer(playerid, 14656, 681.500, -447.375, -25.023, 0.250);
	RemoveBuildingForPlayer(playerid, 14657, 681.429, -456.414, -25.828, 0.250);


	//Miesteliø - Renginiø zonà .
	RemoveBuildingForPlayer(playerid, 13064, 360.5156, -97.2344, 3.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 342.9141, -123.7422, 1.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 342.8984, -129.0156, 1.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 342.9453, -113.1875, 1.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 342.9297, -118.4609, 1.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 342.9609, -107.9063, 1.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 346.2344, -103.7656, 0.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 13060, 360.5156, -97.2344, 3.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 344.2188, -78.9063, 0.8906, 0.25);
	
	//Miesteliø - SPD .
	RemoveBuildingForPlayer(playerid, 11043, -2194.3828, -96.2266, 46.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 10998, -2194.3828, -96.2266, 46.0625, 0.25);

	//Miesteliø - Klubas 2 .
	RemoveBuildingForPlayer(playerid, 11599, -1512.1563, 2514.4453, 54.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 11454, -1512.1563, 2514.4453, 54.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 672, -1492.7813, 2518.5938, 55.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 11455, -1505.4609, 2539.4922, 56.7891, 0.25);

	//Miesteliø - Klubas .
	RemoveBuildingForPlayer(playerid, 16612, -569.617, 2593.531, 56.406, 0.250);
	RemoveBuildingForPlayer(playerid, 16010, -569.617, 2593.531, 56.406, 0.250);

	//Miesteliø - Namø kvartalas .
	RemoveBuildingForPlayer(playerid, 3276, -164.4766, -102.7188, 2.9453, 0.25);
	
	//Miesteliø - Parkas .
	RemoveBuildingForPlayer(playerid, 13250, 622.9453, -577.0625, 21.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 13484, 738.3984, -553.9844, 21.9609, 0.25);
	RemoveBuildingForPlayer(playerid, 12855, 622.9453, -577.0625, 21.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 625.0156, -579.7188, 25.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1522, 626.5313, -571.0078, 16.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 632.5781, -583.5938, 19.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 630.7266, -578.7734, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 611.0000, -562.9531, 25.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 628.1953, -557.3438, 15.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 630.2188, -564.2500, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 1691, 622.4922, -552.9141, 20.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 632.8438, -545.6016, 19.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 629.5781, -547.2188, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 780, 604.0156, -542.3438, 15.0703, 0.25);
	
	//Miesteliø - Fûristø pasikrovimas .
	RemoveBuildingForPlayer(playerid, 8544, 2844.2500, 874.7188, 15.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 8547, 2836.0859, 928.2734, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 8737, 2814.3438, 993.8438, 13.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 8738, 2867.9766, 976.5078, 14.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 8739, 2844.2500, 874.7188, 15.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 8742, 2836.0859, 928.2734, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 8960, 2787.0000, 953.4375, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 8961, 2797.6250, 885.4531, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 8962, 2797.6250, 865.4063, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 8963, 2885.5313, 919.2266, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2806.2109, 838.6094, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2866.0313, 838.6094, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1365, 2801.0703, 858.1016, 10.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 851.7656, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1358, 2808.7969, 857.2031, 10.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1343, 2821.8750, 858.1875, 10.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1365, 2848.4844, 857.1797, 10.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1343, 2836.9531, 858.1953, 10.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1344, 2879.0859, 858.1563, 10.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1358, 2863.7891, 857.2031, 10.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2889.7344, 851.7656, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 899.2813, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2800.9453, 879.3047, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2800.9453, 876.6406, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 8886, 2797.6250, 865.4063, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2806.6094, 892.3828, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 8885, 2797.6250, 885.4531, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2887.3047, 871.9141, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2887.3047, 874.5781, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2889.6172, 895.2109, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 929.2969, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3458, 2818.4609, 928.6484, 11.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 8883, 2885.5313, 919.2266, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 8884, 2787.0000, 953.4375, 13.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2801.9219, 933.8281, 12.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2812.2266, 933.8281, 12.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2823.4609, 933.8281, 12.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 3458, 2818.4609, 938.7188, 11.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 2834.5078, 933.8281, 12.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1365, 2849.5391, 945.0156, 10.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2858.2734, 944.9766, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1343, 2863.4688, 946.0156, 10.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1344, 2879.6484, 945.9688, 10.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2889.7266, 943.2656, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2782.6641, 986.6719, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1358, 2796.8438, 977.6953, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1365, 2796.6016, 984.8203, 10.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2796.5469, 996.7578, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2796.5469, 1000.3516, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2806.2109, 1017.9375, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 8546, 2814.3438, 993.8438, 13.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2844.0000, 967.4063, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2844.0000, 964.7422, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2846.4688, 986.8516, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1219, 2846.4688, 980.0391, 9.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 8545, 2867.9766, 976.5078, 14.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2866.0313, 1017.9375, 23.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 2889.7266, 986.6719, 23.9297, 0.25);

	//Miesteliø - PD daþyklos .
	RemoveBuildingForPlayer(playerid, 1438, 725.6641, -473.3594, 15.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 3172, 713.3125, -468.0703, 15.1328, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, 725.8750, -465.7422, 15.9375, 0.25);

	//Miesteliø - Klubas .
	RemoveBuildingForPlayer(playerid, 1440, 710.5625, -470.4844, 15.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 710.5938, -468.1797, 15.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 12977, 679.1406, -455.7734, 16.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 1332, 656.0000, -439.2734, 16.2813, 0.25);
	RemoveBuildingForPlayer(playerid, 1335, 659.2266, -439.3906, 16.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, 693.2891, -456.0156, 16.0078, 0.25);

	//Miesteliø - Mechanikai .
	RemoveBuildingForPlayer(playerid, 706, 111.0234, -134.5625, -0.0547, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 122.5469, -140.8125, 1.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 122.4531, -92.8438, 1.3672, 0.25);

	//Miesteliø - Medkirèiai .
	RemoveBuildingForPlayer(playerid, 3276, 1912.9297, 151.4141, 37.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1907.7656, 181.7813, 36.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1935.1875, 142.8984, 37.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1919.2969, 179.1328, 37.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1944.2656, 172.2891, 37.0703, 0.25);

	//Miesteliø - Paðalintas tiltas .
	RemoveBuildingForPlayer(playerid, 13395, 2102.4297, 41.6563, 25.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 12992, 2102.4297, 41.6563, 25.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 3335, 2141.5078, 33.3438, 25.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 766, 2147.7500, 29.5859, 24.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 766, 2164.7109, 27.8672, 24.4297, 0.25);
	RemoveBuildingForPlayer(playerid, 3335, 2170.1797, 49.4453, 25.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 2141.4063, 48.6172, 29.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 766, 2136.3594, 51.5391, 25.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 766, 2155.1250, 51.4375, 24.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 766, 2171.7578, 52.2266, 24.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 2176.7344, 34.8828, 29.8125, 0.25);

	//Miesteliø - Taksi iðtrintas stulpas .
	RemoveBuildingForPlayer(playerid, 1294, 2285.0234, -89.4453, 29.8125, 0.25);

	//Miesteliø - Ligoninë .
	RemoveBuildingForPlayer(playerid, 13221, 1242.1016, 315.1484, 18.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 13485, 1304.3047, 330.1563, 23.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 1209.9766, 294.0547, 23.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1231.9531, 287.9375, 19.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1237.3047, 306.9375, 24.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1250.6094, 279.4063, 19.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1689, 1247.9453, 303.4688, 28.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1247.4141, 294.2031, 28.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1248.1094, 295.7969, 28.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 12983, 1242.1016, 315.1484, 18.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 1222.2969, 311.9609, 24.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1368, 1262.3281, 320.3438, 19.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1368, 1257.9375, 322.2734, 19.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1690, 1254.8516, 316.2031, 24.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 1267.8750, 322.4453, 18.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 1261.0469, 325.2734, 18.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1368, 1232.1641, 333.7188, 19.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1368, 1236.5547, 331.7891, 19.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 1231.7031, 338.1953, 18.4688, 0.25);

	//Miesteliø - Paðalintos tvorelës prie ligoninës .
	RemoveBuildingForPlayer(playerid, 3276, 1479.2422, 390.3672, 20.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1460.2578, 397.4766, 20.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1490.5000, 387.0000, 20.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1502.1797, 384.2422, 20.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1570.2891, 375.3125, 20.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1594.8281, 374.3438, 20.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1558.2969, 376.2656, 20.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1540.1094, 378.2031, 20.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1528.2500, 379.7266, 20.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1606.8594, 374.0156, 20.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1427.2500, 411.7656, 19.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 1438.2422, 406.7188, 20.0625, 0.25);

	//Miesteliø - Limuzinininkai .
	RemoveBuildingForPlayer(playerid, 13069, 207.8047, -46.8438, 0.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 13493, 224.4922, -68.2578, 5.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 12941, 207.8047, -46.8438, 0.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 215.9375, -43.4922, 9.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 215.5938, -46.7344, 9.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 202.5469, -33.1250, 1.0547, 0.25);

	//Miesteliø - Pagraþinimas aikðtelë - /vt1
	RemoveBuildingForPlayer(playerid, 726, 2228.4141, 21.7578, 24.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 2284.9922, 32.8047, 29.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1351, 2283.5625, 36.0313, 25.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1351, 2283.5625, 36.0313, 25.4375, 0.25);
	
	//Miesteliø - Maðinø turgus .
	RemoveBuildingForPlayer(playerid, 694, 2314.2578, 246.0625, 27.8672, 0.25);
	
	//Miesteliø - Ligoninë .
	RemoveBuildingForPlayer(playerid, 13221, 1242.1016, 315.1484, 18.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 13485, 1304.3047, 330.1563, 23.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 1209.9766, 294.0547, 23.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1231.9531, 287.9375, 19.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1237.3047, 306.9375, 24.5625, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1250.6094, 279.4063, 19.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 1689, 1247.9453, 303.4688, 28.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1247.4141, 294.2031, 28.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1248.1094, 295.7969, 28.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 12983, 1242.1016, 315.1484, 18.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 1222.2969, 311.9609, 24.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1368, 1262.3281, 320.3438, 19.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1368, 1257.9375, 322.2734, 19.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1690, 1254.8516, 316.2031, 24.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 1267.8750, 322.4453, 18.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 1261.0469, 325.2734, 18.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1368, 1232.1641, 333.7188, 19.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1368, 1236.5547, 331.7891, 19.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 781, 1231.7031, 338.1953, 18.4688, 0.25);
	
	//Miesteliø - Prisijungimas .
	/*RemoveBuildingForPlayer(playerid, 766, 2136.3594, 51.5391, 25.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 766, 2155.1250, 51.4375, 24.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 766, 2171.7578, 52.2266, 24.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 2139.7891, 90.2891, 31.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 2151.5391, 88.4453, 29.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 2163.3281, 86.6016, 27.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 12909, 2159.4297, 91.1250, 19.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 2142.5469, 97.5859, 31.1875, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 2154.4609, 95.6406, 29.1797, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, 2166.3828, 93.6875, 27.2109, 0.25);*/
	
	RemoveBuildingForPlayer(playerid, 3321, 2200.491, 104.866, 26.937, 0.250);
	RemoveBuildingForPlayer(playerid, 13461, 2373.233, 29.170, 30.343, 0.250);
	RemoveBuildingForPlayer(playerid, 3319, 2200.491, 63.500, 26.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3335, 2170.178, 49.444, 25.389, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 2141.406, 48.617, 29.812, 0.250);
	RemoveBuildingForPlayer(playerid, 766, 2136.358, 51.539, 25.084, 0.250);
	RemoveBuildingForPlayer(playerid, 766, 2155.125, 51.437, 24.773, 0.250);
	RemoveBuildingForPlayer(playerid, 766, 2171.757, 52.226, 24.773, 0.250);
	RemoveBuildingForPlayer(playerid, 766, 2181.577, 30.054, 24.077, 0.250);
	RemoveBuildingForPlayer(playerid, 766, 2197.539, 28.920, 23.084, 0.250);
	RemoveBuildingForPlayer(playerid, 766, 2211.125, 29.209, 23.084, 0.250);
	RemoveBuildingForPlayer(playerid, 3308, 2200.491, 63.500, 26.937, 0.250);
	RemoveBuildingForPlayer(playerid, 779, 2210.039, 68.507, 25.788, 0.250);
	RemoveBuildingForPlayer(playerid, 779, 2189.241, 71.984, 26.694, 0.250);
	RemoveBuildingForPlayer(playerid, 1410, 2213.781, 62.147, 26.131, 0.250);
	RemoveBuildingForPlayer(playerid, 1410, 2213.781, 66.944, 26.131, 0.250);
	RemoveBuildingForPlayer(playerid, 1410, 2213.781, 74.194, 26.131, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 2139.789, 90.289, 31.889, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 2151.539, 88.444, 29.584, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 2163.327, 86.600, 27.468, 0.250);
	RemoveBuildingForPlayer(playerid, 12909, 2159.428, 91.125, 19.170, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 2142.545, 97.584, 31.187, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 2154.459, 95.639, 29.179, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 2166.382, 93.686, 27.209, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 2103.757, 94.273, 32.834, 0.250);
	RemoveBuildingForPlayer(playerid, 769, 2188.491, 95.859, 26.156, 0.250);
	RemoveBuildingForPlayer(playerid, 781, 2209.812, 95.828, 25.764, 0.250);
	RemoveBuildingForPlayer(playerid, 1410, 2211.483, 76.530, 26.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1410, 2206.757, 76.530, 26.952, 0.250);
	RemoveBuildingForPlayer(playerid, 1419, 2213.906, 93.795, 26.006, 0.250);
	RemoveBuildingForPlayer(playerid, 1419, 2213.906, 97.882, 26.006, 0.250);
	RemoveBuildingForPlayer(playerid, 1419, 2207.687, 91.764, 26.617, 0.250);
	RemoveBuildingForPlayer(playerid, 1419, 2211.772, 91.764, 26.194, 0.250);
	RemoveBuildingForPlayer(playerid, 3307, 2200.491, 104.866, 26.937, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, 2106.726, 102.968, 32.875, 0.250);
	RemoveBuildingForPlayer(playerid, 781, 2207.741, 102.366, 26.304, 0.250);
	RemoveBuildingForPlayer(playerid, 1419, 2213.906, 101.968, 26.006, 0.250);
	RemoveBuildingForPlayer(playerid, 1419, 2213.906, 106.389, 26.006, 0.250);
	RemoveBuildingForPlayer(playerid, 1419, 2207.741, 108.484, 27.000, 0.250);
	RemoveBuildingForPlayer(playerid, 1419, 2211.789, 108.484, 26.334, 0.250);
	RemoveBuildingForPlayer(playerid, 1419, 2211.584, 116.514, 26.367, 0.250);
	RemoveBuildingForPlayer(playerid, 1419, 2207.531, 116.514, 27.000, 0.250);
	
	//Miesteliø treniruoèiø zona. - Paðalinti nereikalingi objectai.
	RemoveBuildingForPlayer(playerid, 3364, 77.3203, 2456.2500, 15.2813, 0.25);
	
	//Miesteliø Russian mafija. - Paðalinti nereikalingi objectai.
	RemoveBuildingForPlayer(playerid, 16716, -236.5938, 1702.4531, 32.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 16022, -313.9922, 1742.8203, 41.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 16021, -312.9375, 1780.9844, 41.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 16115, -236.5938, 1702.4531, 32.7031, 0.25);
	
	//Miesteliø Yakuza mafija. - Paðalinti nereikalingi objectai.
	RemoveBuildingForPlayer(playerid, 11618, -688.1172, 939.1797, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 11654, -681.8750, 965.8906, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -730.4297, 905.1172, 12.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -716.6406, 903.9844, 12.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -698.9609, 909.6719, 11.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -687.3125, 909.6016, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -710.6094, 909.7422, 11.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -729.5313, 916.5391, 12.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -728.7500, 928.1641, 12.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 11491, -688.1094, 928.1328, 12.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -712.0703, 928.3047, 11.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -727.9688, 939.7891, 12.0859, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -727.1875, 951.4141, 12.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 11490, -688.1172, 939.1797, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 11631, -691.5938, 942.7188, 13.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 11663, -688.1172, 939.1797, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 11666, -688.1406, 934.8203, 14.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 11664, -685.0938, 941.9141, 13.1406, 0.25);
	RemoveBuildingForPlayer(playerid, 11665, -685.1719, 935.6953, 13.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -709.3203, 991.1641, 12.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 691, -701.7422, 1006.1328, 11.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 700, -700.6563, 984.1406, 11.5547, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -697.6719, 990.9922, 12.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -686.0234, 990.8203, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -665.5625, 912.9453, 11.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -675.6641, 909.5313, 12.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1223, -683.0703, 920.4844, 10.9141, 0.25);
	RemoveBuildingForPlayer(playerid, 700, -658.8203, 936.1797, 11.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 11492, -681.8750, 965.8906, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -656.5781, 974.4688, 11.2734, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -674.3750, 990.6484, 11.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -674.0234, 998.0000, 11.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -662.7266, 990.4766, 11.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 691, -665.8906, 1004.1797, 11.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 691, -652.5547, 999.9063, 11.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -650.1953, 928.1953, 11.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -645.8828, 937.9063, 11.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -645.7109, 949.5547, 11.9688, 0.25);
	RemoveBuildingForPlayer(playerid, 691, -638.1563, 954.7031, 9.3359, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -645.5391, 961.2031, 11.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -645.3672, 972.8516, 12.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -645.1953, 984.5000, 12.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 3276, -651.0781, 990.3047, 11.9219, 0.25);
}

stock IsABike(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 509, 481, 510: return true;
	}
	return false;
}

stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if(IsPlayerInAnyVehicle(playerid))
 	GetVehicleVelocity(GetPlayerVehicleID(playerid), ST[0], ST[1], ST[2]);
 	else GetPlayerVelocity(playerid, ST[0], ST[1], ST[2]);
    ST[3] = floatsqroot(floatpower(floatabs(ST[0]), 2.0) + floatpower(floatabs(ST[1]), 2.0) + floatpower(floatabs(ST[2]), 2.0)) * 170.3; // 254.3
    return floatround(ST[3]);
}

stock SetPlayerSpeedCap(playerid, Float:value)
{
   if(0 <= playerid < sizeof(g_fSpeedCap)) g_fSpeedCap[playerid] = value;
}

stock DisablePlayerSpeedCap(playerid)
{
	if(0 <= playerid < sizeof(g_fSpeedCap)) g_fSpeedCap[playerid] = 0.0;
}

stock PlayAudioStreamForVehicle(playerid, vehicleid, url[], name[])
{
 	GameTextForPlayer(playerid, "~w~Radijas ~g~sekmingai ~w~pakeista!", 5000, 5);
	strcpy(RadijosPavadinimas[vehicleid], name, strlen(name) + 1);
	strcpy(RadijosURL        [vehicleid], url,  strlen(url)  + 1);
	SetTimerEx("PakeistiRadija", 3000, false, "d", vehicleid);
	return true;
}

stock StopAudioStreamForVehicle(vehicleid)
{
	for(new p; p < MAX_PLAYERS; p++)
	{
	    if(!IsPlayerConnected(p) || !IsPlayerInVehicle(p, vehicleid)) continue;
	    StopAudioStreamForPlayer(p);
	}
	RadijosPavadinimas[vehicleid][0] = '\0';
	RadijosURL        [vehicleid][0] = '\0';
	return true;
}

stock GetVehicleDriver(vehicleid)
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(IsPlayerConnected(p))
		{
			if(GetPlayerState(p) == PLAYER_STATE_DRIVER)
			{
				if(IsPlayerInVehicle(p, vehicleid)) return p;
			}
		}
	}
	return INVALID_PLAYER_ID;
}

stock SetVehicleSpeed(vehicleid, Float:speed)
{
    new Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2, Float:a;
    GetVehicleVelocity(vehicleid, x1, y1, z1);
    GetVehiclePos(vehicleid, x2, y2, z2);
    GetVehicleZAngle(vehicleid, a); a = 360 - a;
    x1 = (floatsin(a, degrees) * (speed / 100) + floatcos(a, degrees) * 0 + x2) - x2;
    y1 = (floatcos(a, degrees) * (speed / 100) + floatsin(a, degrees) * 0 + y2) - y2;
    SetVehicleVelocity(vehicleid, x1, y1, z1);
    return true;
}

stock PlayerInZone(playerid, Float:min_X, Float:min_Y, Float:max_X, Float:max_Y)
{
    new Float:pos[3]; GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
    if((pos[0] <= max_X && pos[0] >= min_X) && (pos[1] <= max_Y && pos[1] >= min_Y)) return 1;
    return 0;
}



stock UpdateCarShopTextDraws(playerid)
{

	switch(playerDB[playerid][vChoosedCategory])
 	{
       case 1:
        {
            new str[142];
            format ( str , sizeof ( str ) , "~w~%s" , VehicleNames [ GetVehicleModel ( playerDB [ playerid ] [ vVeh ] ) - 400 ] ) ;
            PlayerTextDrawSetString ( playerid , CarShop [ 1 ] [ playerid ] , str ) ;
         	format ( str , sizeof ( str ) ,
         	"~w~Metai: ~g~%d~n~~w~Bako talpa: ~g~%dL~n~~w~Kaina: ~g~%d " ,
         	vOldCars [ playerDB [ playerid ] [ vPressed ] ] [ vsYear ] , aBakai [ GetVehicleModel ( playerDB [ playerid ] [ vVeh ] ) - 400 ] , vOldCars [ playerDB [ playerid ] [ vPressed ] ] [ vsCost ] ) ;
         	PlayerTextDrawSetString ( playerid , CarShop [ 2 ] [ playerid ] , str ) ;
		}
        case 2:
        {
            new str[142];
            format ( str , sizeof ( str ) , "~w~%s" , VehicleNames [ GetVehicleModel ( playerDB [ playerid ] [ vVeh ] ) - 400 ] ) ;
            PlayerTextDrawSetString ( playerid , CarShop [ 1 ] [ playerid ] , str ) ;
         	format ( str , sizeof ( str ) ,
         	"~w~Metai: ~g~%d~n~~w~Bako talpa: ~g~%dL~n~~w~Kaina: ~g~%d " ,
         	vSportCars [ playerDB [ playerid ] [ vPressed ] ] [ vsYear ] , aBakai [ GetVehicleModel ( playerDB [ playerid ] [ vVeh ] ) - 400 ] , vSportCars [ playerDB [ playerid ] [ vPressed ] ] [ vsCost ]) ;
         	PlayerTextDrawSetString ( playerid , CarShop [ 2 ] [ playerid ] , str ) ;
        }
        case 3:
        {
            new str[142];
            format ( str , sizeof ( str ) , "~w~%s" , VehicleNames [ GetVehicleModel ( playerDB [ playerid ] [ vVeh ] ) - 400 ] ) ;
            PlayerTextDrawSetString ( playerid , CarShop [ 1 ] [ playerid ] , str ) ;
         	format ( str , sizeof ( str ) ,
         	"~w~Metai: ~g~%d~n~~w~Bako talpa: ~g~%dL~n~~w~Kaina: ~g~%d " ,
         	vMotoCars [ playerDB [ playerid ] [ vPressed ] ] [ vsYear ] , aBakai [ GetVehicleModel ( playerDB [ playerid ] [ vVeh ] ) - 400 ] , vMotoCars [ playerDB [ playerid ] [ vPressed ] ] [ vsCost ] ) ;
         	PlayerTextDrawSetString ( playerid , CarShop [ 2 ] [ playerid ] , str ) ;
       	}
 	}
 	return 0;
}

stock LoadPlayerVehicle(playerid)
{
	new file[256];
    format(file, sizeof(file), "vehicles/%s.txt", GetPlayerNameEx(playerid));
	if(dini_Exists(file))
	{
		new vehicleid = CreateVehicle(dini_Int(file, "Model"), dini_Float(file, "Pos_X"), dini_Float(file, "Pos_Y"), dini_Float(file, "Pos_Z")+3, dini_Float(file, "Pos_A"), dini_Int(file, "Color1"), dini_Int(file, "Color2"), -1);
        vehicleDB[vehicleid][vLastPos][0] 	= dini_Float(file, "Pos_X");
        vehicleDB[vehicleid][vLastPos][1] 	= dini_Float(file, "Pos_Y");
        vehicleDB[vehicleid][vLastPos][2] 	= dini_Float(file, "Pos_Z");
        vehicleDB[vehicleid][vLastPos][3] 	= dini_Float(file, "Pos_A");
        vehicleDB[vehicleid][Rida]		    = dini_Float(file, "Rida");
        vehicleDB[vehicleid][gas]			= dini_Int(file, "Fuel");
		vehicleDB[vehicleid][vColor][0]  	= dini_Int(file, "Color1");
		vehicleDB[vehicleid][vColor][1]  	= dini_Int(file, "Color2");
		vehicleDB[vehicleid][vPaintjob]  	= dini_Int(file, "Paintjob");
		vehicleDB[vehicleid][vTune][0]   	= dini_Int(file, "Tune0");
		vehicleDB[vehicleid][vTune][1]   	= dini_Int(file, "Tune1");
		vehicleDB[vehicleid][vTune][2]   	= dini_Int(file, "Tune2");
		vehicleDB[vehicleid][vTune][3]   	= dini_Int(file, "Tune3");
		vehicleDB[vehicleid][vTune][4]   	= dini_Int(file, "Tune4");
		vehicleDB[vehicleid][vTune][5]   	= dini_Int(file, "Tune5");
		vehicleDB[vehicleid][vTune][6]   	= dini_Int(file, "Tune6");
		vehicleDB[vehicleid][vTune][7]   	= dini_Int(file, "Tune7");
		vehicleDB[vehicleid][vTune][8]   	= dini_Int(file, "Tune8");
		vehicleDB[vehicleid][vTune][9]   	= dini_Int(file, "Tune9");
		vehicleDB[vehicleid][vTune][10]  	= dini_Int(file, "Tune10");
		vehicleDB[vehicleid][vTune][11]  	= dini_Int(file, "Tune11");
		vehicleDB[vehicleid][vTune][12]  	= dini_Int(file, "Tune12");
		SetVehicleHealth(vehicleid, dini_Float(file, "Health"));
		if(dini_Int(file, "Locked") == 0) { vehicleDB[vehicleid][vLocked] = false; } else { vehicleDB[vehicleid][vLocked] = true; }
		format(vehicleDB[vehicleid][vOwner], 21, "%s", GetPlayerNameEx(playerid));
		format(vehicleDB[vehicleid][vNumberPlate], 9, "%s", dini_Get(file, "NumberPlate"));
		SetVehicleNumberPlate(vehicleid, vehicleDB[vehicleid][vNumberPlate]);
		vehicleDB[vehicleid][vOwned] = true;
		playerDB[playerid][vCarID] = vehicleid;
		SetVehicleToRespawn(vehicleid);
	}
	return 1;
}
stock LoadPlayerVehicle2(playerid)
{
	new file[256];
    format(file, sizeof(file), "vehicles/%s2.txt", GetPlayerNameEx(playerid));
	if(dini_Exists(file))
	{
		new vehicleid = CreateVehicle(dini_Int(file, "Model"), dini_Float(file, "Pos_X"), dini_Float(file, "Pos_Y"), dini_Float(file, "Pos_Z")+3, dini_Float(file, "Pos_A"), dini_Int(file, "Color1"), dini_Int(file, "Color2"), -1);
        vehicleDB[vehicleid][vLastPos][0] 	= dini_Float(file, "Pos_X");
        vehicleDB[vehicleid][vLastPos][1] 	= dini_Float(file, "Pos_Y");
        vehicleDB[vehicleid][vLastPos][2] 	= dini_Float(file, "Pos_Z");
        vehicleDB[vehicleid][vLastPos][3] 	= dini_Float(file, "Pos_A");
        vehicleDB[vehicleid][Rida]		    = dini_Float(file, "Rida");
        vehicleDB[vehicleid][gas]			= dini_Int(file, "Fuel");
		vehicleDB[vehicleid][vColor][0]  	= dini_Int(file, "Color1");
		vehicleDB[vehicleid][vColor][1]  	= dini_Int(file, "Color2");
		vehicleDB[vehicleid][vPaintjob]  	= dini_Int(file, "Paintjob");
		vehicleDB[vehicleid][vTune][0]   	= dini_Int(file, "Tune0");
		vehicleDB[vehicleid][vTune][1]   	= dini_Int(file, "Tune1");
		vehicleDB[vehicleid][vTune][2]   	= dini_Int(file, "Tune2");
		vehicleDB[vehicleid][vTune][3]   	= dini_Int(file, "Tune3");
		vehicleDB[vehicleid][vTune][4]   	= dini_Int(file, "Tune4");
		vehicleDB[vehicleid][vTune][5]   	= dini_Int(file, "Tune5");
		vehicleDB[vehicleid][vTune][6]   	= dini_Int(file, "Tune6");
		vehicleDB[vehicleid][vTune][7]   	= dini_Int(file, "Tune7");
		vehicleDB[vehicleid][vTune][8]   	= dini_Int(file, "Tune8");
		vehicleDB[vehicleid][vTune][9]   	= dini_Int(file, "Tune9");
		vehicleDB[vehicleid][vTune][10]  	= dini_Int(file, "Tune10");
		vehicleDB[vehicleid][vTune][11]  	= dini_Int(file, "Tune11");
		vehicleDB[vehicleid][vTune][12]  	= dini_Int(file, "Tune12");
		SetVehicleHealth(vehicleid, dini_Float(file, "Health"));
		if(dini_Int(file, "Locked") == 0) { vehicleDB[vehicleid][vLocked] = false; } else { vehicleDB[vehicleid][vLocked] = true; }
		format(vehicleDB[vehicleid][vOwner], 21, "%s", GetPlayerNameEx(playerid));
		format(vehicleDB[vehicleid][vNumberPlate], 9, "%s", dini_Get(file, "NumberPlate"));
		SetVehicleNumberPlate(vehicleid, vehicleDB[vehicleid][vNumberPlate]);
		vehicleDB[vehicleid][vOwned] = true;
		playerDB[playerid][vCarID2] = vehicleid;
		SetVehicleToRespawn(vehicleid);
	}
	return 1;
}
stock SavePlayerVehicle(playerid, bool:mode = false)
{
    new file[256];
    format(file, sizeof(file), "vehicles/%s.txt", GetPlayerNameEx(playerid));
    new vehicleid = playerDB[playerid][vCarID], Float:vPos[5];
    if(playerDB[playerid][vCarID] == -1)
	{
		if(dini_Exists(file)) { dini_Remove(file); }
		return 1;
	}
	if(!dini_Exists(file)) { dini_Create(file); }


	GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]);
	GetVehicleZAngle(vehicleid, vPos[3]);
	GetVehicleHealth(vehicleid, vPos[4]);
	dini_IntSet(file,   "Model",       GetVehicleModel(vehicleid));
	dini_FloatSet(file, "Pos_X",       vPos[0]);
	dini_FloatSet(file, "Pos_Y",       vPos[1]);
	dini_FloatSet(file, "Pos_Z",       vPos[2]);
	dini_FloatSet(file, "Pos_A",       vPos[3]);
	dini_FloatSet(file, "Health",      vPos[4]);
	dini_FloatSet(file, "Rida",        vehicleDB[vehicleid][Rida]);
	dini_IntSet(file,   "Fuel",		   vehicleDB[vehicleid][gas]);
	dini_IntSet(file,   "Color1",      vehicleDB[vehicleid][vColor][0]);
    dini_IntSet(file,   "Color2",      vehicleDB[vehicleid][vColor][1]);
    dini_IntSet(file,   "Paintjob",    vehicleDB[vehicleid][vPaintjob]);
    dini_IntSet(file,   "Tune0",       GetVehicleComponentInSlot(vehicleid, 0));
	dini_IntSet(file,   "Tune1",       GetVehicleComponentInSlot(vehicleid, 1));
	dini_IntSet(file,   "Tune2",       GetVehicleComponentInSlot(vehicleid, 2));
	dini_IntSet(file,   "Tune3",       GetVehicleComponentInSlot(vehicleid, 3));
	dini_IntSet(file,   "Tune4",       GetVehicleComponentInSlot(vehicleid, 4));
	dini_IntSet(file,   "Tune5",       GetVehicleComponentInSlot(vehicleid, 5));
	dini_IntSet(file,   "Tune6",       GetVehicleComponentInSlot(vehicleid, 6));
	dini_IntSet(file,   "Tune7",       GetVehicleComponentInSlot(vehicleid, 7));
	dini_IntSet(file,   "Tune8",       GetVehicleComponentInSlot(vehicleid, 8));
	dini_IntSet(file,   "Tune9",       GetVehicleComponentInSlot(vehicleid, 9));
	dini_IntSet(file,   "Tune10",      GetVehicleComponentInSlot(vehicleid, 10));
	dini_IntSet(file,   "Tune11",      GetVehicleComponentInSlot(vehicleid, 11));
	dini_IntSet(file,   "Tune12",      GetVehicleComponentInSlot(vehicleid, 12));
	dini_BoolSet(file,  "Locked",      vehicleDB[vehicleid][vLocked]);
	dini_Set(file,      "NumberPlate", vehicleDB[vehicleid][vNumberPlate]);
	vehicleDB[vehicleid][vLastPos][0] = vPos[0];
	vehicleDB[vehicleid][vLastPos][1] = vPos[1];
	vehicleDB[vehicleid][vLastPos][2] = vPos[2];
	vehicleDB[vehicleid][vLastPos][3] = vPos[3];
	if(mode)
	{
	    // Delete car from server
		if ( GetPVarInt ( playerid , "savedBySaugoti" ) != 1 ) {
			DestroyVehicle(vehicleid);
		}
	    format(vehicleDB[vehicleid][vOwner], 21, "-");
	    format(vehicleDB[vehicleid][vNumberPlate], 9, "-");
	    for(new tune = 0; tune < 13; tune++) vehicleDB[vehicleid][vTune][tune] = 0;
        for(new color = 0; color < 2; color++) vehicleDB[vehicleid][vColor][color] = 0;
		vehicleDB[vehicleid][vPaintjob] = -1;
		vehicleDB[vehicleid][Rida] = 0.0;
		vehicleDB[vehicleid][gas] = 0;
		vehicleDB[vehicleid][vLocked] = false;
		vehicleDB[vehicleid][vOwned] = false;
		playerDB[playerid][vCarID] = -1;
	}
	return 1;
}
stock SavePlayerVehicle2(playerid, bool:mode = false)
{
    new file[256];
    format(file, sizeof(file), "vehicles/%s2.txt", GetPlayerNameEx(playerid));
    new vehicleid = playerDB[playerid][vCarID2], Float:vPos[5];
    if(playerDB[playerid][vCarID2] == -1)
	{
		if(dini_Exists(file)) { dini_Remove(file); }
		return 1;
	}
	if(!dini_Exists(file)) { dini_Create(file); }

	GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]);
	GetVehicleZAngle(vehicleid, vPos[3]);
	GetVehicleHealth(vehicleid, vPos[4]);
	dini_IntSet(file,   "Model",       GetVehicleModel(vehicleid));
	dini_FloatSet(file, "Pos_X",       vPos[0]);
	dini_FloatSet(file, "Pos_Y",       vPos[1]);
	dini_FloatSet(file, "Pos_Z",       vPos[2]);
	dini_FloatSet(file, "Pos_A",       vPos[3]);
	dini_FloatSet(file, "Health",      vPos[4]);
	dini_FloatSet(file, "Rida",        vehicleDB[vehicleid][Rida]);
	dini_IntSet(file,   "Fuel",		   vehicleDB[vehicleid][gas]);
	dini_IntSet(file,   "Color1",      vehicleDB[vehicleid][vColor][0]);
    dini_IntSet(file,   "Color2",      vehicleDB[vehicleid][vColor][1]);
    dini_IntSet(file,   "Paintjob",    vehicleDB[vehicleid][vPaintjob]);
    dini_IntSet(file,   "Tune0",       GetVehicleComponentInSlot(vehicleid, 0));
	dini_IntSet(file,   "Tune1",       GetVehicleComponentInSlot(vehicleid, 1));
	dini_IntSet(file,   "Tune2",       GetVehicleComponentInSlot(vehicleid, 2));
	dini_IntSet(file,   "Tune3",       GetVehicleComponentInSlot(vehicleid, 3));
	dini_IntSet(file,   "Tune4",       GetVehicleComponentInSlot(vehicleid, 4));
	dini_IntSet(file,   "Tune5",       GetVehicleComponentInSlot(vehicleid, 5));
	dini_IntSet(file,   "Tune6",       GetVehicleComponentInSlot(vehicleid, 6));
	dini_IntSet(file,   "Tune7",       GetVehicleComponentInSlot(vehicleid, 7));
	dini_IntSet(file,   "Tune8",       GetVehicleComponentInSlot(vehicleid, 8));
	dini_IntSet(file,   "Tune9",       GetVehicleComponentInSlot(vehicleid, 9));
	dini_IntSet(file,   "Tune10",      GetVehicleComponentInSlot(vehicleid, 10));
	dini_IntSet(file,   "Tune11",      GetVehicleComponentInSlot(vehicleid, 11));
	dini_IntSet(file,   "Tune12",      GetVehicleComponentInSlot(vehicleid, 12));
	dini_BoolSet(file,  "Locked",      vehicleDB[vehicleid][vLocked]);
	dini_Set(file,      "NumberPlate", vehicleDB[vehicleid][vNumberPlate]);
	vehicleDB[vehicleid][vLastPos][0] = vPos[0];
	vehicleDB[vehicleid][vLastPos][1] = vPos[1];
	vehicleDB[vehicleid][vLastPos][2] = vPos[2];
	vehicleDB[vehicleid][vLastPos][3] = vPos[3];
	if(mode)
	{
	    // Delete car from server
	    if ( GetPVarInt ( playerid , "savedBySaugoti" ) != 1 ) {
			DestroyVehicle(vehicleid);
		}
	    format(vehicleDB[vehicleid][vOwner], 21, "-");
	    format(vehicleDB[vehicleid][vNumberPlate], 9, "-");
	    for(new tune = 0; tune < 13; tune++) vehicleDB[vehicleid][vTune][tune] = 0;
        for(new color = 0; color < 2; color++) vehicleDB[vehicleid][vColor][color] = 0;
		vehicleDB[vehicleid][vPaintjob] = -1;
		vehicleDB[vehicleid][Rida] = 0.0;
		vehicleDB[vehicleid][gas] = 0;
		vehicleDB[vehicleid][vLocked] = false;
		vehicleDB[vehicleid][vOwned] = false;
		playerDB[playerid][vCarID2] = -1;
	}
	return 1;
}
stock ShowVehicleInfo(vehicleid)
{
	new str[165], Float:vHealth;
	if(!vehicleDB[vehicleid][vOwned])
	{
	    format(str, 2, "-");
	}
	else
	{
	    GetVehicleHealth(vehicleid, vHealth);
	    format(str, sizeof(str), "{ffffff} Pavadinimas: {FFFF00}%s.\n{ffffff} Bûklë: {FFFF00}%3.0f%%.\n{ffffff} Rida: {FFFF00}%.1f.\n{ffffff} Degalai: {FFFF00}%d.", VehicleNames[GetVehicleModel(vehicleid) - 400], floatdiv(vHealth, 10), vehicleDB[vehicleid][Rida] / 100000, vehicleDB[vehicleid][gas]);
	}
	return str;
}

stock GetVehicleCost(vehicleid)
{
	new model = GetVehicleModel(vehicleid);
	switch(model)
	{
// Old cars
		case 400: return 32500;
		case 542: return 5000;
		case 401: return 12500;
		case 404: return 3500;
		case 405: return 17500;
		case 410: return 15000;
		case 412: return 20000;
		case 602: return 22500;
		case 561: return 17500;
		case 418: return 22500;
		case 500: return 32500;
		case 419: return 8000;
		case 421: return 10000;
		case 422: return 22500;
		case 426: return 20000;
		case 436: return 17500;
		case 439: return 20500;
		case 445: return 25000;
		case 565: return 37500;
		case 507: return 17500;
		case 533: return 20000;
		case 535: return 32500;
		case 536: return 22500;
		case 458: return 30000;
		case 466: return 7500;
		case 483: return 17500;
		case 489: return 45000;
// Sport cars
		case 402: return 42500;
		case 411: return 125000;
		case 415: return 30000;
		case 559: return 42500;
		case 560: return 65000;
		case 562: return 55000;
		case 429: return 35000;
		case 451: return 75000;
		case 475: return 90000;
		case 541: return 50000;
		case 477: return 22500;
		case 480: return 45000;
		case 495: return 225000;
		case 555: return 35000;
		case 579: return 75000;
		case 587: return 45000;
		case 589: return 42500;
		case 603: return 32500;
// Moto cars
	    case 522: return 100000;
		case 461: return 12500;
		case 581: return 9500;
		case 462: return 1000;
		case 463: return 4000;
		case 586: return 32500;
		case 468: return 7500;
		case 521: return 25000;
	}
	return 0;
}

stock VehicleInZone(vehicleid, Float:min_X, Float:min_Y, Float:max_X, Float:max_Y)
{
    new Float:vPos[3]; GetVehiclePos(vehicleid, vPos[0], vPos[1], vPos[2]);
    if((vPos[0] <= max_X && vPos[0] >= min_X) && (vPos[1] <= max_Y && vPos[1] >= min_Y)) return true;
    return false;
}

stock CreateLtuNumberPlate()
{
	new msg[8], str1[2], str2[2], str3[2];
	format(str1, sizeof(str1), "%s", Letters[random(sizeof(Letters))]);
	format(str2, sizeof(str2), "%s", Letters[random(sizeof(Letters))]);
	format(str3, sizeof(str3), "%s", Letters[random(sizeof(Letters))]);
	format(msg, sizeof(msg), "%s%s%s:%d%d%d", str1, str2, str3, random(10), random(10), random(10));
	return msg;
}

stock TimestampToDate(timestamp)
{
	timestamp += (3 * 60 * 60);
    new year = 1970, day = 0, month = 0, hour = 0, mins = 0, sec = 0;
    new days_of_month[12] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
    new returnstring[21];
    while(timestamp > 31622400)
	{
		timestamp -= 31536000;
        if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) timestamp -= 86400;
        ++ year;
    }
    if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) days_of_month[1] = 29;
    else days_of_month[1] = 28;
    while(timestamp > 86400)
	{
		timestamp -= 86400;
		++ day;
        if (day == days_of_month[month]) day = 0, ++ month;
    }
	while(timestamp > 60)
	{
        timestamp -= 60;
		++ mins;
        if (mins == 60) mins = 0, ++ hour;
    }
    sec = timestamp;
    format(returnstring, 21, "%02d/%02d/%02d %02d:%02d:%02d", year, month + 1, day + 1, hour, mins, sec);
    return returnstring;
}



stock ConvertSeconds(sekundes)
{
	new str[37], msg[10], minutes, valandos, dienos;
 	while(sekundes > 59) { sekundes -= 60; minutes ++; }
  	while(minutes > 59) { minutes -= 60; valandos ++; }
   	while(valandos > 23) { valandos -= 24; dienos ++; }
   	if(dienos > 0) { format(msg, 7, "%dd. ", dienos); strcat(str, msg); }
    if(valandos > 0) { format(msg, 10, "%dval. ", valandos); strcat(str, msg); }
    if(minutes > 0) { format(msg, 10, "%dmin. ", minutes); strcat(str, msg); }
    if(sekundes > 0)
    {
    	if(minutes < 1 && valandos < 1 && dienos < 1)
     	{
      		str = "1min.";
        }
        else
        {
        	format(msg, 9, "%dsec.", sekundes);
         	strcat(str, msg);
        }
      }
	return str;
}

stock IsVis(dYear)
{
    if((dYear % 4 == 0 && dYear % 100 != 0) || dYear % 400 == 0) return true;
    else return false;
}

stock GetSecondCountInYear(dYear)
{
    if(IsVis(dYear)) return 31622400;
    else return 31536000;
}

stock j_GetPlayerName(playerid)
{
    GetPlayerName(playerid, playerDB[playerid][PlayerName], 21);
    if(!strcmp("--", playerDB[playerid][PlayerName], true))
    {
        j_GetPlayerName(playerid);
	}
}

stock j_GetPlayerIp(playerid)
{
	GetPlayerIp(playerid, playerDB[playerid][PlayerIP], 16);
	if(!strcmp("--", playerDB[playerid][PlayerIP], true))
    {
        j_GetPlayerIp(playerid);
	}
}

stock GetDateEx()
{
	new date[30], Year, Month, Day, Hour, Minute, Second;
	getdate(Year, Month, Day);
	gettime(Hour, Minute, Second);
	format(date, sizeof(date), "%02d/%02d/%d %02d:%02d", Day, Month, Year, Hour, Minute);
	return date;
}
stock GautiDiena( )
{
	new date[30], Year, Month, Day;
	getdate(Year, Month, Day);
	format(date, sizeof(date), "%02d/%02d/%d", Day, Month, Year);
	return date;
}

stock BanPlayer(playerid, giveplayerid, reason[])
{
	new Query[300];

	if(playerid == -1)
	{
		format(Query, sizeof(Query), "INSERT INTO `bannedplayers` (`Admin`, `User`, `IP`, `BanReason`, `Time`) VALUES ('ANTI CHEAT', '%s', '%s', '%s', '%s')", GetPlayerNameEx(giveplayerid), GetPlayerIpEx(giveplayerid), reason, GetDateEx());
	}
	else
	{
		format(Query, sizeof(Query), "INSERT INTO `bannedplayers` (`Admin`, `User`, `IP`, `BanReason`, `Time`) VALUES ('%s', '%s', '%s', '%s', '%s')", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), GetPlayerIpEx(giveplayerid), reason, GetDateEx());
	}

	mysql_query(Query);

	return IsmestiZaideja(giveplayerid, 100);
}
stock IsmestiZaideja(playerid, Time)
{
	SetTimerEx("KickEx", Time, false, "d", playerid);

	//SavePlayerData(playerid);

	return 1;
}

stock ExitFromCarShop(playerid)
{
	if(playerDB[playerid][vChoosedCategory] != -1)
	{
	    for ( new td = 0; td < 11; td++ ) PlayerTextDrawHide ( playerid , CarShop [ td ] [ playerid ] ) ;
		CancelSelectTextDraw ( playerid ) ;
		DestroyVehicle ( playerDB [ playerid ] [ vVeh ] ) ;
		playerDB [ playerid ] [ vChoosedCategory ] = -1;
		playerDB [ playerid ] [ vPressed ] = -1;
		playerDB [ playerid ] [ vVeh ] = -1;
		SetPlayerVirtualWorld ( playerid, 0 ) ;
		SetPlayerPos ( playerid, 2369.5515,243.9807,26.4900 ) ;
		SetPlayerFacingAngle ( playerid, 320.0 ) ;
		TogglePlayerControllable ( playerid, 1 ) ;
		SetCameraBehindPlayer ( playerid ) ;
		IjungiameVisusTD ( playerid ) ;
	}
	return 1;
}

stock NutraukiaGrobima(playerid)
{
    new zin[107];
	if(playerDB[playerid][grobia][0])
	{
		KillTimer(grobiamsandeli1);
		playerDB[playerid][grobia][0] = false;
		GrobiamasSandelis[0] = false;
		for(new i; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && (playerDB[i][plead] == 6 || playerDB[i][plead] == 8))
			{
			    if(i == playerid) continue;
				format(zin, 106, "* Mafijos vadas %s mirë/atsijungë, todël galite vël ið naujo grobti sandelá LS fermose.!", GetPlayerNameEx(playerid));
				SendClientMessage(i, GREEN, zin);
			}
		}
	}
	if(playerDB[playerid][grobia][1])
	{
		KillTimer(grobiamsandeli2);
		playerDB[playerid][grobia][1] = false;
		GrobiamasSandelis[1] = false;
		for(new i; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i) && (playerDB[i][plead] == 6 || playerDB[i][plead] == 8))
			{
			    if(i == playerid) continue;
				format(zin, 106, "* Mafijos vadas %s mire/atsijungë, todël galite vël ið naujo grobti sandelá LS mieste.!", GetPlayerNameEx(playerid));
				SendClientMessage(i, GREEN, zin);
			}
		}
	}
	return 1;
}

stock UpdateSandeliuLabel()
{
	new str[190];
	format(str, sizeof(str), "{ffffff}Sandelyje yra:\n{FFC400}%s {ffffff}LSD\n{FFC400}%s {ffffff}Amfetamino\nSandelis priklauso: {FFC400}%s {ffffff}mafijos lyderiui.", konvertuoti_pinigus(LSD[0]), konvertuoti_pinigus(AMFA[0]), SanSavininkas[0]);
	Update3DTextLabelText(sandeliols3d[0], 0xFFFFFFFF, str);

	format(str, sizeof(str), "{ffffff}Sandelyje yra:\n{FFC400}%s {ffffff}LSD\n{FFC400}%s {ffffff}Amfetamino\nSandelis priklauso: {FFC400}%s {ffffff}mafijos lyderiui.", konvertuoti_pinigus(LSD[1]), konvertuoti_pinigus(AMFA[1]), SanSavininkas[1]);
	Update3DTextLabelText(sandeliols3d[1], 0xFFFFFFFF, str);
	return 1;
}

public settime()
{
	new string[256],year,month,day,hours,minutes;
	getdate(year, month, day), gettime(hours, minutes);
	format(string, sizeof string, "%d/%s%d/%s%d", day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year);
	TextDrawSetString(datike, string);
	format(string, sizeof string, "%s%d:%s%d", (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes);
	TextDrawSetString(laikiux, string);
	
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
	    if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
	    if(playerDB[p][ikalintas])
	    {
	        if(playerDB[p][kalejimo_laikas] > 0)
	        { 
	            if(playerDB[p][pHealthCheck] < gettime() && playerDB[p][pHealthCheck] != -5)
				{
		            if(!PlayerInZone(p, 2750.5090, 2730.8125, 2875.6328, 2792.5319) && !PlayerInZone(p, 1695.436279,-1605.636108, 1815.436279,-1517.636108))
					{
					    SetPlayerHealthEx(p, 0.0);
					    continue;
					}
		            playerDB[p][kalejimo_laikas] --;
				}
			}
			if(playerDB[p][kalejimo_laikas] < 1)
			{
   				UnjailPlayer(p);
			}
		}
	}
	return 1;
}

public BadEngine()
{
    new veh, Float:spd[3], Float:hls, str [ 140 ] ;
    for(new i; i != MAX_PLAYERS; i++)
    {
        if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
        {
	        if(GetPlayerSpeed(i) >= MAX_SPEED_KICK)
	        {
		            format(str, sizeof(str), "[Serveris][4] %s iðmestas ið serverio uþ SpeedHack naudojimà.", GetPlayerNameEx(i));
		            SendClientMessageToAll(RED, str);
              		SetTimerEx("KickEx", 100, false, "d", i);
		            continue;
				}
			}
        if( !BE_Play_Check[i] ) { continue; }
        veh = GetPlayerVehicleID( i );
        if( !veh ) { continue; }
        GetVehicleHealth( veh, hls );
        if( hls > BE_MIN_HLS ) { continue; }
        GetVehicleVelocity( veh, spd[0], spd[1], spd[2] );

        if( floatabs(spd[0]) > floatabs(spd[1]) )
        {
            if( floatabs(spd[ 0 ]) > BE_MAX_SPD )
            {
                hls = BE_MAX_SPD / floatabs(spd[ 0 ]);
                SetVehicleVelocity( veh, spd[0]*hls, spd[1]*hls, spd[2] );
            }
        }
        else
        {
            if( floatabs(spd[ 1 ]) > BE_MAX_SPD )
            {
                hls = BE_MAX_SPD / floatabs(spd[ 1 ]);
                SetVehicleVelocity( veh, spd[0]*hls, spd[1]*hls, spd[2] );
            }
        }
    }
    return 1;
}








stock CreateBusinesses() // by Johurt
{
// Kad nesibugintu.

	for(new b = 0; b < MAX_BUSINESSES; b++) format(bInfo[b][bOwner], 2, "-");
// Kuriame namus.

	//Miesteliø VERSLAI : PD miestelyje.
	AddBusiness(664.6215,-542.6449,18.7236, 2984154, 100, "Lietuvos Gaistrinë");
	AddBusiness(820.5734,-575.9155,16.5363, 5400000, 180, "Dviraèiø Parduotuvë");
	AddBusiness(822.4719,-557.2521,16.3359, 5400000, 180, "Maisto Parduotuvë");
	AddBusiness(801.0605,-545.6128,16.3359, 4500000, 150, "Sandelis");
	AddBusiness(801.5450,-574.2693,16.3359, 3000000, 100, "Baldai");
	AddBusiness(710.8387,-569.1781,16.3359, 9600000, 320, "Dviraèiø parduotuvë");
	AddBusiness(712.4814,-498.9431,16.3359, 5400000, 180, "Maisto Parduotuvë");
	AddBusiness(723.2671,-464.3302,16.3359, 7500000, 250, "Maðinos Taisykla");
	AddBusiness(701.9727,-493.9893,16.3359, 5100000, 170, "Maisto Parduotuvë");
	AddBusiness(694.9147,-499.3876,16.3359, 5100000, 170, "Maisto Parduotuvë");
	AddBusiness(690.7860,-506.1917,16.3359, 5100000, 170, "Maisto Parduotuvë");
	//AddBusiness(672.5914,-496.8743,16.3359, 7200000, 240, "Kirpykla");
	//AddBusiness(671.9393,-519.9326,16.3359, 5985000, 170, "Maisto Parduotuvë");
	//AddBusiness(613.1974,-518.2107,16.3533, 600141, 200, "Automobiliø Dalys");
	//AddBusiness(648.7159,-519.8330,16.5537, 597854, 200, "Loterija");
	AddBusiness(663.7637,-551.6095,16.3359, 9260004, 310, "Degalinë GASSO");
	AddBusiness(672.5496,-646.9625,16.3359, 5550000, 185, "Langø Parduotuvë");
	AddBusiness(672.7567,-635.3135,16.3359, 5700000, 190, "Baldø Parduotuvë");
	AddBusiness(672.4274,-627.8773,16.3359, 4212000, 140, "Maisto Parduotuvë");
	AddBusiness(691.1412,-614.0758,16.3359, 3141000, 120, "Maisto Parduotuvë");
	AddBusiness(690.9618,-621.2766,16.3359, 5014000, 170, "Rûbø Parduotuvë");
	AddBusiness(690.5367,-633.0535,16.3359, 4475214, 150, "Garsiakalbiø Parduotuvë");
	AddBusiness(691.2820,-640.4374,16.3197, 2954741, 110, "Meksikietiðkas Maistas");
	//Miesteliø VERSLAI : Medikø miestelyje.
	AddBusiness(1228.1603,182.2025,20.3187, 6000000, 200, "Baikeriø motociklø parduotuvë");
	AddBusiness(1242.0475,211.6291,19.5547, 3600000, 120, "Kavinukë");
	AddBusiness(1243.2261,217.0716,23.0555, 7200000, 240, "Harvin's Hardware");
	AddBusiness(1256.1479,242.3538,19.5547, 3000000, 100, "Miller ir Son");
	AddBusiness(1258.5543,204.0051,19.7174, 6300000, 210, "Árankiø Parduotuvë");
	AddBusiness(1267.6482,224.6939,19.5547, 7500000, 250, "Dovanø Parduotuvë");
	AddBusiness(1311.6685,229.1198,19.5547, 2400000, 80, "Parduotuvë 'JeanPerrie'");
	AddBusiness(1318.5730,226.2003,19.5469, 4200000, 140, "Sandelis");
	AddBusiness(1325.1416,223.9267,19.5547, 5400000, 180, "Kamerø parduotuvë");
	AddBusiness(1345.3107,214.7494,19.5469, 3600000, 120, "Parduotuvë 'Lidl'");
	AddBusiness(1360.0100,206.1219,19.5547, 4800000, 160, "Parduotuvë 'big S'");
	AddBusiness(1404.2512,238.8855,19.5547, 6000000, 200, "Rûbø Parduotuvë 'Too Cool'");
	AddBusiness(1346.3335,325.0795,19.7008, 7200000, 140, "Maisto Parduotuvë");
	AddBusiness(1415.2064,262.0702,19.5618, 8100000, 270, "TV Parduotuvë");
	AddBusiness(1322.7150,352.1332,19.5547, 5400000, 180, "Parduotuvë 'Locals Only'");
	AddBusiness(1324.6101,286.3615,20.0452, 3900000, 130, "Sprunk gamykla");
	AddBusiness(1289.3647,270.8395,19.5547, 10800000, 360, "Loterija 'Inside Track'");
	AddBusiness(1295.8894,287.7261,19.5469, 10200000, 340, "Rûbø Parduotuvë");
	AddBusiness(1324.1967,187.9428,23.6435, 12000000, 400, "Vieðbutis");//++
	AddBusiness(1283.3430,381.5218,19.5547, 2700000, 90, "Maisto Parduotuvë");
	AddBusiness(1328.7527,428.6092,20.4095, 4500000, 150, "UAB Ðvara");
	//VERSLAI uþ kreditus. Jø dabartinë pocizijà jûroje.
	AddBusiness(1294.7119,236.1818,19.5547, 9000000, 300, "Restaurant");
	//AddBusiness(203.9624,-63.5557,1.5781, 9000000, 300, "Stadionas");
	AddBusiness(2017.4293,1024.2268,996.8740, 12000000, 400, "Kazino");
	AddBusiness(2382.3022,232.5803,26.5382, 12000000, 400, "Maðinø Turgus"); //++
	AddBusiness(375.8958,168.3148,1008.3828, 11400000, 380, "Vyriausybë");
	AddBusiness(255.0865,-55.2133,1.5703, 7500000, 250, "Telefonø Parduotuvë");
	//VERSKAI kurie parduoti uþ kreditus. - Ðiuo metu nëra.
	return 1;
}
stock AddBusiness(Float:Biz_X, Float:Biz_Y, Float:Biz_Z, Biz_Kaina, Biz_Navaras, Biz_Pav[]) // by Johurt
{
	CreatedBusinesses ++;
    if(CreatedBusinesses > MAX_BUSINESSES - 1)
    {
        print("Klaida. Serveris sukure daugiau verslu nei nustatyta MAX_BUSINESSES.");
        SendRconCommand("exit");
        return 1;
    }
    new file[128], str[340], b = CreatedBusinesses;
    format(file, sizeof(file), "saves/businesses/%d.txt", b);
	if(!dini_Exists(file))
	{
	    bInfo[b][bBuyed] = false;
	    format(bInfo[b][bOwner], 2, "-");
	    format(bInfo[b][bName], 128, "%s", Biz_Pav);
	    bInfo[b][bMoney] = 0;
	    bInfo[b][bProfit] = Biz_Navaras;
		bInfo[b][bCost] = Biz_Kaina;
		bInfo[b][bPos_X] = Biz_X;
		bInfo[b][bPos_Y] = Biz_Y;
		bInfo[b][bPos_Z] = Biz_Z;
		bInfo[b][bLabel] =  Create3DTextLabel("-", 0xF3FF02FF, bInfo[b][bPos_X], bInfo[b][bPos_Y], bInfo[b][bPos_Z], 7.0, 0, 0);
		format(str, sizeof(str), "Verslo pavadinimas: {ff9900}%s.\n{ffffff}Verslas {ff9900}parduodamas.\n{ffffff}Verslo kaina: {ff9900}%s.\n{ffffff}Verslas atneða {ff9900}%s/min\n{ffffff}Norëdami nusipirkti spauskite {ff9900}ENTER.", bInfo[b][bName], konvertuoti_pinigus(bInfo[b][bCost]), konvertuoti_pinigus(bInfo[b][bProfit]));
        Update3DTextLabelText(bInfo[b][bLabel], 0xFFFFFFFF, str);
        SaveBusiness(b);
	}
	else
	{
	    if(dini_Int(file, "Buyed") <= 0) { bInfo[b][bBuyed] = false; } else { bInfo[b][bBuyed] = true; }
		format(bInfo[b][bOwner], 21, "%s", dini_Get(file, "Owner"));
		format(bInfo[b][bName], 128, "%s", Biz_Pav);
	    bInfo[b][bMoney] = dini_Int(file, "Money");
	    bInfo[b][bProfit] = Biz_Navaras;
		bInfo[b][bCost] = Biz_Kaina;
		bInfo[b][bPos_X] = Biz_X;
		bInfo[b][bPos_Y] = Biz_Y;
		bInfo[b][bPos_Z] = Biz_Z;
		bInfo[b][bLabel] =  Create3DTextLabel("-", 0xF3FF02FF, bInfo[b][bPos_X], bInfo[b][bPos_Y], bInfo[b][bPos_Z], 7.0, 0, 0);
		printf("%s biznio uþkrauta %d ",bInfo[b][bOwner],bInfo[b][bMoney]);
		if(!bInfo[b][bBuyed])
		{
			format(str, sizeof(str), "Verslo pavadinimas: {ff9900}%s.\n{ffffff}Verslas {ff9900}parduodamas.\n{ffffff}Verslo kaina: {ff9900}%s.\n{ffffff}Verslas atneða {ff9900}%s/min\n{ffffff}Norëdami nusipirkti spauskite {ff9900}ENTER.", bInfo[b][bName], konvertuoti_pinigus(bInfo[b][bCost]), konvertuoti_pinigus(bInfo[b][bProfit]));
		}
		else
		{
		    format(str, sizeof(str), "Verslo pavadinimas: {ff9900}%s.\n{ffffff}Verslas {ff9900}neparduodamas.\n{ffffff}Verslo savininkas: {ff9900}%s.\n{ffffff}Verslas atneða {ff9900}%s/min", bInfo[b][bName], bInfo[b][bOwner], konvertuoti_pinigus(bInfo[b][bProfit]));
		}
		Update3DTextLabelText(bInfo[b][bLabel], 0xFFFFFFFF, str);
	}
	bInfo[b][bPickup] = CreatePickup(1318, 1, bInfo[b][bPos_X], bInfo[b][bPos_Y], bInfo[b][bPos_Z], 0);
	return 1;
}
stock SaveBusiness(businessid) // by Johurt
{
    new file[128], b = businessid;
    format(file, sizeof(file), "saves/businesses/%d.txt", b);
    if(!dini_Exists(file)) dini_Create(file);
    dini_BoolSet(file,  "Buyed",		bInfo[b][bBuyed]);
    dini_Set(file,		"Owner",		bInfo[b][bOwner]);
	dini_IntSet(file,	"Money",		bInfo[b][bMoney]);
	printf("Nupirktas: %d, Savininkas %s, Pingai %d",bInfo[b][bBuyed],bInfo[b][bOwner],bInfo[b][bMoney]);
	return 1;
}
stock UpdateBusiness(businessid) // by Johurt
{
	new b = businessid, str[340];
	if(!bInfo[b][bBuyed])
	{
		format(str, sizeof(str), "Verslo pavadinimas: {FFB700}%s.\n{ffffff}Verslas {FFB700}parduodamas.\n{ffffff}Verslo kaina: {FFB700}%s.\n{ffffff}Verslas atneða {FFB700}%s/min\n{ffffff}Norëdami nusipirkti spauskite {FFB700}ENTER.", bInfo[b][bName], konvertuoti_pinigus(bInfo[b][bCost]), konvertuoti_pinigus(bInfo[b][bProfit]));
	}
	else
	{
		format(str, sizeof(str), "Verslo pavadinimas: {FFB700}%s.\n{ffffff}Verslas {FFB700}neparduodamas.\n{ffffff}Verslo savininkas: {FFB700}%s.\n{ffffff}Verslas atneða {FFB700}%s/min", bInfo[b][bName], bInfo[b][bOwner], konvertuoti_pinigus(bInfo[b][bProfit]));
	}
	Update3DTextLabelText(bInfo[b][bLabel], 0xFFFFFFFF, str);
	return 1;
}

stock PlayerHaveBusiness(playerid) // by Johurt
{
    for(new b = 0; b < MAX_BUSINESSES; b++)
    {
        if(!strcmp(bInfo[b][bOwner], GetPlayerNameEx(playerid), true)) return b;
    }
	return -1;
}
stock JailPlayer(playerid, time)
{
    playerDB[playerid][ikalintas] = true;
    playerDB[playerid][kalejimo_laikas] += time;
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerPos(playerid, 2786.7173, 2746.4873, 14.2870);
	SetPlayerFacingAngle(playerid, 0.0);
	SetPlayerTWanted(playerid, 0);
	SetPlayerHealthEx(playerid, 100.0);
	ResetPlayerWeaponsEx(playerid);
	playerDB[playerid][NamoID] = -1;
	Surakinti(playerid, true);
	DisableAllPlayerCheckpoints(playerid);
	playerDB[playerid][nesamaisadarbas]=false;
	TextDrawHideForPlayer(playerid,KalejimoLaikoTd[playerid]);
	TextDrawShowForPlayer(playerid,KalejimoLaikoTd[playerid]);
	return 1;
}

stock UnjailPlayer(playerid)
{
    playerDB[playerid][ikalintas] = false;
    playerDB[playerid][kalejimo_laikas] = 0;
    SetPlayerInterior(playerid, 0);
    SetPlayerColor(playerid,PLAYCOL_HIDDEN);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerPos(playerid, 2183.3962,-73.1821,27.3741);
	SetPlayerFacingAngle(playerid, 143.7382);
	SetPlayerHealthEx(playerid, 100.0);
	playerDB[playerid][NamoID] = -1;
	Surakinti(playerid, true);
	DisableAllPlayerCheckpoints(playerid);
	playerDB[playerid][nesamaisa]=false;
	TextDrawHideForPlayer(playerid,KalejimoLaikoTd[playerid]);
	return 1;
}

stock MovePlayerToJail(playerid)
{
    playerDB[playerid][ikalintas] = true;
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
	SetPlayerPos(playerid, 2786.7173, 2746.4873, 14.2870);
	SetPlayerFacingAngle(playerid, 0.0);
	SetPlayerTWanted(playerid, 0);
	SetPlayerHealthEx(playerid, 100.0);
	ResetPlayerWeaponsEx(playerid);
	playerDB[playerid][NamoID] = -1;
	Surakinti(playerid, true);
	TextDrawHideForPlayer(playerid,KalejimoLaikoTd[playerid]);
	TextDrawShowForPlayer(playerid,KalejimoLaikoTd[playerid]);
	return 1;
}

stock CheckMute(playerid)
{
	if(playerDB[playerid][Muted] > gettime())
	{
		new str[50], laikas = playerDB[playerid][Muted] - gettime();
		format(str, sizeof(str), "* Jûs negalite raðyti. Jûs uþtildytas %ssec.", konvertuoti_pinigus(laikas));
		SendClientMessage(playerid, YELLOW, str);
		return 1;
	}
	return 0;
}
public Sekundinis()
{
    new gunid, Float:pHP, Float:pAR, Float:pPos[3];
	for(new p = 0; p < MAX_PLAYERS; p++)
 	{
 	    if(IsPlayerConnected(p))
 	    {
 	    	if(Prisijunges[p])
 	    	{
		        //CheckWeapon(p);
		        if(playerDB[p][admin] < 5)
		        {
			  		gunid = GetPlayerWeapon(p);
					if(gunid == 38 || gunid == 37 || gunid == 45 || gunid == 44 || gunid == 39 || gunid == 40 || gunid == 36 || gunid == 35 || gunid == 26 || gunid == 18 || gunid == 16 || gunid == 13 || gunid == 12 || gunid == 11 || gunid == 10 || gunid == 9 || gunid == 7 || gunid == 4 || gunid == 1)
					{
						new str [ 120 ] ;
						ResetPlayerWeaponsEx(p);
						format(str, sizeof(str), "[Serveris][1] %s iðmestas ið serverio uþ neleistinø ginklø naudojimà.", GetPlayerNameEx(p));
						SendClientMessageToAll(RED, str);
       					SetTimerEx("KickEx", 100, false, "d", p);
						return true;
					}
				}
				if(!PlayerInZone(p, 2750.5090, 2730.8125, 2875.6328, 2792.5319))
				{
					if(gunid != 0 && gunid != 43 && gunid != 27 && gunid != 46 && gunid != 5 && gunid != 6 && gunid != 14 && gunid != 22 && gunid != 41 && !playerDB[p][gLicenzija] && playerDB[p][specialybe] != 1 && playerDB[p][specialybe] != 10 && playerDB[p][specialybe] != 5 && !playerDB[p][DalyvaujaPB] && playerDB[p][admin] < 5)
					{
					    ResetPlayerWeaponsEx(p);
					    SendClientMessage(p, YELLOW, "* Negalite turëti ginklø todël, kad neturite ginklø licenzijos, jà galite nusipirkti ginklu parduotuvëje.");
					}
				}
				// HP ir Armour anticheat'as
				if(playerDB[p][pHealthCheck] < gettime() && playerDB[p][pHealthCheck] != -5)
				{
					GetPlayerHealth(p, pHP);
					GetPlayerArmour(p, pAR);
					if(pHP > playerDB[p][PlayerHealth])
					{
					    SetPlayerHealth(p, playerDB[p][PlayerHealth]);
					}
					else
					{
					    playerDB[p][PlayerHealth] = pHP;
					}
					if(pAR > playerDB[p][PlayerArmour])
					{
					    SetPlayerArmour(p, playerDB[p][PlayerArmour]);
					}
					else
					{
					    playerDB[p][PlayerArmour] = pAR;
					}
				}
		// Anti unfreeze
		        if(playerDB[p][cuffed])
				{
					TogglePlayerControllable(p, false);
					SetPlayerSpecialAction(p, SPECIAL_ACTION_CUFFED);
				}
		// Anti ping
		        if(GetPlayerPing(p) >= MAX_PING_KICK)
		        {
		            if(Prisijunges[p])
		            {
			            SendClientMessage(p, YELLOW, "* [ANTI-PING] Jûsø pingas per didelis, praðome já susitvarkyti.");
			            new str[70];
						format(str, sizeof(str), "[ANTI-PING] Þaidëjas %s iðmestas uþ per didelá pingà!", GetPlayerNameEx(p));
			            SetTimerEx("KickEx", 100, false, "d", p);
		            }
				}
				if(SekamasZaidejas[p] !=-1)
				{
					GetPlayerPos(SekamasZaidejas[p], pPos[0], pPos[1], pPos[2]);
					SetPlayerCheckpointEx(p,21,pPos[0], pPos[1], pPos[2],2);
				}
			}
		}
	}
	return 1;
}
//Þvejybos Sistema
public Zvejoja(playerid)
{
    GameTextForPlayer(playerid, "~W~UZKIBO SPAUDINEK ~r~SPACE~w~ MYGTUKA!", 3700, 4);
    UzkiboEx[playerid] = SetTimerEx("Uzkibo", 3700, false, "d", playerid);
    zvejybosbar[playerid] = CreateProgressBar(161.00, 419.00, 313.50, 3.50, -962114305, 100.0);
	ShowProgressBarForPlayer(playerid, zvejybosbar[playerid]);
	SetProgressBarValue(zvejybosbar[playerid], playerDB[playerid][kiekistrauke]);
	playerDB[playerid][laikastraukti] = true;
	return 1;
}

public Uzkibo(playerid)
{
    if(playerDB[playerid][kiekistrauke] < 100)
    {
        GameTextForPlayer(playerid, "~W~ZUVIS PABEGO", 5000, 4);
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
        ClearAnimations(playerid);
        TogglePlayerControllable(playerid,true);
		playerDB[playerid][kiekistrauke] = 0;
		playerDB[playerid][zvejoja] = false;
	 	playerDB[playerid][laikastraukti] = false;
		if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
		DestroyProgressBar(zvejybosbar[playerid]);
	    zvejybosbar[playerid] = INVALID_BAR_ID;
        return 1;
    }
    new str[40];
    switch(random(5))
	{
 		case 0: format(str, sizeof(str), "* Pagavai ungurá kuris svërë %0.2f KG", 0.6+random(20)), GameTextForPlayer(playerid, "~G~PAGAVAI!", 3000, 4), playerDB[playerid][ungurys] ++;
 		case 1: format(str, sizeof(str), "* Pagavai karosà kuris svërë %0.2f KG", 0.3+random(20)), GameTextForPlayer(playerid, "~G~PAGAVAI!", 3000, 4), playerDB[playerid][karosas] ++;
 		case 2: format(str, sizeof(str), "* Pagavai karpá kuris svërë %0.2f KG", 0.9+random(20)), GameTextForPlayer(playerid, "~G~PAGAVAI!", 3000, 4), playerDB[playerid][karpis] ++;
 		case 3: format(str, sizeof(str), "* Pagavai karðá kuris svërë %0.2f KG", 0.7+random(20)), GameTextForPlayer(playerid, "~G~PAGAVAI!", 3000, 4), playerDB[playerid][karsis] ++;
 		case 4: format(str, sizeof(str), "* Pagavai lydekà kuri svërë %0.2f KG", 0.2+random(20)), GameTextForPlayer(playerid, "~G~PAGAVAI!", 3000, 4), playerDB[playerid][lydeka] ++;
	}
	SendClientMessage(playerid, YELLOW, str);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	ClearAnimations(playerid);
    TogglePlayerControllable(playerid,true);
	playerDB[playerid][kiekistrauke] = 0;
	playerDB[playerid][zvejoja] = false;
 	playerDB[playerid][laikastraukti] = false;
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	DestroyProgressBar(zvejybosbar[playerid]);
    zvejybosbar[playerid] = INVALID_BAR_ID;
	return 1;
}
stock LoadPelnai()
{
    new file[256] = "saves/Pelnai.txt";
	if(dini_Exists(file))
	{
		Pelnas[0] = dini_Int(file, "PD");
		Pelnas[1] = dini_Int(file, "Mechaniku");
		Pelnas[2] = dini_Int(file, "Taxi");
		Pelnas[3] = dini_Int(file, "Mediku");
		Pelnas[4] = dini_Int(file, "Dyleriu");
		Pelnas[5] = dini_Int(file, "Russian");
		Pelnas[6] = dini_Int(file, "Yakuza");
		Pelnas[7] = dini_Int(file, "SWAT");
		Pelnas[8] = dini_Int(file, "FURU");
		Pelnas[9] = dini_Int(file, "Radistu");
		Pelnas[10] = dini_Int(file, "Baikeriu");
		Pelnas[11] = dini_Int(file, "Klubo");
		Pelnas[12] = dini_Int(file, "Kluboo");
		Pelnas[13] = dini_Int(file, "SPD");
	}
	else
	{
		for(new p = 0; p < sizeof(Pelnas); p++)
		{
			Pelnas[p] = 0;
		}
	}
	return 1;
}

stock SavePelnai()
{
    new file[256] = "saves/Pelnai.txt";
	if(!dini_Exists(file)) dini_Create(file);
	dini_IntSet(file, "PD", Pelnas[0]);
	dini_IntSet(file, "Mechaniku", Pelnas[1]);
	dini_IntSet(file, "Taxi", Pelnas[2]);
	dini_IntSet(file, "Mediku", Pelnas[3]);
	dini_IntSet(file, "Dyleriu", Pelnas[4]);
	dini_IntSet(file, "Rifa", Pelnas[5]);
	dini_IntSet(file, "Groove", Pelnas[6]);
	dini_IntSet(file, "SWAT", Pelnas[7]);
	dini_IntSet(file, "FURU", Pelnas[8]);
	dini_IntSet(file, "Radistu", Pelnas[9]);
	dini_IntSet(file, "Baikeriu", Pelnas[10]);
	dini_IntSet(file, "Klubo", Pelnas[11]);
	dini_IntSet(file, "Kluboo", Pelnas[12]);
	dini_IntSet(file, "SPD", Pelnas[13]);
	return 1;
}
//Kraunam sandelius
stock LoadSandeliai()
{
    new file[50] = "saves/Sandeliai.txt";
    format(SanSavininkas[0], 2, "--");
    SanNupirktas[0] = false;
    format(SanSavininkas[1], 2, "--");
    SanNupirktas[1] = false;
	if(dini_Exists(file))
	{
		LSD[0] = dini_Int(file, "LSD1");
		AMFA[0] = dini_Int(file, "AMFA1");
		format(SanSavininkas[0], 20, "%s", dini_Get(file, "Savininkas1"));
		SanNupirktas[0] = !!dini_Int(file, "Nupirktas1");
		LSD[1] = dini_Int(file, "LSD2");
		AMFA[1] = dini_Int(file, "AMFA2");
		format(SanSavininkas[1], 20, "%s", dini_Get(file, "Savininkas2"));
		SanNupirktas[1] = !!dini_Int(file, "Nupirktas2");
	}
	else
	{
		LSD[0] = 0;
		AMFA[0] = 0;
		LSD[1] = 0;
		AMFA[1] = 0;
	}
	return 1;
}
//Iðsaugome sandelius.
stock SaveSandeliai()
{
    new file[50] = "saves/Sandeliai.txt";
	if(!dini_Exists(file)) dini_Create(file);
	dini_IntSet(file, "LSD1", LSD[0]);
	dini_IntSet(file, "AMFA1", AMFA[0]);
	dini_Set(file, "Savininkas1", SanSavininkas[0]);
	dini_BoolSet(file, "Nupirktas1", SanNupirktas[0]);
	dini_IntSet(file, "LSD2", LSD[1]);
	dini_IntSet(file, "AMFA2", AMFA[1]);
	dini_Set(file, "Savininkas2", SanSavininkas[1]);
	dini_BoolSet(file, "Nupirktas2", SanNupirktas[1]);
	return 1;
}
stock GetPelnasIDFromLeader(playerid)
{
	switch(playerDB[playerid][plead])
	{
	    case LEAD_FARAI: return 0;
	    case LEAD_MEDIKAI: return 3;
	    case LEAD_TAXI: return 2;
        case LEAD_Mechanikas: return 1;
        case LEAD_Gdyleriai: return 4;
        case LEAD_Arifa: return 5;
        case LEAD_Gstreet: return 6;
        case LEAD_SWAT: return 7;
        case LEAD_FUROS: return 8;
        case LEAD_RADISTAS: return 9;
        case LEAD_BAIKERIAI: return 10;
        case LEAD_KLUBAS: return 11;
        case LEAD_KLUBASS: return 12;
        case LEAD_SPD: return 13;
        default: return -1;
	}
	return -1;
}

stock GetJobFromFaction(faction)
{
	switch(faction)
	{
	    case LEAD_FARAI: return 1;
	    case LEAD_MEDIKAI: return 2;
	    case LEAD_TAXI: return 3;
	    case LEAD_Mechanikas: return 4;
        case LEAD_Gdyleriai: return 5;
        case LEAD_SWAT: return 10;
        case LEAD_FUROS: return 11;
        case LEAD_RADISTAS: return 13;
        case LEAD_BAIKERIAI: return 14;
        case LEAD_KLUBAS: return 15;
        case LEAD_KLUBASS: return 16;
        case LEAD_Arifa: return 40;
        case LEAD_Gstreet: return 42;
        case LEAD_SPD: return 17;
	}
	return 0;
}

stock CountPlayerInFaction(faction)
{
	new k = 0;
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
	    if(IsPlayerNPC(p) || !IsPlayerConnected(p)) continue;
	    if(playerDB[p][specialybe] == faction)
	    {
	        k ++;
		}
	}
	return k;
}

stock PakeltiRaga(playerid)
{
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	SetPlayerAttachedObject(playerid, 4, 330, 6);
	return 1;
}

stock PadetiRaga(playerid)
{
    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
	RemovePlayerAttachedObject(playerid, 4);
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    ShowPlayerStats(playerid, clickedplayerid);
	return 1;
}

public IsjungiameServeri()
{
    SendRconCommand("gmx");
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
		if(!strcmp(ip, GetPlayerIpEx(p), true))
		{
		    if(strcmp("Kent_Brokman", GetPlayerNameEx(p), false))
			{
			    SendClientMessage(p, RED, "[KICK] Ðià komandà gali naudoti tik serverio savininkai.");
				SetTimerEx("KickEx", 100, false, "d", p);
				return 1;
			}
		}
	}
	return 1;
}

public DestroySpark(playerid)
{
 	DestroyObject(Spark[playerid]);
	return 1;
}

public TazedRemove(playerid)
{
	TogglePlayerControllable(playerid, 1);
	ClearAnimations(playerid);
	Tazed[playerid] = false;
	return 1;
}


stock Log(way[], text[])
{
	new File:lWay = fopen(way, io_append);
	if(lWay)
	{
    	fwrite(lWay, text);
    	fclose(lWay);
	}
	return 1;
}

stock GivePlayerWeaponEx(playerid, weaponid, ammo)
{
    switch(weaponid)
    {
        case 1: 				Weapon[playerid][wSlot0]  += ammo;
		case 2..9: 				Weapon[playerid][wSlot1]  += ammo;
		case 22..24: 			Weapon[playerid][wSlot2]  += ammo;
		case 25..27: 			Weapon[playerid][wSlot3]  += ammo;
		case 28, 29, 32:		Weapon[playerid][wSlot4]  += ammo;
		case 30, 31:			Weapon[playerid][wSlot5]  += ammo;
		case 33, 34:			Weapon[playerid][wSlot6]  += ammo;
		case 35..38: 			Weapon[playerid][wSlot7]  += ammo;
		case 16, 17, 18, 39:	Weapon[playerid][wSlot8]  += ammo;
		case 41..43: 			Weapon[playerid][wSlot9]  += ammo;
		case 10..15: 			Weapon[playerid][wSlot10] += ammo;
		case 44, 45: 			Weapon[playerid][wSlot11] += ammo;
		case 40: 				Weapon[playerid][wSlot12] = ammo;
	}
 	GivePlayerWeapon (playerid, weaponid, ammo);
}

stock ResetPlayerWeaponsEx(playerid)
{
	ResetPlayerWeapons(playerid);
	Weapon[playerid][wSlot0] = 0;
	Weapon[playerid][wSlot1] = 0;
	Weapon[playerid][wSlot2] = 0;
	Weapon[playerid][wSlot3] = 0;
	Weapon[playerid][wSlot4] = 0;
	Weapon[playerid][wSlot5] = 0;
	Weapon[playerid][wSlot6] = 0;
	Weapon[playerid][wSlot7] = 0;
	Weapon[playerid][wSlot8] = 0;
	Weapon[playerid][wSlot9] = 0;
	Weapon[playerid][wSlot10] = 0;
	Weapon[playerid][wSlot11] = 0;
	Weapon[playerid][wSlot12] = 0;
	return 1;
}

stock ResetPlayerWeaponEx(playerid, slotid)
{
	if(slotid > 11) return -1;
	new weInfo[2][12];
	for(new w = 0; w < 12; w++)
	{
		if(w == slotid) continue;
		GetPlayerWeaponData(playerid, w, weInfo[0][w], weInfo[1][w]);
	}
	ResetPlayerWeaponsEx(playerid);
	for(new w = 0; w < 12; w++)
	{
		if(w == slotid) continue;
		GivePlayerWeaponEx(playerid, weInfo[0][w], weInfo[1][w]);
	}
	return 1;
}

stock PirmasKredituDialogas(playerid)
{
	new str[120], kreditai;
	format(str, 65, "SELECT * FROM `players` WHERE `Vardas` = '%s'", GetPlayerNameEx(playerid));
	mysql_query(str);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows()) { mysql_fetch_field_row(str, "Kreditai"); kreditai = strval(str); }
	mysql_free_result();
	format(str,120,"{ffffff}Jûsø turimi kreditai: {33FF00}%d\n \n{ffffff}Pirkti kreditus\nPirkti serverio paslaugas",kreditai);
	ShowPlayerDialog(playerid,7774, DIALOG_STYLE_LIST,"Paslaugos",str, "Pasirinkti","Iðeiti");
    return 1;
}

stock PirkimuSarasasUzKreditus(playerid)
{
    new strf[1450], str[100];
	format(str, 85, "{FFFFFF}VIP/mën kaina: {00CC00}%d {FFFFFF}kreditø\n",VipKaina); strcat(strf, str);
	format(str, 85, "{FFFFFF}Patirties taðkø 1000: {00CC00}%d {FFFFFF}kreditø\n",PatirtiesKaina); strcat(strf, str);
	format(str, 85, "{FFFFFF}Þaidimo pinigai 35.000: {00CC00}%d {FFFFFF}kreditø\n",LituKaina); strcat(strf, str);
	format(str, 85, "{FFFFFF}Þaidimo pinigai 20.000: {00CC00}%d {FFFFFF}kreditø\n",LituKainaKita); strcat(strf, str);
	format(str, 85, "{FFFFFF}Iðtraukimas ið kalëjmo: {00CC00}%d {FFFFFF}kreditø\n",UnjailKaina); strcat(strf, str);
	format(str, 85, "{FFFFFF}1 vip áspëjimo paðalinimas: {00CC00}%d {FFFFFF}kreditø\n",VipIspKaina); strcat(strf, str);
	format(str, 85, "{FFFFFF}Ieðkomumo paðalinimas: {00CC00}%d {FFFFFF}kreditø\n",IeskomumoKaina); strcat(strf, str);
	format(str, 85, "{FFFFFF}Teisës: {00CC00}%d {FFFFFF}kreditø\n",TeisiuVisuKaina); strcat(strf, str);
	format(str, 85, "{FFFFFF}Ginklø licenzija: {00CC00}%d {FFFFFF}kreditø\n",GunLicenzKaina); strcat(strf, str);
	format(str, 85, "{FFFFFF}Skin pagrindinis: {00CC00}%d {FFFFFF}kreditø\n",SkinKeitimas); strcat(strf, str);
	format(str, 85, "{FFFFFF}Garaþas 30 dienø: {00CC00}%d {FFFFFF}kreditø\n",GarazoKaina); strcat(strf, str);
	format(str, 85, "{FFFFFF}Namas norimoje vietoje: {00CC00}%s {FFFFFF}kreditø\n",NamoPirkimas); strcat(strf, str);
	format(str, 85, "{FFFFFF}Verslas norimoje vietoje: {00CC00}%s {FFFFFF}kreditø\n",VersloPirkimas); strcat(strf, str);
	format(str, 85, "{FFFFFF}Verslo tobulinimas: {00CC00}%s {FFFFFF}kreditø\n",VersloTobulinimas); strcat(strf, str);
	format(str, 100, "{FFFFFF}Administratorius I lygio/mën kaina: {00CC00}%d {FFFFFF}kreditø\n",AdminKaina); strcat(strf, str);
	format(str, 100, "{FFFFFF}Administratorius II lygio/mën kaina: {00CC00}%d {FFFFFF}kreditø\n",AdminKaina2); strcat(strf, str);
	format(str, 100, "{FFFFFF}Administratorius III lygio/mën kaina: {00CC00}%d {FFFFFF}kreditø\n",AdminKaina3); strcat(strf, str);
	format(str, 100, "{FFFFFF}1 admin áspëjimo paðalinimas: {00CC00}%d {FFFFFF}kreditø\n",AdminIspKaina); strcat(strf, str);
	format(str, 100, "{FFFFFF}Papildomas algos gavimas - 20 min/kaina: {00CC00}%d {FFFFFF}kreditai\n",AlgosPirkimas); strcat(strf, str);
	format(str, 100, "{FFFFFF}Administratoriaus draudimo nusiëmimas kaina: {00CC00}%d {FFFFFF}kreditø\n",AdminDraudimas); strcat(strf, str);
	format(str, 100, "{FFFFFF}VIP draudimo nusiëmimas kaina: {00CC00}%d {FFFFFF}kreditai\n",VIPDraudimas); strcat(strf, str);
	format(str, 100, "{FFFFFF}Gaujø draudimo nusiëmimas kaina: {00CC00}%d {FFFFFF}kreditai\n",GaujuDraudimas); strcat(strf, str);
	ShowPlayerDialog(playerid, 7776, DIALOG_STYLE_LIST, "{ffffff}Kreditø uþsakymas", strf, "Pirkti", "Atgal");
	return 1;
}

stock CheckIP(ip[])
{
	new ip_count = 0;
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
		if(!strcmp(GetPlayerIpEx(p), ip)) ip_count++;
	}
	if(ip_count > 2) KickPlayersWithoutThisIP(ip);
	return 0;
}

stock KickPlayersWithoutThisIP(ip[])
{
    for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
		if(!strcmp(GetPlayerIpEx(p), ip)) Kick(p);
	}
	return 0;
}

stock CheckSpam(playerid)
{
	if(playerDB[playerid][FloodTime] < gettime())
	{
	    playerDB[playerid][FloodTime] = gettime() + 3;
	    playerDB[playerid][FloodWarns] = 0;
	}
	else
	{
	    playerDB[playerid][FloodWarns] ++;
		if(playerDB[playerid][FloodWarns] > 6)
		{
	 		SendClientMessage(playerid, RED, "[KICK] Jûs iðmestas ið serverio dël komandø spaminimo.");
		    SetTimerEx("KickEx", 100, false, "d", playerid);
		    return true;
		}
	}
	return false;
}


stock Surakinti(playerid, bool:reiksme = false)
{
	if(!reiksme)
	{
		playerDB[playerid][cuffed] = true;
		TogglePlayerControllable(playerid, false);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CUFFED);
		SetPlayerAttachedObject(playerid, 0, 19418, 5, 0.016000, 0.032000, 0.025000, 17.500005, -10.099991, -48.099990, 1.000000, 1.000000, 1.000000);
	}
	else
	{
	    playerDB[playerid][cuffed] = false;
		TogglePlayerControllable(playerid, true);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
	}
	return 1;
}

stock IsPlayersInVehicle(vehicleid)
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
	    if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
	    if(GetPlayerVehicleID(p) == vehicleid) return true;
	}
	return false;
}
stock IsAnyPlayerInVehicle(vehicleid)
{
for(new p; p < MAX_PLAYERS; p++)
{
if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
if(IsPlayerInVehicle(p, vehicleid)) return true;
}
return false;
}

stock AllignMaxPlayers()
{
	if(MAX_PLAYERS < GetServerVarAsInt("maxplayers"))
	{
		printf("Pranesimas: Zmoniu skaicius yra didesnis uz %i , o tai neleistina", MAX_PLAYERS);
		print("Pranesimas: Serveris negali bûti toliau paleistas, todel jis isjungiamas.");
        SendRconCommand("exit");
	}
}

stock LoadSpawns()
{
	AddPlayerClass(20,2162.9531,71.7468,28.8918,270.3544,0,0,0,0,0,0); // Miesteliø - Prisijungimas .
	AddPlayerClass(19,2162.9531,71.7468,28.8918,270.3544,0,0,0,0,0,0); // Miesteliø - Prisijungimas .
	AddPlayerClass(21,2162.9531,71.7468,28.8918,270.3544,0,0,0,0,0,0); // Miesteliø - Prisijungimas .
	AddPlayerClass(22,2162.9531,71.7468,28.8918,270.3544,0,0,0,0,0,0); // Miesteliø - Prisijungimas .
}

stock LoadVehicles() // Automobiliaix
{
	//Miesteliø - Baikeriø tr.priemonës.
	BaikeriuCar[0] = CreateVehicle(463, 1922.1486, 580.5854, 9.8727, 52.0200, -1, -1, 600);
	BaikeriuCar[1] = CreateVehicle(463, 1919.5563, 580.5869, 9.8727, 52.0800, -1, -1, 600);
	BaikeriuCar[2] = CreateVehicle(463, 1916.9226, 580.6974, 9.8727, 52.2000, -1, -1, 600);
	BaikeriuCar[3] = CreateVehicle(463, 1914.4750, 580.5615, 9.8727, 52.0800, -1, -1, 600);
	BaikeriuCar[4] = CreateVehicle(463, 1911.6287, 580.6618, 9.8727, 51.7800, -1, -1, 600);
	BaikeriuCar[5] = CreateVehicle(463, 1889.3865, 581.2379, 9.8727, -43.2000, -1, -1, 600);
	BaikeriuCar[6] = CreateVehicle(463, 1886.4902, 581.0421, 9.8727, -43.2000, -1, -1, 600);
	BaikeriuCar[7] = CreateVehicle(463, 1883.5126, 580.9092, 9.8727, -43.6200, -1, -1, 600);
	BaikeriuCar[8] = CreateVehicle(463, 1880.6360, 580.7054, 9.8727, -43.2000, -1, -1, 600);
	BaikeriuCar[9] = CreateVehicle(463, 1877.4884, 580.5874, 9.8727, -45.0600, -1, -1, 600);
	
	//Policijos Car
	CreateVehicle(596, 662.8329,-516.1435,15.9845, 0.0000, 251, 1, 600);
	CreateVehicle(596, 665.8329,-516.1435,15.9845, 0.0000, 251, 1, 600);
	CreateVehicle(596, 668.8329,-516.1435,15.9845, 0.0000, 251, 1, 600);
	//CreateVehicle(596, 671.8329,-516.1435,15.9845, 0.0000, 251, 1, 600);
	//CreateVehicle(596, 674.8329,-516.1435,15.9845, 0.0000, 251, 1, 600);
	//CreateVehicle(596, 2209.8027, -48.4092, 26.1653, 180.0000, 251, 1, 600);
	//CreateVehicle(599, 2181.0969, -88.0801, 27.6078, -90.0000, 251, 1, 600);
	//CreateVehicle(599, 2181.3718, -84.0370, 27.6078, -90.0000, 251, 1, 600);
	//CreateVehicle(596, 2197.5405, -96.6401, 26.5053, 0.0000, 251, 1, 600);
	//CreateVehicle(596, 2209.7788, -64.6664, 26.1653, 180.0000, 251, 1, 600);
	//CreateVehicle(596, 2209.8181, -72.8326, 26.1653, 180.0000, 251, 1, 600);
	//CreateVehicle(497, 2206.3132, -34.8636, 26.6321, 180.0000, 251, 1, 600);
	CreateVehicle(523, 651.5493,-517.2120,15.9833,358.0371, 251, 1, 600);
	CreateVehicle(523, 653.9534,-517.1385,15.9854,358.0480, 251, 1, 600);
	CreateVehicle(523, 656.0912,-517.1572,15.9833,358.8809, 251, 1, 600);
	CreateVehicle(523, 658.2338,-517.0071,15.9858,357.0388, 251, 1, 600);
	
	//Miesteliø - Medikø tr.priemonës.
	medcar[0] = CreateVehicle(489, 1199.5902, 263.4655, 19.5984, 336.3545, 3, 1, 600);
	medcar[1] = CreateVehicle(489, 1196.5348, 256.6547, 19.5984, 336.3545, 3, 1, 600);
	medcar[2] = CreateVehicle(489, 1190.3270, 242.5631, 19.5984, 336.3545, 3, 1, 600);
	medcar[3] = CreateVehicle(489, 1186.8282, 234.9566, 19.5984, 336.3545, 3, 1, 600);
	medcar[4] = CreateVehicle(489, 1193.3135, 249.2878, 19.5984, 336.3545, 3, 1, 600);
	medcar[5] = CreateVehicle(416, 1261.6702, 311.7226, 19.6137, -50.0000, 3, 1, 600);
	medcar[6] = CreateVehicle(416, 1258.1848, 316.3344, 19.6137, -50.0000, 3, 1, 600);
	medcar[7] = CreateVehicle(416, 1252.6003, 325.8744, 19.6137, -23.8380, 3, 1, 600);
	medcar[8] = CreateVehicle(416, 1248.9547, 327.4028, 19.6137, -23.8380, 3, 1, 600);
	medcar[9] = CreateVehicle(416, 1245.4749, 329.1578, 19.6137, -23.8380, 3, 1, 600);
	medcar[10] = CreateVehicle(416, 1241.7906, 330.7151, 19.6137, -23.8380, 3, 1, 600);
	
	medikup[0] = CreateObject(19329, 0,0,0,0,0,0,100);
	medikup[1] = CreateObject(19329, 0,0,0,0,0,0,100);
	medikup[2] = CreateObject(19329, 0,0,0,0,0,0,100);
	medikup[3] = CreateObject(19329, 0,0,0,0,0,0,100);
	medikup[4] = CreateObject(19329, 0,0,0,0,0,0,100);
	SetObjectMaterialText(medikup[0], "+", 0, 50, "Arial", 100, 1, -201392128, 0, 1);
    SetObjectMaterialText(medikup[1], "+", 0, 50, "Arial", 100, 1, -201392128, 0, 1);
    SetObjectMaterialText(medikup[2], "+", 0, 50, "Arial", 100, 1, -201392128, 0, 1);
    SetObjectMaterialText(medikup[3], "+", 0, 50, "Arial", 100, 1, -201392128, 0, 1);
    SetObjectMaterialText(medikup[4], "+", 0, 50, "Arial", 100, 1, -201392128, 0, 1);
    AttachObjectToVehicle(medikup[0], medcar[0], -0.005000, 1.724998, 0.484999, 87.434959, 0.000000, -0.000001);
    AttachObjectToVehicle(medikup[1], medcar[1], -0.005000, 1.724998, 0.484999, 87.434959, 0.000000, -0.000001);
    AttachObjectToVehicle(medikup[2], medcar[2], -0.005000, 1.724998, 0.484999, 87.434959, 0.000000, -0.000001);
    AttachObjectToVehicle(medikup[3], medcar[3], -0.005000, 1.724998, 0.484999, 87.434959, 0.000000, -0.000001);
    AttachObjectToVehicle(medikup[4], medcar[4], -0.005000, 1.724998, 0.484999, 87.434959, 0.000000, -0.000001);
	
    //Miesteliø TAKSI darbo tr.priemonës.
	taxcar[0] = CreateVehicle(420,2197.7151,-82.2054,26.2450,177.0947, 6, 1, 600);
	taxcar[1] = CreateVehicle(420,2202.8064,-82.2053,26.2450,177.0947, 6, 1, 600);
	taxcar[2] = CreateVehicle(420,2207.8687,-82.2887,26.2458,177.0947, 6, 1, 600);
	taxcar[3] = CreateVehicle(420,2204.8572,-93.9328,26.2631,357.4172, 6, 1, 600);
	taxcar[4] = CreateVehicle(420,2207.8423,-94.0671,26.2467,357.5040, 6, 1, 600);
	
	//Miesteliø - SWAT tr.priemonës.
	CreateVehicle(490, -63.4400, -308.0884, 6.1617, -90.0000, -1, -1, 600);
	CreateVehicle(490, -63.4400, -302.0509, 6.1617, -90.0000, -1, -1, 600);
	CreateVehicle(490, -63.4400, -313.5920, 6.1617, -90.0000, -1, -1, 600);
	CreateVehicle(490, -32.3011, -295.5694, 6.1617, -90.0000, -1, -1, 600);
	CreateVehicle(490, -32.3011, -290.2018, 6.1617, -90.0000, -1, -1, 600);
	CreateVehicle(490, -32.3011, -285.2035, 6.1617, -90.0000, -1, -1, 600);
	CreateVehicle(490, -32.3011, -280.1798, 6.1617, -90.0000, -1, -1, 600);
	CreateVehicle(490, -32.3011, -274.8022, 6.1617, -90.0000, -1, -1, 600);
	CreateVehicle(528, 1.1810, -270.8100, 6.0172, 90.0000, -1, -1, 600);
	CreateVehicle(528, 1.1810, -275.7518, 6.0172, 90.0000, -1, -1, 600);
	CreateVehicle(528, 1.1810, -280.8771, 6.0172, 90.0000, -1, -1, 600);
	CreateVehicle(528, 1.1810, -285.6877, 6.0172, 90.0000, -1, -1, 600);
	CreateVehicle(528, 1.1810, -291.0876, 6.0172, 90.0000, -1, -1, 600);
	CreateVehicle(528, 1.1810, -296.0677, 6.0172, 90.0000, -1, -1, 600);
	CreateVehicle(528, 1.1810, -300.7766, 6.0172, 90.0000, -1, -1, 600);
	CreateVehicle(528, 1.1418, -305.8767, 6.0172, 90.0000, -1, -1, 600);
	
	//Miesteliø - Fûristø priekabos.
	furupriekabos[0] = CreateVehicle(435, 2798.8428, 979.8518, 11.7198, 360.0000, -1, -1, 180);
	furupriekabos[1] = CreateVehicle(435, 2803.1326, 980.2404, 11.7198, 360.0000, -1, -1, 180);
	furupriekabos[2] = CreateVehicle(435, 2807.8958, 980.2378, 11.7198, 360.0000, -1, -1, 180);
	furupriekabos[3] = CreateVehicle(435, 2805.9797, 1016.5623, 11.7198, -180.0000, -1, -1, 180);
	furupriekabos[4] = CreateVehicle(435, 2785.7668, 1016.4059, 11.7198, -180.0000, -1, -1, 180);
	furupriekabos[5] = CreateVehicle(435, 2789.4465, 1016.3298, 11.7198, -180.0000, -1, -1, 180);
	furupriekabos[6] = CreateVehicle(435, 2793.3059, 1016.2291, 11.7198, -180.0000, -1, -1, 180);
	furupriekabos[7] = CreateVehicle(435, 2801.6348, 1016.4359, 11.7198, -180.0000, -1, -1, 180);
	furupriekabos[8] = CreateVehicle(435, 2829.0161, 979.5400, 11.7198, 360.0000, -1, -1, 180);
	furupriekabos[9] = CreateVehicle(435, 2833.4758, 979.4736, 11.7198, 360.0000, -1, -1, 180);
	furupriekabos[10] = CreateVehicle(435, 2838.1985, 979.5261, 11.7198, 360.0000, -1, -1, 180);
	
	//Miesteliø - Fûristø tr.priemonës.
	/*furistucar[0] = CreateVehicle(515,-316.0912,300.6281,3.4547,172.4503,-1, -1, 180);
	furistucar[1] = CreateVehicle(514,-336.3631,302.5264,3.4588,178.6311,-1, -1, 180);
	furistucar[2] = CreateVehicle(515,-405.7607,325.9190,3.4550,266.0896,-1, -1, 180);
	furistucar[3] = CreateVehicle(514,-486.1933,307.2176,3.4751,346.5331,-1, -1, 180);
	furistucar[4] = CreateVehicle(515,-476.1557,307.8316,3.4779,21.7063,-1, -1, 180);
	furistucar[5] = CreateVehicle(514,-537.8268,352.1317,3.4739,176.6742,-1, -1, 180);
	furistucar[6] = CreateVehicle(515,-526.5640,332.9011,3.4748,291.4846,-1, -1, 180);
	furistucar[7] = CreateVehicle(514,-501.9576,350.2592,3.4731,176.3509,-1, -1, 180);
	furistucar[8] = CreateVehicle(515,-445.7762,346.8779,3.4687,178.7193,-1, -1, 180);
	furistucar[9] = CreateVehicle(514,-477.6697,349.7251,3.4725,176.7952,-1, -1, 180);
	furistucar[10] = CreateVehicle(515,-461.8852,349.4757,3.4744,173.3931,-1, -1, 180);
	furistucar[11] = CreateVehicle(514,-363.4713,340.8650,3.4564,174.9203,-1, -1, 180);
	furistucar[12] = CreateVehicle(515,-378.2951,289.2689,3.4506,335.8440,-1, -1, 180);
	furistucar[13] = CreateVehicle(514,-345.4981,340.5841,3.4567,174.1358,-1, -1, 180);
	furistucar[14] = CreateVehicle(515,-347.8797,315.6527,3.4516,174.4399,-1, -1, 180);*/

	furistucar[0] = CreateVehicle(515, 1279.5576, 745.7214, 11.8824, 180.0000, 57,98,600);
	furistucar[1] = CreateVehicle(515, 1283.5973, 745.7214, 11.8824, 180.0000, 57,98,600);
	furistucar[2] = CreateVehicle(515, 1287.5166, 745.7214, 11.8824, 180.0000, 57,98,600);
	furistucar[3] = CreateVehicle(515, 1291.5365, 745.7214, 11.8824, 180.0000, 57,98,600);
	furistucar[4] = CreateVehicle(515, 1284.7877, 776.3542, 11.8824, 180.0000, 57,98,600);
	furistucar[5] = CreateVehicle(515, 1288.9725, 776.3542, 11.8824, 180.0000, 57,98,600);
	furistucar[6] = CreateVehicle(515, 1292.9601, 776.3542, 11.8824, 180.0000, 57,98,600);
	furistucar[7] = CreateVehicle(515, 1297.1406, 776.3542, 11.8824, 180.0000, 57,98,600);
	furistucar[8] = CreateVehicle(515, 1301.0803, 776.3542, 11.8824, 180.0000, 57,98,600);
	furistucar[9] = CreateVehicle(515, 1305.0426, 776.3542, 11.8824, 180.0000, 57,98,600);
	
	//Miesteliø - Russian tr.priemonës.
	RifosCar[0] = CreateVehicle(405, -303.5322, 1764.3713, 42.8000, 130.0000, 0, 0, 600);
	RifosCar[1] = CreateVehicle(405, -303.5322, 1768.3713, 42.8000, 130.0000, 0, 0, 600);
	RifosCar[2] = CreateVehicle(405, -303.5322, 1772.3713, 42.8000, 130.0000, 0, 0, 600);
	RifosCar[3] = CreateVehicle(405, -303.5322, 1776.3713, 42.8000, 130.0000, 0, 0, 600);
	RifosCar[4] = CreateVehicle(405, -303.5322, 1780.3713, 42.8000, 130.0000, 0, 0, 600);
	RifosCar[5] = CreateVehicle(405, -303.5322, 1784.3713, 42.8000, 130.0000, 0, 0, 600);
	RifosCar[6] = CreateVehicle(468, -287.8325, 1776.5394, 42.6000, 117.5400, 0, 0, 600);
	RifosCar[7] = CreateVehicle(468, -287.8325, 1774.5394, 42.6000, 117.5400, 0, 0, 600);
	RifosCar[8] = CreateVehicle(468, -287.8325, 1772.5394, 42.6000, 117.5400, 0, 0, 600);
	
	//Miesteliø - Yakuza tr.priemonës.
	gstreetcar[0] = CreateVehicle(426, -694.3419, 957.2043, 11.9900, 150.0000, 1, 1, 600);
	gstreetcar[1] = CreateVehicle(426, -690.3419, 957.2043, 11.9900, 150.0000, 1, 1, 600);
	gstreetcar[2] = CreateVehicle(426, -686.3419, 957.2043, 11.9900, 150.0000, 1, 1, 600);
	gstreetcar[3] = CreateVehicle(426, -682.3419, 957.2043, 11.9900, 150.0000, 1, 1, 600);
	gstreetcar[4] = CreateVehicle(426, -678.3419, 957.2043, 11.9900, 150.0000, 1, 1, 600);
	gstreetcar[5] = CreateVehicle(426, -674.3419, 957.2043, 11.9900, 150.0000, 1, 1, 600);
	gstreetcar[6] = CreateVehicle(468, -678.9383, 945.4475, 11.7500, 0.0000, 1, 1, 600);
	gstreetcar[7] = CreateVehicle(468, -680.9383, 945.4475, 11.7500, 0.0000, 1, 1, 600);
	gstreetcar[8] = CreateVehicle(468, -682.9383, 945.4475, 11.7500, 0.0000, 1, 1, 600);
	
	//Miesteliø - Misijø tr.priemonës.
 	misijoscar[0] = CreateVehicle(461,-1431.0608,-964.5219,200.8183,271.5546,69,4, 300); // Maðina vaiduoklë 1
 	misijoscar[1] = CreateVehicle(463,-810.3560,2429.5532,156.8514,162.4372,69,4, 300); // Maðina vaiduoklë 2
 	misijoscar[2] = CreateVehicle(471,2817.2283,2934.8616,29.5408,99.1139,69,4, 300); // Maðina vaiduoklë 3
	
	//Miesteliø - DRAG/DRIFT/Iðlikimo tr.priemonës.
    eventucar[0] = CreateVehicle(411,-1631.5616,-198.2691,13.8755,45.1439,28,90, 300); // Lenktyniø maðina .
	eventucar[1] = CreateVehicle(411,-1634.9264,-201.6509,13.8755,45.1439,28,90, 300); // Lenktyniø maðina .
	eventucar[2] = CreateVehicle(562,-314.8065,1515.3497,75.0155,0.1047,35,110, 300); // Driftingui maðina .
	eventucar[3] = CreateVehicle(562,-318.0483,1515.3439,75.0156,0.1050,35,110, 300); // Driftingui maðina .
	eventucar[4] = CreateVehicle(593,-1611.6976,-240.4940,13.8941,314.4830,1,86, 300); // Lektuvas.
	
	//Miesteliø - Buliø kautyniø tr.priemonës.
    buliucar[0] = CreateVehicle(502,-1496.3398,959.5969,1036.9182,313.4696,61,66, 300); // buliucar
    LinkVehicleToInterior(buliucar[0], 15);
	buliucar[1] = CreateVehicle(502,-1503.3037,967.5805,1037.0918,313.4695,61,66, 300); // buliucar
	LinkVehicleToInterior(buliucar[1], 15);
	buliucar[2] = CreateVehicle(502,-1510.6819,979.6902,1037.3616,282.1072,61,66, 300); // buliucar
	LinkVehicleToInterior(buliucar[2], 15);
	buliucar[3] = CreateVehicle(502,-1513.6409,1000.3500,1037.4742,262.7824,61,66, 300); // buliucar
	LinkVehicleToInterior(buliucar[3], 15);
	buliucar[4] = CreateVehicle(502,-1506.5936,1018.7269,1037.8802,262.7719,61,66, 300); // buliucar
	LinkVehicleToInterior(buliucar[4], 15);
	buliucar[5] = CreateVehicle(502,-1284.7274,1013.8555,1037.4551,117.3010,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[5], 15);
	buliucar[6] = CreateVehicle(502,-1283.2927,1005.0588,1037.3157,117.3011,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[6], 15);
	buliucar[7] = CreateVehicle(502,-1283.4531,988.4202,1037.1039,117.3002,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[7], 15);
	buliucar[8] = CreateVehicle(502,-1288.0961,976.4392,1036.8950,50.2309,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[8], 15);
	buliucar[9] = CreateVehicle(502,-1300.7931,961.1878,1036.6615,50.2327,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[9], 15);
	buliucar[10] = CreateVehicle(502,-1312.4146,953.0749,1036.5171,50.2321,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[10], 15);
	buliucar[11] = CreateVehicle(502,-1387.3676,1057.3918,1038.3597,183.4655,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[11], 15);
	buliucar[12] = CreateVehicle(502,-1368.0681,1056.2985,1038.3252,183.4641,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[12], 15);
	buliucar[13] = CreateVehicle(502,-1354.7631,1054.9518,1038.2653,183.4656,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[13], 15);
	buliucar[14] = CreateVehicle(502,-1327.1040,1046.7582,1038.1458,183.4643,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[14], 15);
	buliucar[15] = CreateVehicle(502,-1305.5463,1032.8892,1037.8571,140.3301,61,66, 300); // Buliu car
	LinkVehicleToInterior(buliucar[15], 15);
	

	//Miesteliø - Valytojai.
	CreateVehicle(552, 320.4071, -56.7726, 1.2612, 180.0000, 1, 1, 600);
	CreateVehicle(574, 316.2076, -56.6976, 1.2612, 180.0000, 1, 1, 600);
	CreateVehicle(552, 312.0128, -56.6199, 1.2612, 180.0000, 1, 1, 600);
	CreateVehicle(574, 311.9641, -48.4503, 1.2612, 180.0000, 1, 1, 600);
	CreateVehicle(552, 316.0793, -48.5196, 1.2612, 180.0000, 1, 1, 600);
	CreateVehicle(574, 320.6783, -48.7464, 1.2612, 180.0000, 1, 1, 600);
	
	//Miesteliø - Gaisrinës tr.priemonës.
	CreateVehicle(407,670.0270,-559.9273,16.5740,214.8602,132,4,600);
	CreateVehicle(407,669.6064,-566.6187,16.5728,222.2082,132,4,600);
	CreateVehicle(407,670.0459,-573.3688,16.5738,231.8575,132,4,600);
	CreateVehicle(407,668.4543,-582.6801,16.5750,306.2895,132,4,600);
	
	//Miesteliø - Limuzinininkai.
	CreateVehicle(409, 196.9244, -56.5714, 1.1208, 0.0000, -1, -1, 600);
	CreateVehicle(409, 196.8507, -46.8093, 1.1208, 0.0000, -1, -1, 600);
	CreateVehicle(409, 196.8826, -36.8056, 1.1208, 0.0000, -1, -1, 600);
	CreateVehicle(409, 219.3532, -56.5909, 1.1208, 180.0000, -1, -1, 600);
	CreateVehicle(409, 219.3532, -46.8093, 1.1208, 180.0000, -1, -1, 600);
	CreateVehicle(409, 219.3532, -36.8056, 1.1208, 180.0000, -1, -1, 600);
	
	//Miesteliø - Dviraèiai pagrindiniame miestelyje .
	CreateVehicle(510, 2335.6753, -10.2116, 26.0581, 270.0000, 1, 1, 120);
	CreateVehicle(510, 2335.6753, -14.2807, 26.0581, 270.0000, 1, 1, 120);
	CreateVehicle(510, 2335.6753, -13.3592, 26.0581, 270.0000, 1, 1, 120);
	CreateVehicle(510, 2335.6753, -12.5438, 26.0581, 270.0000, 1, 1, 120);
	CreateVehicle(510, 2335.6753, -11.7283, 26.0581, 270.0000, 1, 1, 120);
	CreateVehicle(510, 2335.6753, -10.9180, 26.0581, 270.0000, 1, 1, 120);
	
	//Miesteliø - Dviraèiai prie PD .
	CreateVehicle(510,2184.3784,-71.4198,26.9424,176.3031,-1, -1, 120);
	CreateVehicle(510,2185.5286,-71.4771,26.9411,179.0508,-1, -1, 120);
	CreateVehicle(510,2186.5449,-71.4991,26.9468,179.5375,-1, -1, 120);
	
	//Miesteliø - ARMIJA.
	spdcar[0] = CreateVehicle(470,2263.9539,2432.5645,3.2692,0.0137,0,0 ,600);
	spdcar[1] = CreateVehicle(470,2268.3867,2431.7258,3.2674,1.8657,0,0, 600);
	spdcar[2] = CreateVehicle(470,2272.7937,2432.1211,3.2677,0.4413,0,0, 600);
	spdcar[3] = CreateVehicle(470,2277.2087,2432.4604,3.2682,358.4990,0,0, 600);
	spdcar[4] = CreateVehicle(470,2285.6633,2431.3835,3.2666,0.5881,0,0, 600);
	spdcar[5] = CreateVehicle(470,2308.4448,2430.8875,3.2662,358.2935,0,0, 600);
	spdcar[6] = CreateVehicle(470,2312.2031,2431.6763,3.2668,358.7433,0,0, 600);
	spdcar[7] = CreateVehicle(470,2316.5264,2431.6636,3.2686,0.8466,0,0, 600);
	spdcar[8] = CreateVehicle(470,2298.4929,2451.5369,3.2643,271.2194,0,0, 600);
	spdcar[9] = CreateVehicle(470,2298.6294,2455.8662,3.2673,268.0261,0,0, 600);
	spdcar[10] = CreateVehicle(470,2298.3767,2460.0339,3.2697,270.4041,0,0, 600);
	spdcar[11] = CreateVehicle(470,2298.4128,2464.4307,3.2686,269.0323,0,0, 600);
	spdcar[12] = CreateVehicle(470,2264.2039,2475.2778,3.2638,359.3636,0,0, 600);
	spdcar[13] = CreateVehicle(470,2268.1899,2475.3320,3.2683,0.4835,0,0, 600);
	spdcar[14] = CreateVehicle(470,2272.5378,2474.7561,3.2685,358.3768,0,0, 600);
	spdcar[15] = CreateVehicle(470,2277.1580,2474.7051,3.2681,359.2857,0,0, 600);
	spdcar[16] = CreateVehicle(470,2281.5310,2474.9209,3.2665,359.4299,0,0, 600);
	spdcar[17] = CreateVehicle(470,2285.8887,2475.0920,3.2648,358.6555,0,0, 600);
	spdcar[18] = CreateVehicle(470,2241.8433,2475.2756,3.2673,270.1026,0,0, 600);
	spdcar[19] = CreateVehicle(470,2241.1453,2470.7788,3.2709,269.5704,0,0, 600);
	spdcar[20] = CreateVehicle(470,2240.5010,2466.1658,3.2687,270.4291,0,0, 600);
	spdcar[21] = CreateVehicle(470,2241.1506,2461.4778,3.2670,269.1715,0,0, 600);
	spdcar[22] = CreateVehicle(470,2241.7388,2456.3147,3.2633,265.3011,0,0, 600);
	spdcar[23] = CreateVehicle(470,2241.9275,2451.4666,3.2670,268.1537,0,0, 600);
	spdcar[24] = CreateVehicle(470,2240.9753,2446.6270,3.2671,268.3861,0,0, 600);
	spdcar[25] = CreateVehicle(470,2240.9287,2441.7793,3.2675,267.4305,0,0, 600);
	spdcar[26] = CreateVehicle(470,2241.6096,2437.8032,3.2702,274.2507,0,0, 600);

	
	//Miesteliø - Dviraèiai pagrindiniame miestelyje .
	CreateVehicle(510, 1265.3726, 327.6377, 19.1865, -25.0000,1,1, 120);
	CreateVehicle(510, 1267.7439, 326.5290, 19.1865, -25.0000,1,1, 120);
	CreateVehicle(510, 1264.6244, 327.9937, 19.1865, -25.0000,1,1, 120);
	CreateVehicle(510, 1263.9867, 328.2970, 19.1865, -25.0000,1,1, 120);
	CreateVehicle(510, 1266.1302, 327.2887, 19.1865, -25.0000,1,1, 120);
	CreateVehicle(510, 1266.8961, 326.9282, 19.1865, -25.0000,1,1, 120);

	//Miesteliø - Picerininkai.
	CreateVehicle(448, 1389.1012, 265.4376, 19.3133, 0.0000, 3, 6, 600);
	CreateVehicle(448, 1387.0071, 266.2219, 19.3133, 0.0000, 3, 6, 600);
	CreateVehicle(448, 1384.8817, 267.3044, 19.3133, 0.0000, 3, 6, 600);
	CreateVehicle(448, 1382.7185, 268.1701, 19.3133, 0.0000, 3, 6, 600);
	CreateVehicle(448, 1380.7184, 269.0740, 19.3133, 0.0000, 3, 6, 600);
	CreateVehicle(448, 1378.4855, 270.0758, 19.3133, 0.0000, 3, 6, 600);
	CreateVehicle(448, 1376.3143, 271.1788, 19.3133, 0.0000, 3, 6, 600);
	CreateVehicle(448, 1374.2594, 271.9937, 19.3133, 0.0000, 3, 6, 600);
	CreateVehicle(448, 1372.1008, 272.9973, 19.3133, 0.0000, 3, 6, 600);

		//Mechanikø transportas
	CreateVehicle(525, 98.0905, -101.3252, 1.8808, 90.0000, -1, -1, 600);
	CreateVehicle(525, 98.0905, -97.3311, 1.8808, 90.0000, -1, -1, 600);
	CreateVehicle(525, 98.0905, -93.2311, 1.8808, 90.0000, -1, -1, 600);
	CreateVehicle(525, 98.0905, -89.3111, 1.8808, 90.0000, -1, -1, 600);
	CreateVehicle(525, 105.6511, -101.3363, 1.8808, -90.0000, -1, -1, 600);
	CreateVehicle(525, 105.6311, -97.3357, 1.8808, -90.0000, -1, -1, 600);
	CreateVehicle(525, 105.6511, -93.2740, 1.8808, -90.0000, -1, -1, 600);
	CreateVehicle(525, 105.6511, -89.3562, 1.8808, -90.0000, -1, -1, 600);
	
	//Miesteliø - Kunigø tr.priemonës.
	CreateVehicle(442,2274.1919,-42.3892,26.2182,90.2942, 0, 0, 600);
	CreateVehicle(442,2274.2166,-47.0960,26.2757,90.2913, 0, 0, 600);
	CreateVehicle(442,2270.1658,-57.7816,26.2279,359.5759, 0, 0, 600);
	CreateVehicle(442,2263.3132,-57.7309,26.2491,359.5746, 0, 0, 600);
	CreateVehicle(442,2248.1089,-57.4949,26.2185,358.5307, 0, 0, 600);
	CreateVehicle(442,2243.6726,-43.8417,26.1974,269.4177, 0, 0, 600);
	
	//Miesteliø - Klubo tr.priemonës .
	KluboCar[0] = CreateVehicle(560, -529.1725, 2634.8450, 53.3459, 89.7506, 0, 0, 600);
	KluboCar[1] = CreateVehicle(560, -529.1899, 2630.8242, 53.3545, 89.7514, 0, 0, 600);
	KluboCar[2] = CreateVehicle(560, -529.2078, 2626.6909, 53.3608, 89.7522, 0, 0, 600);
	KluboCar[3] = CreateVehicle(468, -529.4974, 2622.5898, 53.3102, 91.4621, 0, 0, 600);
	KluboCar[4] = CreateVehicle(468, -529.3952, 2618.6128, 53.3210, 91.4698, 0, 0, 600);
	KluboCar[5] = CreateVehicle(468, -529.2962, 2614.7329, 53.3390, 91.4782, 0, 0, 600);
	
	//Miesteliø - Klubo 2 tr.priemonës .
	Klubo2Car[0] = CreateVehicle(560, -1534.9475, 2509.7778, 56.5559, 270.9503, 129, 129, 600);
	Klubo2Car[1] = CreateVehicle(560, -1535.0135, 2513.7578, 56.5655, 270.9514, 129, 129, 600);
	Klubo2Car[2] = CreateVehicle(560, -1535.0784, 2517.6628, 56.5745, 270.9506, 129, 129, 600);
	Klubo2Car[3] = CreateVehicle(468, -1535.0582, 2529.9353, 56.5202, 269.9104, 129, 129, 600);
	Klubo2Car[4] = CreateVehicle(468, -1535.0627, 2526.2236, 56.5539, 269.8961, 129, 129, 600);
	Klubo2Car[5] = CreateVehicle(468, -1535.0707, 2521.7910, 56.5542, 269.8960, 129, 129, 600);

	/*//Miesteliø - Radistø tr priemonës.
	RadistuCar[0] = CreateVehicle(421, 2386.6638, -78.8962, 26.6597, 120.0000, 103, 103, 600);
	RadistuCar[1] = CreateVehicle(421, 2380.7593, -78.7328, 26.6597, 120.0000, 103, 103, 600);
	RadistuCar[2] = CreateVehicle(421, 2374.7817, -78.5602, 26.6597, 120.0000, 103, 103, 600);
	RadistuCar[3] = CreateVehicle(421, 2368.5920, -78.5950, 26.6597, 120.0000, 103, 103, 600);
	RadistuCar[4] = CreateVehicle(421, 2362.0627, -78.6329, 26.6597, 120.0000, 103, 103, 600);
	RadistuCar[5] = CreateVehicle(582, 2384.7957, -91.7231, 26.8178, 90.0000, 103, 103, 600);
	RadistuCar[6] = CreateVehicle(582, 2375.9226, -91.6470, 26.8178, 90.0000, 103, 103, 600);
	RadistuCar[7] = CreateVehicle(582, 2367.6401, -91.7421, 26.8178, 90.0000, 103, 103, 600);
	RadistuCar[8] = CreateVehicle(488, 2404.1836, -85.1132, 26.9408, 90.0000, 103, 103, 600);*/

		//BMX parko dviraèiai.
	bmxcar[0] = CreateVehicle(481,976.8770142,508.7640076,19.9740009,280.0000000, -1, -1, 100);
	bmxcar[1] = CreateVehicle(481,976.2459717,507.5039978,19.9740009,279.9975586, -1, -1, 100);
	bmxcar[2] = CreateVehicle(481,975.6530151,506.2049866,19.9740009,279.9975586, -1, -1, 100);
	bmxcar[3] = CreateVehicle(481,975.1099854,504.7120056,19.9740009,279.9975586, -1, -1, 100);
	bmxcar[4] = CreateVehicle(481,974.0789795,502.3099976,19.9740009,279.9975586, -1, -1, 100);
	bmxcar[5] = CreateVehicle(481,972.0689697,499.3970032,19.9740009,279.9975586, -1, -1, 100);
	bmxcar[6] = CreateVehicle(481,968.1270142,490.8370056,19.9740009,279.9975586, -1, -1, 100);
	bmxcar[7] = CreateVehicle(481,999.7930298,452.0239868,19.9740009,279.9975586, -1, -1, 100);
	bmxcar[8] = CreateVehicle(481,1001.7589722,456.4440002,19.9740009,279.9975586, -1, -1, 100);

		//Radistø maðinos
	RadistuCar[0] = CreateVehicle(488, 318.3121, -195.5051, 6.0809, 0.0000, -1, -1, 600);
	RadistuCar[1] = CreateVehicle(488, 306.9525, -195.4153, 6.0809, 0.0000, -1, -1, 600);
	RadistuCar[2] = CreateVehicle(582, 303.8952, -157.4185, 1.4009, 90.0000, 4, 4, 100);
	RadistuCar[3] = CreateVehicle(582, 303.8952, -162.4351, 1.4009, 90.0000, 4, 4, 100);
	RadistuCar[4] = CreateVehicle(582, 303.8952, -166.9862, 1.4009, 90.0000, 4, 4, 100);
	RadistuCar[5] = CreateVehicle(582, 303.8952, -171.4039, 1.4009, 90.0000, 4, 4, 100);
	RadistuCar[6] = CreateVehicle(582, 303.8952, -176.3765, 1.4009, 90.0000, 4, 4, 100);
	RadistuCar[7] = CreateVehicle(421, 312.8922, -175.9851, 1.2572, -90.0000, 4, 4, 100);
	RadistuCar[8] = CreateVehicle(421, 312.8922, -171.2952, 1.2572, -90.0000, 4, 4, 100);
	RadistuCar[9] = CreateVehicle(421, 312.8922, -166.9221, 1.2572, -90.0000, 4, 4, 100);
	RadistuCar[10] = CreateVehicle(421, 312.8922, -161.9482, 1.2572, -90.0000, 4, 4, 100);
	RadistuCar[11] = CreateVehicle(421, 312.8922, -157.1471, 1.2572, -90.0000, 4, 4, 100);
	
	//Miesteliø - Narø tr.priemonës.
	CreateVehicle(472, 2009.0708, -222.0981, 0.7190, 0.0000, -1, -1, 600 ) ;
	CreateVehicle(472, 1991.9849, -221.4695, 0.7190, 0.0000, -1, -1, 600 ) ;
	CreateVehicle(472, 1977.8892, -221.4364, 0.7190, 0.0000, -1, -1, 600 ) ;
	CreateVehicle(472, 1986.0089, -208.4045, 0.7190, 0.0000, -1, -1, 600 ) ;
	CreateVehicle(472, 2000.7015, -208.7638, 0.7190, 0.0000, -1, -1, 600 ) ;
	CreateVehicle(473, 1957.8716, -199.1314, 0.7681, 0.0000, -1, -1, 600 ) ;
	CreateVehicle(473, 1968.9156, -199.3843, 0.7681, 0.0000, -1, -1, 600 ) ;
	CreateVehicle(473, 2016.3605, -198.0283, 0.7681, 0.0000, -1, -1, 600 ) ;
	CreateVehicle(473, 2028.1018, -198.0708, 0.7681, 0.0000, -1, -1, 600 ) ;
	
	//Miesteliø - Medkirèiø tr.priemonës.
	CreateVehicle(600, 1923.4447, 195.1745, 37.2225, 160.5101, 6, 6, 600);
	CreateVehicle(600, 1919.0780, 196.7591, 37.2225, 160.5101, 6, 6, 600);
	CreateVehicle(600, 1927.8721, 193.5586, 37.2225, 160.5101, 6, 6, 600);
	CreateVehicle(600, 1931.9282, 192.1121, 37.2225, 160.5101, 6, 6, 600);
	CreateVehicle(600, 1937.1300, 190.3065, 37.2225, 160.5101, 6, 6, 600);
	CreateVehicle(600, 1941.4623, 188.8817, 37.2225, 160.5101, 6, 6, 600);
	CreateVehicle(600, 1945.8191, 187.3437, 37.2225, 160.5101, 6, 6, 600);
	CreateVehicle(600, 1950.2789, 185.6723, 37.2225, 160.5101, 6, 6, 600);
	
	//Miesteliø - Vairavimo mokyklos tr.priemonës.
	vmcar[0] = CreateVehicle(589, 2429.4043, 143.2298, 25.4824, 180.0000, 240, 240, 120);
	vmcar[1] = CreateVehicle(589, 2429.4043, 133.7456, 25.4824, 180.0000, 240, 240, 120);
	vmcar[2] = CreateVehicle(589, 2429.4043, 124.6056, 25.4824, 180.0000, 240, 240, 120);
	vmcar[3] = CreateVehicle(589, 2440.5872, 133.7654, 25.4824, 180.0000, 240, 240, 120);
	vmcar[4] = CreateVehicle(589, 2440.5872, 143.2298, 25.4824, 180.0000, 240, 240, 120);
	vmcar[5] = CreateVehicle(589, 2440.5872, 124.6056, 25.4824, 180.0000, 240, 240, 120);
	vmcar[6] = CreateVehicle(461, 2427.3701, 110.5390, 25.4786, 270.0000, 240, 240, 120);
	vmcar[7] = CreateVehicle(461, 2427.2898, 114.4582, 25.4786, 270.0000, 240, 240, 120);
	vmcar[8] = CreateVehicle(461, 2427.3528, 107.4174, 25.4786, 270.0000, 240, 240, 120);
	vmcar[9] = CreateVehicle(403, 2446.4111, 141.3634, 26.8000, 180.0000, 240, 240, 120);
	vmcar[10] = CreateVehicle(403, 2446.3081, 126.5617, 26.8000, 180.0000, 240, 240, 120);

	//Miesteliø - Prisijungime maðinos .
	nuomcar[0] = CreateVehicle(580, 2179.7617, 15.8815, 26.1937, 0.0000, 103, 103, 120); // Ðalia vairavimo mokyklos .
	nuomcar[1] = CreateVehicle(580, 2183.9019, 15.8815, 26.1937, 0.0000, 103, 103, 120); // Ðalia vairavimo mokyklos .
	nuomcar[2] = CreateVehicle(580,	2188.0229, 15.8815, 26.1937, 0.0000, 103, 103, 120); // Prisijungime .
	nuomcar[3] = CreateVehicle(580,	2191.8816, 15.8815, 26.1937, 0.0000, 103, 103, 120); // Prisijungime .
	nuomcar[4] = CreateVehicle(580,	2195.7991, 15.8815, 26.1937, 0.0000, 103, 103, 120); // Prisijungime .
	nuomcar[5] = CreateVehicle(580,	2199.8621, 15.8815, 26.1937, 0.0000, 103, 103, 120); // Prisijungime .
	nuomcar[6] = CreateVehicle(580,	2203.9016, 15.8815, 26.1937, 0.0000, 103, 103, 120); // Prisijungime .
	nuomcar[7] = CreateVehicle(580,	2208.4377, 15.8815, 26.1937, 0.0000, 103, 103, 120); // Prisijungime .
	
		// Ginklø dyleriai
	//Sabres
	dylcar[0] = CreateVehicle(475, 872.6345, 370.0580, 20.3686, 289.6089, 0, 0, 600);
	dylcar[1] = CreateVehicle(475, 866.6808, 367.9220, 20.3686, 289.6089, 0, 0, 600);
	dylcar[2] = CreateVehicle(475, 860.4908, 365.6701, 20.3686, 289.6089, 0, 0, 600);
	dylcar[3] = CreateVehicle(475, 878.8279, 372.2865, 20.3686, 289.6089, 0, 0, 600);
	//burrito
	dylcar[4] = CreateVehicle(482, 875.0299, 384.4951, 20.5913, 199.8142, 0, 0, 600);
	dylcar[5] = CreateVehicle(482, 870.9183, 383.0438, 20.5913, 199.8142, 0, 0, 600);
	dylcar[6] = CreateVehicle(482, 867.2794, 381.7547, 20.5913, 199.8142, 0, 0, 600);
	dylcar[7] = CreateVehicle(482, 863.5048, 380.3645, 20.5913, 199.8142, 0, 0, 600);
	dylcar[8] = CreateVehicle(482, 859.6027, 378.9203, 20.5913, 199.8142, 0, 0, 600);
	dylcar[9] = CreateVehicle(482, 855.5596, 377.4552, 20.5913, 199.8142, 0, 0, 600);

	new Float:tmpx,Float:tmpy,Float:tmpz;
	for(new i=0;i<MAX_VEHICLES+1;i++)
	{
		if(i >= nuomcar[0] && i <= nuomcar[7])
		{
	    	new Text3D:label = Create3DTextLabel("{33ffcc}Maðinos nuoma!\n50\n( naujokams nemokamai )\niki 3-iø praþaistø serveryje valandø", SBLUE,tmpx,tmpy,tmpz,20,0,1);
			Attach3DTextLabelToVehicle(Text3D:label, i, 0, 0, 0);
		}
	}
}

stock SendMessageToCops(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==1)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToTaxi(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==3)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}

stock SendMessageToMechanikas(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==4)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}

stock SendMessageToGdyleriai(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==5)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}

stock SendMessageToMedics(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==2)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}

stock SendMessageToRifa(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==40)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}

stock SendMessageToGstreet(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==42)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}

stock SendMessageToSwatams(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==10)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}

stock SendMessageToBendraTeisesauga(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==1 || playerDB[i][specialybe]==10 || playerDB[i][specialybe]==17)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}

stock SendMessageToCrew(crewid,color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][lektuvas]==crewid)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}

stock SendMessageToFUROS(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==11)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToRadistams(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==13)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToBaikeriams(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==14)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToSPD(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==17)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToKlubui(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==15)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToKlubuui(color,text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==16)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToPicerininkams(color, text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==20)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToValytojams(color, text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==22)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToNarams(color, text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==28)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToMedkerciams(color, text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==24)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToGaisrininkams(color, text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==26)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToKunigams(color, text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==27)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}
stock SendMessageToLimuzininkams(color, text[])
{
	for(new i=0; i<MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(playerDB[i][specialybe]==29)
			{
				SendClientMessage(i,color,text);
			}
		}
	}
}

stock SendMessageToAdmins(color, text[])
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
		if(playerDB[p][admin] < 1) continue;
		SendClientMessage(p, color, text);
	}
	return 1;
}

stock SendMessageToVips(color, text[])
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
		if(IsPlayerConnected(p))
		{
			if(playerDB[p][vip] == true)
			{
				SendClientMessage(p, color, text);
			}
		}
	}
	return 1;
}

stock KlaidosZinute(playerid,tekstas[])
{
	new string[128];
	format(string,128,"%s",tekstas);
	SendClientMessage(playerid,0xFF000030,string);
	return 1;
}
stock ServerioZinute(playerid,tekstas[])
{
	new string[170];
	format(string,150,"%s",tekstas);
	SendClientMessage(playerid,0xFF80C0FF,string);
	return 1;
}

stock IsNumeric(const string[]) // Mike
{
	for(new i = 0, j = strlen(string); i < j; i++) if(string[i] > '9' || string[i] < '0') return 0;
	return 1;
}

stock Stop(playerid)
{
	TogglePlayerControllable(playerid, true);
	new Float:coo[3];
	GetPlayerPos(playerid,coo[0],coo[1],coo[2]);
	SetPlayerPos(playerid,coo[0],coo[1],coo[2]);
}

stock StopPlayer(playerid)
{
	new Float:zPos[4];
	GetPlayerPos(playerid, zPos[0], zPos[1], zPos[2]);
	GetPlayerFacingAngle(playerid, zPos[3]);
	SetPlayerPos(playerid, zPos[0], zPos[1], zPos[2]);
	SetPlayerFacingAngle(playerid, zPos[3]);
	return 1;
}

stock GetXYInFrontOfPlayer(playerid, &Float:x, &Float:y, Float:distance)
{       
	new Float:a;
	GetPlayerPos(playerid, x, y, a);
	GetPlayerFacingAngle(playerid, a);
	if(GetPlayerVehicleID(playerid))
	{
		GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
	}
	x += (distance * floatsin(-a, degrees));
	y += (distance * floatcos(-a, degrees));
}

stock PreloadAnimLib(playerid, animlib[]) ApplyAnimation(playerid, animlib, "null", 0.0, 0, 0, 0, 0, 0);


stock GetPlayeridMid(name[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			new gPlayerName[MAX_PLAYER_NAME];
			GetPlayerName(i, gPlayerName, MAX_PLAYER_NAME);
			if(strfind(gPlayerName, name, true) != -1)
			{
				return i;
			}
		}
	}
	return INVALID_PLAYER_ID;
}

stock PlaySound(playerid, sound)
{
	new Float:Xr, Float:Yr, Float:Zr;
	GetPlayerPos(playerid, Xr, Yr, Zr);
	PlayerPlaySound(playerid, sound, Xr, Yr, Zr);
	return sound;
}

stock LoadPickups()
{
    swatPickup  = CreatePickup ( 1314 , 2 , 25.5815,2537.0681,16.9920 ) ; // Miesteliø - Treniruoèiø ginklai .
    dmPickup  = CreatePickup ( 1314 , 2 , 425.3262,2473.4143,16.5000 ) ; // Miesteliø - DM zonos ginklai .
	pickupKMA 	= CreatePickup ( 1274 , 2 , 101.2496,-124.1087,1.6100 ) ; // Miesteliø - KMA .
	vsPickup[0] = CreatePickupA( 1274, 2, 2374.3208,244.3536,26.5245 ) ; // Miesteliø - Maðinø turgus .
	//Darbø pickupai
	arifa = CreatePickupA(1313 ,2,-328.5159,1768.3789,43.9131); //Russian ásidarbinimas.
	yakuza = CreatePickupA(1313 ,2,-691.1847,941.8688,13.5878); //Yakuza ásidarbinimas.
	farai = CreatePickupA(1314 ,2,248.4808,118.4805,1003.2188); //Miesteliø - Policija.
	spdarbas = CreatePickupA(1314 ,1,2273.7136,2458.9038,10.8270); //Miesteliø - Armija.
	medikai = CreatePickupA(1314 ,2,1240.4500,309.3883,20.1359); //Miesteliø - Medikai.
	Taksi = CreatePickupA(1314 ,2,2193.7358,-88.4829,26.4764); //Miesteliø - Taksi ásidarbinimas.
	Mechanikai = CreatePickupA(1314 ,2,83.9367,-107.8555,1.6283); //Miesteliø - Mechanikø ásidarbinimas.
	Radistai = CreatePickupA(1314 ,2,319.8690,-185.7491,1.4100); //Miesteliø - Radistø ásidarbinimas.
	Dyleriai = CreatePickupA(1314, 2,898.7261,404.5733,20.7606); //Miesteliø - Dyleriu darbas
	Furistas = CreatePickupA(1314 ,2,1291.3600,717.1981,10.9100); // Miesteliø - Fûristø ásidarbinimas.
	Swatas = CreatePickupA(1314 ,2,-49.6664,-269.5458,6.6332); // Miesteliø - SWAT ásidarbinimas.
	Baikeris = CreatePickupA(1275 ,2,1889.2031,624.9097,10.8203); //Miesteliø - Baikeriai .

	//Darbø be direktoriaus
	Picerininkas = CreatePickupA(1314 ,2,1357.8701,245.9817,19.5669); //Miesteliø - Picerininkai.
	Valytojas = CreatePickupA(1314 ,2,321.1124,-44.7680,1.5900); //Miesteliø - Valytojai.
	Medkirtis = CreatePickupA(1275 ,2,1945.7196,162.8991,37.3945); //Miesteliø - Medkirèiai.
	Naras = CreatePickupA(1275 ,2,2156.6917,-97.9000,2.7706); //Miesteliø - Narai.
	Krovikas = CreatePickupA(1314 ,2,1070.2961,-345.0461,73.9922); //Miesteliø - Krovikai.
	Kunigas = CreatePickupA(1275 ,2,2259.6909,-45.1281,26.4844); //Miesteliø - Kunigai.
	Gaisrininkas = CreatePickupA(1314 ,2,670.4323,-548.6096,16.3382); //Miesteliø - Gaisrininkai.
	Limuzinistas = CreatePickupA(1314 ,2,208.1293,-56.4046,1.6119); //Miesteliø - Limuzininkai.
	
	// Sandeliai .
 	pickups[0][lsd] = CreatePickupA ( 1241, 2,-1949.6576,-1091.1626,32.1754  );
  	pickups[0][amfa] = CreatePickupA ( 1279, 2,-1940.8711,-1091.2650,32.1754  );
  	pickups[0][zole] = CreatePickupA ( 1279, 2,-1945.3840,-1091.0009,32.1754  );
	
	//Klubai.
	Klubas = CreatePickupA(1314 ,2,-501.4326,2598.8564,53.6162); //Miesteliø - Klubas.
	Klubass = CreatePickupA(1314 ,2,-1522.8230,2543.5588,55.7858); //Miesteliø - Klubas 2.
	
	//Ginklai
	SwatGinklai = CreatePickupA(2358 ,1,-23.4773,-270.5722,5.4730); //Miesteliø - SWAT ginklai.
	pickups[0][dylgunnew]=CreatePickupA(2358 ,1,2493.0811,-1709.5946,1014.7422); // Ginklø paketas naujokui.
	pickups[0][dylgunnorm]=CreatePickupA(2358 ,1,2491.2964,-1700.0140,1014.7464); // Ginklø paketas patyrusiam dyleriui
	pickups[0][dylgunbest]=CreatePickupA(2358 ,1,2499.1484,-1710.2549,1014.7422); // Ginklø paketas senbûviui.
	HealTreniruotese = CreatePickupA(1240,1,22.4775,2537.2241,16.9920); //Teisësaugos treniruoèiø pickupas heal
	DyleriuHeal = CreatePickupA(1240 ,1,1145.8104,2090.7869,10.8203); // Dyleriø gyvybës.
	Baikeriugunai = CreatePickupA(2358 ,1,511.4015,-72.1113,998.7651); //Baikeriø ginklai.
	SPDGunai = CreatePickupA(2358 ,1,2248.3235,2456.4441,10.8230); //SPD ginklai.
	Klubogunai = CreatePickupA(2358 ,1,-522.1600,2559.0415,53.6410); //Klubo ginklai.
	KluboHeal = CreatePickupA(1240 ,1,231.5118,1189.1731,1080.2578); //Klubo gyvybës.
	Kluboogunai = CreatePickupA(2358 ,1,231.3500,1249.2177,1082.1406); //Klubo ginklai 2.
	KlubooHeal = CreatePickupA(1240 ,1,228.7071,1249.0342,1082.1406); //Klubo gyvybës 2.

	//Kita
	FuristuPasikrovimas = CreatePickupA(1239,2, 1298.8998,718.3608,10.9100); // Miesteliø - Fûristø pasikrovimas.
	baudap = CreatePickupA(1274 ,2, 244.4074,118.4234,1003.2188); // Miesteliø - Baudos sumokëjimas.
	
	pickups[0][pBanko] = CreatePickupA(1274, 2, -560.3005,1797.4349,1393.2939); // Miesteliø - Banko valdymas.
	pickups[1][pBanko] = CreatePickupA(1274, 2, -555.3147,1792.8966,1393.2959); // Miesteliø - Banko valdymas second
	
	//Pirkti TLF
    pickups[0][elektronikospik]=CreatePickupA(1274 ,2,-2237.3560,130.1798,1035.4141); //Miesteliø - El. Parduotuvë.
    pickups[0][telefonupirkimas]=CreatePickupA(1274 ,2,251.6289,-56.6737,1.5703); //Miesteliø - telefonø pirkimas.
    
    //Maximos valgis.
    maximosvalgis[0] = CreatePickupA(1274 ,2,-30.8782,-28.7111,1003.5573); //Miesteliø - MAXIMOS valgis.
    maximosvalgis[1] = CreatePickupA(1274 ,2,503.1032,1558.7643,1066.2444); //Miesteliø - MAXIMOS valgis restorane.
    
    //Kita
    pickups[0][ofisoinformacija] = CreatePickupA(1239, 2, 345.6097,162.2049,1025.7964); //Miesteliø - AFK ZONOS INFORMACIJA.
    pickups[0][investicijos]=CreatePickupA(1274 ,2, 358.3417,163.2180,1008.3828); // Investicijos
    pickups[0][grybusupirkimas]=CreatePickupA(1274 ,2, 1302.6193,361.3318,19.6882);
    Paremimas = CreatePickupA(1274, 2, 358.4208,178.7867,1008.3828);
	IsKalejimo = CreatePickup(1318 ,2, 2781.0415,2748.3391,14.2870);
	gerimai = CreatePickupA(1274 ,2,499.5356,-20.8510,1000.6797);
	Kazino = CreatePickupA(1239 ,2,1940.8484,990.9404,992.4609);
	Kazinoo = CreatePickupA(1239 ,2,1945.0654,986.5052,992.4688);
	Kazinooo = CreatePickupA(1239 ,2,1955.7759,1017.9080,992.4688);
	
	//Degalinës .
	pickups[0][degaline]=CreatePickupA(1274 ,2,1385.6364,459.8454,20.0919); //Miesteliø - Ligoninës .
	//CreatePickupA(1274 ,2,653.9706,-561.7726,16.3359); //Miesteliø - PD .
	CreatePickupA(1274 ,2,1378.6530,460.1055,19.9843); //Miesteliø - Ligoninës .
	CreatePickupA(1274 ,2,1384.5566,456.8387,19.9617); //Miesteliø - Ligoninës .
	CreatePickupA(1274 ,2,1379.4141,462.1381,20.0725); //
	//CreatePickupA(1274 ,2,653.2474,-570.3127,16.3359); // PD isjungtas
	CreatePickupA(1274 ,2,2468.7639,-42.5040,26.4844); //Miesteliø - Pagrindiniame .
	pickups[1][degaline]=CreatePickupA(1274 ,2,2468.9185,-46.2695,26.4844); //Miesteliø - Pagrindiniame .
	
	//DARBU PICKUP
	mentujailas[0] = CreatePickupA(1247 ,2,-14.2050,-270.4685,5.4730);//SWAT á jail
	mentujailas[1] = CreatePickupA(1247 ,2,647.9339,-512.9417,16.5419); //Miesteliø - Policijos áveþimas á kalëjimà.
	pickups[0][swatjail]=CreatePickupA(1247 ,2,2761.8040,2575.3918,-58.7122); //[AP]JAILAS aras

	//Ginklai viskam kam reikia
    pGaujomHP[0] = CreatePickupA(1240, 2, -297.4066,1766.3574,42.9920); // Russian pasigydyti.
    pGaujomHP[1] = CreatePickupA(1240, 2, -691.9414,937.3691,13.5878); // Yakuza pasigydyti.

	pickups[0][rifagunai]=CreatePickupA(2358 ,2,-288.8643,1783.5653,42.9920); //Russian ginklai.
	pickups[0][gstreetgunai]=CreatePickupA(2358 ,2,-684.6509,939.6206,13.5878); //Yakuza ginklai.
	//PDGinklai = CreatePickupA(2358 ,1,2179.3242,-98.4793,27.3741);//Miesteliø - PD ginklai.
	
	//Pickupai.
	pickups[0][autoalga]=CreatePickupA(1274 ,2,362.3399,173.7508,1008.3828); //ALGOS
	pickups[0][valgis]=CreatePickupA(1274 ,2,373.8214,-118.8025,1001.4922); //Valgis
	CreatePickupA(1274 ,2,369.4698,-6.0230,1001.8516); //
	pickups[1][valgis]=CreatePickupA(1274 ,2,-1623.5255,-2693.2166,48.7427); //Valgis
	pickups[0][zonosvalgis]=CreatePickupA(1274, 2, 2787.0803,2767.2720,14.2870); // Zonos valgis
	pickups[0][teorija]=CreatePickupA(2894, 2,-2032.9570,-117.5185,1035.1719);//Miesteliø - VM Teorija.
	
	//Bankomatai
	pickups[0][atm] = CreatePickupA(1212 ,2,2302.7566,-6.7100,26.4844); // Bankomatas prie banko .
	CreatePickupA(1212 ,2,660.6660,-555.2374,16.3359); // Bankomatas prie PD .
	CreatePickupA(1212 ,2,1342.1290,215.9043,19.5600); // Bankomatas prie medikø .
	pickups[1][atm] = CreatePickupA(1212 ,2,291.7873,-193.3116,1.5781); // Bankomatas prie SWAT .
	
	//PAY N SPRAY
	pickups[0][jaildarbas]=CreatePickupA(1239, 2,2763.8567,2745.4595,14.2870); //Darbas kalëjime
	pickups[0][krovikudarbas]=CreatePickupA(1239, 2,1073.2994,-345.2238,73.9922); //Miesteliø - Krovikø pradëjimas.
	
	//Narkotikai narkotiku dyleriu namuose
	pickups[0][narkotikai]=CreatePickupA(1279,2,2500.0164,-1706.7646,1014.7422); // drug deze1
	CreatePickupA(1279, 2,2493.8696,-1704.0061,1014.7422); // drug deze2
	CreatePickupA(1279, 2,2491.3213,-1695.0415,1014.9249); // drug deze3
	pickups[1][narkotikai]=CreatePickupA(1279,2,2493.7891,-1712.3286,1014.7422); // drug deze4
	
	//Ginkline ir boxininko drabuziai
	pickups[0][ginkline]=CreatePickupA(1274,2,312.7335,-166.1410,999.6010); //Ginklinei pirkti ginklus
	pickups[1][ginkline]=CreatePickupA(1274,2,295.5064,-38.5146,1001.5156); //Ginklinei pirkti ginklus
	pickups[0][boxininkoskin]=CreatePickupA(1275,2,1396.9546,1791.0455,4003.4961); //RAUDONI skin
	pickups[1][boxininkoskin]=CreatePickupA(1275,2,1396.8141,1782.9396,4003.4961); //MELYNI SKIN
	pickups[0][dviraciukrov]=CreatePickupA(1239,2, 711.1776,-571.3199,16.3359);
	pickups[0][baldukrov]=CreatePickupA(1239,2, 2187.4338,-2258.3103,13.4498);
	pickups[0][buittechkrov]=CreatePickupA(1239,2, 2814.7219,973.4994,10.7500);
	pickups[0][angliukrov]=CreatePickupA(1239,2, -1868.4554,-1716.7877,21.7500);
	pickups[0][zvyrokrov]=CreatePickupA(1239,2, 816.5027,857.0323,12.7891);
	
	//Miesteliø - Kioskai .
	pickups[0][kioskas]=CreatePickupA(1274 ,2,1350.0693,211.7988,19.5469); // Miesteliø - Kioskas prie medikø .
	CreatePickupA(1274, 2,2416.0637,85.5478,26.4721); // Miesteliø - Kioskas prie vairavimo mokyklos .
	pickups[1][kioskas]=CreatePickupA(1274,2,0000.0000,0000.0000,0000.0000); // Miesteliø - Kioskas Nëra .
	
	//Sandeliu pickupai
    pickups[0][sandelisls]=CreatePickupA(1276 ,2, -366.6886, -1423.3811, 25.7266); //1 sandelis LS
	pickups[0][sandelisbb]=CreatePickupA(1276 ,2, -61.4555, 48.3689, 3.1103); //2 sandelis BB
	
	//Pickupas dël daþasvaidzio
	pickups[0][DazasvaidzioPickup] = CreatePickupA(1239, 2, 315.7141, -143.3052, 999.6016);
	pickups[0][LeaveDazasvaidisPickup] = CreatePickupA(1318, 2, 1746.9313, -1743.6998, 52.4688);
	pickups[1][LeaveDazasvaidisPickup] = CreatePickupA(1318, 2, 1808.2743, -1805.9674, 52.4688);
	pickups[0][DazasvaidzioInfo] = CreatePickupA(1239, 2, 313.9766, -139.1297, 1004.0625);
	
	//Skin shopas
	skinshoppickup[0] = CreatePickupA(1274, 2, 203.8319,-43.5235,1001.8047);
	skinshoppickup[1] = CreatePickupA(1274, 2, 204.3519,-159.7814,1000.5234);
	
	//Miesteliø - Naujokø pagydymas .
	naujokugydymas[0] = CreatePickupA(1240 ,2,2204.9048,77.5767,28.2359); // Miesteliø - Prisijungimas .
	naujokugydymas[1] = CreatePickupA(1240 ,2,2302.6746,-12.9446,26.4844); // Miesteliø - Bankas .
	naujokugydymas[2] = CreatePickupA(1240 ,2,2372.8174,240.8657,26.5245); // Miesteliø - Maðinø turgus .
	
	//Miesteliø - Bakeliø pirkimas .
	//bakeliop[0] = CreatePickupA(1274 ,2,661.0267,-573.2850,16.3359); // Miesteliø - Bakelis prie parkelio .
	bakeliop[0] = CreatePickupA(1274 ,2,2460.9280,-42.5858,26.5090); // Miesteliø - Bakelis pagr miestelyje .
	bakeliop[1] = CreatePickupA(1274 ,2,1383.1125,465.2359,20.1960); // Miesteliø - Bakelis prie mediku .
	
	//Pirkti laikà paþymos .
    pazymanomedik = CreatePickupA(1274, 2, 1236.0989,299.1217,20.1359); // Miesteliø - Sveikatos paþyma.
    
   	//Þaidëjo draudimas su laiku .
    draudimas = CreatePickupA(1274, 2, -2161.1558,640.3588,1052.3817); // Miesteliø - Þaidëju draudimas .
    
    //Armijos lifto desine
    pickups[0][armijosliftasd] = CreatePickupA(19197, 2, 2273.4751,82.4846,26.4844);
    //Armijjos lifto kaire
    pickups[0][armijosliftask] = CreatePickupA(19197, 2, 2296.6111,2451.4712,10.8250);
    //Armijos lifto apacia
    pickups[0][armijosliftasa] = CreatePickupA(19197, 2, 2268.0322,2448.6599,3.5313);
    
    //Draudimo áëjimas. ISEJIMAI
    pickups[0][ivejimasdraudimas] = CreatePickupA(19197, 2, 2273.4751,82.4846,26.4844);

	//Draudimo iðëjimas.
    pickups[0][isejimasdraudimas] = CreatePickupA(19197, 2, -2158.6250,643.1381,1052.3750);
    
   	//Dyleriø áëjimas .
    pickups[0][ivejimasdyleriu] = CreatePickupA(19197, 2, 916.5095,411.4282,20.6773);

	//Dyleriø áðëjimas .
    pickups[0][isejimasdyleriu] = CreatePickupA(19197, 2, 2495.9231, -1692.4346, 1014.7422);
    
   	//Klubas  Costello  áëjimas .
    pickups[0][ivejimasklubasc] = CreatePickupA(19197, 2, -549.9248,2600.4692,54.5311);

	//Klubas  Costello  áðëjimas .
    pickups[0][isejimasklubasc] = CreatePickupA(19197, 2, 235.2636,1186.8289,1080.2578);
    
   	//Klubas  -Patriotai-  áëjimas .
    pickups[0][ivejimasklubasp] = CreatePickupA(19197, 2, -1504.2561,2521.1113,57.6205);

	//Klubas  -Patriotai-  áðëjimas .
    pickups[0][isejimasklubasp] = CreatePickupA(19197, 2, 225.756989, 1240.000000, 1082.149902);
    
   	//Maximos PD áëjimas.
    pickups[0][ivejimasmaximap] = CreatePickupA(19197, 2, 691.2039,-546.7202,16.3359);

	//Maximos PD iðëjimas.
    pickups[0][isejimasmaximap] = CreatePickupA(19197, 2, -31.0371,-91.6426,1003.5469);
    
   	//Ðratasvaidþio áëjimas.
    pickups[0][ivejimasdazasv] = CreatePickupA(19197, 2, 279.9146,-220.4906,1.5781);

	//Ðratasvaidþio iðëjimas.
    pickups[0][isejimasdazasv] = CreatePickupA(19197, 2, 305.9444, -141.9205, 1004.0547);
    
   	//Stadiono áëjimas.
    pickups[0][ivejimasstadionas] = CreatePickupA(19197, 2, 1310.8719,329.3710,19.9141);

	//Stadiono iðëjimas.
    pickups[0][isejimasstadionas] = CreatePickupA(19197, 2, -1462.8198,934.3775,1036.5879);
    
   	//Picerijos medikø áëjimas.
    pickups[0][ivejimaspicam] = CreatePickupA(19197, 2, 1367.1578,248.4040,19.5669);

	//Picerijos medikø iðëjimas.
    pickups[0][isejimaspicam] = CreatePickupA(19197, 2, 364.8660,-11.2934,1001.8516);
    
   	//Vyriausybës áëjimas.
    pickups[0][ivejimasvyriausybe] = CreatePickupA(19197, 2, 2379.7959,-94.4758,27.3600);

	//Vyriausybës iðëjimas.
    pickups[0][isejimasvyriausybe] = CreatePickupA(19197, 2, 390.4159, 173.6984, 1008.3828);
    
   	//Vairavimo mokyklos áëjimas.
    pickups[0][ivejimasvm] = CreatePickupA(19197, 2, 2424.8264,118.7179,27.2090);

	//Vairavimo mokyklos iðëjimas.
    pickups[0][isejimasvm] = CreatePickupA(19197, 2, -2026.9049, -103.6025, 1035.1832);

	//Picerijos áëjimas.
    pickups[0][ivejimaspica] = CreatePickupA(19197, 2, 2333.3950,75.0822,26.6210);

	//Picerijos iðëjimas.
    pickups[0][isejimaspica] = CreatePickupA(19197, 2, 372.4339,-133.2537,1001.4922);

	//Ginklinës áëjimas.
    pickups[0][ivejimasginklu] = CreatePickupA(19197, 2, 2333.2307,61.5925,26.7058);

	//Ginklinës iðëjimas.
    pickups[0][isejimasginklu] = CreatePickupA(19197, 2, 316.3654, -169.8353, 999.6010);
    
    //Kovos menø salës áëjimas.
    pickups[0][ivejimaskovos] = CreatePickupA(19197, 2, 2335.0168,51.7354,26.4833);

	//Kovos menø salës iðëjimas.
    pickups[0][isejimaskovos] = CreatePickupA(19197, 2, 774.213989,-48.924297,1000.585937);
    
    //R.Þilinsko kontoros áëjimas.
    pickups[0][ivejimaszilinsko] = CreatePickupA(19197, 2, 56.8410,-183.9638,2.1159);

	//R.Þilinsko kontoros iðëjimas.
    pickups[0][isejimaszilinsko] = CreatePickupA(19197, 2, 2324.5198,-1148.9292,1050.7101);
    
    //Tech parduotuvës áëjimas.
    pickups[0][ivejimastechparduotuve] = CreatePickupA(19197, 2, 2333.5212,-67.3131,26.4844);

	//Tech parduotuvës iðëjimas.
    pickups[0][isejimastechparduotuve] = CreatePickupA(19197, 2, -2240.4685, 137.0604, 1035.4140);
    
    //Drabuþiø parduotuvës áëjimas.
    pickups[0][ivejimasdrabuziu] = CreatePickupA(19197, 2, 2334.7493,-48.8737,26.4844);

	//Drabuþiø iðëjimas.
    pickups[0][isejimasdrabuziu] = CreatePickupA(19197, 2, 204.2980,-168.6171,1000.5234);
    
    //Maisto parduotuvës áëjimas.
    pickups[0][ivejimasparduotuvepgr] = CreatePickupA(19197, 2, 2331.2966,-37.4105,26.4844);

	//Maisto parduotuvës iðëjimas.
    pickups[0][isejimasparduotuvepgr] = CreatePickupA(19197, 2, -27.3513,-57.7793,1003.5469);
    
    //Vieðbuèio áëjimas.
    pickups[0][ivejimasviesbutis] = CreatePickupA(19197, 2, 1372.0767,335.6758,19.6959);

	//Vieðbuèio iðëjimas.
    pickups[0][isejimasviesbutis] = CreatePickupA(19197, 2, 2215.2205,-1150.5592,1025.7969);
    
    //Kazino áëjimas.
    pickups[0][ivejimaskazino] = CreatePickupA(19197, 2, 2277.7988,50.8848,26.4844);

	//Kazino iðëjimas.
    pickups[0][isejimaskazino] = CreatePickupA(19197, 2, 2018.7074,1017.8577,996.8750);
    
    //Maximos PGR áëjimas.
    pickups[0][ivejimasmaximapgr] = CreatePickupA(19197, 2, 2249.6992,52.7687,26.6671);

	//Maximos PG iðëjimas.
    pickups[0][isejimasmaximapgr] = CreatePickupA(19197, 2, -27.3600,-31.3554,1003.5573);
    
    //Loterija áëjimas.
    pickups[0][ivejimasloterija] = CreatePickupA(19197, 2, 2302.9890,56.5141,26.4844);

	//Loterija iðëjimas.
    pickups[0][isejimasloterija] = CreatePickupA(19197, 2, 834.3198,7.5041,1004.1870);

    //Klubo áëjimas.
    pickups[0][ivejimasklubas] = CreatePickupA(19197, 2, 681.5742,-473.9514,16.5363);

	//Klubo iðëjimas.
    pickups[0][isejimasklubas] = CreatePickupA(19197, 2, 493.3350, -24.6613, 1000.6797);
    
    //Policijos áëjimas.
    pickups[0][ivejimaspd] = CreatePickupA(19197, 2, 636.7574,-510.2802,16.3734);
    
	//Policijos iðëjimas.
    pickups[0][isejimaspd] = CreatePickupA(19197, 2, 246.3073,107.6684,1003.2188);
    
    //Kalëjimo áëjimas.
    pickups[0][ivejimasjail] = CreatePickupA(19197, 2, 1779.3751,-1576.5115,1734.9430);

	//Kalëjimo iðëjimas.
    pickups[0][isejimasjail] = CreatePickupA(19197, 2, 2787.0681,2745.8838,14.2870);
    
    //Banko áëjimas.
    pickups[0][ivejimasbankas] = CreatePickupA(19197, 2, 2303.2166,-16.1198,26.4844);

	//Banko iðëjimas.
    pickups[0][isejimasbankas] = CreatePickupA(19197, 2, -554.7779,1783.6420,1392.4731);
    
    //Baþnyèios áëjimas.
    pickups[0][ivejimasbaznycios] = CreatePickupA(19197, 2, 2256.7168,-44.4241,26.6834);

	//Baþnyèios iðëjimas.
    pickups[0][isejimasbaznycios] = CreatePickupA(19197, 2, 387.7231,2324.3315,1889.5764);
    
    //Naru áëjimas.
    pickups[0][ivejimasnaru] = CreatePickupA(1559, 2, 2103.0708,-103.9459,2.2709);

	//Naru iðëjimas.
    pickups[0][isejimasnaru] = CreatePickupA(1559, 2, 2027.3815,-240.7831,1.8000);
    
    //Restorano áëjimas.
    pickups[0][ivejimasrestoranas] = CreatePickupA(19197, 2, 1393.9468,400.9470,19.8157);

	//Restorano iðëjimas.
    pickups[0][isejimasrestoranas] = CreatePickupA(19197, 2, 536.2401,1562.6497,1066.0649);
    
    //Baikeriø áëjimas.
    pickups[0][ivejimasbaikeriu] = CreatePickupA(19197, 2, 1900.6628,579.4955,11.5907);

	//Baikeriø iðëjimas.
    pickups[0][isejimasbaikeriu] = CreatePickupA(19197, 2, 501.9164,-67.6874,998.7578);
    
    //Bokso áëjimas.
    pickups[0][ivejimasboksas] = CreatePickupA(19197, 2, 2334.5437,42.9787,26.4840);

	//Bokso iðëjimas.
    pickups[0][isejimasboksas] = CreatePickupA(19197, 2, 1396.6243,1786.4672,4003.4961);
    
    //AFK zonos áëjimas.
    pickups[0][ivejimasafk] = CreatePickupA(19197, 2, 2236.0371,80.6705,26.7037);

	//AFK zonos iðëjimas.
    pickups[0][isejimasafk] = CreatePickupA(19197, 2, 368.1335,162.2638,1025.7891);
    
	//Þvejybos
    pickups[0][ZvejuTurgus] = CreatePickupA(1274, 2, 1457.3423,-207.2608,10.2669);
    
    //Radistø iëjimas.
    pickups[0][ivejimasradistai] = CreatePickupA(1559, 2, 299.6404,-182.9488,1.4100);

    //Radistø iðëjimas.
    pickups[0][isejimasradistai] = CreatePickupA(1559, 2, 302.0093,-192.0529,5.9832);
    
	//Informacijà kontoroje.
    pickups[0][infokontora] = CreatePickupA(1239, 2, 2329.1726,-1143.2626,1050.4922);
    return true ;
 }

stock CreatePickupA(model,type,Float:x,Float:y,Float:z)
{
	new tmp;
	if(type < 1) type=2;
	tmp = CreatePickup(model,type,Float:x,Float:y,Float:z);
	PickupIDs[tmp][0]=x; PickupIDs[tmp][1]=y; PickupIDs[tmp][2]=z;
	PModels[tmp]=type;
	return tmp;
}

public LaimesSkaicius(playerid)
{
	new RandomSekme = random(30);
	if(playerDB[playerid][KazinoKintamasis] == RandomSekme)
	{
	    new RandomPrizas = (randomEx(500,1000) + playerDB[playerid][Zetonai]);
	    new Masyvas[39];
	    format(Masyvas,39,"~n~~n~~r~Sveikiname, laimejote %dEur.",RandomPrizas);
	    TogglePlayerControllable(playerid, true);
	    GameTextForPlayer(playerid,Masyvas,3000,5);
	    GivePlayerMoneyA(playerid,RandomPrizas);
	}
	else GameTextForPlayer(playerid,"~n~~n~~r~Nieko nelaimejote...",2000,5);
	TogglePlayerControllable(playerid, true);
	playerDB[playerid][KazinoKintamasis] = 0;
	return 1;
}

public UpdateLobiai()
{
	LobiuDB[Lobis] = random(sizeof(lobiai));
	LobiuDB[IsPicked] = false;
}

stock SearchLobis(playerid)
{
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, RED, "* Maðinoje lobio tikrai nerasi..!");
	if(GetPlayerWeapon(playerid)!= 6)
	{
		SendClientMessage(playerid,TEXTCOL_BLUE,"Kasimui jums prireiks kastuvo.");
		return 1;
	}
	ApplyAnimation(playerid, "MISC", "pickup_box", 4.000000, 0, 0, 0, 0, -1);
	if(!LobiuDB[IsPicked] && IsPlayerInRangeOfPoint(playerid,3.0,lobiai[LobiuDB[Lobis]][0],lobiai[LobiuDB[Lobis]][1],lobiai[LobiuDB[Lobis]][2]))
	{
		FindLobis(playerid);
		return 1;
	}
	SendClientMessage(playerid,TEXTCOL_BLUE,"Èia lobio nëra.");
	return 1;
}
stock FindLobis(playerid)
{
	new muny, exp, msg[100];
	muny = 1000+random(2000);
	exp = 200+random(100);
	format(msg, sizeof(msg), "* Suradai lobá! Jame buvo %s . Taip pat ágyjai %s xp jo ieðkodamas(a)!", konvertuoti_pinigus(muny), konvertuoti_pinigus(exp));
	SendClientMessage(playerid,TEXTCOL_BLUE,msg);
	GivePlayerMoneyA(playerid,muny);
	SetPlayerScore(playerid,GetPlayerScore(playerid)+exp);
	LobiuDB[IsPicked]=true;
}

stock EnableLobiai()
{
	SetTimer("UpdateLobiai",3600000*24,true);
	UpdateLobiai();
}

stock CreateMenues()
{
	parduotuve[0] = CreateMenu("Zero parduotuve:",2,90,150,200,200);
	if(IsValidMenu(parduotuve[0]))
	{
		SetMenuColumnHeader(parduotuve[0], 0, "Prekiu meniu:");
		SetMenuColumnHeader(parduotuve[0], 1, "Kaina:");
		AddMenuItem(parduotuve[0],0,"IR akiniai"); AddMenuItem(parduotuve[0],1,"500 ");
		AddMenuItem(parduotuve[0],0,"Fotoaparatas"); AddMenuItem(parduotuve[0],1,"500 ");
	}
	parduotuve[1] = CreateMenu("Turgus:",2,90,150,200,200);
	if(IsValidMenu(parduotuve[1]))
	{
		SetMenuColumnHeader(parduotuve[1], 0, "Prekiu meniu:");
		SetMenuColumnHeader(parduotuve[1], 1, "Kaina:");
		AddMenuItem(parduotuve[1],0,"Gesintuvas"); AddMenuItem(parduotuve[1],1,"300 ");
		AddMenuItem(parduotuve[1],0,"Dazu purkstuvas"); AddMenuItem(parduotuve[1],1,"25 ");
		AddMenuItem(parduotuve[1],0,"Kastuvas"); AddMenuItem(parduotuve[1],1,"40 ");
		AddMenuItem(parduotuve[1],0,"Lazdele"); AddMenuItem(parduotuve[1],1,"65 ");
		AddMenuItem(parduotuve[1],0,"Golfo lazda"); AddMenuItem(parduotuve[1],1,"250 ");
		AddMenuItem(parduotuve[1],0,"Beisbolo lazda"); AddMenuItem(parduotuve[1],1,"260 ");
		AddMenuItem(parduotuve[1],0,"Geles"); AddMenuItem(parduotuve[1],1,"4 ");
	}
	parduotuve[2] = CreateMenu("Pigus ginklai:",2,90,150,200,200);
	if(IsValidMenu(parduotuve[2]))
	{
		SetMenuColumnHeader(parduotuve[2], 0, "Prekiu meniu:");
		SetMenuColumnHeader(parduotuve[2], 1, "Kaina:");
		AddMenuItem(parduotuve[2],0,"9mm"); AddMenuItem(parduotuve[2],1,"550 ");
		AddMenuItem(parduotuve[2],0,"Shotgun"); AddMenuItem(parduotuve[2],1,"800 ");
		AddMenuItem(parduotuve[2],0,"Rifle"); AddMenuItem(parduotuve[2],1,"1500 ");
		AddMenuItem(parduotuve[2],0,"Deagle"); AddMenuItem(parduotuve[2],1,"1000 ");
		AddMenuItem(parduotuve[2],0,"Ak47"); AddMenuItem(parduotuve[2],1,"1000 ");
		AddMenuItem(parduotuve[2],0,"MP5"); AddMenuItem(parduotuve[2],1,"1000 ");
		AddMenuItem(parduotuve[2],0,"M4"); AddMenuItem(parduotuve[2],1,"1000 ");
		AddMenuItem(parduotuve[2],0,"Sniper rifle"); AddMenuItem(parduotuve[2],1,"1000 ");
		AddMenuItem(parduotuve[2],0,"Gesintuvas"); AddMenuItem(parduotuve[2],1,"500 ");
	}
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
stock BuyMenu(playerid,row,Menu:menu)
{
	new mkaina,mid,mkiek;
	if(menu == parduotuve[0])
	{
		switch(row)
		{
			case 0: {mkaina=500; mid=45; mkiek=1;}
			case 1: {mkaina=500; mid=43; mkiek=10;}
		}
		ShowMenuForPlayer(menu,playerid);
	}
	else if(menu == parduotuve[1])
	{
		switch(row)
		{
			case 0: {mkaina=300; mid=42; mkiek=60;}
			case 1: {mkaina=25; mid=41; mkiek=80;}
			case 2: {mkaina=40; mid=6; mkiek=1;}
			case 3: {mkaina=65; mid=15; mkiek=1;}
			case 4: {mkaina=250; mid=2; mkiek=1;}
			case 5: {mkaina=260; mid=5; mkiek=1;}
			case 6: {mkaina=4; mid=14; mkiek=1;}
		}
		ShowMenuForPlayer(menu,playerid);
	}
	else if(menu == parduotuve[2])
	{
		switch(row)
		{
			case 0: {mkaina=400; mid=22; mkiek=550;}
			case 1: {mkaina=800; mid=25; mkiek=110;}
            case 2: {mkaina=1500; mid=33; mkiek=160;}
            case 3: {mkaina=1000; mid=24; mkiek=140;}
            case 4: {mkaina=1000; mid=30; mkiek=1400;}
            case 5: {mkaina=1000; mid=29; mkiek=1400;}
            case 6: {mkaina=1000; mid=31; mkiek=1400;}
            case 7: {mkaina=1000; mid=34; mkiek=100;}
            case 8: {mkaina=500; mid=42; mkiek=1500;}
		}
		ShowMenuForPlayer(menu,playerid);
	}
	if(GetPlayerMoneyA(playerid) < mkaina)
	{
		SendClientMessage(playerid, TEXTCOL_BLUE, "Jums nepakanka pinigø.");
		ShowMenuForPlayer(menu, playerid);
		return 1;
	}
	GivePlayerWeapon(playerid,mid,mkiek);
	GivePlayerMoneyA(playerid,-mkaina);
	return 1;
}

stock ShowBuyMenu(playerid,buy_menu_id)
{
	TogglePlayerControllable(playerid,true);
	ShowMenuForPlayer(parduotuve[buy_menu_id],playerid);
	return 0;
}

stock SendSMS(recieverid,name[],recievername[],text[],playerid=INVALID_PLAYER_ID)
{
	new tex[128];
	format(tex,sizeof(tex),"{FF6600}[SMS: %s >> %s ]:",name,recievername);
	if(recieverid != INVALID_PLAYER_ID)
	{
		PlaySound(recieverid, 1057);
		SendClientMessage(recieverid,TEXTCOL_GREEN,tex);
		SendClientMessage(recieverid,TEXTCOL_RED,text);
	}
	if(playerid!=INVALID_PLAYER_ID)
	{
		SendClientMessage(playerid,TEXTCOL_GREEN,tex);
		SendClientMessage(playerid,TEXTCOL_RED,text);
	}
}

stock GetDriver(vehicleid)
{
	for(new playerid = 0; playerid < MAX_PLAYERS; playerid++)
	{
		if(IsPlayerConnected(playerid))
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
			{
				if(IsPlayerInVehicle(playerid,vehicleid)) return playerid;
			}
		}
	}
	return INVALID_PLAYER_ID;
}


public PakeistiServerioLaika()
{
	new val, weather = random(sizeof(Oras));
	gettime(val);
	SetWorldTime(val);
	SetWeather(weather);
	ServerioLaikas = val;
	ServerioOras = weather;
}

#pragma unused Oras

stock MoveToHospital(playerid)
{
	if ( GetPVarInt ( playerid , "inTrainingZone" ) >= 1 ) {
	    SendClientMessage ( playerid , -1 , "[ {009999}TRENIRUOÈIØ ZONA {ffffff} ] : Tu {009999}mirei! {ffffff}Tu atsirasi {009999}treneruoèiø zonoj !" ) ;
	    return SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), 25.5815,2537.0681,16.9920,354.9714,0,0,0,0,0,0);
	}
	if ( GetPVarInt ( playerid , "inDMZone" ) >= 1 ) {
	    SendClientMessage ( playerid , -1 , "[ {009999}DM ZONA {ffffff} ] : Tu {009999}mirei! {ffffff}Tu atsirasi {009999}DM zonoj !" ) ;
	    return SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), 424.2805,2460.0627,16.5000,87.9999,0,0,0,0,0,0);
	}
	if(playerDB[playerid][DalyvaujaPB])
	{
		if(playerDB[playerid][GreenPB])
		{
		    SetSpawnInfo(playerid,GetPlayerTeam(playerid),GetPlayerSkin(playerid),1754.2775, -1748.2770, 52.4688, 356.4937, 24, 500, 29, 500, 0, 0);
		}
		else
		{
			SetSpawnInfo(playerid,GetPlayerTeam(playerid),GetPlayerSkin(playerid),1802.0533,-1801.8297,52.4688,356.4937,24,500,29,500,0,0);
		}
	}
	else
	{
	    if(playerDB[playerid][kalejimo_laikas] > 0)
     	{
     	    SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), 2750.5090, 2730.8125, 2875.6328, 2792.5319, 0, 0, 0, 0, 0, 0);
		}
		else
		{
			new Float:h[2];
			h[0] = GetPlayerDistanceFromPoint(playerid, HospitalsSpawns[0][0], HospitalsSpawns[0][1], HospitalsSpawns[0][2]);
			h[1] = GetPlayerDistanceFromPoint(playerid, HospitalsSpawns[1][0], HospitalsSpawns[1][1], HospitalsSpawns[1][2]);
			if(h[0] < h[1])
			{
				SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), HospitalsSpawns[0][0], HospitalsSpawns[0][1], HospitalsSpawns[0][2], HospitalsSpawns[0][3], 0, 0, 0, 0, 0, 0);
			}
			else
			{
				SetSpawnInfo(playerid, GetPlayerTeam(playerid), GetPlayerSkin(playerid), 1234.2512,310.0016,19.5400,65.2255,0,0,0,0,0,0);
				OfisoDarbas[playerid] = false;
			}
		}
	}
	return 1;
}

stock MakeToMeMinxMinyMaxxMaxy(Float:x1, Float:x2, Float:x3, Float:x4, Float:y1, Float:y2, Float:y3, Float:y4)
{
	new a, Float:C[4], Float:X[4], Float:Y[4];
	X[0] = x1; Y[0] = y1;
	X[1] = x2; Y[1] = y2;
	X[2] = x3; Y[2] = y3;
	X[3] = x4; Y[3] = y4;
	for(a = 0; a < 4; a++)
	{
		if(a == 0)
		{
			C[0] = X[a]; C[2] = Y[a];
			C[1] = X[a]; C[3] = Y[a];
			continue;
		}
		if(C[0] > X[a]) C[0] = X[a];
		if(C[1] < X[a]) C[1] = X[a];
		if(C[2] > Y[a]) C[2] = Y[a];
		if(C[3] < Y[a]) C[3] = Y[a];
	}
	printf("min_X: %.4f, min_Y: %.4f, max_X: %.4f, max_Y: %.4f", C[0], C[2], C[1], C[3]);
	return 1;
}
public OnFadeComplete( playerid, mode, color, steps )
{
	if( mode == FADE_IN )
	{
		FadeScreenForPlayer( playerid, FADE_OUT, color );
	}
	return 1;
}

stock GetWeekDay()
{
    new GWD_val = ((gettime() + 334800) / 86400 - (gettime() + 334800) / 86400 /7 *7);
    return (++GWD_val > 7) ? -1 : GWD_val - 1;
}

stock SukuriameMatuoklius(Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
    CreateDynamicObject(18880, x, y, z, rx, ry, rz);
   	Create3DTextLabel("{FF0000}Greièio matuoklis!\nMaksimalus leistinas greitis {FF8C00}90km/h", 0xAAAAFFFF, x, y, z+5, 55, 0, 1);
}

stock IsjungiameVisusTD(playerid)
{
    TextDrawHideForPlayer(playerid, laikiux);
	TextDrawHideForPlayer(playerid, datike);
//	PlayerTextDrawHide ( playerid , Logo [ playerid ] ) ;
}

stock IjungiameVisusTD(playerid)
{
    TextDrawShowForPlayer(playerid, laikiux);
	TextDrawShowForPlayer(playerid, datike);
//	PlayerTextDrawShow ( playerid , Logo [ playerid ] ) ;
}

stock KiekKredituTuri(Nickas[])
{
	if(strlen(Nickas) > 20) return -1;
	new str[65], krd = -1;
	format(str, 65, "SELECT * FROM `players` WHERE `Vardas` = '%s'", Nickas);
	mysql_query(str);
	mysql_store_result();
	mysql_retrieve_row();
	if(mysql_num_rows()) { mysql_fetch_field_row(str, "Kreditai"); krd = strval(str); }
	mysql_free_result();
	// -1 = arba blogas nick'as, arba nera su tokiu nick'u zaidejo
	return krd;
}

stock ShowGpsFirstDialog(playerid)
{
	new str[128], bt[14], hs[12];
	if(PlayerHaveBusiness(playerid) != -1) { bt = "Mano verslas."; } else { bt = "-"; }
	if(PlayerHaveHouse(playerid) != -1) { hs = "Mano namas."; } else { hs = "-"; }
	format(str, sizeof(str), "Darbai\nMafijos\nPramogos\nKitos vietos\nSvarbios vietos\nKlubai\n%s\n%s", bt, hs);
    ShowPlayerDialog(playerid, 4500, DIALOG_STYLE_LIST, "GPS navigacija", str, "Rinktis", "Iðeiti");
    return true;
}

stock GetDistanceBetweenPlayers( playerid, giveplayerid )
{
    new Float:x1, Float:y1, Float:z1, Float:x2, Float:y2, Float:z2;
    GetPlayerPos(playerid, x1, y1, z1);
    GetPlayerPos(giveplayerid, x2, y2, z2);
    return floatround(floatsqroot(floatpower(floatabs(floatsub(x2,x1)), 2) + floatpower(floatabs(floatsub(y2,y1)),2) + floatpower(floatabs(floatsub(z2,z1)) ,2)));
}

stock CreateHouses()
{
    new hQuery[43], str[160];
    for(new house; house < MAX_HOUSES; house++)
	{
	    format(hQuery, 43, "SELECT * FROM `houses` WHERE `ID` = '%d'", house);
		mysql_query(hQuery);
		mysql_store_result();
		mysql_retrieve_row();
		if(mysql_num_rows())
		{
			mysql_fetch_field_row(hQuery, "Buyed"); hInfo[house][Buyed] = !!strval(hQuery);
			mysql_fetch_field_row(hQuery, "Locked"); hInfo[house][Locked] = !!strval(hQuery);
			mysql_fetch_field_row(hQuery, "Owner"); format(hInfo[house][Owner], 21, "%s", hQuery);
			mysql_fetch_field_row(hQuery, "Cost"); hInfo[house][Cost] = strval(hQuery);
			mysql_fetch_field_row(hQuery, "ExitX"); hInfo[house][ExitX] = floatstr(hQuery);
			mysql_fetch_field_row(hQuery, "ExitY"); hInfo[house][ExitY] = floatstr(hQuery);
			mysql_fetch_field_row(hQuery, "ExitZ"); hInfo[house][ExitZ] = floatstr(hQuery);
			mysql_fetch_field_row(hQuery, "ExitAngle"); hInfo[house][ExitAngle] = floatstr(hQuery);
			mysql_fetch_field_row(hQuery, "hInt"); hInfo[house][hInt] = strval(hQuery);
			mysql_fetch_field_row(hQuery, "IntX"); hInfo[house][IntX] = floatstr(hQuery);
			mysql_fetch_field_row(hQuery, "IntY"); hInfo[house][IntY] = floatstr(hQuery);
			mysql_fetch_field_row(hQuery, "IntZ"); hInfo[house][IntZ] = floatstr(hQuery);
			mysql_fetch_field_row(hQuery, "IntAngle"); hInfo[house][IntAngle] = floatstr(hQuery);
			mysql_fetch_field_row(hQuery, "htVW"); hInfo[house][htVW] = strval(hQuery);
			mysql_fetch_field_row(hQuery, "Money"); hInfo[house][Money] = strval(hQuery);
			if(hInfo[house][Buyed])
			{
				format(str, 104, "{66ffcc}Namo numeris:{1BB300} %d\n{66ffcc}Namas neparduodamas\nSavininkas:{1BB300} %s", house + 1, hInfo[house][Owner]);
				hInfo[house][House3D] = Create3DTextLabel(str, -1, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], 20, 0, 0);
				hInfo[house][HousePickup] = CreatePickup(1272, 1, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], 0);
			}
			else
			{
				format(str, 150, "{66ffcc}Namo numeris:{1BB300} %d\n{66ffcc}Namas parduodamas\nNamo kaina:{1BB300} %d\n{66ffcc}Norint nusipirkti - spauskite ENTER", house + 1, hInfo[house][Cost]);
				hInfo[house][House3D] = Create3DTextLabel(str, -1, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], 20, 0, 0);
				hInfo[house][HousePickup] = CreatePickup(1273, 1, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], 0);
			}
			hInfo[house][hCreated] = true;
		}
		else
		{
		    hInfo[house][hCreated] = false;
			hInfo[house][Buyed] = false;
			hInfo[house][Locked] = false;
			format(hInfo[house][Owner], 5, "Nera");
		 	hInfo[house][Cost] = -1;
			hInfo[house][ExitX] = -1;
			hInfo[house][ExitY] = -1;
			hInfo[house][ExitZ] = -1;
			hInfo[house][ExitAngle] = -1;
			hInfo[house][IntX] = -1;
			hInfo[house][IntY] = -1;
			hInfo[house][IntZ] = -1;
			hInfo[house][IntAngle] = -1;
			hInfo[house][hInt] = -1;
			hInfo[house][htVW] = -1;
			hInfo[house][Money] = -1;
		}
		mysql_free_result();
	}
	return 1;
}

stock SaveHouse(house)
{
	new hQuery[130];
    format(hQuery, 120, "UPDATE `houses` SET Owner = '%s', Buyed = '%d', Locked = '%d', Cost = '%d' WHERE ID = '%d'", hInfo[house][Owner], hInfo[house][Buyed], hInfo[house][Locked], hInfo[house][Cost], house);
	mysql_query(hQuery);
    format(hQuery, 130, "UPDATE `houses` SET ExitX = '%.4f', ExitY = '%.4f', ExitZ = '%.4f', ExitAngle = '%.4f' WHERE ID = '%d'", hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ], hInfo[house][ExitAngle], house);
	mysql_query(hQuery);
    format(hQuery, 125, "UPDATE `houses` SET IntX = '%.4f', IntY = '%.4f', IntZ = '%.4f', IntAngle = '%.4f' WHERE ID = '%d'", hInfo[house][IntX], hInfo[house][IntY], hInfo[house][IntZ], hInfo[house][IntAngle], house);
	mysql_query(hQuery);
    format(hQuery, 90, "UPDATE `houses` SET hInt = '%d', htVW = '%d', Money = '%d' WHERE ID = '%d'", hInfo[house][hInt], hInfo[house][htVW], hInfo[house][Money], house);
	mysql_query(hQuery);
	return 1;
}

stock RemovePlayersFromHouse(house)
{
	for(new p = 0; p < MAX_PLAYERS; p++)
	{
	    if(!IsPlayerConnected(p) || IsPlayerNPC(p)) continue;
	    if(playerDB[p][NamoID] == house)
		{
		    SetPlayerInterior(p, 0);
			SetPlayerVirtualWorld(p, 0);
			SetPlayerPos(p, hInfo[house][ExitX], hInfo[house][ExitY], hInfo[house][ExitZ]);
			SetPlayerFacingAngle(p, hInfo[house][ExitAngle]);
			playerDB[p][NamoID] = -1;
		}
	}
	return 1;
}

stock PlayerHaveHouse(playerid)
{
	for(new house; house < MAX_HOUSES; house++)
	{
	    if(hInfo[house][hCreated] && !strcmp(hInfo[house][Owner], GetPlayerNameEx(playerid), true)) return house;
	}
    return -1;
}

//stock
stock LoadPlayerBan(playerid)// Pakeisti raktazodi ir numeri
{
    new Query[120], String[300], Stringas[300];

	format(Query, sizeof(Query), "SELECT * FROM `bannedplayers` WHERE `User` = '%s' OR `IP` = '%s'", GetPlayerNameEx(playerid), GetPlayerIpEx(playerid));
	mysql_query(Query);

	mysql_store_result();

	if(mysql_fetch_row(Query))
	{
		ClearChat(playerid, 20);

		strcat(Stringas, "{FFFFFF}Jûsø vartotojas ar IP adresas yra uþblokuoti visam laikui.\n \n");
		strcat(Stringas, "{FFFFFF}Atsiblokavimo kaina: {8cc17b}2.00 EUR\n");
		format(String, sizeof(String), "{FFFFFF}Siøsk sms þinutæ su raktaþodþiu: {8cc17b}ðiuo metu neveikia %s\n", GetPlayerNameEx(playerid));
		strcat(Stringas, String);
		strcat(Stringas, "{FFFFFF}Numeriu: {8cc17b}Ðiuo metu neveikia");
		ShowPlayerDialog(playerid, UnbanDialog, DIALOG_STYLE_MSGBOX, "Uþblokuotas", Stringas, " ", " ");
		IsmestiZaideja(playerid, 100);

		return 1;
    }

	mysql_free_result();

	return 0;
}
stock ClearChat(playerid, Eilutes)
{
	for(new i = 0; i != Eilutes; i ++) SendClientMessage(playerid, -1, " ");
}
stock AlgosZinutes(playerid)
{
	playerDB[playerid][AlgosKiekis] = floatround(GetPlayerScore(playerid) / 100);

	if(playerDB[playerid][AlgosKiekis] < 20)
	{
		playerDB[playerid][AlgosKiekis] = 20;
	}

	new String[216];

	if(playerDB[playerid][vip] == true || playerDB[playerid][admin] != 0)
	{
		format(String, 216, "{9966CC}[DARBAS]: {ffffff}Vaþinëdami darbine transp. priemone jus uþdirbsite {9966CC}%i /min{ffffff}, nes esate VIP arba ADMIN.", playerDB[playerid][AlgosKiekis] + 10);
	}
	else
	{
		format(String, 216, "{9966CC}[DARBAS]: {ffffff}Vaþinëdami darbine transp. priemone jus uþdirbsite {9966CC}%i /min{ffffff}, esant VIP arba ADMIN uþdirbsite 10  daugiau.", playerDB[playerid][AlgosKiekis]);
	}

	SendClientMessage(playerid, -1, String);

	if(GetPlayerScore(playerid) < 2100)
	{
		SendClientMessage(playerid, -1, "{9966CC}[DARBAS]: {ffffff}Iki {9966CC}2100 XP {ffffff}jus gausite {9966CC}20 /min{ffffff}, jeigu esate VIP - {9966CC}30 /min{ffffff}.");
		SendClientMessage(playerid, -1, "{9966CC}[DARBAS]: {ffffff}Poto jûsø uþdarbis priklausys nuo jûsø XP kiekio {9966CC}(100 XP + 1 ){ffffff}.");
	}
}
stock BaigesiAdmin(playerid)
{
	if(playerDB[playerid][admin] < 1)
	{
		return 1;
	}
	else
	{
		if(gettime() >= playerDB[playerid][AdminLaikas])
		{
			SendClientMessage(playerid, RED, "* Praradai ADMIN narystæ nes tavo ADMIN galiojimo laikas pasibaigæs!");
			playerDB[playerid][admin] = 0;
			playerDB[playerid][AdminLaikas] = 0;
			SetPlayerColor(playerid,PLAYCOL_HIDDEN);
		}
	}
	return 1;
}
stock GetStampIP(playerid)
{
	new S_IP[16];
	Join_Stamp=GetTickCount();
	GetPlayerIp(playerid,S_IP,16);
	format(ban_s, 16, "%s", S_IP);
}
stock randomEx(minnum = cellmin, maxnum = cellmax)
{
	return random(maxnum - minnum + 1) + minnum;
}
stock RotateObject(objectid, Float: RotX, Float: RotY, Float: RotZ, Float: RotSpeed)
{
    new Float: ObjectPos[3];

 GetObjectPos(objectid, ObjectPos[0], ObjectPos[1], ObjectPos[2]);

 if(GateAllreadyRotated[objectid] == 0)
 {
     GateAllreadyRotated[objectid] = 1;

  return MoveObject(objectid, ObjectPos[0], ObjectPos[1], ObjectPos[2] + 0.015, RotSpeed, RotX, RotY, RotZ);
 }
 else
 {
     GateAllreadyRotated[objectid] = 0;

     return MoveObject(objectid, ObjectPos[0], ObjectPos[1], ObjectPos[2] - 0.015, RotSpeed, RotX, RotY, RotZ);
 	}
}
//Public
forward AtstatomFlooda(playerid);
public AtstatomFlooda(playerid)
{
	Floodas[playerid] = 0;
}
//public
forward OfisoDarbass(playerid);
public OfisoDarbass(playerid)
{
	if(OfisoDarbas[playerid] == false)
	{
	    KillTimer(OfisoTimer[playerid]);
	    return true;
	}
	GivePlayerMoneyA ( playerid , 2 ) ;
	return 1;
}
forward SkinimasDyleriams(playerid);
public SkinimasDyleriams(playerid)
{
	new KiekGausiuZoles = randomEx(1,6);
	new masyvas[32];
	format(masyvas, 32, "* Skinimà gavau %d þolës!",KiekGausiuZoles);
	SendClientMessage(playerid, BLUE, masyvas);
	TogglePlayerControllable(playerid,true);
	playerDB[playerid][zole]+=KiekGausiuZoles;
	AsJauSkinu[playerid] = 0;
}
public UpdateSpeedo ( playerid )
{
	new
		//string [ 200 ] , Float:carHP , vehID = GetPlayerVehicleID ( playerid ) , vMod = GetVehicleModel ( vehID ) ,
	string [ 200 ] , Float:carHP , vehID = GetPlayerVehicleID ( playerid ) ; new vMod = GetVehicleModel ( vehID ) ,
	Float:speed_ [ 4 ];
	GetVehicleHealth ( vehID , carHP ) ;
	GetVehicleVelocity ( vehID , speed_ [ 0 ] , speed_ [ 1 ] , speed_ [ 2 ] ) ;
	speed_ [ 3 ]  = floatsqroot ( ( speed_ [ 0 ] * speed_ [ 0 ] ) + ( speed_ [ 1 ] * speed_ [ 1 ] ) + ( speed_  [ 2 ] * speed_ [ 2 ] ) ) * 200.666667 ;
	vehicleDB [ vehID ] [ Rida ] += speed_ [ 3 ] / 35000;
	format ( string , sizeof ( string ) ,
			"Masina: ~y~%s~n~~w~Variklis: %s~n~~w~Degalai: ~y~%dl~n~~w~Durys: %s~n~~w~Radijas: ~y~%s",
			VehicleNames [ vMod - 400 ] , getEngineStatus ( vehID ) , vehicleDB [ vehID ] [ gas ] , getDoorsStatus ( vehID ) , ( isnull ( RadijosURL [ vehID ] ) ) ? ("~r~Isjungtas") : ( RadijosPavadinimas [ vehID ] )) ;
	PlayerTextDrawSetString ( playerid , speedo [ 1 ] [ playerid ] , string ) ;
	format ( string , sizeof ( string ) , "%0.2f  ~r~KM" , vehicleDB [ vehID ] [ Rida ] ) ;
	PlayerTextDrawSetString ( playerid , speedo [ 4 ] [ playerid ] , string ) ;
	format ( string , sizeof ( string ) , "%0.1f%" , carHP/10 ) ;
	PlayerTextDrawSetString ( playerid , speedo [ 6 ] [ playerid ] , string ) ;
	format ( string , sizeof ( string ) , "%d ~y~KM/H" , GetPlayerSpeed ( playerid ) ) ;
	PlayerTextDrawSetString ( playerid , speedo [ 7 ] [ playerid ] , string ) ;
	for ( new td = 0; td < 8; td ++ )
	{
		PlayerTextDrawShow ( playerid , speedo [ td ] [ playerid ] ) ;
	}
	return 1;
}

getDoorsStatus ( id ) {
	new status [ 50 ];
	switch ( vehicleDB [ id ] [ vLocked ] ) {
		case 0: status = "~g~Atrakintos";
		case 1: status = "~r~Uzrakintos";
	}
	return status;
}
getEngineStatus ( id ) {
	new status [ 50 ] , Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective;
	GetVehicleParamsEx ( id, Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective ) ;
	SetVehicleParamsEx ( id , Engine , Lights , Alarm , Doors , Bonnet , Boot , Objective ) ;
	switch ( Engine ) {
		case 0: status = "~r~Uzgesintas";
		case 1: status = "~g~Uzvestas";
	}
	return status;
}
stock HideSidometer ( playerid )
{
	for ( new tds = 0; tds < 8; tds ++ ) {
		PlayerTextDrawHide ( playerid , speedo [ tds ] [ playerid ] ) ;
	}
}

stock UpdateAlkanasTextdraw( playerid )
{
	new iString[ 30 ];
	format(iString, 30, "Alkis: ~p~%i~p~%%", playerDB[ playerid ][ alkis ]);
	TextDrawSetString(AlkTD[playerid], iString);
	return 1;
}

/*public NewContest()
{
	new string [128];
	ContestAnswer = MINIMUM_VALUE + random(MAXIMUM_VALUE-MINIMUM_VALUE);
	format(string,sizeof string,"{ECD7AB}Pirmas paraðæs {B89242}%d {ECD7AB}laimës: {B89242}200.",ContestAnswer);
	SendClientMessageToAll(0x00FFFFFF,string);
	return 1;
}

public OnPlayerWinContest(playerid)
{
	new string[128];
	format(string,sizeof string,"{ECD7AB}Þaidëjas {B89242}%s {ECD7AB}Pirmas paraðë, ir laimëjo: {B89242}200 !", GetPlayerNameEx(playerid));
	SendClientMessageToAll(0x00FFFFFF,string);
	GivePlayerMoneyA(playerid, 200);
	ContestAnswer = -1;
	return 1;
}*/
onLoadSpeedo ( playerid ) {
	speedo [ 0 ] [ playerid ] = CreatePlayerTextDraw(playerid, 632.476440, 363.313323, "usebox");
	PlayerTextDrawLetterSize(playerid, speedo [ 0 ] [ playerid ], 0.000000, 8.264073);
	PlayerTextDrawTextSize(playerid, speedo [ 0 ] [ playerid ], 436.476104, 0.000000);
	PlayerTextDrawAlignment(playerid, speedo [ 0 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, speedo [ 0 ] [ playerid ], 0);
	PlayerTextDrawUseBox(playerid, speedo [ 0 ] [ playerid ], true);
	PlayerTextDrawBoxColor(playerid, speedo [ 0 ] [ playerid ], 102);
	PlayerTextDrawSetShadow(playerid, speedo [ 0 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, speedo [ 0 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, speedo [ 0 ] [ playerid ], 0);

	speedo [ 1 ] [ playerid ] = CreatePlayerTextDraw(playerid, 448.761901, 373.760040, "Masina: ~y~Infernus~n~~w~Variklis:~g~ Uzvestas~n~~w~Degalai: ~y~35l~n~~w~Durys: ~r~Uzrakintos~n~~w~Radijas: ~y~Zip FM");
	PlayerTextDrawLetterSize(playerid, speedo [ 1 ] [ playerid ], 0.271714, 1.152000);
	PlayerTextDrawAlignment(playerid, speedo [ 1 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, speedo [ 1 ] [ playerid ], -1);
	PlayerTextDrawSetShadow(playerid, speedo [ 1 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, speedo [ 1 ] [ playerid ], 1);
	PlayerTextDrawBackgroundColor(playerid, speedo [ 1 ] [ playerid ], 51);
	PlayerTextDrawFont(playerid, speedo [ 1 ] [ playerid ], 1);
	PlayerTextDrawSetProportional(playerid, speedo [ 1 ] [ playerid ], 1);

	speedo [ 2 ] [ playerid ] = CreatePlayerTextDraw(playerid, 542.857177, 356.693328, "LD_POOL:ball");
	PlayerTextDrawLetterSize(playerid, speedo [ 2 ] [ playerid ], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedo [ 2 ] [ playerid ], 85.714294, 89.173309);
	PlayerTextDrawAlignment(playerid, speedo [ 2 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, speedo [ 2 ] [ playerid ], -1);
	PlayerTextDrawSetShadow(playerid, speedo [ 2 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, speedo [ 2 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, speedo [ 2 ] [ playerid ], 4);

	speedo [ 3 ] [ playerid ] = CreatePlayerTextDraw(playerid, 619.142883, 411.953338, "usebox");
	PlayerTextDrawLetterSize(playerid, speedo [ 3 ] [ playerid ], 0.000000, 0.726295);
	PlayerTextDrawTextSize(playerid, speedo [ 3 ] [ playerid ], 552.666687, 0.000000);
	PlayerTextDrawAlignment(playerid, speedo [ 3 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, speedo [ 3 ] [ playerid ], 0);
	PlayerTextDrawUseBox(playerid, speedo [ 3 ] [ playerid ], true);
	PlayerTextDrawBoxColor(playerid, speedo [ 3 ] [ playerid ], 102);
	PlayerTextDrawSetShadow(playerid, speedo [ 3 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, speedo [ 3 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, speedo [ 3 ] [ playerid ], 0);

	speedo [ 4 ] [ playerid ] = CreatePlayerTextDraw(playerid, 556.952819, 411.733245, "000000.0 ~r~KM");
	PlayerTextDrawLetterSize(playerid, speedo [ 4 ] [ playerid ], 0.242380, 0.746666);
	PlayerTextDrawAlignment(playerid, speedo [ 4 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, speedo [ 4 ] [ playerid ], -1);
	PlayerTextDrawSetShadow(playerid, speedo [ 4 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, speedo [ 4 ] [ playerid ], 1);
	PlayerTextDrawBackgroundColor(playerid, speedo [ 4 ] [ playerid ], 51);
	PlayerTextDrawFont(playerid, speedo [ 4 ] [ playerid ], 1);
	PlayerTextDrawSetProportional(playerid, speedo [ 4 ] [ playerid ], 1);

	speedo [ 5 ] [ playerid ] = CreatePlayerTextDraw(playerid, 560.762756, 422.826599, "hud:radar_girlfriend");
	PlayerTextDrawLetterSize(playerid, speedo [ 5 ] [ playerid ], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, speedo [ 5 ] [ playerid ], 10.666673, 8.959985);
	PlayerTextDrawAlignment(playerid, speedo [ 5 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, speedo [ 5 ] [ playerid ], -1);
	PlayerTextDrawSetShadow(playerid, speedo [ 5 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, speedo [ 5 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, speedo [ 5 ] [ playerid ], 4);

	speedo [ 6 ] [ playerid ] = CreatePlayerTextDraw(playerid, 573.714355, 423.253265, "100.0%");
	PlayerTextDrawLetterSize(playerid, speedo [ 6 ] [ playerid ], 0.242380, 0.959999);
	PlayerTextDrawAlignment(playerid, speedo [ 6 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, speedo [ 6 ] [ playerid ], -1378294017);
	PlayerTextDrawSetShadow(playerid, speedo [ 6 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, speedo [ 6 ] [ playerid ], 1);
	PlayerTextDrawBackgroundColor(playerid, speedo [ 6 ] [ playerid ], 51);
	PlayerTextDrawFont(playerid, speedo [ 6 ] [ playerid ], 1);
	PlayerTextDrawSetProportional(playerid, speedo [ 6 ] [ playerid ], 1);

	speedo [ 7 ] [ playerid ] = CreatePlayerTextDraw(playerid, 553.904479, 388.693267, "100~y~km/h");
	PlayerTextDrawLetterSize(playerid, speedo [ 7 ] [ playerid ], 0.367333, 1.284266);
	PlayerTextDrawAlignment(playerid, speedo [ 7 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, speedo [ 7 ] [ playerid ], -1061109505);
	PlayerTextDrawSetShadow(playerid, speedo [ 7 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, speedo [ 7 ] [ playerid ], 1);
	PlayerTextDrawBackgroundColor(playerid, speedo [ 7 ] [ playerid ], 51);
	PlayerTextDrawFont(playerid, speedo [ 7 ] [ playerid ], 1);
	PlayerTextDrawSetProportional(playerid, speedo [ 7 ] [ playerid ], 1);
    
	return 1;
}
onLoadCarShopTextDraws ( playerid ) {
	CarShop [ 0 ] [ playerid ] = CreatePlayerTextDraw(playerid, -1.047263, 379.526672, "usebox");
	PlayerTextDrawLetterSize(playerid, CarShop [ 0 ] [ playerid ], 0.000000, 7.585115);
	PlayerTextDrawTextSize(playerid, CarShop [ 0 ] [ playerid ], 638.762084, 0.000000);
	PlayerTextDrawAlignment(playerid, CarShop [ 0 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 0 ] [ playerid ], 0);
	PlayerTextDrawUseBox(playerid, CarShop [ 0 ] [ playerid ], true);
	PlayerTextDrawBoxColor(playerid, CarShop [ 0 ] [ playerid ], 255);
	PlayerTextDrawSetShadow(playerid, CarShop [ 0 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 0 ] [ playerid ], 0);
	PlayerTextDrawBackgroundColor(playerid, CarShop [ 0 ] [ playerid ], 255);
	PlayerTextDrawFont(playerid, CarShop [ 0 ] [ playerid ], 0);

	CarShop [ 1 ] [ playerid ] = CreatePlayerTextDraw(playerid, 284.571350, 378.880004, "INFERNUS");
	PlayerTextDrawLetterSize(playerid, CarShop [ 1 ] [ playerid ], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, CarShop [ 1 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 1 ] [ playerid ], -1);
	PlayerTextDrawSetShadow(playerid, CarShop [ 1 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 1 ] [ playerid ], 1);
	PlayerTextDrawBackgroundColor(playerid, CarShop [ 1 ] [ playerid ], 51);
	PlayerTextDrawFont(playerid, CarShop [ 1 ] [ playerid ], 2);
	PlayerTextDrawSetProportional(playerid, CarShop [ 1 ] [ playerid ], 1);

	CarShop [ 2 ] [ playerid ] = CreatePlayerTextDraw(playerid, 285.333312, 396.373260, "Metai: ~y~2005~n~~w~Bako talpa: ~y~45L~n~~w~Turim: ~y~45vnt.");
	PlayerTextDrawLetterSize(playerid, CarShop [ 2 ] [ playerid ], 0.339904, 0.960000);
	PlayerTextDrawAlignment(playerid, CarShop [ 2 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 2 ] [ playerid ], -1);
	PlayerTextDrawSetShadow(playerid, CarShop [ 2 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 2 ] [ playerid ], 1);
	PlayerTextDrawBackgroundColor(playerid, CarShop [ 2 ] [ playerid ], 51);
	PlayerTextDrawFont(playerid, CarShop [ 2 ] [ playerid ], 1);
	PlayerTextDrawSetProportional(playerid, CarShop [ 2 ] [ playerid ], 1);

	CarShop [ 3 ] [ playerid ] = CreatePlayerTextDraw(playerid, 284.952392, 426.240020, "LD_POOL:ball");
	PlayerTextDrawLetterSize(playerid, CarShop [ 3 ] [ playerid ], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, CarShop [ 3 ] [ playerid ], 8.761875, 9.813323);
	PlayerTextDrawAlignment(playerid, CarShop [ 3 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 3 ] [ playerid ], -1);
	PlayerTextDrawSetShadow(playerid, CarShop [ 3 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 3 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, CarShop [ 3 ] [ playerid ], 4);

	CarShop [ 4 ] [ playerid ] = CreatePlayerTextDraw(playerid, 294.952392, 426.240020, "LD_POOL:ball");
	PlayerTextDrawLetterSize(playerid, CarShop [ 4 ] [ playerid ], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, CarShop [ 4 ] [ playerid ], 8.761875, 9.813323);
	PlayerTextDrawAlignment(playerid, CarShop [ 4 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 4 ] [ playerid ], -1061109505);
	PlayerTextDrawSetShadow(playerid, CarShop [ 4 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 4 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, CarShop [ 4 ] [ playerid ], 4);

	CarShop [ 5 ] [ playerid ] = CreatePlayerTextDraw(playerid, 304.952392, 426.240020, "LD_POOL:ball");
	PlayerTextDrawLetterSize(playerid, CarShop [ 5 ] [ playerid ], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, CarShop [ 5 ] [ playerid ], 8.761875, 9.813323);
	PlayerTextDrawAlignment(playerid, CarShop [ 5 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 5 ] [ playerid ], -16776961);
	PlayerTextDrawSetShadow(playerid, CarShop [ 5 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 5 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, CarShop [ 5 ] [ playerid ], 4);

	CarShop [ 6 ] [ playerid ] = CreatePlayerTextDraw(playerid, 314.952392, 426.240020, "LD_POOL:ball");
	PlayerTextDrawLetterSize(playerid, CarShop [ 6 ] [ playerid ], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, CarShop [ 6 ] [ playerid ], 8.761875, 9.813323);
	PlayerTextDrawAlignment(playerid, CarShop [ 6 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 6 ] [ playerid ], 8388863);
	PlayerTextDrawSetShadow(playerid, CarShop [ 6 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 6 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, CarShop [ 6 ] [ playerid ], 4);

	CarShop [ 7 ] [ playerid ] = CreatePlayerTextDraw(playerid, 324.952392, 426.240020, "LD_POOL:ball");
	PlayerTextDrawLetterSize(playerid, CarShop [ 7 ] [ playerid ], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, CarShop [ 7 ] [ playerid ], 8.761875, 9.813323);
	PlayerTextDrawAlignment(playerid, CarShop [ 7 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 7 ] [ playerid ], -2139094785);
	PlayerTextDrawSetShadow(playerid, CarShop [ 7 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 7 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, CarShop [ 7 ] [ playerid ], 4);

	CarShop [ 8 ] [ playerid ] = CreatePlayerTextDraw(playerid, 334.952392, 426.240020, "LD_POOL:ball");
	PlayerTextDrawLetterSize(playerid, CarShop [ 8 ] [ playerid ], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, CarShop [ 8 ] [ playerid ], 8.761875, 9.813323);
	PlayerTextDrawAlignment(playerid, CarShop [ 8 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 8 ] [ playerid ], -5963521);
	PlayerTextDrawSetShadow(playerid, CarShop [ 8 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 8 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, CarShop [ 8 ] [ playerid ], 4);

	CarShop [ 9 ] [ playerid ] = CreatePlayerTextDraw(playerid, 25.142858, 404.906646, "LD_BEAT:left");
	PlayerTextDrawLetterSize(playerid, CarShop [ 9 ] [ playerid ], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, CarShop [ 9 ] [ playerid ], 21.714282, 18.773363);
	PlayerTextDrawAlignment(playerid, CarShop [ 9 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 9 ] [ playerid ], -1);
	PlayerTextDrawSetShadow(playerid, CarShop [ 9 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 9 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, CarShop [ 9 ] [ playerid ], 4);

	CarShop [ 10 ] [ playerid ] = CreatePlayerTextDraw(playerid, 581.952392, 404.906646, "LD_BEAT:right");
	PlayerTextDrawLetterSize(playerid, CarShop [ 10 ] [ playerid ], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, CarShop [ 10 ] [ playerid ], 21.714282, 18.773363);
	PlayerTextDrawAlignment(playerid, CarShop [ 10 ] [ playerid ], 1);
	PlayerTextDrawColor(playerid, CarShop [ 10 ] [ playerid ], -1);
	PlayerTextDrawSetShadow(playerid, CarShop [ 10 ] [ playerid ], 0);
	PlayerTextDrawSetOutline(playerid, CarShop [ 10 ] [ playerid ], 0);
	PlayerTextDrawFont(playerid, CarShop [ 10 ] [ playerid ], 4);
	
	PlayerTextDrawSetSelectable(playerid, CarShop [ 4 ] [ playerid ], true);
	PlayerTextDrawSetSelectable(playerid, CarShop [ 5 ] [ playerid ], true);
	PlayerTextDrawSetSelectable(playerid, CarShop [ 6 ] [ playerid ], true);
	PlayerTextDrawSetSelectable(playerid, CarShop [ 7 ] [ playerid ], true);
	PlayerTextDrawSetSelectable(playerid, CarShop [ 8 ] [ playerid ], true);
	PlayerTextDrawSetSelectable(playerid, CarShop [ 9 ] [ playerid ], true);
	PlayerTextDrawSetSelectable(playerid, CarShop [ 10 ] [ playerid ], true);
	return 1;
}
forward closeKMAGates ( playerid ) ;
public closeKMAGates ( playerid  ) {
	if ( Vartai [ 1 ] ) {
 		MoveDynamicObject ( MechanikuKma, 100.02937, -130.45940, 2.78894, 4 ) ;
 		Vartai [ 1 ] = false;
 	}
 	SendClientMessage ( playerid , RED , "* {ffffff}KMA vartai {ff9900}uþsidaro." ) ;
	return 1;
}
loadPlayerCar1 ( playerid ) {
	new query [ 1020 ] , result [ 221 ] , carData [ 5 ] , Float:posi [ 4 ] , Float:hp , Engine , Lights , Alarm, Doors, Bonnet, Boot, Objective;
	format ( query , sizeof ( query ) , "SELECT * FROM cars WHERE owner = '%s'" , GetPlayerNameEx ( playerid ) ) ;
	mysql_query ( query ) ;
	mysql_store_result ( ) ;
	if ( mysql_num_rows ( ) ) {
	    mysql_fetch_row ( result ) ;
	    mysql_fetch_field_row ( query, "model" ) ; carData [ 0 ] = strval ( query ) ;
     	mysql_fetch_field_row ( query, "color1" ) ; carData [ 1 ] = strval ( query ) ;
     	mysql_fetch_field_row ( query, "color2" ) ; carData [ 2 ] = strval ( query ) ;
     	mysql_fetch_field_row ( query, "posX" ) ; posi [ 0 ] = floatstr ( query ) ;
     	mysql_fetch_field_row ( query, "posY" ) ; posi [ 1 ] = floatstr ( query ) ;
     	mysql_fetch_field_row ( query, "posZ" ) ; posi [ 2 ] = floatstr ( query ) ;
     	mysql_fetch_field_row ( query, "posA" ) ; posi [ 3 ] = floatstr ( query ) ;
     	playerCar1 [ playerid ] = CreateVehicle ( carData [ 0 ] , posi [ 0 ] , posi [ 1 ] , posi [ 2 ] , posi [ 3 ] , carData [ 1 ] , carData [ 2 ] , -1 ) ;
		new veh = playerCar1 [ playerid ];
		vehicleDB [ veh ] [ vModel ] = carData [ 0 ] ;
		mysql_fetch_field_row ( query, "owner" ) ; format ( vehicleDB [ veh ] [ vOwner ] , 50 , "%s" , query ) ;
		mysql_fetch_field_row ( query, "numbers" ) ; format ( vehicleDB [ veh ] [ numeriai ] , 10 , "%s" , query ) ;
		mysql_fetch_field_row ( query , "rida" ) ; vehicleDB [ veh ] [ Rida ] = floatstr ( query ) ;
		mysql_fetch_field_row ( query, "locked" ) ; if ( strval ( query ) == 1 ) vehicleDB [ veh ] [ vLocked ] = true;
		mysql_fetch_field_row ( query, "gas" ) ; vehicleDB [ veh ] [ gas ] = strval ( query ) ;
    	mysql_fetch_field_row ( query, "engine" ) ; carData [ 3 ] = strval ( query ) ;
    	mysql_fetch_field_row ( query, "lights" ) ; carData [ 4 ] = strval ( query ) ;
    	mysql_fetch_field_row ( query, "hp" ) ; hp = floatstr ( query ) ;
     	mysql_fetch_field_row ( query , "lastPosX" ) ; vehicleDB [ veh ] [ vLastPos ] [ 0 ] = floatstr ( query ) ;
    	mysql_fetch_field_row ( query , "lastPosY" ) ; vehicleDB [ veh ] [ vLastPos ] [ 1 ] = floatstr ( query ) ;
    	mysql_fetch_field_row ( query , "lastPosZ" ) ; vehicleDB [ veh ] [ vLastPos ] [ 2 ] = floatstr ( query ) ;
    	mysql_fetch_field_row ( query , "lastPosA" ) ; vehicleDB [ veh ] [ vLastPos ] [ 3 ] = floatstr ( query ) ;
    	mysql_fetch_field_row ( query , "sprogo" ) ; if ( strval ( query ) == 1 ) vehicleDB [ veh ] [ vSprogo ] = true;
    	mysql_fetch_field_row ( query , "paintjob" ) ; vehicleDB [ veh ] [ vPaintjob ] = strval ( query ) ;
    	vehicleDB [ veh ] [ vColor ] [ 0 ] = carData [ 1 ]  ;
    	vehicleDB [ veh ] [ vColor ] [ 1 ] = carData [ 2 ]  ;
    	for ( new t = 0; t < 13; t ++ ) {
			format ( result , sizeof ( result ) , "tune%d" , t ) ;
			mysql_fetch_field_row ( query , result ) ; vehicleDB [ veh ] [ vTune ] [ t ] = strval ( query ) ;
    	}
    	SetVehicleHealth ( veh , hp ) ;
    	SetVehicleParamsEx ( veh , Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective ) ;
  		SetVehicleParamsEx ( veh , carData [ 3 ] , carData [ 4 ] , Alarm , Doors , Bonnet , Boot , Objective ) ;
  		if ( vehicleDB [ veh ] [ vSprogo ] ) {
  		    SendClientMessage ( playerid , RED , "* Jûsø pirmaji maðina sudauþyta!" ) ;
  		    SendClientMessage ( playerid , RED , "* Norëdamá sutaisytá {ffffff}/masinos -> Pirmasis tr. -> Taisyti" ) ;
  		}
  		vehicleDB [ veh ] [ vOwned ] = true;
	}
	mysql_free_result ( ) ;
	return 1;
}
loadPlayerCar2 ( playerid ) {
	new query [ 1020 ] , result [ 221 ] , carData [ 5 ] , Float:posi [ 4 ] , Float:hp , Engine , Lights , Alarm, Doors, Bonnet, Boot, Objective;
	format ( query , sizeof ( query ) , "SELECT * FROM cars2 WHERE owner = '%s'" , GetPlayerNameEx ( playerid ) ) ;
	mysql_query ( query ) ;
	mysql_store_result ( ) ;
	if ( mysql_num_rows ( ) ) {
	    mysql_fetch_row ( result ) ;
	    mysql_fetch_field_row ( query, "model" ) ; carData [ 0 ] = strval ( query ) ;
     	mysql_fetch_field_row ( query, "color1" ) ; carData [ 1 ] = strval ( query ) ;
     	mysql_fetch_field_row ( query, "color2" ) ; carData [ 2 ] = strval ( query ) ;
     	mysql_fetch_field_row ( query, "posX" ) ; posi [ 0 ] = floatstr ( query ) ;
     	mysql_fetch_field_row ( query, "posY" ) ; posi [ 1 ] = floatstr ( query ) ;
     	mysql_fetch_field_row ( query, "posZ" ) ; posi [ 2 ] = floatstr ( query ) ;
     	mysql_fetch_field_row ( query, "posA" ) ; posi [ 3 ] = floatstr ( query ) ;
     	playerCar2 [ playerid ] = CreateVehicle ( carData [ 0 ] , posi [ 0 ] , posi [ 1 ] , posi [ 2 ] , posi [ 3 ] , carData [ 1 ] , carData [ 2 ] , -1 ) ;
		new veh = playerCar2 [ playerid ];
		vehicleDB [ veh ] [ vModel ] = carData [ 0 ] ;
		mysql_fetch_field_row ( query, "owner" ) ; format ( vehicleDB [ veh ] [ vOwner ] , 50 , "%s" , query ) ;
		mysql_fetch_field_row ( query, "numbers" ) ; format ( vehicleDB [ veh ] [ numeriai ] , 10 , "%s" , query ) ;
		mysql_fetch_field_row ( query , "rida" ) ; vehicleDB [ veh ] [ Rida ] = floatstr ( query ) ;
		mysql_fetch_field_row ( query, "locked" ) ; if ( strval ( query ) == 1) vehicleDB [ veh ] [ vLocked ] = true;
		mysql_fetch_field_row ( query, "gas" ) ; vehicleDB [ veh ] [ gas ] = strval ( query ) ;
    	mysql_fetch_field_row ( query, "engine" ) ; carData [ 3 ] = strval ( query ) ;
    	mysql_fetch_field_row ( query, "lights" ) ; carData [ 4 ] = strval ( query ) ;
    	mysql_fetch_field_row ( query, "hp" ) ; hp = floatstr ( query ) ;
    	mysql_fetch_field_row ( query , "lastPosX" ) ; vehicleDB [ veh ] [ vLastPos ] [ 0 ] = floatstr ( query ) ;
    	mysql_fetch_field_row ( query , "lastPosY" ) ; vehicleDB [ veh ] [ vLastPos ] [ 1 ] = floatstr ( query ) ;
    	mysql_fetch_field_row ( query , "lastPosZ" ) ; vehicleDB [ veh ] [ vLastPos ] [ 2 ] = floatstr ( query ) ;
    	mysql_fetch_field_row ( query , "lastPosA" ) ; vehicleDB [ veh ] [ vLastPos ] [ 3 ] = floatstr ( query ) ;
    	mysql_fetch_field_row ( query , "sprogo" ) ; if ( strval ( query ) == 1 ) vehicleDB [ veh ] [ vSprogo ] = true;
    	mysql_fetch_field_row ( query , "paintjob" ) ; vehicleDB [ veh ] [ vPaintjob ] = strval ( query ) ;
    	vehicleDB [ veh ] [ vColor ] [ 0 ] = carData [ 1 ] ;
    	vehicleDB [ veh ] [ vColor ] [ 1 ] = carData [ 2 ] ;
    	for ( new t = 0; t < 13; t ++ ) {
			format ( result , sizeof ( result ) , "tune%d" , t ) ;
			mysql_fetch_field_row ( query , result ) ; vehicleDB [ veh ] [ vTune ] [ t ] = strval ( query ) ;
    	}
    	SetVehicleHealth ( veh , hp ) ;
    	vehicleDB [ veh ] [ vOwned ] = true;
    	GetVehicleParamsEx ( veh , Engine, Lights, Alarm, Doors, Bonnet, Boot, Objective ) ;
  		SetVehicleParamsEx ( veh , carData [ 3 ] , carData [ 4 ] , Alarm , Doors , Bonnet , Boot , Objective ) ;
  		if ( vehicleDB [ veh ] [ vSprogo ] ) {
  		    SendClientMessage ( playerid , RED , "* Jûsø antraji maðina sudauþyta!" ) ;
  		    SendClientMessage ( playerid , RED , "* Norëdamá sutaisytá {ffffff}/masinos -> Antrasis tr. -> Taisyti" ) ;
  		}
  		vehicleDB [ veh ] [ vOwned ] = true;
	}
	mysql_free_result ( ) ;
	return 1;
}
savePlayerCar1 ( playerid ) {
	new query [ 1020 ] , Float:posi [ 4 ] , Float:hp , Engine , Lights , Alarm, Doors, Bonnet, Boot, Objective;
	if ( playerCar1 [ playerid ] != -1 ) {
	    new veh = playerCar1 [ playerid ] ;
	    GetVehiclePos ( veh , posi [ 0 ] , posi [ 1 ] , posi [ 2 ] ) ;
	    GetVehicleZAngle ( veh , posi [ 3 ] ) ;
	    GetVehicleParamsEx ( veh , Engine , Lights , Alarm , Doors , Bonnet , Boot , Objective ) ;
	    SetVehicleParamsEx ( veh , Engine , Lights , Alarm , Doors , Bonnet , Boot , Objective ) ;
	    GetVehicleHealth ( veh , hp ) ;
		format ( query , sizeof ( query ) ,
	 	"UPDATE cars SET \
		  posX = '%f',\
		  posY = '%f',\
		  posZ = '%f',\
		  posA = '%f',\
		  lastPosX = '%f',\
		  lastPosY = '%f',\
		  lastPosZ = '%f',\
		  lastPosA = '%f',\
		  sprogo = %d,\
		  locked = %d,\
		  numbers = '%s',\
		  engine = %d,\
		  lights = %d,\
		  hp = '%f',\
		  rida = '%f',\
		  gas = %d,\
		  paintjob = %d,\
		  color1 = %d,\
		  color2 = %d \
		  WHERE owner = '%s'" ,
	  	posi [ 0 ] , posi [ 1 ] , posi [ 2 ] , posi [ 3 ] ,
	  	posi [ 0 ] , posi [ 1 ] , posi [ 2 ] , posi [ 3 ] ,
	  	vehicleDB [ veh ] [ vSprogo ] , vehicleDB [ veh ] [ vLocked ] ,
	  	vehicleDB [ veh ] [ numeriai ] , Engine , Lights ,  hp , vehicleDB [ veh ] [ Rida ] , vehicleDB [ veh ] [ gas ] , vehicleDB [ veh ] [ vPaintjob ] , vehicleDB [ veh ] [ vColor ] [ 0 ],
  	  	vehicleDB [ veh ] [ vColor ] [ 1 ] , GetPlayerNameEx ( playerid ) ) ;
	  	mysql_query ( query ) ;
		for ( new t = 0; t < 13; t ++ ) {
		    format ( query , sizeof ( query ) , "UPDATE cars SET tune%d = %d WHERE owner = '%s'" , t , vehicleDB [ veh ] [ vTune ] [ t ] , GetPlayerNameEx ( playerid ) ) ;
			mysql_query ( query ) ;
		}
		DestroyVehicle ( veh ) ;
	}
	return 1;
}
savePlayerCar2 ( playerid ) {
	new query [ 1020 ] , Float:posi [ 4 ] , Float:hp , Engine , Lights , Alarm, Doors, Bonnet, Boot, Objective;
	if ( playerCar2 [ playerid ] != -1 ) {
	    new veh = playerCar2 [ playerid ] ;
	    GetVehiclePos ( veh , posi [ 0 ] , posi [ 1 ] , posi [ 2 ] ) ;
	    GetVehicleZAngle ( veh , posi [ 3 ] ) ;
	    GetVehicleParamsEx ( veh , Engine , Lights , Alarm , Doors , Bonnet , Boot , Objective ) ;
	    SetVehicleParamsEx ( veh , Engine , Lights , Alarm , Doors , Bonnet , Boot , Objective ) ;
	    GetVehicleHealth ( veh , hp ) ;
		format ( query , sizeof ( query ) ,
	 	"UPDATE cars2 SET \
		  posX = '%f',\
		  posY = '%f',\
		  posZ = '%f',\
		  posA = '%f',\
		  lastPosX = '%f',\
		  lastPosY = '%f',\
		  lastPosZ = '%f',\
		  lastPosA = '%f',\
		  sprogo = %d,\
		  locked = %d,\
		  numbers = '%s',\
		  engine = %d,\
		  lights = %d,\
		  hp = '%f',\
		  rida = '%f',\
		  gas = %d,\
		  paintjob = %d,\
		  color1 = %d,\
		  color2 = %d \
		  WHERE owner = '%s'" ,
	  	posi [ 0 ] , posi [ 1 ] , posi [ 2 ] , posi [ 3 ] ,
	  	posi [ 0 ] , posi [ 1 ] , posi [ 2 ] , posi [ 3 ] ,
	  	vehicleDB [ veh ] [ vSprogo ] , vehicleDB [ veh ] [ vLocked ] ,
	  	vehicleDB [ veh ] [ numeriai ] , Engine , Lights ,  hp , vehicleDB [ veh ] [ Rida ] , vehicleDB [ veh ] [ gas ] , vehicleDB [ veh ] [ vPaintjob ] , vehicleDB [ veh ] [ vColor ] [ 0 ],
  	  	vehicleDB [ veh ] [ vColor ] [ 1 ] , GetPlayerNameEx ( playerid ) ) ;
	  	mysql_query ( query ) ;
		for ( new t = 0; t < 13; t ++ ) {
		    format ( query , sizeof ( query ) , "UPDATE cars SET tune%d = %d WHERE owner = '%s'" , t , vehicleDB [ veh ] [ vTune ] [ t ] , GetPlayerNameEx ( playerid ) ) ;
			mysql_query ( query ) ;
		}
		DestroyVehicle ( veh ) ;
	 }
	return 1;
}
forward checkCarInKMA ( );
public checkCarInKMA ( ) {
	new Float:X , Float:Y, Float:Z;
	for ( new veh = 0; veh < MAX_VEHICLES; veh ++ ) {
	    GetVehiclePos ( veh , X , Y , Z ) ;
	    if ( vehicleDB [ veh ] [ vSprogo ] ) {
	        if ( ( X > 99.0981 ) && ( X < 73.0390 ) && ( Y > -143.6625 ) && ( Y < -117.2254 ) ) break;
	        else {
				new pos = random ( 7 ) ;
				SetVehiclePos ( veh , carSpawns [ pos ] [ 0 ] , carSpawns [ pos ] [ 1 ] , carSpawns [ pos ] [ 2 ] ) ;
				SetVehicleZAngle ( veh , carSpawns [ pos ] [ 3 ] ) ;
				break;
	        }
	    }
	    else break;
	}
	return 1;
}
// SITA BUTINAI PAZIURETI
loadServerOptions ( ) {
	new query [ 300 ], result [ 150 ];
	mysql_query ( "SELECT * FROM options WHERE servername = 'NRMG'" ) ;
	mysql_store_result ( ) ;
	if ( mysql_num_rows ( ) ) {
	    mysql_fetch_row ( result ) ;
	    mysql_fetch_field_row ( query , "oldRecord" ) ; sOptions [ oldRecord ] = strval ( query ) ;
	    mysql_fetch_field_row ( query , "pasiektas" ) ; format ( sOptions [ rData ] , 30 , "%s" , query ) ;
	    printf ( "[ SERVERIS ] : Serverio nustatymai uzkrauti..." ) ;
	}
	else {
	    printf ( "[ SERVERIS ] : Negaliu uzkrauti serverio nustatymus!" ) ;
	}
	mysql_free_result ( );
	return 1;
}

forward IeskomumasUpdate(playerid);
public IeskomumasUpdate(playerid)
{
    new score[27];
    format(score, sizeof(score), "~w~ITARIMO LYGIS: ~g~%d",GetPlayerTWanted(playerid));
    TextDrawSetString(IeskomumasTD2 [ playerid ], score);
}

forward lVt ( );
public lVt ( ) {
	new Valandos , minutes , sekundes;
	gettime ( Valandos , minutes , sekundes ) ;
    if ( Valandos == 7 && Valandos <= 12 || Valandos == 19 && Valandos <= 00 ) {
		for ( new i = 0; i < MAX_PLAYERS; i ++ ) {
		    SendClientMessage ( i , -1 , "{E0E066} LAIMINGA VALANDA ! 2x EXP 2x ALGA !" ) ;
		}
    }
	return 1;
}
stock SameText(string[], string1[])
{
	 if(!strcmp(string, string1, true)) return (true);
	 else return(false);
}
stock CheckIPApsauga(playerid)
{
    new q[256],ipApsauga;
	format(q,sizeof(q),"SELECT * FROM `players` WHERE `Vardas` = '%s'",GetPlayerNameEx(playerid));
	mysql_query(q);
	mysql_store_result();
	mysql_retrieve_row();
	if( mysql_num_rows())
	{
		mysql_fetch_field_row(q,"ipSecurity"); ipApsauga = strval(q);

	}
	if( ipApsauga != 0 )
	{
	    if(!SameText(GetPlayerIpEx(playerid),GetIpFromDB(playerid)))
	    {
	        SendClientMessage(playerid,0xFF0000AA,"[IP APSAUGA]: Ðis vartotojas yra ájungæs IP apsaugà.");
	        SendClientMessage(playerid,0xFF0000AA,"[IP APSAUGA]: Jûsø IP nesutampa su ðio vartotojo registruotu IP.");
	        SetTimerEx("KickEx", 100, false, "d", playerid);
	        printf("[NESUTAPO]: GetPlayerIpEx - %s\nGetIpFromDB - %s",GetPlayerIpEx(playerid),GetIpFromDB(playerid));
	        return 1;
	    }
	    else
	    {
	        ShowPlayerDialog(playerid, 3, DIALOG_STYLE_PASSWORD, "Prisijungimas",
			"{2ED0B5}Norëdami prisijungti á serverá jus turite ávesti savo slaptaþodá.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudojote prisiregistruojant á serverá á serverá:",
			"Prisijungti", "Iðeiti");
			printf("[SUTAPO]: GetPlayerIpEx - %s\nGetIpFromDB - %s",GetPlayerIpEx(playerid),GetIpFromDB(playerid));
	    }
	}
	else
	{
		ShowPlayerDialog(playerid, 3, DIALOG_STYLE_PASSWORD, "Prisijungimas",
		"{2ED0B5}Norëdami prisijungti á serverá jus turite ávesti savo slaptaþodá.\n \n\t{42F17F}Áveskite slaptaþodá kurá naudojote prisiregistruojant á serverá á serverá:",
		"Prisijungti", "Iðeiti");
	}
	return 1;
}

forward ImaZOLE(playerid);
public ImaZOLE(playerid)
{
    if(prekes[zole] < 0) return false;
    else if(playerDB[playerid][specialybe] == 5 || playerDB[playerid][specialybe] == 40 || playerDB[playerid][specialybe] == 42)
    {
		if(IsPlayerInRangeOfPoint(playerid,10.0, -1945.3840,-1091.0009,32.1754))
		{
        	new str [ 100 ] ;
        	prekes[zole] -= 1;
        	playerDB[playerid][zole] += 1;
        	GivePlayerMoneyA(playerid,-3);
        	GameTextForPlayer(playerid, "~W~IMATE NARK ~r~Mokestis -3~w~ UZ NARK!", 3000, 4);
        	format(str, sizeof(str), "{ffffff}ÞOLË - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[zole]));
        	Update3DTextLabelText(ZOLELABEL, 0xFFFFFFFF, str);
		}
    }
	return 1;
}

forward ImaAMFA(playerid);
public ImaAMFA(playerid)
{
    if(prekes[amfa] < 0) return false;
    else if(playerDB[playerid][specialybe] == 5 || playerDB[playerid][specialybe] == 40 || playerDB[playerid][specialybe] == 42)
    {
		if(IsPlayerInRangeOfPoint(playerid,10.0, -1940.8711,-1091.2650,32.1754))
		{
        	new str [ 100 ] ;
        	prekes[amfa] -= 1;
        	playerDB[playerid][amfa] += 1;
        	GivePlayerMoneyA(playerid,-3);
        	GameTextForPlayer(playerid, "~W~IMATE NARK ~r~MOKESTIS -3~w~ UZ NARK!", 3000, 4);
        	format(str, sizeof(str), "{ffffff}AMFA - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[amfa]));
			Update3DTextLabelText(AMFALABEL, 0xFFFFFFFF, str);
		}
    }
  	return 1;
}

forward ImaLSD(playerid);
public ImaLSD(playerid)
{
    if(prekes[lsd] < 0) return false;
    if(playerDB[playerid][specialybe] == 5 || playerDB[playerid][specialybe] == 40 || playerDB[playerid][specialybe] == 42)
    {
		if(IsPlayerInRangeOfPoint(playerid,10.0, -1949.6576,-1091.1626,32.1754))
		{
        	new str [ 100 ] ;
        	prekes[lsd] -= 1;
        	playerDB[playerid][lsd] += 1;
        	GivePlayerMoneyA(playerid,-3);
        	GameTextForPlayer(playerid, "~W~IMATE NARK ~r~Mokestis -3~w~ UZ NARK!", 3000, 4);
        	format(str, sizeof(str), "{ffffff}LSD - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[lsd]));
        	Update3DTextLabelText(LSDLABEL, 0xFFFFFFFF, str);
		}
    }
	return 1;
}

forward NaikinaZOLE(playerid);
public NaikinaZOLE(playerid)
{
    if(prekes[zole] < 0) return false;
    if(playerDB[playerid][specialybe] == 1 || playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 17)
    {
		if(IsPlayerInRangeOfPoint(playerid,10.0, -1945.3840,-1091.0009,32.1754))
		{
       		new str [ 100 ] ;
        	prekes[zole] -= 1;
        	playerDB[playerid][alga] += 2;
        	playerDB[playerid][stazasteisesaugos] += 1;
        	GameTextForPlayer(playerid, "~W~NAIKINI NARK ~r~Gauni +2~w~ I ALGA!", 3000, 4);
        	format(str, sizeof(str), "{ffffff}ÞOLË - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[zole]));
        	Update3DTextLabelText(ZOLELABEL, 0xFFFFFFFF, str);
		}
    }
	return 1;
}

forward NaikinaAMFA(playerid);
public NaikinaAMFA(playerid)
{
    if(prekes[amfa] < 0) return false;
    if(playerDB[playerid][specialybe] == 1 || playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 17)
    {
		if(IsPlayerInRangeOfPoint(playerid,10.0, -1940.8711,-1091.2650,32.1754))
		{
       		new str [ 100 ] ;
        	prekes[amfa] -= 1;
        	playerDB[playerid][alga] += 2;
        	playerDB[playerid][stazasteisesaugos] += 1;
        	GameTextForPlayer(playerid, "~W~NAIKINI NARK ~r~Gauni +2~w~ I ALGA!", 3000, 4);
        	format(str, sizeof(str), "{ffffff}AMFA - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[amfa]));
        	Update3DTextLabelText(AMFALABEL, 0xFFFFFFFF, str);
		}
    }
	return 1;
}

forward NaikinaLSD(playerid);
public NaikinaLSD(playerid)
{
    if(prekes[lsd] < 0) return false;
    if(playerDB[playerid][specialybe] == 1 || playerDB[playerid][specialybe] == 10 || playerDB[playerid][specialybe] == 17)
    {
    	if(IsPlayerInRangeOfPoint(playerid,10.0, -1949.6576,-1091.1626,32.1754))
    	{
	        new str [ 100 ] ;
	        prekes[lsd] -= 1;
	        playerDB[playerid][alga] += 2;
	        playerDB[playerid][stazasteisesaugos] += 1;
	        GameTextForPlayer(playerid, "~W~NAIKINI NARK ~r~Gauni +2~w~ I ALGA!", 3000, 4);
	        format(str, sizeof(str), "{ffffff}LSD - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[lsd]));
	        Update3DTextLabelText(LSDLABEL, 0xFFFFFFFF, str);
    	}
    }
  	return 1;
}

forward Atsirandanark();
public Atsirandanark()
{
  if(prekes[lsd] + prekes[amfa] + prekes[zole] < 5)
  {
    new playerid ;
    new mzzg [ 100 ] ;
    new str [ 200 ] ;
    prekes[lsd] += 120;
    prekes[amfa] += 130;
    prekes[zole] += 140;
    format(mzzg,sizeof(mzzg),"[T-RACIJA]: Atsirado narkotikai sandelyje! Skubëkite juos naikinti! Þemelapyje pavaizduota kaukolë." );
    SendMessageToBendraTeisesauga(GREEN,mzzg);
    SetPlayerCheckpointEx(playerid, 7,-1945.4572,-1085.3091,30.7734,2);
    format(mzzg,sizeof(mzzg),"[RACIJA]: Atsirado narkotikai sandelyje! Skubëkite juos naikinti! Þemelapyje pavaizduota kaukolë." );
    SendMessageToRifa(GREEN,mzzg);
    SetPlayerCheckpointEx(playerid, 7,-1945.4572,-1085.3091,30.7734,2);
    format(mzzg,sizeof(mzzg),"[RACIJA]: Atsirado narkotikai sandelyje! Skubëkite juos naikinti! Þemelapyje pavaizduota kaukolë." );
    SendMessageToGstreet(GREEN,mzzg);
    format(str, sizeof(str), "{ffffff}AMFA - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[amfa]));
    Update3DTextLabelText(AMFALABEL, 0xFFFFFFFF, str);
    format(str, sizeof(str), "{ffffff}LSD - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[lsd]));
    Update3DTextLabelText(LSDLABEL, 0xFFFFFFFF, str);
    format(str, sizeof(str), "{ffffff}ÞOLË - {FFC400}%s vnt. {ffffff}", konvertuoti_pinigus(prekes[zole]));
    Update3DTextLabelText(ZOLELABEL, 0xFFFFFFFF, str);
  }
  return 1;
}

stock IsPlayerInAirPlane(vehicleid)
{
  	switch(GetVehicleModel(vehicleid))
  	{
    	case
        	460,464,476,511,512,513,519,520,553,577,592,593,
        	417,425,447,465,469,487,488,497,501,548,563:
    	return true;
  	}
  	return false;
}

stock Float:GetPlayerMoveCount(Float:oldd,Float:neww)
{
	new Float:ret;
	if(oldd < neww)
	{
		ret = neww - oldd;
	}
	else if(neww > oldd)
	{
	    ret = oldd - neww;
	}
	else if(neww == oldd)
	{
	    ret = 0;
	}
	return ret;
}
loadServerGangs ( ) {
	new query [ 1020 ] , All = 0;
	for ( new id ; id < MAX_GANGS ; id ++ ) {
		format ( query , sizeof ( query ) , "SELECT * FROM gangs WHERE gId = %d" , id ) ;
		mysql_query ( query ) ;
		mysql_store_result ( ) ;
		while ( mysql_retrieve_row ( ) ) {
		    mysql_fetch_field_row ( query , "gId" ) ; gInfo [ id ] [ gId ] = strval ( query ) ;
            mysql_fetch_field_row ( query , "gLeader" ) ; format ( gInfo [ id ] [ gLeader ] , 50 , "%s" , query ) ;
            mysql_fetch_field_row ( query , "gName" ) ; format ( gInfo [ id ] [ gName ] , 50 , "%s" , query ) ;
            mysql_fetch_field_row ( query , "x" ) ; gInfo [ id ] [ gPos ] [ 0 ] = floatstr ( query ) ;
            mysql_fetch_field_row ( query , "y" ) ; gInfo [ id ] [ gPos ] [ 1 ] = floatstr ( query ) ;
            mysql_fetch_field_row ( query , "z" ) ; gInfo [ id ] [ gPos ] [ 2 ] = floatstr ( query ) ;
            All ++;
		}
		mysql_free_result ( ) ;
	}
	printf ( "[ SERVERIS ] [ GAUJOS ] Uzkrauta %d gauju..." , All ) ;
	return 1;
}
getPlayerGangID ( id ) {
	new idas = 0, query [ 100 ] ;
	format ( query , sizeof ( query ) , "SELECT gId FROM gangs WHERE gLeader = '%s'" , GetPlayerNameEx ( id ) ) ;
	mysql_query ( query ) ;
	mysql_store_result ( ) ;
	idas = mysql_fetch_int ( ) ;
	mysql_free_result ( ) ;
	printf ( "%d - gaujos idas leaderis %s" , idas , GetPlayerNameEx ( id ) ) ;
	return idas;
}
isPlayerGangLeader ( playerid  ) {
	new query [ 130 ] ;
	format ( query , sizeof ( query ) , "SELECT * FROM gangs WHERE gId = %d AND gLeader = '%s'" , playerDB [ playerid ] [ gaujosID ] , GetPlayerNameEx ( playerid ) ) ;
	mysql_query ( query ) ;
	mysql_store_result ( ) ;
	if ( mysql_num_rows ( ) ) return 1;
	return 0;
}
getGangsNumber ( ) {
	mysql_query ( "SELECT * FROM gangs" ) ;
	mysql_store_result ( ) ;
	return mysql_num_rows ( ) ;
}
getGangsMembers ( gaujosidas ) {
	new query [ 130 ] ;
	format ( query , sizeof ( query ) , "SELECT * FROM players WHERE gaujosID = %d" , gaujosidas ) ;
	mysql_query ( query ) ;
	mysql_store_result ()  ;
	return mysql_num_rows ( ) ;
}

CMD:gsukurti ( playerid , params [ ] ) {
    if(playerDB[playerid][GDraudimas]) return SendClientMessage(playerid, RED, "Jûs turite Gaujø draudimà, todël gaujos kûrti negalite !");
	new query [ 200 ] , gangname [ 100 ] , Float:pos [ 3 ] ;
	if ( playerDB [ playerid ] [ gaujosID ] != 0 ) return SendClientMessage ( playerid , RED , " Jûs jau turite gaujà !" ) ;
	if ( GetPlayerScore ( playerid ) < GANG_EXP ) return SendClientMessage ( playerid , RED , " Jûs neturite pakankamai EXP ( {ffffff}"#GANG_EXP" {ff0000})" ) ;
	if ( GetPlayerMoneyA ( playerid ) < GANG_PRICE ) return SendClientMessage ( playerid , RED , " Jûs neturite pakankamai pinigø ( {ffffff}"#GANG_PRICE" {ff0000})" ) ;
	if ( getGangsNumber ( ) >= MAX_GANGS ) return SendClientMessage ( playerid , RED , " Gaujus limitas pasiektas ! Susiekite su Pagr.administracijà !" ) ;
	if ( sscanf ( params , "s[200]" , gangname ) ) return SendClientMessage ( playerid , RED , " /gsukurti [ gaujos pavadinimas ] [ kainà: 50.000  ] [ nuo : 3.000 XP ]" ) ;
	format ( query , sizeof ( query ) , "SELECT * FROM gangs WHERE gName = '%s'" , gangname ) ;
	mysql_query ( query ) ;
	mysql_store_result ( ) ;
	if ( !mysql_num_rows ( ) ) {
	    GetPlayerPos ( playerid , pos [ 0 ] , pos [ 1 ] , pos [ 2 ] ) ;
		format ( query , sizeof ( query ) , "INSERT INTO gangs (gName,gLeader,x,y,z) VALUES ('%s','%s','%f','%f','%f')" , gangname , GetPlayerNameEx ( playerid ) , pos [ 0 ] , pos [ 1 ] , pos [ 2 ] ) ;
		mysql_query ( query ) ;
		playerDB [ playerid ] [ gaujosID ] = getPlayerGangID ( playerid ) ;
		new gidas = getPlayerGangID ( playerid ) ;
		format ( gInfo [ gidas ] [ gName ] , 100 , "%s" , gangname ) ;
		format ( gInfo [ gidas ] [ gLeader ], 50 , "%s" , GetPlayerNameEx ( playerid ) ) ;
		gInfo [ gidas ] [ gId ] = gidas;
		printf ( "%d -gIdas, %d - gangDB gIdas, %d - player gangID"  , gidas , gInfo [ gidas ] [ gId ] , playerDB [ playerid ] [ gaujosID ] ) ;
		ClearChat ( playerid , 5 ) ;
		format ( query , sizeof ( query ) , " Susikûrëtë gaujà %s :: Jûsø valdymas /gauja" , gangname ) ;
		SendClientMessage ( playerid , RED , query ) ;
		GivePlayerMoneyA ( playerid , -GANG_PRICE ) ;
		format ( query , sizeof ( query ) , "UPDATE players SET gaujosID = %d WHERE Vardas = '%s'" , playerDB [ playerid ] [ gaujosID ] , GetPlayerNameEx ( playerid ) ) ;
		mysql_query ( query ) ;
	}
	else return SendClientMessage ( playerid , RED , " Tokia gauja jau egzistuoja serveryje !" ) ;
	mysql_free_result ( );
	return 1;
}
CMD:gauja ( playerid ) {
	new string [ 300 ] , idas = playerDB [ playerid ] [ gaujosID ] ;
	if ( idas == 0 ) return 0;
	if ( isPlayerGangLeader ( playerid ) ) {
		format ( string , sizeof ( string ) ,
		"Gaujos pavadinimas %s\nGauja turi %d nariø\n\
		Kviesti þaidëjà á gaujà\n\
		Iðmesti þaidëjà ið gaujos\n\
		Perþiûrëti online gaujinius\n\
		Keisti gaujos pavadinimà\n\
		Raðyti á gaujos chat'à\n\
		Raðyti á globaliná chat'à\n\
		Uþdaryti gaujà" , gInfo [ idas ] [ gName ] , getGangsMembers ( idas )  ) ;
		ShowPlayerDialog ( playerid , 14200 , DIALOG_STYLE_LIST , "Gaujos valdymas" , string , "Rinktis" , "Uþdaryti" ) ;
	}
	else {
		format ( string , sizeof ( string ) ,
		"Gaujos pavadinimas %s\nGauja turi %d nariø\n\
		Iðeiti ið gaujos\n\
		Paraðyti á gaujos chat'à\n\
		Perþiûrëti online gaujinius" , gInfo [ idas ] [ gName ] , getGangsMembers ( idas )  ) ;
		ShowPlayerDialog ( playerid , 14201 , DIALOG_STYLE_LIST , "Gaujos valdymas" , string , "Rinktis" , "Uþdaryti" ) ;
	}
	return 1;
}
CMD:gpriimt ( playerid ) {
	if ( gPakviestas [ playerid ] == 0 ) return SendClientMessage ( playerid , RED , " Jûs neesate pakviestas á gaujà !" ) ;
	playerDB [ playerid ] [ gaujosID ] = gPakviestas [ playerid ] ;
	gPakviestas [ playerid ] = 0;
	new gidukas = playerDB [ playerid ] [ gaujosID ] ;
	new query [ 150 ];
	format ( query , sizeof ( query ) , "Sëkmingai ástojot á %s gaujà!" , gInfo [ gidukas ] [ gName ] ) ;
	SendClientMessage ( playerid , GREEN , query ) ;
	format ( query , sizeof ( query ) , "[  %s  GAUJA ] %s katik ástojo á mûsø gaujà!" , gInfo [ playerDB [ playerid ] [ gaujosID ] ] [ gName ] , GetPlayerNameEx ( playerid ) ) ;
	for ( new i; i < MAX_PLAYERS; i ++ ) {
	    if ( IsPlayerConnected ( i ) && gidukas == playerDB [ i ] [ gaujosID ] ) {
	    	SendClientMessage ( i , GREEN , query ) ;
		}
	}
	format ( query , sizeof ( query ) , "UPDATE players SET gaujosID = %d WHERE Vardas = '%s'" , playerDB [ playerid ] [ gaujosID ] , GetPlayerNameEx ( playerid ) ) ;
	mysql_query ( query ) ;
	return 1;
}
CMD:gatmest ( playerid ) {
    if ( gPakviestas [ playerid ] == 0 ) return SendClientMessage ( playerid , RED , " Jûs neesate pakviestas á gaujà !" ) ;
    gPakviestas [ playerid ] = 0 ;
    SendClientMessage ( playerid , RED , " Atsisaketë kvietimo á gaujà !" ) ;
	return 1;
}

CMD:grybauti(playerid)
{
    new Float:pPos[3];
    if(IsPlayerInZoneEx(playerid, SafetyZoneID[0]) || IsPlayerInZoneEx(playerid, SafetyZoneID[1]) || IsPlayerInZoneEx(playerid, SafetyZoneID[2]) || IsPlayerInZoneEx(playerid, SafetyZoneID[3]))
    {
    	if(!IsPlayerInAnyVehicle(playerid))
    	{
    		if(!playerDB[playerid][cuffed])
    		{
		    	if(playerDB[playerid][krepselis])
		    	{
		    		if(pjauna[playerid] == 0)
		    		{
		    			if(!IsPlayerInRangeOfPoint(playerid, 3.0, KurGrybavo[0], KurGrybavo[1], KurGrybavo[2]))
		    			{
						    new RandomTime = 4000 + random(2000);

						    ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, 1, 1, 1, 1, 0, 1);

						    GameTextForPlayer(playerid, "~Y~PJAUNATE GRYBA...", RandomTime, 5);

						    pjauna[playerid] = 1;

						    GetPlayerPos(playerid, pPos[0], pPos[1], pPos[2]);

						    KurGrybavo[0] = pPos[0];

						    KurGrybavo[1] = pPos[1];

						    KurGrybavo[2] = pPos[2];

						    SetTimerEx("PjaunaGryba", RandomTime, false, "d", playerid);
						}
						else
						{	
							SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Jus èia jau ieðkojote grybo, nueikite ðiek tiek toliau.");
						}
					}
					else
					{
						SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Jus jau pjaunate grybà, palaukite...");
					}
				}
				else
				{
					SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Jus jau pjaunate grybà, palaukite...");
				}
			}
			else
			{
			SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Surakintam grybauti negalima.");
			}
		}
		else
		{
			SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Grybauti galima tik stovint ant kojø.");
		}
	}
	else
	{
		SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Jus turite bûti grybavimo zonoje, plaèiau: {FF5454}/grybavimas{ffffff}.");
	}
    return 1;
}

CMD:grybavimas(playerid)
{
	new String[1024];
	strcat(String, "{2ED0B5}Sveikas, tikriausiai uþsimanei pagrybauti?\n \n{2ED0B5}\t Èia bus viskas kà reikia þinoti prieð grybaujant!\n \n");
	strcat(String, "{2ED0B5}Pirmiausia jums reikia nusipirkti krepðelá, kadangi be jo nebus kur dëti grybus.\n \n{2ED0B5}\t Já galite nusipirkti bet kuriame miesteliø kioske.\n \n");
	strcat(String, "{2ED0B5}Nusipirkus krepðelá jus jau galësite grybauti, tik aiðku ne bet kur, o tam skirtose vietose.\n \n");
	strcat(String, "{2ED0B5}\t Þvejybos zonas galite rasti paraðæ {42F17F}/gps > pramogos > grybavimø zona (1 - 4){2ED0B5}.\n \n");
	strcat(String, "{2ED0B5}Kur galima parduoti savo grybus?\n \n");
	strcat(String, "{2ED0B5}\t Grybus galësite parduoti nuvaþiavæ prie grybø supirkimo vietos, jà rasite paraðæ {42F17F}/gps > kitos vietos > grybø supirkimas{2ED0B5}.\n \n");
	strcat(String, "{2ED0B5}Norint grybauti, raðykite: {42F17F}/grybauti{2ED0B5}.\n \n");
	strcat(String, "{2ED0B5}\n \n \nSëkmës!");
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Grybavimo informacija", String, "Uþdaryti", "");
    return 1;
}
CMD:darbuidai(playerid,params[])
{
    if(playerDB[playerid][dpriziuretojas] == true || playerDB[playerid][admin] == 5)
    {
        new String[800];
        strcat(String,  "* Darbø identifikacijos numeriai:\n");
        strcat(String,  "0. Direktoriaus statusui nuimti\n");
        strcat(String,  "1. Policija\n");
        strcat(String,  "2. Medikai\n");
        strcat(String,  "3. Taksistø pirma firma\n");
        strcat(String,  "4. Taksistø antra firma\n");
        strcat(String,  "5. Mechanikai\n");
        strcat(String,  "6. FTB\n");
        strcat(String,  "7. Cosa Nostra mafija\n"); 
        strcat(String,  "8. Immortal mafija\n");
        strcat(String,  "9. Aras\n");
        strcat(String,  "10. Radistai\n");
        strcat(String,  "17. Armijos\n");
        strcat(String,  "21. Fûristai\n");
        strcat(String,  "22. Narkotikø prekeiviø\n");
        strcat(String,  "23. Ginklø prekeiviø\n");
        strcat(String,  "25. The Ballas gauja\n");
        strcat(String,  "26. Grove Street gauja");
        ShowPlayerDialog(playerid, 9, DIALOG_STYLE_MSGBOX, "Darbø idai", String, "Gerai", "");
        return 1;
    }
    else return 0;
}
CMD:uzdetipav(playerid, params[])
{
	if(playerDB[playerid][plead] > 0)
    {
        new TargetID, JobID = playerDB[playerid][specialybe];
        if(sscanf(params, "u", TargetID))
        {
            SendClientMessage(playerid, YELLOW, "* Skirti Pavaduotoja: /uzdetipav [V_P/ID].");
        }
        else
        {
            if(IsPlayerConnected(TargetID))
            {
                
                switch(JobID)
                {
                    case 0:
                    {
                        if(playerDB[TargetID][pavdrk] == 0)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip nëra pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 0;
                            SendClientMessage(TargetID, RED, "Jûs buvote nuðalintas nuo pavaduotojo pareigø.");
                            SendClientMessage(TargetID, YELLOW, "Dëkojame uþ darbà,jeigu galvojate,kad buvote nuðalintas be prieþasties,praðome praneðti serverio vyr.administratoriams.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo nuðalintas nuo pavaduotojo pareigø.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                        }
                        return 1;
                    }
                    case 1:
                    {
						if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 1)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos galiotinis arba kitos firmos Direktorius - Pavaduotojas .");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 1;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas eiti Policijos departamento pavaduotojo pareigas.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas Policijos departamento pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 2:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 2)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 2;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas eiti Medikø pavaduotojo pareigas.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas Medikø pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 3:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 3)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 3;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas eiti TAXI 1 Firmos pavaduotojo pareigas.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas TAXI 1 Firmos Pavaduotojum.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 4:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 4)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 4;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas eiti Mechaniku Firmos pavaduotojo pareigas.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas Mechaniku Firmos pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 5:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 5)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 5;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas eiti Dyleriø Firmos pavaduotojo pareigas.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas Dyleriø Firmos Pavaduotojas.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 6:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 6)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 6;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas eiti Russian Mafijos pavaduotojo pareigas.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas Russian Mafia Pavaduotojas.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 8:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 8)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 8;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas YAKUZA mafijos pavaduotoju.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas YAKUZA mafijos pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
    
                    case 10:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 10)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 10;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas SWAT pavaduotoju.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas SWAT pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 11:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 11)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 11;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas Furistø pavaduotoju.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas Furistø pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 13:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 13)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 13;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas Radistø pavaduotoju.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas Radistø pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 14:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 14)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 14;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas Baikeriø pavaduotoju.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas Baikeriø pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 15:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 15)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 15;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas eiti Klubo Costello pavaduotojo pareigas.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas Klubo Costello pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 16:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 16)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 16;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas eiti Klubo Patriotai pavaduotojo pareigas.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas Klubo Patriotai pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    }
                    case 17:
                    {
                        if(playerDB[TargetID][plead] !=0 || playerDB[TargetID][pavdrk] !=0)
                        if(playerDB[TargetID][pavdrk] == 17)
                        {
                            KlaidosZinute(playerid,"Þaidëjas jau ir taip yra ðios firmos pavaduotojas.");
                        }
                        else
                        {
                            new string[144];
                            playerDB[TargetID][pavdrk] = 17;
                            SendClientMessage(TargetID, GREEN, " Jûs buvote paskirtas eiti Armijos pavaduotojo pareigas.");
                            format(string, 144, "Þaidëjas %s sëkmingai buvo paskirtas The Armijos pavaduotoju.",GetPlayerNameEx(TargetID));
                            SendClientMessage(playerid, GREEN, string);
                            return 1;
                        }
                        return 1;
                    
                    }
                    default:
                    {
                        KlaidosZinute(playerid,"* Blogai nurodytas Darbo ID.");
                        cmd_darbuidai(playerid,"");
                    }
                }

            }
            else
            {
                KlaidosZinute(playerid,"* Tokio þaidëjo nëra.");
            }
        }
        return 1;
    }
    else
    {
        return 0;
    }
}

CMD:nuimtipav(playerid, params[])
{
	if(playerDB[playerid][plead] < 1) return 0;
	
    new TargetID, string[144];
    if(sscanf(params, "u", TargetID)) return KlaidosZinute(playerid,"* Nuiimti pavaduotojà: /nuimtipav [V_P/ID].");
    if(!IsPlayerConnected(TargetID)) return KlaidosZinute(playerid, "* Þaidëjas atsijungæs, naudokite /nuiimtipavoff.");
    if(playerDB[TargetID][pavdrk] != playerDB[playerid][plead]) return SendClientMessage(TargetID, RED, "* Jis nëra jûsø pavaduotojas");
    if(playerDB[TargetID][pavdrk] == 0) return KlaidosZinute(playerid, "* Þaidëjas jau ir taip nëra pavaduotojas.");

    playerDB[TargetID][pavdrk] = 0;
    SendClientMessage(TargetID, RED, "Jûs buvote nuðalintas nuo pavaduotojo pareigø.");
    SendClientMessage(TargetID, YELLOW, "Dëkojame uþ darbà,jeigu galvojate, kad buvote nuðalintas be prieþasties, praðome praneðti serverio vyr. administratoriams.");
    format(string, 144, "Þaidëjas %s sëkmingai buvo nuðalintas nuo pavaduotojo pareigø.",GetPlayerNameEx(TargetID));
    SendClientMessage(playerid, GREEN, string);
    return 1;
}
COMMAND:pliusrep(playerid, params[])
{
	new giveplayerid, String[128];

	if(sscanf(params, "r", giveplayerid))               return SendClientMessage(playerid, -1, "{9966CC}[INFO]: {ffffff}Naudojimas: {9966CC}/pliusrep <vardas_pavardë/id>");

	if(giveplayerid == INVALID_PLAYER_ID)               return SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Tokio þaidëjo nëra!");

	if(giveplayerid == playerid)                        return SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}Sau +rep uþsidëti negalite!");

	if(playerDB[playerid][DaveRepTaska] > gettime())    return SendClientMessage(playerid, -1, "{FF5454}[KLAIDA]: {ffffff}+rep galima dëti tik kas 1 minutæ!");

    playerDB[playerid][DaveRepTaska] = gettime() + 60;

    playerDB[playerid][KiekDaveRepTasku]     ++;

    playerDB[giveplayerid][KiekTuriRepTasku] ++;

    format(String, sizeof(String), "{42F17F}[+REP]: {ffffff}Uþdëjote +rep þaidëjui {42F17F}%s(%i){ffffff}. Dabar jis turi: {42F17F}%i{ffffff}.", GetPlayerNameEx(giveplayerid), giveplayerid, playerDB[giveplayerid][KiekTuriRepTasku]);
    SendClientMessage(playerid, -1, String);

    format(String, sizeof(String), "{42F17F}[+REP]: {ffffff}Þaidëjas {42F17F}%s(%i){ffffff} uþdëjo jums +rep. Dabar jus turite: {42F17F}%i{ffffff}.", GetPlayerNameEx(playerid), playerid, playerDB[giveplayerid][KiekTuriRepTasku]);
    SendClientMessage(giveplayerid, -1, String);

	return 1;
}

CMD:dchat(playerid, params[])
{
    if(playerDB[playerid][plead] == 0) return 0;

	if(CheckMute(playerid)) return 1;

	new KaPasake[216];
	new String[216];
	new Stringas[216];

	if(sscanf(params, "s[200]", KaPasake)) return SendClientMessage(playerid, -1, "{9966CC}[INFO]: {ffffff}Naudojimas: {9966CC}/dchat <tekstas>");

	for(new i = 0; i < MAX_PLAYERS; i ++)
	{
		if(playerDB[i][specialybe] != 0)
		{
			if(IsPlayerConnected(i))
			{
				new Directator[60];
				switch(playerDB[i][specialybe])
				{
					case 1: Directator = "Policijos direktorius (-ë)";
					case 2: Directator = "Medikø direktorius (-ë)";
					case 3: Directator = "Taxi direktorius (-ë)";
					case 4: Directator = "Mechanikø direktorius (-ë)";
					case 5: Directator = "Dyleriø direktorius (-ë)";
					case 6: Directator = "Russian mafijos direktorius (-ë)";
					case 8: Directator = "Yakuza mafijos direktorius (-ë)";
					case 10: Directator = "SWAT direktorius (-ë)";
					case 11: Directator = "Fûristø direktorius (-ë)";
					case 13: Directator = "Radistø direktorius (-ë)";
					case 14: Directator = "Baikeriø direktorius (-ë)";
					case 15: Directator = "Klubo Cstello vadas (-ë)";
					case 16: Directator = "Klubo -Patriotai-  vadas (-ë)";
					case 17: Directator = "Armijos direktorius (-ë)";
				}

				format(String, sizeof(String), "{2ED0B5}[DIREKTORIØ CHAT]: {ffffff}%s, %s(%i) sako:", Directator, GetPlayerNameEx(playerid), playerid);
				SendClientMessage(i, -1, String);

				format(Stringas, sizeof(Stringas), "{2ED0B5}%s", KaPasake);
				SendClientMessage(i, -1, Stringas);
			}
		}
	}
	return 1;
}

CMD:direktoriai(playerid)
{
	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '1'");
	mysql_store_result();

	new pName[24], pName1[24], dDate[32], dDate1[32], pStatus[30], pStatus1[30], dyrikai,
	String[800], Stringas[2000], resultline[50], resultline1[50], Dispejimai, Pispejimai, pavai;

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '1'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Policijos departamento valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '2'");
	mysql_store_result();

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '2'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Medicinos departamento valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '3'");
	mysql_store_result();

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '3'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Taksi valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '4'");
	mysql_store_result();

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '4'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Mechanikø valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '5'");
	mysql_store_result();

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '5'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Dyleriø valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '10'");
	mysql_store_result();

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '10'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- SWAT valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	//Russian maffia
	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '11'");
	mysql_store_result();

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '11'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Furistø valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	//Russian maffia
	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '13'");
	mysql_store_result();

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '13'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Radistø valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	

	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '14'");
	mysql_store_result();

	dyrikai 		= 0;
	pavai 			= 0;

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '14'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Baikeriø valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '17'");
	mysql_store_result();

	dyrikai 		= 0;
	pavai 			= 0;

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '17'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Armijos valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	ShowPlayerDialog(playerid, 1114, DIALOG_STYLE_MSGBOX, "Serverio darbø valdþia", Stringas, "Uþdaryti", "");

	mysql_free_result();

	return 1;
}





CMD:uzdetidirektoriu(playerid, params[])
{
    /*
	    @ ES.^: Modifikuota komanda
	*/
	if(!playerDB[playerid][dpriziuretojas] && playerDB[playerid][admin] < 5) return SendClientMessage(playerid, RED, "{ff0301}*~~* Naudingiausios komandos {9af551}/komandos {ff0301}*~~*");
	new id, dirikas, post[40], msg[160];
	if(sscanf(params, "ud", id, dirikas)) return SendClientMessage(playerid, BLUE, "* Uzdeti zaidejui direktoriumi: /uzdetidirektoriu [Vardas_Pavardë/ID] [DARBO ID]");
	if(id == INVALID_PLAYER_ID) return SendClientMessage(playerid, RED, "* Tokio þaidëjo nëra.");
	switch(dirikas)
	{
	    case 0:
	    {
	        if(playerDB[id][plead] == 0) return SendClientMessage(playerid, -1, "{8cc17b} Þaidëjas nëra jokio darbo direktorius!");
			SendClientMessage(playerid, BLUE, "* Paðalinote þaidëjà ið direktoriaus pareigø.");
			SendClientMessage(id, BLUE, "* Priþiurëtojo nuosprendþiu jûs paðalintas nuo direktorius pareigø.");
			playerDB[id][plead] = 0;
			new query[128];
			/*
			    @ ES.^: Modifikuota uþklausa, 0 nurodomas ið karto, o ne ið kintamojo
			*/
			format(query, 128, "UPDATE players SET Lead = '0' WHERE Vardas = '%s'", GetPlayerNameEx(id));
			mysql_query(query);
			/*
			    @ ES.^: Neaiðku ir þemiau esanti sàlyga reikalinga, kadangi nereikðminga
			*/
			//if(playerDB[id][plead] > 1) return SendClientMessage(playerid, -1, "Þaidëjas kitos firmos direktorius");
			return 1;
		}
		/*
		    @ ES.^: Uþkomentuoti nenaudojami ID, kad atsikratyti papildomos sàlygos, kuri buvo aukðèiau
		*/
		case 1: format(post, sizeof(post), "Policijos");
		case 2: format(post, sizeof(post), "Medikø");
		case 3: format(post, sizeof(post), "Taxistø");
		case 4: format(post, sizeof(post), "Mechanikø");
		case 5: format(post, sizeof(post), "Dyleriø");
		//case 6: format(post, sizeof(post), "Russian Mafijos");
		//case 8: format(post, sizeof(post), "Yakuza Mafijos");
		case 10: format(post, sizeof(post), "SWAT");
		case 11: format(post, sizeof(post), "Fûristø");
		case 13: format(post, sizeof(post), "Radistø");
		case 14: format(post, sizeof(post), "Baikeriø");
		//case 15: format(post, sizeof(post), "Klubo  Costello");
		//case 16: format(post, sizeof(post), "Klubo  -Patriotai- ");
		case 17: format(post, sizeof(post), "Armijos");
		default: return SendClientMessage(playerid, -1, ""COL_ERROR"[KLAIDA]: {ffffff}Tokio darbo ID nëra!");

	}
	if(playerDB[id][plead] != 0 || playerDB[id][pavdrk] !=0) return SendClientMessage(playerid, -1, "{8cc17b} Þaidëjas kito darbo direktorius arba pavaduotojas!");
	playerDB[id][plead] = dirikas;
	playerDB[id][dispejimai] = 0;
	format(msg, sizeof(msg), "{32cc26}* Sveikiname, jûs paskirtas naujuoju {3bf22e}%s{32cc26} direktoriumi. Daugiau informacijos {3bf22e}/dkomandos", post);
	SendClientMessage(id, COLOR_GREEN, msg);
	format(msg, sizeof(msg), "* Paskyrëte %s naujuoju %s direktoriumi.", GetPlayerNameEx(id), post);
	SendClientMessage(playerid, BLUE, msg);

	new query[250];
	new year, month, day;
	getdate(year, month, day);
	/*
	    @ ES.^: Atsikratyta "((month < 10) ? ("0") : (""))" ir "(year < 10) ? ("0") : ("")", kadangi tam yra "%02d"
	*/
   	format(query, sizeof(query), "UPDATE players SET Lead = '%d', NuoKadaDyrikas = '%d/%02d/%02d' WHERE Vardas = '%s'", playerDB[id][plead], day, month, year, GetPlayerNameEx(id));
	mysql_query(query);
	/*
	    @ ES.^: Iðvada: prigrybauta su þaidëjo ID kintamuosiuose.
	*/
	return 1;
}
CMD:mafijos(playerid)
{
	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '15'");
	mysql_store_result();

	new pName[24], pName1[24], dDate[32], dDate1[32], pStatus[30], pStatus1[30], dyrikai, pavai,
	String[800], Stringas[2000], resultline[50], resultline1[50], Dispejimai, Pispejimai;

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '15'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Klubo  Costello  vadovai\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '16'");
	mysql_store_result();

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '16'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Klubo  -Patriotai-  Vadovai\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	//Russian maffia
	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '6'");
	mysql_store_result();

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '6'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Russian mafijos valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	//yakuza maffia
	mysql_query("SELECT `Vardas`, `NuoKadaDyrikas`, `Dispejimai` FROM `players` WHERE `Lead` = '8'");
	mysql_store_result();

	while(mysql_fetch_row(resultline))
	{
		sscanf(resultline, "p<|>s[24]s[32]d", pName, dDate, Dispejimai);

		dyrikai ++;

		mysql_query("SELECT `Vardas`, `NuoKadaPavas`, `Pispejimai` FROM `players` WHERE `pavdrk` = '8'");
		mysql_store_result();

		while(mysql_fetch_row(resultline1))
		{
			sscanf(resultline1, "p<|>s[24]s[32]d", pName1, dDate1, Pispejimai);

			pavai ++;
		}
	}

	if(GetPlayeridMid(pName) != INVALID_PLAYER_ID) 	pStatus = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus = "{FF0000}Neprisijungæs{ffffff}";

	if(GetPlayeridMid(pName1) != INVALID_PLAYER_ID) pStatus1 = "{19F14F}Prisijungæs{ffffff}";
	else 											pStatus1 = "{FF0000}Neprisijungæs{ffffff}";

	strcat(Stringas, ""COL_INFO"- Yakuza mafijos valdþia\n");

	if(dyrikai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tDirektorius {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n", pName, pStatus, dDate, Dispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tDirektorius ðiuo metu dar neiðrinktas\n");
	}

	if(pavai > 0)
	{
		format(String, sizeof(String), "{ffffff}\tPavaduotojas {ff0000}%s {ffffff}(%s), pareigose nuo "COL_INFO"%s{ffffff}, áspëjimai: "COL_PRICE"%d/3\n \n", pName1, pStatus1, dDate1, Pispejimai);
		strcat(Stringas, String);
	}
	else
	{
		strcat(Stringas, "{ffffff}\tPavaduotojas ðiuo metu dar neiðrinktas\n \n");
	}

	resultline[0] 	= EOS;
	resultline1[0] 	= EOS;
	dyrikai 		= 0;
	pavai 			= 0;

	mysql_free_result();

	ShowPlayerDialog(playerid, 1114, DIALOG_STYLE_MSGBOX, "Serverio Mafiju - Klubu valdþia", Stringas, "Uþdaryti", "");

	mysql_free_result();

	return 1;
}

